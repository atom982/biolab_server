{"version":3,"sources":["webpack:///static/js/17.f39de7bafe9a25a5274d.js","webpack:///./src/components/obrada/Obrada.vue","webpack:///./src/components/obrada/functions/interpretacija.js","webpack:///./src/components/obrada/Obrada.vue?da59","webpack:///./src/components/obrada/data-izbornik/izbornik.js","webpack:///./src/components/obrada/Obrada.vue?7c54","webpack:///./src/components/obrada/BadgeColumn.vue?1db5","webpack:///./node_modules/core-js/library/modules/es6.object.get-own-property-names.js","webpack:///./src/components/obrada/Obrada.vue?f755","webpack:///src/components/obrada/Obrada.vue","webpack:///./node_modules/vue-loading-overlay/dist/vue-loading.css","webpack:///src/components/obrada/BadgeColumn.vue","webpack:///./src/components/obrada/BadgeColumn.vue?c12c","webpack:///./node_modules/core-js/library/modules/_object-gopn-ext.js","webpack:///./node_modules/vue-loading-overlay/dist/vue-loading.css?ff3f","webpack:///./node_modules/pdfobject/pdfobject.js","webpack:///./src/components/obrada/BadgeColumn.vue","webpack:///./node_modules/vue-loading-overlay/dist/vue-loading.min.js","webpack:///./node_modules/babel-runtime/core-js/object/get-own-property-names.js","webpack:///./src/components/obrada/functions/reference.js","webpack:///./node_modules/core-js/library/fn/object/get-own-property-names.js","webpack:///./src/services/utils.js","webpack:///./src/components/obrada/BadgeColumn.vue?7a0e","webpack:///./node_modules/core-js/library/modules/_object-gopn.js"],"names":["webpackJsonp","0fl9","module","__webpack_exports__","__webpack_require__","injectStyle","ssrContext","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Obrada_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_3f02d9e7_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Obrada_vue__","normalizeComponent","__vue_styles__","Component","3r/r","exports","None","result","dref","gref","replace","Standard","rezultat","isNaN","Number","Math","abs","Less","includes","LessEqual","LessPlus","Greater","GreaterNoInterp","GreaterEqual","Negativan","Trag","Reaktivan","Normalan","toLowerCase","Uredan","Plus","trim","Da","SpermIzgled","SpermBoja","Infekcija","TSH","TRG","HOL","HDL","LDL","fPSA","Sedimentacija","rez1","split","rez2","Bistar","Boja","BojaSpermiogram","Nesto","Exists","Prisutno","Gljivice","LeuEr","toUpperCase","Nema","Blasti","Morf","LeuErc","rez","Titar","Specific","4wj/","content","i","locals","8472","data","test","neg","reakt","EiqO","push","version","sources","names","mappings","file","sourcesContent","sourceRoot","FrRU","G5/o","f","IEaf","render","_vm","this","_h","$createElement","_c","_self","staticClass","directives","name","rawName","main","pdf","expression","on","click","$event","preventDefault","Nazad","_v","_s","verificiran","email_button","attrs","disabled","Email","email","MailDialog","size","id","title","required","domProps","input","target","composing","for","headerText","header","pagination","data_pid","data_length","rezultati_length","Results","length","spol","data_spol","data_min","datum","query_date","today","today_date","forward_disabled","backward_disabled","_l","uzorak","removed","key","sid","sample","retest","save_retest","slot","staticStyle","line-height","tip","align","status","_e","MicrobiologyScenario","text-transform","index","labassay_id","class","table-danger","rezultat_m","pozitivan","table-success","negativan","table-warning","padding","padding-left","MicroResultSelect","padding-right","ResetSample","analit","ime","OpenMicro","unit","font-size","color","opacity","OpenMicroSelect","fa fa-exclamation-triangle icon-right input-icon error-icon","Exclamation","fa fa-check success-icon icon-right input-icon","calculated","Interpretacija","dRef","gRef","$store","state","site","interp","extend","spec","multidata","SelectAnalyser","contextmenu","LabAssayEval","Evaluation","edit","display","undefined","select_options","width","change","$$selectedVal","Array","prototype","filter","call","options","o","selected","map","_value","$set","multiple","option","vise","GetResults","realizovan","MultiGet","odobren","multi_count","GetResultsMulti","Reference","Calculate","manual","RetestEnable","RetestDisable","min-height","final","final_pdf","samples","link","pacijent","prezime","Povratak","partials_condition","Partials","ref","show","cancelText","okText","update:show","naslov","labID","opis","jedinica","refd","refg","rezultat_multiple","flag","naziv","kod","min-width","ExclamationMulti","CurrentTest","large","select","update","ShowAntibiotics","ShowBacteries","povratak","empty","TemporaryAntibiotics","TemporaryBacteriesAdd","TemporaryBacteries","filteredBacteries","bactery","_id","type","checked","isArray","chosen","_i","AddBacteries","$$a","$$el","$$c","$$i","concat","slice","Antibiotics","filteredAntibiotics","antibiotik","AddAntibiotics","SelectedBacteries","BacteryTabs","tab","CurrentTab","prikazi","antibiogram","abtk","label","model","callback","$$v","ShowAllBacteries","ModalNegative","pos","ModalPositive","ModalPositiveCondition","MicrobiologyModalHeader","border","MicrobiologyResult","desc","NegativeDescriptions","NegativeResultSelection","DefaultBacteries","PositiveDescriptions","PositiveResultSelection","bakt","SelectBactery","href","action","labassay","sample_status","rezultat_f","jedinice_f","anaassay","aparat","JSON","stringify","updated_at","izabran","IzborTesta","warning","analiza","control","text","reference","access","level","interpretacije","jedinice","element","analyser","multi_test","Procjena","graph","vrijeme","text-align","table_header","showLineChart","optionsLineChart","dataLineChart","analiza_eval","multiparam_izbor","multiparam_izbornik","spinner","flex-direction","justify-content","align-items","float","vertical-align","animation-duration","active","isLoading","can-cancel","on-cancel","onCancel","is-full-page","fullPage","update:active","staticRenderFns","esExports","KUw5","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_own_property_names__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_own_property_names___default","n","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray__","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify__","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default","__WEBPACK_IMPORTED_MODULE_3_vue__","__WEBPACK_IMPORTED_MODULE_4__router__","__WEBPACK_IMPORTED_MODULE_5_vuex_store__","__WEBPACK_IMPORTED_MODULE_6_services_utils__","__WEBPACK_IMPORTED_MODULE_7__config_config_js__","__WEBPACK_IMPORTED_MODULE_8__BadgeColumn_vue__","__WEBPACK_IMPORTED_MODULE_9__main__","__WEBPACK_IMPORTED_MODULE_10__functions_reference_js__","__WEBPACK_IMPORTED_MODULE_10__functions_reference_js___default","__WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__","__WEBPACK_IMPORTED_MODULE_12_vue_loading_overlay__","__WEBPACK_IMPORTED_MODULE_12_vue_loading_overlay___default","__WEBPACK_IMPORTED_MODULE_13_vue_loading_overlay_dist_vue_loading_css__","__WEBPACK_IMPORTED_MODULE_13_vue_loading_overlay_dist_vue_loading_css___default","__WEBPACK_IMPORTED_MODULE_14__vuestic_components_vuestic_chart_chart_types_LineChart__","__WEBPACK_IMPORTED_MODULE_15_epic_spinners__","__WEBPACK_IMPORTED_MODULE_16_pdfobject__","__WEBPACK_IMPORTED_MODULE_16_pdfobject___default","component","AllowGetSample","MicrobiologyOrder","MicrobiologySample","Antibiograms","Bacteries","negative","positive","BUG","F_RESULT","M_RESULT","RemainingBacteries","klijent","multiparam_id","multiparams","Response","lokacija","timestamp","jmbg","pid","email_tmp","approved","verified","partials","count","nalaz","report","path","url","uzorci","multi_rezultati","check","testovi","rezultati","analysers","analyser_selected","analyser_patient","analitiprikaz","analiti","show_table","resdata","email_changed","Previous","Next","Datum","query","next","previous","starost","toastText","toastIcon","toastPosition","toastDuration","isToastFullWidth","className","components","Loading","a","AtomSpinner","watch","console","log","beforeCreate","_this","get","token","then","res","mounted","_this2","$on","forEach","_","isEmpty","palette","getters","obj","Multi","multi","param","Date","time","getTime","getTimezoneOffset","toISOString","substring","kontrola","sort","b","parse","responsive","maintainAspectRatio","scales","xAxes","gridLines","yAxes","labels","danger","primary","info","datasets","backgroundColor","hex2rgb","css","pointBorderColor","pointBackgroundColor","borderColor","transparent","setTimeout","$refs","staticModalDeleteSample","open","staticModalEditSample","staticModalComment","BarcodePrint","SaveResults","Approve","Verify","Disapprove","UnVerify","height","embed","staticModalError","pdf_exists","dispatch","GetSingleSample","DeletedSample","EditSample","SaveMultiResults","SendMail","warn","AnalyserSelected","Sljedeci","Prethodni","staticModalFind","$route","params","patient","date","document","getElementById","post","userId","RetestSave","antibiotici","ant","Scenario","results","zaprimljen","status_uzorka","stat","localeCompare","numeric","sensitivity","$emit","bakterija","rbr_a","Antibiotici","largeModalneg","largeModalpos","antibgr","antbtk","__v","beforeDestroy","$off","destroyed","created","Created","setDate","getDate","methods","_this3","success","napomena","m_interp","m_opis","multiparam","interpretacija","snizeno","poviseno","staticModalExclamation","e","_this4","response","staticModalLabAssayEvalMulti","staticModalLabAssayEvalSingle","_this5","staticModalEvaluationMulti","staticModalEvaluationSingle","column","columns","_this6","item","indexOf","_this7","splice","_this8","topcije","grupa","grouporder","sifra","IDE","kategorija","eval","sekcija","bakterije","neg_description","pos_description","refSet","unshift","bakterioloski","bakterijed","bakterijei","neg_rezultati","poz_rezultati","counter","ima","maxVal","reduce","max","val","bact","staticModalMicroBacterySelect","_this9","staticModalMicroBactery","event","_this10","staticModalSelectResult","staticModalResetSample","_this11","found","toString","_this12","_this13","customer","str","tmp","jmbgDan","jmbgMjesec","jmbgGodina","jmbgObj","parse_date","zGodina","years","antibiogrami","months","days","year","getFullYear","month","getMonth","day","yy","parseInt","mm","dd","floor","_this14","_this15","anaassays","staticModalAparati","_this16","close","staticModalReference","_this17","printEPL","surname","pacijentRBr","godiste","code","from","_this18","_this19","idNalaza","location","memo","_this20","_this21","id_u","id_t","_this22","ana","_this23","single","noResult","module_sn","mparam","izbornik","tmpOptionsAna","nazivTesta","sn","dilucija","rezultat_i","izbor","largeModalMulti","staticModalSendMail","_this24","showToast","icon","position","duration","fullWidth","false","_this25","edited","_this26","_this27","_this28","_this29","verify","sendEmail","staticModalVerifyPrivilege","_this30","_this31","created_at","staticModalAllResults","_this32","picked","_this33","MbHo","R7hf","props","rowData","rowIndex","classObject","badge-warning","badge-primary","badge-danger","badge-info","badge-violet","badge-dark-blue","RHNw","Rrel","toIObject","gOPN","windowNames","window","getOwnPropertyNames","getWindowNames","it","SYh3","UqI+","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","root","factory","apply","navigator","supportsPDFs","isIE","supportsPdfActiveX","createAXO","buildFragmentString","embedError","getTargetElement","generatePDFJSiframe","generateEmbedElement","ua","userAgent","supportsPdfMimeType","mimeTypes","isModernBrowser","Promise","isFirefox","isFirefoxWithPDFJS","isIOS","ax","ActiveXObject","pdfParams","prop","string","hasOwnProperty","encodeURIComponent","msg","targetSelector","targetNode","body","querySelector","jQuery","nodeType","pdfOpenFragment","PDFJS_URL","fullURL","scrollfix","iframe","style","overflow","innerHTML","getElementsByTagName","page","pdfOpenParams","fallbackLink","assumptionMode","forcePDFJS","fallbackHTML","c","pdfobjectversion","XMpX","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_BadgeColumn_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_1099f53e_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_BadgeColumn_vue__","ZZvs","t","self","r","l","m","d","enumerable","Symbol","toStringTag","__esModule","create","bind","default","p","s","u","_compiled","functional","_scopeId","$vnode","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","HTMLElement","addEventListener","focusIn","isActive","$el","contains","container","isFullPage","parentElement","focus","removeEventListener","String","viewBox","xmlns","stroke","fill","fill-rule","transform","stroke-width","stroke-opacity","cx","cy","attributeName","to","dur","repeatCount","begin","values","calcMode","fill-opacity","x","y","attributeType","mixins","Boolean","programmatic","Function","transition","canCancel","zIndex","loader","Spinner","Dots","Bars","beforeMount","appendChild","keyPress","cancel","hide","arguments","$destroy","remove","parentNode","removeChild","keyCode","tabindex","aria-busy","aria-label","background","_t","tag","assign","el","createElement","propsData","keys","$slots","install","$loading","aFK5","d5lM","Interpretation","gAsd","$Object","hLWQ","hex","rgb","match","g","iF2Y","n0T6","$keys","hiddenKeys","O"],"mappings":"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CA1D,SAAA,EACAD,uBACAtB,SAAAC,QAAA,GAAAE,KAAA,GAAAD,QAAA,IACAtO,MAAA,EACA8I,MAAA,EACA7I,KAAA,EACA0B,OAAA,GACA2R,YACAC,UAAA,GACA/K,SAAA,GACA7D,IAAA,GACA8D,QAAA,GACA+K,KAAA,GACAC,IAAA,GACA1Q,IAAA,GACAhC,MAAA,GACA2S,UAAA,GACAhT,aAAA,EACAC,cAAA,EACA0H,WAAA,EACAV,SAAA,EACAgM,SAAA,EACAC,SAAA,EACAC,YACAlL,oBAAA,EACAmL,MAAA,EACAC,SACAC,UACAC,KAAA,GACAC,IAAA,GACAC,UACA5M,QACAe,WACAoF,cAAA,GACAD,SAAA,GACAsB,WAAA,GACAqF,mBACAC,MAAA,GACA9L,KAAA,GACAzC,KAAA,IACAwO,WACAC,aACAC,aACA1F,YACAT,WACAoG,qBACAC,oBACAC,iBACAC,WACA1L,OAAA,GACA7D,YAAA,EACAwP,YAAA,EACA7R,UACA8R,WACAC,eAAA,EACAC,UAAAvB,IAAA,MACAwB,MAAAxB,IAAA,MACAzR,WACAkT,OAAA3S,MAAA,KAAA4S,MAAA,KAAAC,KAAA,KAAAC,SAAA,MACAzT,YAAA,EACAa,kBAAA,EACAC,mBAAA,EACAZ,YAAA,EACAM,SAAA,EACAP,SAAA,EACAM,UAAA,GACAG,WAAA,GACAE,WAAA,GACA8S,QAAA,GACA9G,aACAG,gBACA,OACA,IACA,OACA,QACA,OACA,SACA,SACA,SACA,MACA,QACA,SACA,QACA,OACA,MACA,OACA,OACA,QACA,KACA,MACA,MACA,OACA,QACA,OACA,OACA,WACA,WACA,QACA,OACA,QACA,MACA,OACA,MACA,MACA,MACA,MACA,OACA,WACA,SACA,OACA,SACA,QACA,SACA,OACA,MACA,QAKA4G,UAAA,GACAC,UAAA,GACAC,cAAA,GACAC,cAAA,KACAC,kBAAA,EACAC,UAAA,GAEAzF,WAAA,EACAK,UAAA,EAIAhB,gBACAH,eAAA,EACAC,oBACAC,iBACAP,YAIA3F,SAAA,GACAuF,YACAK,OAAA,EACAG,aAAA,KAGAyG,YA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","file":"static/js/17.f39de7bafe9a25a5274d.js","sourcesContent":["webpackJsonp([17,66],{\n\n/***/ \"0fl9\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Obrada_vue__ = __webpack_require__(\"KUw5\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_3f02d9e7_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Obrada_vue__ = __webpack_require__(\"IEaf\");\nfunction injectStyle (ssrContext) {\n  __webpack_require__(\"4wj/\")\n}\nvar normalizeComponent = __webpack_require__(\"VU/8\")\n/* script */\n\n/* template */\n\n/* template functional */\n  var __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-3f02d9e7\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Obrada_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_3f02d9e7_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Obrada_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ \"3r/r\":\n/***/ (function(module, exports) {\n\nmodule.exports = {\n  None: function None(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    return [\" \", \"No Class\"];\n  },\n\n  Standard: function Standard(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\" || dref == \"0\" && gref == \"0\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) < Number(Math.abs(dref))) {\n      return [\"L\", \"Red\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"H\", \"Red\"];\n    } else if (Number(rezultat) === Number(Math.abs(dref)) || Number(rezultat) === Number(Math.abs(gref))) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Less: function Less(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat.includes(\"pozitivan\") || rezultat.includes(\"pos\")) {\n      return [\"H\", \"Red\"];\n    } else if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) >= Number(Math.abs(gref))) {\n      return [\"H\", \"Red\"];\n    } else if (rezultat.includes(\"pozitivan\") || rezultat.includes(\"pos\")) {\n      return [\"H\", \"Red\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  LessEqual: function LessEqual(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"L\", \"Red\"];\n    } else if (Number(rezultat) == Number(Math.abs(gref))) {\n      return [\" \", \"Green\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  LessPlus: function LessPlus(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (isNaN(rezultat)) {\n      return [\"H\", \"Red\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"H\", \"Red\"];\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Greater: function Greater(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) < Number(Math.abs(gref))) {\n      return [\"L\", \"Red\"];\n    } else if (Number(rezultat) == Number(Math.abs(gref))) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  GreaterNoInterp: function GreaterNoInterp(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) < Number(Math.abs(gref))) {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) == Number(Math.abs(gref))) {\n      return [\" \", \"No Class\"];\n    } else {\n      return [\" \", \"No Class\"];\n    }\n  },\n\n  GreaterEqual: function GreaterEqual(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) < Number(Math.abs(gref))) {\n      return [\"L\", \"Red\"];\n    } else if (Number(rezultat) == Number(Math.abs(gref))) {\n      return [\" \", \"Green\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Negativan: function Negativan(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat.includes(\"pozitivan\") || rezultat.includes(\"pos\")) {\n      return [\"H\", \"Red\"];\n    } else if (rezultat.includes(\"negativan\") || rezultat.includes(\"neg\")) {\n      return [\" \", \"Green\"];\n    } else if (rezultat.includes(\"graničan\")) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"Red\"];\n    }\n  },\n\n  Trag: function Trag(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat.includes(\"pozitivan\") || rezultat.includes(\"pos\")) {\n      return [\"H\", \"Red\"];\n    } else if (rezultat.includes(\"negativan\") || rezultat.includes(\"neg\") || rezultat.includes(\"trag\")) {\n      return [\" \", \"Green\"];\n    } else if (rezultat.includes(\"graničan\")) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"Red\"];\n    }\n  },\n\n  Reaktivan: function Reaktivan(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat.includes(\"reaktivan\")) {\n      return [\"H\", \"Red\"];\n    } else if (rezultat.includes(\"negativan\")) {\n      return [\" \", \"Green\"];\n    } else if (rezultat.includes(\"graničan\")) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"No Class\"];\n    }\n  },\n\n  Normalan: function Normalan(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat.toLowerCase().includes(\"norm\") && !rezultat.toLowerCase().includes(\"nije\")) {\n      return [\" \", \"Green\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  Uredan: function Uredan(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat.toLowerCase().includes(\"ured\") && !rezultat.toLowerCase().includes(\"nije\")) {\n      return [\" \", \"Green\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  Plus: function Plus(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat.trim() === \"+++\" || rezultat.trim() === \"+ + +\") {\n      return [\" \", \"Green\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  Da: function Da(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat.trim() === \"da\" || rezultat.trim() === \"Da\") {\n      return [\" \", \"Green\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  SpermIzgled: function SpermIzgled(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat.toLowerCase() === \"uredan\" || rezultat.toLowerCase() === \"uredno\") {\n      return [\" \", \"Green\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  SpermBoja: function SpermBoja(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat.toLowerCase() === \"sivo bijela\") {\n      return [\" \", \"Green\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  Infekcija: function Infekcija(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"pasivna infekcija\", \"Green\"];\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\n      return [\"siva zona\", \"Yellow\"];\n    } else {\n      return [\"svježa infekcija\", \"Red\"];\n    }\n  },\n\n  TSH: function TSH(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"hipotireoza\", \"Red\"];\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\n      return [\"eutireoza\", \"Green\"];\n    } else {\n      return [\"hipertireoza\", \"Red\"];\n    }\n  },\n\n  TRG: function TRG(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"visoko\", \"Red\"];\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\n      return [\"granično\", \"Yellow\"];\n    } else {\n      return [\"idealno\", \"Green\"];\n    }\n  },\n\n  HOL: function HOL(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"visoko\", \"Red\"];\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\n      return [\"granično\", \"Yellow\"];\n    } else {\n      return [\"idealno\", \"Green\"];\n    }\n  },\n\n  HDL: function HDL(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"nema rizika\", \"Green\"];\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\n      return [\"rizik\", \"Yellow\"];\n    } else {\n      return [\"visok rizik\", \"Red\"];\n    }\n  },\n\n  LDL: function LDL(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"visok rizik\", \"Red\"];\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\n      return [\"granično\", \"Yellow\"];\n    } else {\n      return [\"optimalno\", \"Green\"];\n    }\n  },\n\n  fPSA: function fPSA(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"benigni proces\", \"Green\"];\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\n      return [\"siva zona\", \"Yellow\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  Sedimentacija: function Sedimentacija(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat.includes(\"/\")) {\n      var rez1 = rezultat.split(\"/\")[0].trim();\n      var rez2 = rezultat.split(\"/\")[1].trim();\n    } else {\n      var rez1 = rezultat.trim();\n      var rez2 = rezultat.trim();\n    }\n\n    if (isNaN(rez1) || rez1 === \"\" || isNaN(rez2) || rez2 === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rez1) > Number(Math.abs(gref))) {\n      return [\"H\", \"Red\"];\n    } else if (Number(rez1) === Number(Math.abs(gref))) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Bistar: function Bistar(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat === \"bistar\") {\n      return [\" \", \"Green\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  Boja: function Boja(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat === \"svjetlo žut\" || rezultat === \"žut\") {\n      return [\" \", \"Green\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  BojaSpermiogram: function BojaSpermiogram(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat === \"blijedo žut\") {\n      return [\" \", \"Green\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  Nesto: function Nesto(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat.includes(\"masa\") || rezultat.includes(\"dosta\") || rezultat.includes(\"malo\")) {\n      return [\"H\", \"Red\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Exists: function Exists(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  Prisutno: function Prisutno(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(gref)) {\n      return [\"H\", \"Red\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Gljivice: function Gljivice(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(gref)) {\n      return [\"H\", \"Red\"];\n    } else if (isNaN(rezultat)) {\n      return [\"H\", \"Red\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  LeuEr: function LeuEr(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat.toUpperCase().includes(\"DOSTA\")) {\n      return [\"H\", \"Red\"];\n    } else if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(gref)) {\n      return [\"H\", \"Red\"];\n    } else if (Number(rezultat) === Number(gref)) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Nema: function Nema(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  Blasti: function Blasti(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) < Number(Math.abs(dref))) {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"H\", \"Red\"];\n    } else if (Number(rezultat) === Number(Math.abs(dref)) || Number(rezultat) === Number(Math.abs(gref))) {\n      return [\" \", \"No Class\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Morf: function Morf(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) === Number(Math.abs(dref)) || Number(rezultat) === Number(Math.abs(gref))) {\n      return [\" \", \"Green\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  LeuErc: function LeuErc(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat.includes(\"-\")) {\n      var rez = rezultat.split(\"-\")[1].trim();\n    } else {\n      var rez = rezultat.trim();\n    }\n\n    if (rez === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (isNaN(rez)) {\n      return [\"H\", \"Red\"];\n    } else if (Number(rez) > Number(gref)) {\n      return [\"H\", \"Red\"];\n    } else if (Number(rez) === Number(gref)) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Titar: function Titar(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat.includes(\":\")) {\n      var rez1 = rezultat.split(\":\")[0].trim();\n      var rez2 = rezultat.split(\":\")[1].trim();\n    } else {\n      var rez1 = rezultat.trim();\n      var rez2 = \"\";\n    }\n\n    if (isNaN(rez1) || rez1 === \"\" || rez1 != \"1\" || isNaN(rez2) || rez2 === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rez2) > Number(Math.abs(gref))) {\n      return [\"H\", \"Red\"];\n    } else if (Number(rez2) === Number(Math.abs(gref))) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Specific: function Specific(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    return [\" \", \"No Class\"];\n  }\n};\n\n/***/ }),\n\n/***/ \"4wj/\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"EiqO\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"rjj0\")(\"4b41f25e\", content, true);\n\n/***/ }),\n\n/***/ \"8472\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar data = {\n  test: [\"\", \"test\"]\n};\n\nvar rez = {\n  neg: [\"\", \"negativan\", \"graničan\", \"pozitivan\"],\n  reakt: [\"\", \"negativan\", \"graničan\", \"reaktivan\"]\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  data: data,\n  rez: rez\n});\n\n/***/ }),\n\n/***/ \"EiqO\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"FZ+f\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \".collapse-page__content[data-v-3f02d9e7]{padding:2rem}.collapse-page__content__title[data-v-3f02d9e7]{font-size:1.375rem;font-weight:700}.icon-bar a[data-v-3f02d9e7]{color:#fff;text-decoration:none}.icon-bar a[data-v-3f02d9e7]:hover{color:#4ae387}i[data-v-3f02d9e7]:hover{color:#4ae387!important}.circle[data-v-3f02d9e7]{width:1rem;opacity:.5;height:1rem;border-radius:50%;display:inline-block}\", \"\", {\"version\":3,\"sources\":[\"C:/Users/atom/Desktop/BioLAB/client/src/components/obrada/Obrada.vue\"],\"names\":[],\"mappings\":\"AACA,yCACE,YAAc,CACf,AACD,gDACI,mBAAoB,AACpB,eAAkB,CACrB,AACD,6BACE,WAAY,AACZ,oBAAsB,CACvB,AACD,mCACE,aAAe,CAChB,AACD,yBACE,uBAA0B,CAC3B,AACD,yBACE,WAAY,AACZ,WAAa,AACb,YAAa,AACb,kBAAmB,AACnB,oBAAsB,CACvB\",\"file\":\"Obrada.vue\",\"sourcesContent\":[\"\\n.collapse-page__content[data-v-3f02d9e7] {\\n  padding: 2rem;\\n}\\n.collapse-page__content__title[data-v-3f02d9e7] {\\n    font-size: 1.375rem;\\n    font-weight: bold;\\n}\\n.icon-bar a[data-v-3f02d9e7] {\\n  color: #fff;\\n  text-decoration: none;\\n}\\n.icon-bar a[data-v-3f02d9e7]:hover {\\n  color: #4ae387;\\n}\\ni[data-v-3f02d9e7]:hover {\\n  color: #4ae387 !important;\\n}\\n.circle[data-v-3f02d9e7] {\\n  width: 1rem;\\n  opacity: 0.5;\\n  height: 1rem;\\n  border-radius: 50%;\\n  display: inline-block;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"FrRU\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"iF2Y\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"rjj0\")(\"3e059dfc\", content, true);\n\n/***/ }),\n\n/***/ \"G5/o\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.7 Object.getOwnPropertyNames(O)\n__webpack_require__(\"uqUo\")('getOwnPropertyNames', function () {\n  return __webpack_require__(\"Rrel\").f;\n});\n\n\n/***/ }),\n\n/***/ \"IEaf\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"collapse-page\"},[(_vm.show)?_c('div',{staticClass:\"flex md12\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.main && _vm.pdf),expression:\"!main && pdf\"}]},[_c('div',{staticClass:\"btn-container\"},[_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.verificiran),expression:\"verificiran\"}],staticClass:\"btn btn-secondary btn-sm\",on:{\"click\":function($event){$event.preventDefault();_vm.Nazad()}}},[_c('span',{staticClass:\"fa fa-step-backward\"}),_vm._v(\"\\n            \"+_vm._s(\" NAZAD\")+\"\\n          \")]),_vm._v(\" \"),_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.verificiran),expression:\"!verificiran\"}],staticClass:\"btn btn-secondary-danger btn-sm\",on:{\"click\":function($event){$event.preventDefault();_vm.Nazad()}}},[_c('span',{staticClass:\"fa fa-step-backward\"}),_vm._v(\"\\n            \"+_vm._s(\" NAZAD\")+\"\\n          \")]),_vm._v(\" \"),_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.email_button && _vm.verificiran),expression:\"email_button && verificiran\"}],staticClass:\"btn btn-secondary btn-sm pull-right\",attrs:{\"disabled\":!_vm.Email(_vm.email)},on:{\"click\":function($event){$event.preventDefault();_vm.MailDialog()}}},[_c('span',{staticClass:\"glyphicon glyphicon-send\"}),_vm._v(\"\\n            \"+_vm._s(\" Pošalji\")+\"\\n          \")]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.email_button && _vm.verificiran),expression:\"email_button && verificiran\"}],staticClass:\"form-group with-icon-left pull-right\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.email),expression:\"email\"}],attrs:{\"size\":\"40\",\"id\":\"input-icon-left\",\"name\":\"input-icon-left\",\"title\":\" \",\"required\":\"\"},domProps:{\"value\":(_vm.email)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.email=$event.target.value}}}),_vm._v(\" \"),_c('i',{staticClass:\"fa fa-envelope-o icon-left input-icon\"}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(\"\\n                \"+_vm._s(\"Email adresa\")+\"\\n              \")]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]),_vm._v(\" \"),_c('hr'),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"pdf-container\"}})]),_vm._v(\" \"),_c('vuestic-widget',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.main),expression:\"main\"}],attrs:{\"headerText\":_vm.header,\"pagination\":_vm.pagination,\"main\":_vm.main,\"data_pid\":Number(_vm.data_pid),\"data_length\":Number(_vm.data_length),\"rezultati_length\":_vm.Results.length,\"spol\":_vm.data_spol,\"data_min\":Number(_vm.data_min),\"datum\":_vm.query_date,\"today\":_vm.today_date,\"forward_disabled\":_vm.forward_disabled,\"backward_disabled\":_vm.backward_disabled}},[_c('vuestic-accordion-obrada',_vm._l((_vm.uzorci),function(uzorak){return _c('vuestic-collapse-obrada',{directives:[{name:\"show\",rawName:\"v-show\",value:(!uzorak.removed),expression:\"!uzorak.removed\"}],key:uzorak.sid,attrs:{\"id\":uzorak.sid,\"sample\":uzorak,\"retest\":_vm.save_retest}},[_c('span',{attrs:{\"slot\":\"header\",\"id\":uzorak.sid},slot:\"header\"},[_vm._v(_vm._s(uzorak.sid))]),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"body\"},slot:\"body\"},[_c('div',{staticStyle:{\"line-height\":\"10px\"}},[_vm._v(\" \")]),_vm._v(\" \"),(uzorak.tip.includes('Mikrobiologija'))?_c('div',{staticClass:\"va-row\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_table),expression:\"show_table\"}],staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN'\n                          )?_c('td'):_vm._e(),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(\"ANALIZA\"))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(\"REZULTAT\"))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(\"JEDINICA\"))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(\"REFERENCE\"))]),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN'\n                          )?_c('td'):_vm._e(),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN' &&\n                            _vm.MicrobiologyScenario != 'MAIBPoR'\n                          )?_c('td',[_vm._v(\"\\n                          \"+_vm._s(\"PONOVI\")+\"\\n                        \")]):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR')?_c('td',{staticStyle:{\"text-transform\":\"none\"}},[_vm._v(\"\\n                          \"+_vm._s(\"Bakterije\")+\"\\n                        \")]):_vm._e(),_vm._v(\" \"),_c('td')])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.rezultati),function(test,index){return _c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(index < 1),expression:\"index < 1\"}],key:test.labassay_id,class:{\n                          'table-danger':\n                            test.rezultat_m.length &&\n                            test.rezultat_m[0].pozitivan,\n                          'table-success':\n                            test.rezultat_m.length &&\n                            test.rezultat_m[0].negativan,\n                          'table-warning': false,\n                        },attrs:{\"align\":\"middle\"}},[(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN'\n                          )?_c('td',[(uzorak.status === 'ZAPRIMLJEN')?_c('button',{staticClass:\"btn btn-secondary-danger btn-micro\",staticStyle:{\"padding\":\"0.4px\",\"padding-left\":\"2px\"},on:{\"click\":function($event){$event.preventDefault();_vm.MicroResultSelect($event)}}},[_c('i',{staticClass:\"fa fa-bug\",on:{\"click\":function($event){$event.preventDefault();_vm.MicroResultSelect($event)}}})]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ZAPRIMLJEN')?_c('button',{staticClass:\"btn btn-secondary-danger btn-micro\",staticStyle:{\"padding\":\"0.6px\",\"padding-right\":\"1px\",\"padding-left\":\"1.2px\"},on:{\"click\":function($event){$event.preventDefault();_vm.ResetSample($event)}}},[_c('i',{staticClass:\"fa fa-backward\",on:{\"click\":function($event){$event.preventDefault();_vm.ResetSample($event)}}})]):_vm._e()]):_vm._e(),_vm._v(\" \"),_c('td',{attrs:{\"title\":test.analit}},[_c('span',[_vm._v(_vm._s(test.ime))])]),_vm._v(\" \"),(test.rezultat_m.length > 0)?_c('td',[_c('button',{staticClass:\"btn btn-primary btn-micro\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();_vm.OpenMicro($event, test)}}},[_c('span',{staticClass:\"glyphicon glyphicon-search\",attrs:{\"id\":test.labassay_id}}),_vm._v(\"\\n                            \"+_vm._s(\"VIŠE\")+\"\\n                          \")])]):_vm._e(),_vm._v(\" \"),(test.rezultat_m.length < 1)?_c('td',[_c('button',{staticClass:\"btn btn-pale btn-micro\",attrs:{\"id\":test.labassay_id}},[_c('span',{staticClass:\"glyphicon glyphicon-ban-circle\",attrs:{\"id\":test.labassay_id}}),_vm._v(\"\\n                            \"+_vm._s(\"VIŠE\")+\"\\n                          \")])]):_vm._e(),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(test.unit))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(\"/\"))]),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN'\n                          )?_c('td',[_c('i',{staticClass:\"glyphicon glyphicon-stats\",staticStyle:{\"font-size\":\"15px\",\"color\":\"#f7cc36\",\"opacity\":\"0\"},attrs:{\"id\":\"reference\",\"title\":\" \"}})]):_vm._e(),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN' &&\n                            _vm.MicrobiologyScenario != 'MAIBPoR'\n                          )?_c('td',[_c('button',{staticClass:\"btn btn-pale btn-micro\"},[_c('span',{staticClass:\"glyphicon glyphicon-ban-circle\"})])]):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR')?_c('td',[_c('button',{staticClass:\"btn btn-primary btn-micro\",on:{\"click\":function($event){$event.preventDefault();_vm.OpenMicroSelect($event, test)}}},[_c('span',{staticClass:\"fa fa-bug\"})])]):_vm._e(),_vm._v(\" \"),_c('td',[_c('i',{class:{\n                              'fa fa-exclamation-triangle icon-right input-icon error-icon': false,\n                            },on:{\"click\":function($event){$event.preventDefault();_vm.Exclamation(test)}}}),_vm._v(\" \"),_c('i',{class:{\n                              'fa fa-check success-icon icon-right input-icon': false,\n                            }})])])}))])])]):_vm._e(),_vm._v(\" \"),(!uzorak.tip.includes('Mikrobiologija'))?_c('div',{staticClass:\"va-row\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_table),expression:\"show_table\"}],staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN'\n                          )?_c('td'):_vm._e(),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(\"ANALIZA\"))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(\"REZULTAT\"))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(\"JEDINICA\"))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(\"REFERENCE\"))]),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN'\n                          )?_c('td'):_vm._e(),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN' &&\n                            _vm.calculated\n                          )?_c('td',[_vm._v(\"\\n                          \"+_vm._s(\"AKCIJA\")+\"\\n                        \")]):_vm._e(),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN'\n                          )?_c('td',[_vm._v(\"\\n                          \"+_vm._s(\"PONOVI\")+\"\\n                        \")]):_vm._e(),_vm._v(\" \"),_c('td')])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.rezultati),function(test){return _c('tr',{key:test.labassay_id,class:{\n                          'table-danger':\n                            _vm.Interpretacija(\n                              test.analit,\n                              test.rezultat,\n                              test.unit,\n                              test.dRef,\n                              test.gRef,\n                              _vm.$store.state.site,\n                              test.interp,\n                              test.extend,\n                              _vm.spec\n                            )[5] === 'Red' && !test.multidata,\n                          'table-success':\n                            _vm.Interpretacija(\n                              test.analit,\n                              test.rezultat,\n                              test.unit,\n                              test.dRef,\n                              test.gRef,\n                              _vm.$store.state.site,\n                              test.interp,\n                              test.extend,\n                              _vm.spec\n                            )[5] === 'Green' && !test.multidata,\n                          'table-warning':\n                            _vm.Interpretacija(\n                              test.analit,\n                              test.rezultat,\n                              test.unit,\n                              test.dRef,\n                              test.gRef,\n                              _vm.$store.state.site,\n                              test.interp,\n                              test.extend,\n                              _vm.spec\n                            )[5] === 'Yellow' && !test.multidata,\n                        },attrs:{\"align\":\"middle\"}},[(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN'\n                          )?_c('td',[(!test.multidata)?_c('i',{staticClass:\"glyphicon glyphicon-object-align-bottom\",staticStyle:{\"color\":\"#4ae387\"},on:{\"click\":function($event){$event.preventDefault();_vm.SelectAnalyser(test)}}}):_vm._e(),_vm._v(\" \"),(test.multidata)?_c('span',{staticClass:\"glyphicon glyphicon-object-align-bottom\",staticStyle:{\"color\":\"#d9d9d9\"}}):_vm._e()]):_vm._e(),_vm._v(\" \"),_c('td',{attrs:{\"title\":test.analit}},[_c('span',{on:{\"contextmenu\":function($event){_vm.LabAssayEval($event, test)},\"click\":function($event){$event.preventDefault();_vm.Evaluation(test)}}},[_vm._v(_vm._s(test.ime))])]),_vm._v(\" \"),(!test.multidata)?_c('td',[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == false),expression:\"test.edit == false\"}],staticStyle:{\"display\":\"inline\",\"font-size\":\"14px\",\"line-height\":\"4.5px\"}},[_c('label',[_c('strong',[_vm._v(_vm._s(test.rezultat))])])]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"}],staticStyle:{\"display\":\"inline\",\"line-height\":\"5px\"}},[(test.select_options != undefined)?_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],staticStyle:{\"width\":\"110px\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(test, \"rezultat\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((test.select_options),function(option){return _c('option',{key:option},[_vm._v(_vm._s(option))])})):_vm._e()]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"}],staticStyle:{\"display\":\"inline\"}},[(test.select_options === undefined)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],staticStyle:{\"width\":\"110px\",\"font-size\":\"12px\",\"line-height\":\"7px\"},domProps:{\"value\":(test.rezultat)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(test, \"rezultat\", $event.target.value)}}}):_vm._e()]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.vise > 2),expression:\"test.vise > 2\"}],on:{\"click\":function($event){$event.preventDefault();_vm.GetResults(test, uzorak.status)}}},[_c('i',{staticClass:\"fa fa-star\",staticStyle:{\"font-size\":\"5px\",\"color\":\"#e34a4a\"},attrs:{\"id\":\"star\",\"title\":\" \"}})]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.vise < 3),expression:\"test.vise < 3\"}]},[_c('i',{staticClass:\"fa fa-star-o\",staticStyle:{\"font-size\":\"5px\",\"opacity\":\"0\"},attrs:{\"id\":\"star\",\"title\":\" \"}})])]):_vm._e(),_vm._v(\" \"),(test.multidata && test.realizovan)?_c('td',[_c('button',{staticClass:\"btn btn-primary btn-micro\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();\n                              _vm.MultiGet(\n                                $event,\n                                test.ime,\n                                test.analit,\n                                test.rezultat,\n                                test.odobren\n                              )\n                            }}},[_c('span',{staticClass:\"glyphicon glyphicon-search\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();\n                                _vm.MultiGet(\n                                  $event,\n                                  test.ime,\n                                  test.analit,\n                                  test.rezultat,\n                                  test.odobren\n                                )\n                              }}}),_vm._v(\"\\n                            \"+_vm._s(\"VIŠE\")+\"\\n                          \")]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.multi_count > 2),expression:\"test.multi_count > 2\"}],on:{\"click\":function($event){$event.preventDefault();\n                              _vm.GetResultsMulti(test, uzorak.status)\n                            }}},[_c('i',{staticClass:\"fa fa-star\",staticStyle:{\"font-size\":\"5px\",\"color\":\"#e34a4a\"},attrs:{\"id\":\"star\",\"title\":\" \"}})]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.multi_count < 3),expression:\"test.multi_count < 3\"}]},[_c('i',{staticClass:\"fa fa-star-o\",staticStyle:{\"font-size\":\"5px\",\"opacity\":\"0\"},attrs:{\"id\":\"star\",\"title\":\" \"}})])]):_vm._e(),_vm._v(\" \"),(test.multidata && !test.realizovan)?_c('td',[_c('button',{staticClass:\"btn btn-warning btn-micro\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();\n                              _vm.MultiGet(\n                                $event,\n                                test.ime,\n                                test.analit,\n                                test.rezultat,\n                                test.odobren\n                              )\n                            }}},[_c('span',{staticClass:\"glyphicon glyphicon-search\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();\n                                _vm.MultiGet(\n                                  $event,\n                                  test.ime,\n                                  test.analit,\n                                  test.rezultat,\n                                  test.odobren\n                                )\n                              }}}),_vm._v(\"\\n                            \"+_vm._s(\"VIŠE\")+\"\\n                          \")]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.multi_count > 2),expression:\"test.multi_count > 2\"}],on:{\"click\":function($event){$event.preventDefault();\n                              _vm.GetResultsMulti(test, uzorak.status)\n                            }}},[_c('i',{staticClass:\"fa fa-star\",staticStyle:{\"font-size\":\"5px\",\"color\":\"#e34a4a\"},attrs:{\"id\":\"star\",\"title\":\" \"}})]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.multi_count < 3),expression:\"test.multi_count < 3\"}]},[_c('i',{staticClass:\"fa fa-star-o\",staticStyle:{\"font-size\":\"5px\",\"opacity\":\"0\"},attrs:{\"id\":\"star\",\"title\":\" \"}})])]):_vm._e(),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(test.unit))]),_vm._v(\" \"),(!test.multidata)?_c('td',[_vm._v(\"\\n                          \"+_vm._s(_vm.Interpretacija(\n                              test.analit,\n                              test.rezultat,\n                              test.unit,\n                              test.dRef,\n                              test.gRef,\n                              _vm.$store.state.site,\n                              test.interp,\n                              test.extend,\n                              _vm.spec\n                            )[4])+\"\\n                        \")]):_vm._e(),_vm._v(\" \"),(test.multidata)?_c('td',[_vm._v(_vm._s(\"/\"))]):_vm._e(),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN'\n                          )?_c('td',[(!test.multidata)?_c('i',{staticClass:\"glyphicon glyphicon-stats\",staticStyle:{\"font-size\":\"15px\",\"color\":\"#f7cc36\"},attrs:{\"id\":\"reference\",\"title\":\" \"},on:{\"click\":function($event){$event.preventDefault();_vm.Reference($event, test)}}}):_vm._e(),_vm._v(\" \"),(test.multidata)?_c('i',{staticClass:\"glyphicon glyphicon-stats\",staticStyle:{\"font-size\":\"15px\",\"color\":\"#f7cc36\",\"opacity\":\"0\"},attrs:{\"id\":\"reference\",\"title\":\" \"}}):_vm._e()]):_vm._e(),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN' &&\n                            _vm.calculated &&\n                            !test.calculated\n                          )?_c('td',[_c('button',{staticClass:\"btn btn-pale btn-micro\"},[_c('span',{staticClass:\"glyphicon glyphicon-ban-circle\"})])]):_vm._e(),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN' &&\n                            _vm.calculated &&\n                            test.calculated\n                          )?_c('td',[_c('button',{staticClass:\"btn btn-primary btn-micro\",attrs:{\"id\":test.test},on:{\"click\":function($event){$event.preventDefault();\n                              _vm.Calculate(\n                                $event,\n                                test.labassay_id,\n                                test.ime,\n                                test.id\n                              )\n                            }}},[_c('span',{staticClass:\"fa fa-calculator\",attrs:{\"id\":test.test}})])]):_vm._e(),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN' &&\n                            (test.rezultat === '' ||\n                              test.manual ||\n                              test.calculated)\n                          )?_c('td',[_c('button',{staticClass:\"btn btn-pale btn-micro\"},[_c('span',{staticClass:\"glyphicon glyphicon-ban-circle\"})])]):_vm._e(),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN' &&\n                            test.rezultat != '' &&\n                            !test.manual &&\n                            !test.calculated\n                          )?_c('td',[(!test.retest)?_c('button',{staticClass:\"btn btn-primary btn-micro\",attrs:{\"id\":test.test},on:{\"click\":function($event){$event.preventDefault();_vm.RetestEnable($event)}}},[_c('span',{staticClass:\"fa fa-refresh\",attrs:{\"id\":test.test}})]):_vm._e(),_vm._v(\" \"),(test.retest)?_c('button',{staticClass:\"btn btn-info btn-micro\",attrs:{\"id\":test.test},on:{\"click\":function($event){$event.preventDefault();_vm.RetestDisable($event)}}},[_c('span',{staticClass:\"glyphicon glyphicon-duplicate\",attrs:{\"id\":test.test}})]):_vm._e()]):_vm._e(),_vm._v(\" \"),_c('td',[_c('i',{class:{\n                              'fa fa-exclamation-triangle icon-right input-icon error-icon':\n                                _vm.Interpretacija(\n                                  test.analit,\n                                  test.rezultat,\n                                  test.unit,\n                                  test.dRef,\n                                  test.gRef,\n                                  _vm.$store.state.site,\n                                  test.interp,\n                                  test.extend,\n                                  _vm.spec\n                                )[5] === 'Red' && !test.multidata,\n                            },on:{\"click\":function($event){$event.preventDefault();_vm.Exclamation(test)}}}),_vm._v(\" \"),_c('i',{class:{\n                              'fa fa-check success-icon icon-right input-icon':\n                                _vm.Interpretacija(\n                                  test.analit,\n                                  test.rezultat,\n                                  test.unit,\n                                  test.dRef,\n                                  test.gRef,\n                                  _vm.$store.state.site,\n                                  test.interp,\n                                  test.extend,\n                                  _vm.spec\n                                )[5] === 'Green' && !test.multidata,\n                            }})])])}))])])]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticStyle:{\"min-height\":\"10px\"}}),_vm._v(\" \"),(_vm.verificiran)?_c('div',{staticClass:\"va-row\"},[_c('div',{staticClass:\"flex md12\"},[_c('vuestic-collapse-nalaz',{attrs:{\"final\":_vm.verificiran,\"final_pdf\":_vm.final_pdf,\"samples\":_vm.samples,\"pdf\":_vm.link,\"pacijent\":_vm.ime + ' ' + _vm.prezime}},[_c('span',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_vm._v(\"Nalaz\")]),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"body\"},slot:\"body\"},[_c('div',{staticClass:\"va-row\"})])])],1)]):_vm._e(),_vm._v(\" \"),_c('div',[_c('hr')]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-3\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"btn-container\"},[_c('button',{staticClass:\"btn btn-secondary btn-sm wizard-back pull-left\",on:{\"click\":function($event){$event.preventDefault();_vm.Povratak()}}},[_c('span',{staticClass:\"fa fa-backward\"}),_vm._v(\"\\n                \"+_vm._s(\" POVRATAK\")+\"\\n              \")]),_vm._v(\" \"),(_vm.partials_condition && !_vm.verificiran)?_c('button',{staticClass:\"btn btn-secondary-warning btn-sm wizard-back pull-right\",staticStyle:{\"text-transform\":\"none\",\"color\":\"#e34a4a\"},on:{\"click\":function($event){$event.preventDefault();_vm.Partials()}}},[_c('span',{staticClass:\"fa fa-file-pdf-o\",staticStyle:{\"color\":\"#e34a4a\"}}),_vm._v(\"\\n                \"+_vm._s(\" Djelimični nalaz\")+\"\\n              \")]):_vm._e()])])])],1),_vm._v(\" \"),_c('vuestic-modal-multi',{ref:\"largeModalMulti\",attrs:{\"show\":_vm.show,\"sample\":_vm.sample,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(_vm._s(_vm.naslov))]),_vm._v(\" \"),_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"10%\"}}),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"ANALIT\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"30%\"}},[_vm._v(_vm._s(\"REZULTAT\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"10%\"}},[_vm._v(_vm._s(\"JEDINICA\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"REFERENCE\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"10%\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.analiti),function(test){return _c('tr',{key:test.labID,class:{\n                  'table-danger':\n                    _vm.Interpretacija(\n                      test.opis,\n                      test.rezultat,\n                      test.jedinica,\n                      test.refd,\n                      test.refg,\n                      _vm.$store.state.site,\n                      test.interp,\n                      test.extend,\n                      _vm.spec\n                    )[5] === 'Red' && !test.rezultat_multiple.length,\n                  'table-success':\n                    _vm.Interpretacija(\n                      test.opis,\n                      test.rezultat,\n                      test.jedinica,\n                      test.refd,\n                      test.refg,\n                      _vm.$store.state.site,\n                      test.interp,\n                      test.extend,\n                      _vm.spec\n                    )[5] === 'Green' && !test.rezultat_multiple.length,\n                  'table-warning':\n                    _vm.Interpretacija(\n                      test.opis,\n                      test.rezultat,\n                      test.jedinica,\n                      test.refd,\n                      test.refg,\n                      _vm.$store.state.site,\n                      test.interp,\n                      test.extend,\n                      _vm.spec\n                    )[5] === 'Yellow' && !test.rezultat_multiple.length,\n                },attrs:{\"align\":\"middle\"}},[(test.flag != '')?_c('td',[_vm._v(_vm._s(test.flag))]):_vm._e(),_vm._v(\" \"),(test.flag === '')?_c('td',[_vm._v(\" \")]):_vm._e(),_vm._v(\" \"),_c('td',{attrs:{\"title\":test.opis}},[_vm._v(_vm._s(test.naziv))]),_vm._v(\" \"),_c('td',{attrs:{\"id\":test.analit}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == false),expression:\"test.edit == false\"}]},[_c('label',[_c('strong',[_vm._v(_vm._s(test.rezultat))])])]),_vm._v(\" \"),(\n                      test.select_options != undefined &&\n                      (test.kod === 's03' ||\n                        test.kod === 's04' ||\n                        test.kod === 's08' ||\n                        test.kod === 's09')\n                    )?_c('select',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"},{name:\"model\",rawName:\"v-model\",value:(test.rezultat_multiple),expression:\"test.rezultat_multiple\"}],staticStyle:{\"min-width\":\"200px\"},attrs:{\"multiple\":\"\",\"size\":test.select_options.length},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(test, \"rezultat_multiple\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((test.select_options),function(option){return _c('option',{key:option},[_vm._v(_vm._s(option))])})):_vm._e(),_vm._v(\" \"),(test.select_options != undefined && (test.kod != 's03' && test.kod != 's04' && test.kod != 's08' && test.kod != 's09'))?_c('select',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"},{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],staticStyle:{\"width\":\"200px\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(test, \"rezultat\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((test.select_options),function(option){return _c('option',{key:option},[_vm._v(_vm._s(option))])})):_vm._e(),_vm._v(\" \"),(test.select_options === undefined)?_c('input',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"},{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],staticStyle:{\"width\":\"200px\"},domProps:{\"value\":(test.rezultat)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(test, \"rezultat\", $event.target.value)}}}):_vm._e()]),_vm._v(\" \"),_c('td',[_vm._v(\"\\n                  \"+_vm._s(_vm.Interpretacija(\n                      test.opis,\n                      test.rezultat,\n                      test.jedinica,\n                      test.refd,\n                      test.refg,\n                      _vm.$store.state.site,\n                      test.interp,\n                      test.extend,\n                      _vm.spec\n                    )[3])+\"\\n                \")]),_vm._v(\" \"),_c('td',[_vm._v(\"\\n                  \"+_vm._s(_vm.Interpretacija(\n                      test.opis,\n                      test.rezultat,\n                      test.jedinica,\n                      test.refd,\n                      test.refg,\n                      _vm.$store.state.site,\n                      test.interp,\n                      test.extend,\n                      _vm.spec\n                    )[4])+\"\\n                \")]),_vm._v(\" \"),_c('td',[_c('i',{class:{\n                      'fa fa-exclamation-triangle icon-right input-icon error-icon':\n                        _vm.Interpretacija(\n                          test.opis,\n                          test.rezultat,\n                          test.jedinica,\n                          test.refd,\n                          test.refg,\n                          _vm.$store.state.site,\n                          test.interp,\n                          test.extend,\n                          _vm.spec\n                        )[5] === 'Red' && !test.rezultat_multiple.length,\n                    },on:{\"click\":function($event){$event.preventDefault();_vm.ExclamationMulti(test)}}}),_vm._v(\" \"),_c('i',{class:{\n                      'fa fa-check success-icon icon-right input-icon':\n                        _vm.Interpretacija(\n                          test.opis,\n                          test.rezultat,\n                          test.jedinica,\n                          test.refd,\n                          test.refg,\n                          _vm.$store.state.site,\n                          test.interp,\n                          test.extend,\n                          _vm.spec\n                        )[5] === 'Green' && !test.rezultat_multiple.length,\n                    }})])])}))])])]),_vm._v(\" \"),_c('vuestic-modal-micro-reset',{ref:\"staticModalResetSample\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s(\"Brisanje rezultata: \"))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.CurrentTest))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s(\"Jeste li sigurni da želite obrisati rezultat?\"))])])]),_vm._v(\" \"),_c('vuestic-modal-micro-bactery',{ref:\"staticModalMicroBacterySelect\",attrs:{\"show\":_vm.show,\"large\":true,\"sample\":_vm.sample,\"select\":true,\"update\":!_vm.ShowAntibiotics &&\n          !_vm.ShowBacteries &&\n          _vm.MicrobiologyScenario === 'MAIBPoR',\"povratak\":_vm.ShowAntibiotics || _vm.ShowBacteries,\"empty\":_vm.TemporaryAntibiotics.length > 0 || _vm.TemporaryBacteriesAdd.length > 0,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[(!_vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s(\"Rezultat analize: \"))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.CurrentTest))])]):_vm._e(),_vm._v(\" \"),(_vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s(\"Antibiotici | \"))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Izbornik\"))])]):_vm._e(),_vm._v(\" \"),(!_vm.ShowAntibiotics && _vm.ShowBacteries)?_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s(\"Bakterije | \"))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Izbornik\"))])]):_vm._e(),_vm._v(\" \"),_c('div',[(_vm.show_table)?_c('div',{staticClass:\"row\"},[(\n                _vm.MicrobiologyScenario === 'MAIBPoR' &&\n                _vm.ShowBacteries &&\n                !_vm.ShowAntibiotics\n              )?_c('div',{staticClass:\"col-md-1\"}):_vm._e(),_vm._v(\" \"),(\n                _vm.MicrobiologyScenario === 'MAIBPoR' &&\n                _vm.ShowBacteries &&\n                !_vm.ShowAntibiotics\n              )?_c('div',{staticClass:\"col-md-10\"},[(_vm.TemporaryBacteries.length)?_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredBacteries(1, 3)),function(bactery){return _c('div',{key:bactery._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bactery.chosen),expression:\"bactery.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bactery._id,\"type\":\"checkbox\",\"disabled\":bactery.disabled},domProps:{\"checked\":Array.isArray(bactery.chosen)?_vm._i(bactery.chosen,null)>-1:(bactery.chosen)},on:{\"click\":function($event){_vm.AddBacteries(bactery)},\"change\":function($event){var $$a=bactery.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bactery.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bactery.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bactery, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":bactery._id}},[(!bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e(),_vm._v(\" \"),(bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredBacteries(2, 3)),function(bactery){return _c('div',{key:bactery._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bactery.chosen),expression:\"bactery.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bactery._id,\"type\":\"checkbox\",\"disabled\":bactery.disabled},domProps:{\"checked\":Array.isArray(bactery.chosen)?_vm._i(bactery.chosen,null)>-1:(bactery.chosen)},on:{\"click\":function($event){_vm.AddBacteries(bactery)},\"change\":function($event){var $$a=bactery.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bactery.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bactery.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bactery, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":bactery._id}},[(!bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e(),_vm._v(\" \"),(bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredBacteries(3, 3)),function(bactery){return _c('div',{key:bactery._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bactery.chosen),expression:\"bactery.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bactery._id,\"type\":\"checkbox\",\"disabled\":bactery.disabled},domProps:{\"checked\":Array.isArray(bactery.chosen)?_vm._i(bactery.chosen,null)>-1:(bactery.chosen)},on:{\"click\":function($event){_vm.AddBacteries(bactery)},\"change\":function($event){var $$a=bactery.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bactery.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bactery.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bactery, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":bactery._id}},[(!bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e(),_vm._v(\" \"),(bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e()])])}))])]):_vm._e()]):_vm._e(),_vm._v(\" \"),(\n                _vm.MicrobiologyScenario === 'MAIBPoR' &&\n                _vm.ShowAntibiotics &&\n                !_vm.ShowBacteries\n              )?_c('div',{staticClass:\"col-md-1\"}):_vm._e(),_vm._v(\" \"),(\n                _vm.MicrobiologyScenario === 'MAIBPoR' &&\n                _vm.ShowAntibiotics &&\n                !_vm.ShowBacteries\n              )?_c('div',{staticClass:\"col-md-10\"},[(_vm.Antibiotics.length)?_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredAntibiotics(1, 3)),function(antibiotik){return _c('div',{key:antibiotik._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(antibiotik.chosen),expression:\"antibiotik.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":antibiotik._id,\"type\":\"checkbox\",\"disabled\":antibiotik.disabled},domProps:{\"checked\":Array.isArray(antibiotik.chosen)?_vm._i(antibiotik.chosen,null)>-1:(antibiotik.chosen)},on:{\"click\":function($event){_vm.AddAntibiotics(antibiotik)},\"change\":function($event){var $$a=antibiotik.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(antibiotik.chosen=$$a.concat([$$v]))}else{$$i>-1&&(antibiotik.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(antibiotik, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":antibiotik._id}},[(!antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e(),_vm._v(\" \"),(antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredAntibiotics(2, 3)),function(antibiotik){return _c('div',{key:antibiotik._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(antibiotik.chosen),expression:\"antibiotik.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":antibiotik._id,\"type\":\"checkbox\",\"disabled\":antibiotik.disabled},domProps:{\"checked\":Array.isArray(antibiotik.chosen)?_vm._i(antibiotik.chosen,null)>-1:(antibiotik.chosen)},on:{\"click\":function($event){_vm.AddAntibiotics(antibiotik)},\"change\":function($event){var $$a=antibiotik.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(antibiotik.chosen=$$a.concat([$$v]))}else{$$i>-1&&(antibiotik.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(antibiotik, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":antibiotik._id}},[(!antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e(),_vm._v(\" \"),(antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredAntibiotics(3, 3)),function(antibiotik){return _c('div',{key:antibiotik._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(antibiotik.chosen),expression:\"antibiotik.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":antibiotik._id,\"type\":\"checkbox\",\"disabled\":antibiotik.disabled},domProps:{\"checked\":Array.isArray(antibiotik.chosen)?_vm._i(antibiotik.chosen,null)>-1:(antibiotik.chosen)},on:{\"click\":function($event){_vm.AddAntibiotics(antibiotik)},\"change\":function($event){var $$a=antibiotik.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(antibiotik.chosen=$$a.concat([$$v]))}else{$$i>-1&&(antibiotik.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(antibiotik, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":antibiotik._id}},[(!antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e(),_vm._v(\" \"),(antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e()])])}))])]):_vm._e()]):_vm._e(),_vm._v(\" \"),(\n                _vm.MicrobiologyScenario === 'MAIBPoR' &&\n                !_vm.ShowAntibiotics &&\n                !_vm.ShowBacteries\n              )?_c('div',{staticClass:\"col-md-1\"}):_vm._e(),_vm._v(\" \"),(\n                _vm.MicrobiologyScenario === 'MAIBPoR' &&\n                !_vm.ShowAntibiotics &&\n                !_vm.ShowBacteries\n              )?_c('div',{staticClass:\"col-md-10\"},[(_vm.SelectedBacteries.length)?_c('vuestic-tabs-bactery',{ref:\"tabs\",attrs:{\"names\":_vm.BacteryTabs,\"tab\":_vm.CurrentTab,\"id\":_vm.CurrentTab,\"prikazi\":_vm.sample.status != 'VERIFICIRAN' && _vm.sample.status != 'ODOBREN'}},_vm._l((_vm.SelectedBacteries),function(test){return _c('div',{key:test._id,attrs:{\"slot\":_vm.CurrentTab},slot:_vm.CurrentTab},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.opis === _vm.CurrentTab),expression:\"test.opis === CurrentTab\"}],staticClass:\"row\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"left\"}},[_c('td',{staticStyle:{\"text-transform\":\"none\"},attrs:{\"width\":\"30%\"}},[_vm._v(\"\\n                              \"+_vm._s(test.antibiogram.opis)+\"\\n                            \")]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"10%\"}},[_vm._v(_vm._s(\"\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"\"))])])]),_vm._v(\" \"),_c('tbody',_vm._l((test.antibiogram.antibiotici),function(abtk){return _c('tr',{key:abtk._id,class:{\n                              'table-danger': false,\n                              'table-success': false,\n                              'table-warning': false,\n                            },attrs:{\"align\":\"left\"}},[_c('td',{attrs:{\"title\":abtk.opis}},[_vm._v(_vm._s(abtk.opis))]),_vm._v(\" \"),_c('td',[_c('bactery-radio-button',{attrs:{\"disabled\":_vm.sample.status === 'ODOBREN' ||\n                                  _vm.sample.status === 'VERIFICIRAN',\"label\":'',\"value\":'',\"id\":'' + test._id + abtk._id,\"name\":test._id + abtk._id},model:{value:(abtk.rezultat),callback:function ($$v) {_vm.$set(abtk, \"rezultat\", $$v)},expression:\"abtk.rezultat\"}})],1),_vm._v(\" \"),_c('td',[_c('postavke-radio-button',{attrs:{\"disabled\":_vm.sample.status === 'ODOBREN' ||\n                                  _vm.sample.status === 'VERIFICIRAN',\"label\":'Senzitivan',\"value\":'S',\"id\":'S' + test._id + abtk._id,\"name\":test._id + abtk._id},model:{value:(abtk.rezultat),callback:function ($$v) {_vm.$set(abtk, \"rezultat\", $$v)},expression:\"abtk.rezultat\"}})],1),_vm._v(\" \"),_c('td',[_c('postavke-radio-button',{attrs:{\"disabled\":_vm.sample.status === 'ODOBREN' ||\n                                  _vm.sample.status === 'VERIFICIRAN',\"label\":'Intermedijaran',\"value\":'I',\"id\":'I' + test._id + abtk._id,\"name\":test._id + abtk._id},model:{value:(abtk.rezultat),callback:function ($$v) {_vm.$set(abtk, \"rezultat\", $$v)},expression:\"abtk.rezultat\"}})],1),_vm._v(\" \"),_c('td',[_c('postavke-radio-button',{attrs:{\"disabled\":_vm.sample.status === 'ODOBREN' ||\n                                  _vm.sample.status === 'VERIFICIRAN',\"label\":'Rezistentan',\"value\":'R',\"id\":'R' + test._id + abtk._id,\"name\":test._id + abtk._id},model:{value:(abtk.rezultat),callback:function ($$v) {_vm.$set(abtk, \"rezultat\", $$v)},expression:\"abtk.rezultat\"}})],1)])}))])])])])})):_vm._e()],1):_vm._e(),_vm._v(\" \"),(\n                _vm.MicrobiologyScenario === 'MANBNeR' ||\n                _vm.MicrobiologyScenario === 'MANBPoR' ||\n                _vm.MicrobiologyScenario === 'MAIBNeR'\n              )?_c('div',{staticClass:\"col-md-12\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_table),expression:\"show_table\"}],staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"left\"}},[_c('td',[_vm._v(_vm._s(\"REZULTAT\"))])])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.rezultati),function(test,index){return _c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(index < 1),expression:\"index < 1\"}],key:test.labassay_id,class:{\n                        'table-danger':\n                          test.rezultat_m.length &&\n                          test.rezultat_m[0].pozitivan,\n                        'table-success':\n                          test.rezultat_m.length &&\n                          test.rezultat_m[0].negativan,\n                        'table-warning': false,\n                      },attrs:{\"align\":\"left\"}},[(\n                          _vm.sample.status != 'ODOBREN' &&\n                          _vm.sample.status != 'VERIFICIRAN'\n                        )?_c('td',[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],attrs:{\"type\":\"text\",\"id\":\"simple-textarea\",\"required\":\"\"},domProps:{\"value\":(test.rezultat)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(test, \"rezultat\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"simple-textarea\"}},[_vm._v(_vm._s(\"\"))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]):_vm._e(),_vm._v(\" \"),(\n                          _vm.sample.status === 'ODOBREN' ||\n                          _vm.sample.status === 'VERIFICIRAN'\n                        )?_c('td',[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"disabled\":\"\"}}),_vm._v(\" \"),(test.rezultat.length)?_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(test.rezultat))]):_vm._e(),_vm._v(\" \"),(!test.rezultat.length)?_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(\"Nema podataka.\"))]):_vm._e(),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]):_vm._e()])}))])])]):_vm._e()]):_vm._e()])]),_vm._v(\" \"),_c('vuestic-modal-micro-bactery',{ref:\"staticModalMicroBactery\",attrs:{\"show\":_vm.show,\"large\":true,\"sample\":_vm.sample,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s(\"Rezultat analize: \"))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.CurrentTest))])]),_vm._v(\" \"),_c('div',[(_vm.show_table)?_c('div',{staticClass:\"row\"},[(true)?_c('div',{staticClass:\"col-md-12\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_table),expression:\"show_table\"}],staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"left\"}},[_c('td',[_vm._v(_vm._s(\"REZULTAT\"))])])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.rezultati),function(test,index){return _c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(index < 1),expression:\"index < 1\"}],key:test.labassay_id,class:{\n                        'table-danger':\n                          test.rezultat_m.length &&\n                          test.rezultat_m[0].pozitivan,\n                        'table-success':\n                          test.rezultat_m.length &&\n                          test.rezultat_m[0].negativan,\n                        'table-warning': false,\n                      },attrs:{\"align\":\"left\"}},[(\n                          _vm.sample.status != 'ODOBREN' &&\n                          _vm.sample.status != 'VERIFICIRAN'\n                        )?_c('td',[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],attrs:{\"type\":\"text\",\"id\":\"simple-textarea\",\"required\":\"\"},domProps:{\"value\":(test.rezultat)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(test, \"rezultat\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"simple-textarea\"}},[_vm._v(_vm._s(\"\"))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]):_vm._e(),_vm._v(\" \"),(\n                          _vm.sample.status === 'ODOBREN' ||\n                          _vm.sample.status === 'VERIFICIRAN'\n                        )?_c('td',[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"disabled\":\"\"}}),_vm._v(\" \"),(test.rezultat.length)?_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(test.rezultat))]):_vm._e(),_vm._v(\" \"),(!test.rezultat.length)?_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(\"Nema podataka.\"))]):_vm._e(),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]):_vm._e()])}))])])]):_vm._e()]):_vm._e()])]),_vm._v(\" \"),_c('vuestic-modal-micro-result',{ref:\"staticModalSelectResult\",attrs:{\"show\":_vm.show,\"sample\":_vm.sample,\"large\":_vm.ShowAllBacteries,\"neg\":_vm.ModalNegative,\"pos\":_vm.ModalPositive,\"selected\":_vm.ModalPositiveCondition,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s(_vm.MicrobiologyModalHeader)+\" |\")]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Izbornik\"))])]),_vm._v(\" \"),(!_vm.ModalNegative && !_vm.ModalPositive)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-3\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('button',{staticClass:\"btn btn-secondary btn-sm wizard-back pull-left\",staticStyle:{\"text-transform\":\"none\",\"border\":\"0px\"},on:{\"click\":function($event){\n                    _vm.ModalNegative = true;\n                    _vm.ModalPositive = false;\n                  }}},[_vm._v(\"\\n                  \"+_vm._s(\"Negativan\")+\"\\n                \")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-3\"})])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-2\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('button',{staticClass:\"btn btn-secondary-danger btn-sm wizard-next pull-right\",staticStyle:{\"text-transform\":\"none\",\"border\":\"0px\"},on:{\"click\":function($event){\n                    _vm.ModalPositive = true;\n                    _vm.ModalNegative = false;\n                  }}},[_vm._v(\"\\n                  \"+_vm._s(\"Pozitivan\")+\"\\n                \")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"})])])]):_vm._e(),_vm._v(\" \"),(_vm.ModalNegative && !_vm.ModalPositive)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-11\"},_vm._l((_vm.MicrobiologyResult.NegativeDescriptions),function(desc,index){return _c('vuestic-radio-button',{key:index,attrs:{\"label\":_vm.MicrobiologyResult.NegativeDescriptions[index],\"id\":_vm.MicrobiologyResult.NegativeDescriptions[index],\"value\":_vm.MicrobiologyResult.NegativeDescriptions[index],\"name\":_vm.MicrobiologyResult.NegativeDescriptions[index],\"disabled\":false},model:{value:(_vm.NegativeResultSelection),callback:function ($$v) {_vm.NegativeResultSelection=$$v},expression:\"NegativeResultSelection\"}})}))]):_vm._e(),_vm._v(\" \"),(\n            !_vm.ModalNegative &&\n            _vm.ModalPositive &&\n            !_vm.MicrobiologyResult.DefaultBacteries.length\n          )?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-11\"},_vm._l((_vm.MicrobiologyResult.PositiveDescriptions),function(desc,index){return _c('vuestic-radio-button',{key:index,attrs:{\"label\":_vm.MicrobiologyResult.PositiveDescriptions[index],\"id\":_vm.MicrobiologyResult.PositiveDescriptions[index],\"value\":_vm.MicrobiologyResult.PositiveDescriptions[index],\"name\":_vm.MicrobiologyResult.PositiveDescriptions[index],\"disabled\":false},model:{value:(_vm.PositiveResultSelection),callback:function ($$v) {_vm.PositiveResultSelection=$$v},expression:\"PositiveResultSelection\"}})}))]):_vm._e(),_vm._v(\" \"),(\n            !_vm.ModalNegative &&\n            _vm.ModalPositive &&\n            _vm.MicrobiologyResult.DefaultBacteries.length\n          )?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-2\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-10\"},_vm._l((_vm.MicrobiologyResult.DefaultBacteries),function(bakt,index){return _c('div',{key:index,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bakt.chosen),expression:\"bakt.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bakt._id,\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(bakt.chosen)?_vm._i(bakt.chosen,null)>-1:(bakt.chosen)},on:{\"click\":function($event){_vm.SelectBactery(bakt, index)},\"change\":function($event){var $$a=bakt.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bakt.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bakt.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bakt, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":bakt._id}},[_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(\"\\n                      \"+_vm._s(bakt.opis)+\"\\n                    \")])])])}))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[(!_vm.ShowAllBacteries)?_c('a',{staticStyle:{\"font-size\":\"16px\",\"color\":\"#4ae387\"},attrs:{\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();_vm.ShowAllBacteries = true}}},[_vm._v(\"Prikaži više\")]):_vm._e()]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-5\"})]),_vm._v(\" \"),(_vm.ShowAllBacteries)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-10\"},_vm._l((_vm.MicrobiologyResult.RemainingBacteries),function(bakt,index){return _c('div',{key:index,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bakt.chosen),expression:\"bakt.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bakt._id,\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(bakt.chosen)?_vm._i(bakt.chosen,null)>-1:(bakt.chosen)},on:{\"click\":function($event){_vm.SelectBactery(bakt, index)},\"change\":function($event){var $$a=bakt.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bakt.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bakt.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bakt, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":bakt._id}},[_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(\"\\n                      \"+_vm._s(bakt.opis)+\"\\n                    \")])])])}))]):_vm._e()])]):_vm._e()]),_vm._v(\" \"),_c('vuestic-modal-delete',{ref:\"staticModalDeleteSample\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s(\"Brisanje uzorka: \"))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.sid))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s(\"Jeste li sigurni da želite obrisati uzorak?\"))])])]),_vm._v(\" \"),_c('vuestic-modal-comment',{ref:\"staticModalComment\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(_vm._s(\"Unos komentara za uzorak: \" + _vm.sid))]),_vm._v(\" \"),_c('div',[_c('h5')])]),_vm._v(\" \"),_c('vuestic-modal-edit',{ref:\"staticModalEditSample\",attrs:{\"show\":_vm.show,\"sample\":_vm.sid,\"action\":\"Edit\",\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(_vm._s(\"Uređivanje uzorka: \" + _vm.sid))]),_vm._v(\" \"),_c('div',[_c('h5')])]),_vm._v(\" \"),_c('vuestic-modal-mail',{ref:\"staticModalSendMail\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s(\"Slanje nalaza na adresu: \")+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(_vm.email))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s(\"Jeste li sigurni da želite poslati nalaz?\"))])])]),_vm._v(\" \"),_c('vuestic-modal-all-results',{ref:\"staticModalAllResults\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s(\"Izbor rezultata: \")+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.labassay))])]),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',[_c('td',[_vm._v(\"analizator\")]),_vm._v(\" \"),_c('td',[_vm._v(\"vrijeme\")]),_vm._v(\" \"),_c('td',[_vm._v(\"rezultat\")]),_vm._v(\" \"),_c('td',[_vm._v(\"jedinica\")]),_vm._v(\" \"),_c('td',[_vm._v(\"reference\")]),_vm._v(\" \"),(\n                      _vm.sample_status != 'ODOBREN' &&\n                      _vm.sample_status != 'VERIFICIRAN'\n                    )?_c('td',[_vm._v(\"\\n                    izbor\\n                  \")]):_vm._e(),_vm._v(\" \"),_c('td',{attrs:{\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.vise.rezultat),function(test){return _c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.rezultat_f != ''),expression:\"test.rezultat_f != ''\"}],key:test._id,class:{\n                    'table-danger':\n                      _vm.Interpretacija(\n                        _vm.vise.labassay.analit,\n                        test.rezultat_f,\n                        test.jedinice_f,\n                        _vm.vise.refd,\n                        _vm.vise.refg,\n                        _vm.$store.state.site,\n                        _vm.vise.interp,\n                        _vm.vise.extend,\n                        _vm.spec\n                      )[5] === 'Red' && !test.multidata,\n                    'table-success':\n                      _vm.Interpretacija(\n                        _vm.vise.labassay.analit,\n                        test.rezultat_f,\n                        test.jedinice_f,\n                        _vm.vise.refd,\n                        _vm.vise.refg,\n                        _vm.$store.state.site,\n                        _vm.vise.interp,\n                        _vm.vise.extend,\n                        _vm.spec\n                      )[5] === 'Green' && !test.multidata,\n                    'table-warning':\n                      _vm.Interpretacija(\n                        _vm.vise.labassay.analit,\n                        test.rezultat_f,\n                        test.jedinice_f,\n                        _vm.vise.refd,\n                        _vm.vise.refg,\n                        _vm.$store.state.site,\n                        _vm.vise.interp,\n                        _vm.vise.extend,\n                        _vm.spec\n                      )[5] === 'Yellow' && !test.multidata,\n                  }},[_c('td',[_vm._v(_vm._s(test.anaassay.aparat.ime))]),_vm._v(\" \"),_c('td',[_vm._v(\"\\n                    \"+_vm._s(JSON.stringify(test.updated_at).slice(9, 11) +\n                      \".\" +\n                      JSON.stringify(test.updated_at).slice(6, 8) +\n                      \".\" +\n                      JSON.stringify(test.updated_at).slice(1, 5) +\n                      \" | \")+\"\\n                    \"),_c('sub',[_vm._v(_vm._s(JSON.stringify(test.updated_at).slice(12, 20)))])]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(test.rezultat_f))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(test.jedinice_f))]),_vm._v(\" \"),_c('td',[_vm._v(\"\\n                    \"+_vm._s(_vm.Interpretacija(\n                        _vm.vise.labassay.analit,\n                        test.rezultat_f,\n                        test.jedinice_f,\n                        _vm.vise.refd,\n                        _vm.vise.refg,\n                        _vm.$store.state.site,\n                        _vm.vise.interp,\n                        _vm.vise.extend,\n                        _vm.spec\n                      )[4])+\"\\n                  \")]),_vm._v(\" \"),(\n                      _vm.sample_status != 'ODOBREN' &&\n                      _vm.sample_status != 'VERIFICIRAN'\n                    )?_c('td',[(!test.izabran)?_c('i',{staticClass:\"glyphicon glyphicon-unchecked\",staticStyle:{\"font-size\":\"18px\",\"color\":\"#e34a4a\"},on:{\"click\":function($event){$event.preventDefault();_vm.IzborTesta(_vm.vise, test)}}}):_vm._e(),_vm._v(\" \"),(test.izabran)?_c('i',{staticClass:\"glyphicon glyphicon-check\",staticStyle:{\"font-size\":\"18px\",\"color\":\"#4ae387\"}}):_vm._e()]):_vm._e(),_vm._v(\" \"),_c('td',[_c('i',{class:{\n                        'fa fa-exclamation-triangle icon-right input-icon error-icon':\n                          _vm.Interpretacija(\n                            _vm.vise.labassay.analit,\n                            test.rezultat_f,\n                            test.jedinice_f,\n                            _vm.vise.refd,\n                            _vm.vise.refg,\n                            _vm.$store.state.site,\n                            _vm.vise.interp,\n                            _vm.vise.extend,\n                            _vm.spec\n                          )[5] === 'Red',\n                      }}),_vm._v(\" \"),_c('i',{class:{\n                        'fa fa-check success-icon icon-right input-icon':\n                          _vm.Interpretacija(\n                            _vm.vise.labassay.analit,\n                            test.rezultat_f,\n                            test.jedinice_f,\n                            _vm.vise.refd,\n                            _vm.vise.refg,\n                            _vm.$store.state.site,\n                            _vm.vise.interp,\n                            _vm.vise.extend,\n                            _vm.spec\n                          )[5] === 'Green',\n                      }})])])}))])])])]),_vm._v(\" \"),_c('vuestic-modal-error',{ref:\"staticModalError\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s(\"\")+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"404: Not Found\"))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s(\"Greška prilikom čitanja nalaza.\"))])])]),_vm._v(\" \"),_c('vuestic-modal-error',{ref:\"staticModalVerifyPrivilege\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s(\"\")+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"401: Not Authorized\"))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s(\"Nemate odgovarajuće privilegije.\"))])])]),_vm._v(\" \"),_c('vuestic-modal-exclamation',{ref:\"staticModalExclamation\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s(\"\")+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.warning.analiza))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s(_vm.warning.control))]),_vm._v(\" \"),_c('p',[_vm._v(_vm._s(_vm.warning.text))])])]),_vm._v(\" \"),_c('vuestic-modal-reference',{ref:\"staticModalReference\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s(\"Referentne vrijednosti: \")+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.reference.naziv)+\" (\"+_vm._s(_vm.reference.opis)+\")\")])]),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-2\"},[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.dref),expression:\"reference.dref\"}],staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"required\":\"\"},domProps:{\"value\":(_vm.reference.dref)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"dref\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(\"\\n                    \"+_vm._s(\"Donja\")+\"\\n                  \")]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-2\"},[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.gref),expression:\"reference.gref\"}],staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"required\":\"\"},domProps:{\"value\":(_vm.reference.gref)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"gref\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(\"\\n                    \"+_vm._s(\"Gornja\")+\"\\n                  \")]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},[(_vm.$store.state.access.level < 1)?_c('vuestic-simple-select',{staticStyle:{\"font-size\":\"14px\"},attrs:{\"label\":\"Interpretacija\",\"title\":\" \",\"options\":_vm.interpretacije},model:{value:(_vm.reference.interp),callback:function ($$v) {_vm.$set(_vm.reference, \"interp\", $$v)},expression:\"reference.interp\"}}):_vm._e(),_vm._v(\" \"),(_vm.$store.state.access.level > 0)?_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.interp),expression:\"reference.interp\"}],attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"required\":\"\",\"disabled\":true},domProps:{\"value\":(_vm.reference.interp)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"interp\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(\"\\n                    \"+_vm._s(_vm.reference.interp)+\"\\n                  \")]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])]):_vm._e()],1),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"})]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-2\"},[_c('vuestic-simple-select',{staticStyle:{\"font-size\":\"14px\"},attrs:{\"label\":\"Jedinica\",\"title\":\" \",\"options\":_vm.jedinice},model:{value:(_vm.reference.jedinica),callback:function ($$v) {_vm.$set(_vm.reference, \"jedinica\", $$v)},expression:\"reference.jedinica\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-7\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.reference.interp != 'spec'),expression:\"reference.interp != 'spec'\"}],staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.extend),expression:\"reference.extend\"}],staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"required\":\"\"},domProps:{\"value\":(_vm.reference.extend)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"extend\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(\"\\n                    \"+_vm._s(\"Proširena referentna vrijednost\")+\"\\n                  \")]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.reference.interp === 'spec'),expression:\"reference.interp === 'spec'\"}],staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.extend),expression:\"reference.extend\"}],staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"type\":\"text\",\"id\":\"simple-textarea\",\"required\":\"\"},domProps:{\"value\":(_vm.reference.extend)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"extend\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"simple-textarea\"}},[_vm._v(\"\\n                    \"+_vm._s(\"Specifična interpretacija rezultata\")+\"\\n                  \")]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"})])])]),_vm._v(\" \"),_c('vuestic-modal-find',{ref:\"staticModalFind\",attrs:{\"show\":_vm.show,\"data_pid\":Number(_vm.data_pid),\"data_length\":Number(_vm.data_length),\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s(\"\")+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Redni broj pacijenta\"))])]),_vm._v(\" \"),_c('div',[_c('h5')])]),_vm._v(\" \"),_c('vuestic-modal-aparati',{ref:\"staticModalAparati\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s(\"Izbor analizatora: \")+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(\"\\n            \"+_vm._s(this.analiza.ime + \" (\" + this.analiza.analit + \")\")+\"\\n          \")])]),_vm._v(\" \"),_c('div',[_c('vuestic-accordion-obrada',_vm._l((_vm.analysers),function(element){return _c('vuestic-collapse-aparati',{key:element._id,attrs:{\"analyser\":element}},[_c('span',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_vm._v(\"\\n                \"+_vm._s(element.ime + \", \" + element.site.naziv)+\"\\n              \")]),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"body\"},slot:\"body\"},[_c('div',{staticClass:\"va-row\"})])])}))],1)]),_vm._v(\" \"),_c('vuestic-modal-results-multi',{ref:\"staticModalResultsMulti\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s(\"Izbor rezultata: \")+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.multi_test))])]),_vm._v(\" \"),_c('div')]),_vm._v(\" \"),_c('patient-evaluation-single',{ref:\"staticModalEvaluationSingle\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',[_vm._v(_vm._s(_vm.ime + \" \" + _vm.prezime))])]),_vm._v(\" \"),(_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped table-sm color-icon-label-table\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"REZULTAT\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"JEDINICA\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"REFERENCE\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"DATUM\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(\"VRIJEME\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"5%\",\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.Procjena),function(element,index){return _c('tr',{key:index,class:{\n                      'table-danger':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Red',\n                      'table-success':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Green',\n                      'table-warning':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Yellow',\n                    },attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.rezultat))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.jedinica))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(\"\\n                      \"+_vm._s(_vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[4])+\"\\n                    \")]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.datum))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(element.vrijeme))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"9%\",\"align\":\"middle\"}},[_c('i',{class:{\n                          'fa fa-exclamation-triangle icon-right input-icon error-icon':\n                            _vm.Interpretacija(\n                              element.analit,\n                              element.rezultat,\n                              element.jedinica,\n                              element.refd,\n                              element.refg,\n                              _vm.$store.state.site,\n                              element.interp,\n                              element.extend,\n                              _vm.spec\n                            )[5] === 'Red',\n                        }}),_vm._v(\" \"),_c('i',{class:{\n                          'fa fa-check success-icon icon-right input-icon':\n                            _vm.Interpretacija(\n                              element.analit,\n                              element.rezultat,\n                              element.jedinica,\n                              element.refd,\n                              element.refg,\n                              _vm.$store.state.site,\n                              element.interp,\n                              element.extend,\n                              _vm.spec\n                            )[5] === 'Green',\n                        }})])])}))]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('span',{staticClass:\"circle badge-info\"}),_vm._v(\"\\n                \"+_vm._s(_vm.table_header)+\"\\n              \")])])])]):_vm._e(),_vm._v(\" \"),(_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('line-chart',{attrs:{\"options\":_vm.optionsLineChart,\"data\":_vm.dataLineChart,\"type\":\"line\"}})],1)]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])])]):_vm._e()]),_vm._v(\" \"),_c('patient-evaluation-single',{ref:\"staticModalLabAssayEvalSingle\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(\"\\n            \"+_vm._s(_vm.analiza_eval.ime + \" (\" + _vm.analiza_eval.analit + \")\")+\"\\n          \")]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(\" - Rezultati analize u zadnjih 14 dana\"))])]),_vm._v(\" \"),(_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped table-sm color-icon-label-table\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"REZULTAT\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"JEDINICA\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"REFERENCE\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"DATUM\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(\"VRIJEME\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"5%\",\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.Procjena),function(element,index){return _c('tr',{key:index,class:{\n                      'table-danger':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Red',\n                      'table-success':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Green',\n                      'table-warning':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Yellow',\n                    },attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.rezultat))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.jedinica))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(\"\\n                      \"+_vm._s(_vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[4])+\"\\n                    \")]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.datum))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(element.vrijeme))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"9%\",\"align\":\"middle\"}},[_c('i',{class:{\n                          'fa fa-exclamation-triangle icon-right input-icon error-icon':\n                            _vm.Interpretacija(\n                              element.analit,\n                              element.rezultat,\n                              element.jedinica,\n                              element.refd,\n                              element.refg,\n                              _vm.$store.state.site,\n                              element.interp,\n                              element.extend,\n                              _vm.spec\n                            )[5] === 'Red',\n                        }}),_vm._v(\" \"),_c('i',{class:{\n                          'fa fa-check success-icon icon-right input-icon':\n                            _vm.Interpretacija(\n                              element.analit,\n                              element.rezultat,\n                              element.jedinica,\n                              element.refd,\n                              element.refg,\n                              _vm.$store.state.site,\n                              element.interp,\n                              element.extend,\n                              _vm.spec\n                            )[5] === 'Green',\n                        }})])])}))]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('span',{staticClass:\"circle badge-info\"}),_vm._v(\"\\n                \"+_vm._s(_vm.table_header)+\"\\n              \")])])])]):_vm._e(),_vm._v(\" \"),(_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('line-chart',{attrs:{\"options\":_vm.optionsLineChart,\"data\":_vm.dataLineChart,\"type\":\"line\"}})],1)]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])])]):_vm._e()]),_vm._v(\" \"),_c('patient-evaluation-multi',{ref:\"staticModalEvaluationMulti\",attrs:{\"show\":_vm.show,\"multiparam_izbor\":_vm.multiparam_izbor,\"multiparam_izbornik\":_vm.multiparam_izbornik,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',[_vm._v(_vm._s(_vm.ime + \" \" + _vm.prezime))])]),_vm._v(\" \"),(_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped table-sm color-icon-label-table\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"REZULTAT\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"JEDINICA\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"REFERENCE\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"DATUM\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(\"VRIJEME\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"5%\",\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.Procjena),function(element,index){return _c('tr',{key:index,class:{\n                      'table-danger':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Red',\n                      'table-success':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Green',\n                      'table-warning':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Yellow',\n                    },attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.rezultat))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.jedinica))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(\"\\n                      \"+_vm._s(_vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[4])+\"\\n                    \")]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.datum))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(element.vrijeme))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"9%\",\"align\":\"middle\"}},[_c('i',{class:{\n                          'fa fa-exclamation-triangle icon-right input-icon error-icon':\n                            _vm.Interpretacija(\n                              element.analit,\n                              element.rezultat,\n                              element.jedinica,\n                              element.refd,\n                              element.refg,\n                              _vm.$store.state.site,\n                              element.interp,\n                              element.extend,\n                              _vm.spec\n                            )[5] === 'Red',\n                        }}),_vm._v(\" \"),_c('i',{class:{\n                          'fa fa-check success-icon icon-right input-icon':\n                            _vm.Interpretacija(\n                              element.analit,\n                              element.rezultat,\n                              element.jedinica,\n                              element.refd,\n                              element.refg,\n                              _vm.$store.state.site,\n                              element.interp,\n                              element.extend,\n                              _vm.spec\n                            )[5] === 'Green',\n                        }})])])}))]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('span',{staticClass:\"circle badge-info\"}),_vm._v(\"\\n                \"+_vm._s(_vm.table_header)+\"\\n              \")])])])]):_vm._e(),_vm._v(\" \"),(!_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])])]):_vm._e(),_vm._v(\" \"),(_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('line-chart',{attrs:{\"options\":_vm.optionsLineChart,\"data\":_vm.dataLineChart,\"type\":\"line\"}})],1)]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[(!_vm.showLineChart && !_vm.spinner)?_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.spinner)?_c('div',{staticClass:\"col-md-12\",staticStyle:{\"min-height\":\"400px\"}},[_c('div',{staticStyle:{\"display\":\"flex\",\"flex-direction\":\"row\",\"justify-content\":\"center\",\"align-items\":\"center\"}},[_c('div',{staticStyle:{\"float\":\"left\"}}),_vm._v(\" \"),_c('span',{staticStyle:{\"vertical-align\":\"middle\"}},[_c('atom-spinner',{staticStyle:{\"opacity\":\"0.25\"},attrs:{\"animation-duration\":1000,\"size\":300,\"color\":'#4ae387'}})],1)])]):_vm._e()]):_vm._e()]),_vm._v(\" \"),_c('patient-evaluation-multi',{ref:\"staticModalLabAssayEvalMulti\",attrs:{\"show\":_vm.show,\"multiparam_izbor\":_vm.multiparam_izbor,\"multiparam_izbornik\":_vm.multiparam_izbornik,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(\"\\n            \"+_vm._s(_vm.analiza_eval.ime + \" (\" + _vm.analiza_eval.analit + \")\")+\"\\n          \")]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(\" - Rezultati analize u zadnjih 14 dana\"))])]),_vm._v(\" \"),(_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped table-sm color-icon-label-table\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"REZULTAT\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"JEDINICA\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"REFERENCE\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"DATUM\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(\"VRIJEME\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"5%\",\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.Procjena),function(element,index){return _c('tr',{key:index,class:{\n                      'table-danger':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Red',\n                      'table-success':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Green',\n                      'table-warning':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Yellow',\n                    },attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.rezultat))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.jedinica))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(\"\\n                      \"+_vm._s(_vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[4])+\"\\n                    \")]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.datum))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(element.vrijeme))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"9%\",\"align\":\"middle\"}},[_c('i',{class:{\n                          'fa fa-exclamation-triangle icon-right input-icon error-icon':\n                            _vm.Interpretacija(\n                              element.analit,\n                              element.rezultat,\n                              element.jedinica,\n                              element.refd,\n                              element.refg,\n                              _vm.$store.state.site,\n                              element.interp,\n                              element.extend,\n                              _vm.spec\n                            )[5] === 'Red',\n                        }}),_vm._v(\" \"),_c('i',{class:{\n                          'fa fa-check success-icon icon-right input-icon':\n                            _vm.Interpretacija(\n                              element.analit,\n                              element.rezultat,\n                              element.jedinica,\n                              element.refd,\n                              element.refg,\n                              _vm.$store.state.site,\n                              element.interp,\n                              element.extend,\n                              _vm.spec\n                            )[5] === 'Green',\n                        }})])])}))]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('span',{staticClass:\"circle badge-info\"}),_vm._v(\"\\n                \"+_vm._s(_vm.table_header)+\"\\n              \")])])])]):_vm._e(),_vm._v(\" \"),(!_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])])]):_vm._e(),_vm._v(\" \"),(_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('line-chart',{attrs:{\"options\":_vm.optionsLineChart,\"data\":_vm.dataLineChart,\"type\":\"line\"}})],1)]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[(!_vm.showLineChart && !_vm.spinner)?_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.spinner)?_c('div',{staticClass:\"col-md-12\",staticStyle:{\"min-height\":\"400px\"}},[_c('div',{staticStyle:{\"display\":\"flex\",\"flex-direction\":\"row\",\"justify-content\":\"center\",\"align-items\":\"center\"}},[_c('div',{staticStyle:{\"float\":\"left\"}}),_vm._v(\" \"),_c('span',{staticStyle:{\"vertical-align\":\"middle\"}},[_c('atom-spinner',{staticStyle:{\"opacity\":\"0.25\"},attrs:{\"animation-duration\":1000,\"size\":300,\"color\":'#4ae387'}})],1)])]):_vm._e()]):_vm._e()])],1):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"col-md-6\"},[_c('loading',{attrs:{\"active\":_vm.isLoading,\"can-cancel\":false,\"on-cancel\":_vm.onCancel,\"color\":\"#4ae387\",\"is-full-page\":_vm.fullPage},on:{\"update:active\":function($event){_vm.isLoading=$event}}})],1),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[(false)?_c('button',{on:{\"click\":function($event){$event.preventDefault();_vm.Test($event)}}},[_vm._v(_vm._s(\"Loading...\"))]):_vm._e()])])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ \"KUw5\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_own_property_names__ = __webpack_require__(\"aFK5\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_own_property_names___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_own_property_names__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray__ = __webpack_require__(\"Gu7T\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify__ = __webpack_require__(\"mvHQ\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_vue__ = __webpack_require__(\"7+uW\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__router__ = __webpack_require__(\"YaEn\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_vuex_store__ = __webpack_require__(\"IcnI\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_services_utils__ = __webpack_require__(\"hLWQ\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__config_config_js__ = __webpack_require__(\"1wn0\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__BadgeColumn_vue__ = __webpack_require__(\"XMpX\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__main__ = __webpack_require__(\"NHnr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__functions_reference_js__ = __webpack_require__(\"d5lM\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__functions_reference_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10__functions_reference_js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__ = __webpack_require__(\"8472\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_vue_loading_overlay__ = __webpack_require__(\"ZZvs\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_vue_loading_overlay___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_12_vue_loading_overlay__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_vue_loading_overlay_dist_vue_loading_css__ = __webpack_require__(\"SYh3\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_vue_loading_overlay_dist_vue_loading_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_13_vue_loading_overlay_dist_vue_loading_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__vuestic_components_vuestic_chart_chart_types_LineChart__ = __webpack_require__(\"eDOj\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15_epic_spinners__ = __webpack_require__(\"pyJd\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_pdfobject__ = __webpack_require__(\"UqI+\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_pdfobject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_16_pdfobject__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_3_vue__[\"default\"].component(\"line-chart\", __WEBPACK_IMPORTED_MODULE_14__vuestic_components_vuestic_chart_chart_types_LineChart__[\"a\" /* default */]);\n__WEBPACK_IMPORTED_MODULE_3_vue__[\"default\"].component(\"badge-column\", __WEBPACK_IMPORTED_MODULE_8__BadgeColumn_vue__[\"default\"]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: \"collapse-obrada\",\n\n  data: function data() {\n    return {\n\n      AllowGetSample: true,\n      MicrobiologyOrder: false,\n      MicrobiologySample: false,\n      ModalNegative: false,\n      ModalPositive: false,\n      ModalPositiveCondition: false,\n      ShowAllBacteries: false,\n      ShowAntibiotics: false,\n      ShowBacteries: false,\n      BacteryTabs: [\"\"],\n      CurrentTab: \"\",\n      CurrentTest: \"\",\n      MicrobiologyModalHeader: \"Predefinisani rezultati\",\n      SelectedBacteries: [],\n      NegativeResultSelection: \"\",\n      PositiveResultSelection: \"\",\n      MicrobiologyScenario: \"Unknown\",\n      Antibiotics: [],\n      TemporaryAntibiotics: [],\n      TemporaryBacteries: [],\n      TemporaryBacteriesAdd: [],\n      Antibiograms: [],\n      Bacteries: [],\n\n      MicrobiologyResult: {\n        negative: null,\n        positive: null,\n        BUG: null,\n        F_RESULT: \"\",\n        M_RESULT: [],\n        DefaultBacteries: [],\n        RemainingBacteries: [],\n        NegativeDescriptions: [],\n        PositiveDescriptions: []\n      },\n\n      save_retest: false,\n      multiparam_izbor: \"\",\n      klijent: null,\n      multiparam_id: \"\",\n      analit: {},\n      multiparams: [],\n      Response: {},\n      spinner: false,\n      multiparam_izbornik: [],\n      warning: { analiza: \"\", text: \"\", control: \"\" },\n      main: false,\n      show: true,\n      pdf: false,\n      header: \"\",\n      lokacija: {},\n      timestamp: \"\",\n      pacijent: \"\",\n      ime: \"\",\n      prezime: \"\",\n      jmbg: \"\",\n      pid: \"\",\n      sid: \"\",\n      email: \"\",\n      email_tmp: \"\",\n      verificiran: false,\n      email_button: false,\n      final_pdf: false,\n      odobren: false,\n      approved: 0,\n      verified: 0,\n      partials: [],\n      partials_condition: false,\n      count: 0,\n      nalaz: {},\n      report: {},\n      path: \"\",\n      url: \"\",\n      uzorci: [],\n      vise: [],\n      samples: [],\n      sample_status: \"\",\n      labassay: \"\",\n      multi_test: \"\",\n      multi_rezultati: [],\n      check: \"\",\n      link: \"\",\n      spec: \"*\",\n      testovi: [],\n      rezultati: [],\n      analysers: [],\n      analyser: {},\n      analiza: {},\n      analyser_selected: {},\n      analyser_patient: {},\n      analitiprikaz: [],\n      analiti: [],\n      naslov: \"\",\n      calculated: false,\n      show_table: false,\n      sample: {},\n      resdata: {},\n      email_changed: false,\n      Previous: { pid: null },\n      Next: { pid: null },\n      Results: [],\n      Datum: { today: null, query: null, next: null, previous: null },\n      pagination: false,\n      forward_disabled: false,\n      backward_disabled: false,\n      data_length: 0,\n      data_min: 1,\n      data_pid: 0,\n      data_spol: \"\",\n      query_date: \"\",\n      today_date: \"\",\n      starost: \"\",\n      reference: {},\n      interpretacije: [\"none\", \"A\", \"ogtt\", \"insul\", \"less\", \"lesseq\", \"lesspl\", \"infekc\", \"grt\", \"grtpl\", \"grtepl\", \"grtno\", \"grte\", \"neg\", \"nema\", \"urbl\", \"reakt\", \"da\", \"e04\", \"e05\", \"norm\", \"norma\", \"ured\", \"plus\", \"prisutno\", \"gljivice\", \"leuer\", \"morf\", \"titar\", \"tsh\", \"trag\", \"trg\", \"hol\", \"hdl\", \"ldl\", \"fpsa\", \"sediment\", \"bistar\", \"boja\", \"bojasp\", \"nesto\", \"exists\", \"blst\", \"leu\", \"spec\"],\n\n      toastText: \"\",\n      toastIcon: \"\",\n      toastPosition: \"\",\n      toastDuration: 2500,\n      isToastFullWidth: false,\n      className: \"\",\n\n      isLoading: false,\n      fullPage: true,\n\n      analiza_eval: {},\n      showLineChart: false,\n      optionsLineChart: {},\n      dataLineChart: {},\n      Procjena: [],\n\n      jedinica: \"\",\n      jedinice: [],\n      graph: false,\n      table_header: \"\"\n    };\n  },\n\n  components: {\n    Loading: __WEBPACK_IMPORTED_MODULE_12_vue_loading_overlay___default.a,\n    AtomSpinner: __WEBPACK_IMPORTED_MODULE_15_epic_spinners__[\"a\" /* AtomSpinner */]\n  },\n\n  watch: {\n    email: function email() {\n      if (this.email.trim() != this.email_tmp.trim()) {\n        this.email_changed = true;\n      }\n    },\n\n    ModalNegative: function ModalNegative() {\n      if (this.ModalNegative) {\n        console.log(\"Izbor: negativan\");\n\n        this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\n        if (this.MicrobiologyScenario.includes(\"MANB\")) {\n          this.ModalPositiveCondition = true;\n        } else {\n          this.ModalPositiveCondition = false;\n        }\n      }\n    },\n\n    ModalPositive: function ModalPositive() {\n      if (this.ModalPositive) {\n        console.log(\"Izbor: pozitivan\");\n\n        if (this.MicrobiologyScenario === \"MAIBNoR\") {\n          this.MicrobiologyModalHeader = \"Bakterije\";\n        } else {\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\n        }\n\n        if (this.MicrobiologyScenario.includes(\"MANB\")) {\n          this.ModalPositiveCondition = true;\n        } else {\n          this.ModalPositiveCondition = false;\n        }\n      }\n    },\n\n    MicrobiologyScenario: function MicrobiologyScenario() {\n      switch (this.MicrobiologyScenario) {\n        case \"MAIBNoR\":\n          this.ModalNegative = false;\n          this.ModalPositive = false;\n          this.ModalPositiveCondition = false;\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\n          this.NegativeResultSelection = \"\";\n          this.PositiveResultSelection = \"\";\n          this.SelectedBacteries = [];\n          this.ShowAllBacteries = false;\n\n          break;\n\n        case \"MAIBNeR\":\n          this.SelectedBacteries = [];\n\n          break;\n\n        case \"MAIBPoR\":\n          break;\n\n        case \"MANBNoR\":\n          this.ModalNegative = false;\n          this.ModalPositive = false;\n          this.ModalPositiveCondition = false;\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\n          this.NegativeResultSelection = \"\";\n          this.PositiveResultSelection = \"\";\n          this.SelectedBacteries = [];\n          this.ShowAllBacteries = false;\n\n          break;\n\n        case \"MANBNeR\":\n          this.SelectedBacteries = [];\n\n          break;\n\n        case \"MANBPoR\":\n          this.SelectedBacteries = [];\n\n          break;\n\n        default:\n          break;\n      }\n    }\n\n  },\n  beforeCreate: function beforeCreate() {\n    var _this = this;\n\n    __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"postavke/jedinice/mount/list?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site, {}).then(function (res) {\n      _this.jedinice = res.data.jedinica;\n    });\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Parametar\", function (data) {\n\n      _this2.spinner = true;\n\n      _this2.analit = {};\n\n      _this2.multiparams.forEach(function (element) {\n        if (element.opis === data) {\n          _this2.analit = element;\n          _this2.multiparam_id = element._id;\n          _this2.multiparam_izbor = data;\n        }\n      });\n\n      if (_.isEmpty(_this2.analit)) {} else {\n        if (!_.isEmpty(_this2.Response)) {\n          _this2.showLineChart = false;\n          var palette = __WEBPACK_IMPORTED_MODULE_5_vuex_store__[\"a\" /* default */].getters.palette;\n\n          _this2.Procjena = [];\n\n          var obj = {};\n          var count = 0;\n\n          _this2.Response.Multi.forEach(function (element) {\n            count++;\n            element.multi.forEach(function (param) {\n              if (_this2.multiparam_id == param.labassay && param.rezultat[0].rezultat_f.trim() != \"\") {\n                obj.rezultat = param.rezultat[0].rezultat_f;\n                obj.jedinica = param.rezultat[0].jedinice_f;\n                obj.analit = \"Nema podataka\";\n                obj.interp = param.interp;\n                obj.extend = param.extend;\n                obj.refd = param.refd;\n                obj.refg = param.refg;\n                obj.sid = \"Nema podataka\";\n                obj.updated_at = new Date(param.rezultat[0].updated_at);\n\n                var datum = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(9, 11) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(6, 8) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(1, 5);\n                var time = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date(param.rezultat[0].updated_at).getTime() - new Date(param.rezultat[0].updated_at).getTimezoneOffset() * 60000).toISOString()).substring(12, 17);\n                obj.datum = datum;\n                obj.vrijeme = time;\n                obj.kontrola = _this2.Interpretacija(\"\", obj.rezultat, obj.jedinica, obj.refd, obj.refg, _this2.$store.state.site, obj.interp, obj.extend, _this2.spec)[5];\n\n                _this2.Procjena.push(obj);\n                obj = {};\n              }\n            });\n\n            if (count == _this2.Response.Multi.length) {\n              _this2.Procjena.sort(function (a, b) {\n                return Date.parse(a.updated_at) == Date.parse(b.updated_at) ? 0 : +(Date.parse(a.updated_at) < Date.parse(b.updated_at)) || -1;\n              });\n\n              var data = [];\n\n              if (_this2.Procjena.length) {\n                _this2.optionsLineChart = {\n                  responsive: true,\n                  maintainAspectRatio: false,\n                  title: {\n                    display: true,\n                    text: \"\"\n                  },\n                  scales: {\n                    xAxes: [{\n                      display: true,\n                      gridLines: {\n                        display: true,\n                        color: \"#eee\"\n                      }\n                    }],\n                    yAxes: [{\n                      display: true,\n                      gridLines: {\n                        display: true,\n                        color: \"#eee\"\n                      }\n                    }]\n                  }\n                };\n\n                var labels = [];\n                var kontrola = [];\n                var temp = \"\";\n\n                _this2.Procjena.forEach(function (element) {\n                  if (!isNaN(element.rezultat.trim())) {\n                    switch (element.kontrola) {\n                      case \"Red\":\n                        kontrola.push(palette.danger);\n                        break;\n                      case \"Green\":\n                        kontrola.push(palette.primary);\n                        break;\n                      case \"Yellow\":\n                        kontrola.push(palette.warning);\n                        break;\n\n                      default:\n                        kontrola.push(palette.info);\n                        break;\n                    }\n\n                    labels.push(element.datum);\n                    data.push(element.rezultat);\n                  }\n                });\n\n                _this2.dataLineChart = {\n                  labels: labels,\n                  datasets: [{\n                    label: _this2.table_header,\n                    backgroundColor: __WEBPACK_IMPORTED_MODULE_6_services_utils__[\"a\" /* default */].hex2rgb(palette.info, 0.5).css,\n                    pointBorderColor: kontrola,\n                    pointBackgroundColor: kontrola,\n                    borderColor: palette.transparent,\n                    data: data\n                  }]\n                };\n\n                if (data.length) {\n                  setTimeout(function () {\n                    _this2.showLineChart = true;\n                  }, 500);\n                }\n              } else {\n\n                _this2.spinner = false;\n              }\n            }\n          });\n        } else {}\n      }\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"graph\", function () {\n      _this2.Procjena.sort(function (a, b) {\n        return Date.parse(a.updated_at) == Date.parse(b.updated_at) ? 0 : +(Date.parse(a.updated_at) < Date.parse(b.updated_at)) || -1;\n      });\n\n      var data = [];\n\n      if (_this2.Procjena.length) {\n        var palette = __WEBPACK_IMPORTED_MODULE_5_vuex_store__[\"a\" /* default */].getters.palette;\n        _this2.optionsLineChart = {\n          responsive: true,\n          maintainAspectRatio: false,\n          title: {\n            display: true,\n            text: \"\"\n          },\n          scales: {\n            xAxes: [{\n              display: true,\n              gridLines: {\n                display: true,\n                color: \"#eee\"\n              }\n            }],\n            yAxes: [{\n              display: true,\n              gridLines: {\n                display: true,\n                color: \"#eee\"\n              }\n            }]\n          }\n        };\n\n        var labels = [];\n        var kontrola = [];\n        var temp = \"\";\n\n        _this2.Procjena.forEach(function (element) {\n          if (!isNaN(element.rezultat.trim())) {\n            switch (element.kontrola) {\n              case \"Red\":\n                kontrola.push(palette.danger);\n                break;\n              case \"Green\":\n                kontrola.push(palette.primary);\n                break;\n              case \"Yellow\":\n                kontrola.push(palette.warning);\n                break;\n\n              default:\n                kontrola.push(palette.info);\n                break;\n            }\n\n            labels.push(element.datum);\n            data.push(element.rezultat);\n          }\n        });\n\n        _this2.dataLineChart = {\n          labels: labels,\n          datasets: [{\n            label: _this2.analiza_eval.ime + \" | \" + _this2.analiza_eval.analit,\n            backgroundColor: __WEBPACK_IMPORTED_MODULE_6_services_utils__[\"a\" /* default */].hex2rgb(palette.info, 0.5).css,\n            pointBorderColor: kontrola,\n            pointBackgroundColor: kontrola,\n            borderColor: palette.transparent,\n            data: data\n          }]\n        };\n\n        if (data.length) {\n          _this2.showLineChart = true;\n        }\n      } else {}\n      _this2.graph = false;\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"table\", function () {\n      _this2.Procjena.sort(function (a, b) {\n        return Date.parse(a.updated_at) == Date.parse(b.updated_at) ? 0 : +(Date.parse(a.updated_at) > Date.parse(b.updated_at)) || -1;\n      });\n\n      var data = [];\n\n      if (_this2.Procjena.length) {\n        var palette = __WEBPACK_IMPORTED_MODULE_5_vuex_store__[\"a\" /* default */].getters.palette;\n        _this2.optionsLineChart = {\n          responsive: true,\n          maintainAspectRatio: false,\n          title: {\n            display: true,\n            text: \"\"\n          },\n          scales: {\n            xAxes: [{\n              display: true,\n              gridLines: {\n                display: true,\n                color: \"#eee\"\n              }\n            }],\n            yAxes: [{\n              display: true,\n              gridLines: {\n                display: true,\n                color: \"#eee\"\n              }\n            }]\n          }\n        };\n\n        var labels = [];\n        var kontrola = [];\n        var temp = \"\";\n\n        _this2.Procjena.forEach(function (element) {\n          if (!isNaN(element.rezultat.trim())) {\n            switch (element.kontrola) {\n              case \"Red\":\n                kontrola.push(palette.danger);\n                break;\n              case \"Green\":\n                kontrola.push(palette.primary);\n                break;\n              case \"Yellow\":\n                kontrola.push(palette.warning);\n                break;\n\n              default:\n                kontrola.push(palette.info);\n                break;\n            }\n\n            labels.push(element.datum);\n            data.push(element.rezultat);\n          }\n        });\n\n        _this2.dataLineChart = {\n          labels: labels,\n          datasets: [{\n            label: _this2.analiza_eval.ime + \" | \" + _this2.analiza_eval.analit,\n            backgroundColor: __WEBPACK_IMPORTED_MODULE_6_services_utils__[\"a\" /* default */].hex2rgb(palette.info, 0.5).css,\n            pointBorderColor: kontrola,\n            pointBackgroundColor: kontrola,\n            borderColor: palette.transparent,\n            data: data\n          }]\n        };\n\n        if (data.length) {\n          _this2.showLineChart = true;\n        }\n      } else {}\n      _this2.graph = true;\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"trash\", function (data) {\n      _this2.sid = data.sid;\n      _this2.$refs.staticModalDeleteSample.open();\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"edit\", function (data) {\n      _this2.sid = data.sid;\n      _this2.$refs.staticModalEditSample.open();\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"comment\", function (data) {\n      _this2.sid = data.sid;\n      _this2.$refs.staticModalComment.open();\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"barcode\", function (data) {\n      _this2.BarcodePrint(data);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"save\", function (data) {\n      _this2.SaveResults(_this2.rezultati, \"save\");\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"check\", function (data) {\n      _this2.Approve(_this2.rezultati);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"verify\", function (data) {\n      _this2.Verify(data, \"verify\");\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"undo\", function (data) {\n      _this2.Disapprove(_this2.rezultati, \"undo\");\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"unlock\", function (data) {\n      _this2.UnVerify(data, \"unlock\");\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Nalaz\", function (data) {\n      if (!data.final_pdf) {\n        _this2.$refs.staticModalError.open();\n      } else {\n        _this2.path = _this2.timestamp + \".pdf\";\n\n        _this2.url = __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"r\" /* server */] + \"nalazi/\" + _this2.path;\n\n        var options = {\n          width: \"100%\",\n          height: \"800px\"\n        };\n        __WEBPACK_IMPORTED_MODULE_16_pdfobject___default.a.embed(_this2.url, \"#pdf-container\", options);\n\n        _this2.email_button = true;\n        _this2.main = false;\n        _this2.pdf = true;\n      }\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"pdf\", function (data) {\n      if (!data.pdf_exists) {\n        _this2.$refs.staticModalError.open();\n      } else {\n        _this2.path = \"samples/\" + data.sid + \".pdf\";\n\n        _this2.url = __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"r\" /* server */] + \"nalazi/samples/\" + data.sid + \".pdf\";\n\n        var options = {\n          width: \"100%\",\n          height: \"800px\"\n        };\n        __WEBPACK_IMPORTED_MODULE_16_pdfobject___default.a.embed(_this2.url, \"#pdf-container\", options);\n\n        _this2.main = false;\n        _this2.pdf = true;\n      }\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Sample\", function (data) {\n\n      if (data.tip.includes(\"Mikrobiologija\")) {\n        _this2.MicrobiologySample = true;\n      } else {\n        _this2.MicrobiologySample = false;\n      }\n\n      _this2.$store.dispatch(\"SetSample\", data.sid);\n      _this2.GetSingleSample(data);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Deleted\", function (data) {\n      _this2.DeletedSample(data);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Edited\", function (data) {\n      _this2.EditSample(data);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"SaveMulti\", function (data) {\n      _this2.SaveMultiResults(_this2.analiti, data);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Mail\", function () {\n      _this2.SendMail(_this2.email);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Error\", function () {\n      console.warn(\"Greška prilikom čitanja nalaza.\");\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Analyser\", function (data) {\n      _this2.AnalyserSelected(data);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Sljedeci\", function () {\n      _this2.Sljedeci();\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Prethodni\", function () {\n      _this2.Prethodni();\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Search\", function () {\n      _this2.$refs.staticModalFind.open();\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Push\", function (data) {\n      if (_this2.$route.params.id != data) {\n        _this2.Results.forEach(function (element) {\n          if (element.pid == data) {\n            __WEBPACK_IMPORTED_MODULE_4__router__[\"a\" /* default */].push(\"/obrada/rezultati/\" + element.patient + \"/\" + element.pid + \"?date=\" + element.date);\n          }\n        });\n      } else {}\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Reference\", function () {\n      _this2.reference.dref = Math.abs(_this2.reference.dref.replace(/,/g, \".\").trim());\n      _this2.reference.gref = Math.abs(_this2.reference.gref.replace(/,/g, \".\").trim());\n\n      if (_this2.reference.interp != \"spec\") {\n        _this2.reference.extend = _this2.reference.extend.replace(/(\\r\\n|\\n|\\r)/gm, \" \");\n      }\n\n      if (isNaN(_this2.reference.dref) || isNaN(_this2.reference.gref) || _this2.reference.dref === \"\" || _this2.reference.gref === \"\" || _this2.reference.dref > _this2.reference.gref) {} else {\n        document.getElementById(_this2.$store.state.sid).click();\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"/rezultati/odobravanje/reference/\", {\n          email: _this2.$store.state.userId,\n          token: _this2.$store.state.token,\n          site: _this2.$store.state.site,\n          reference: _this2.reference\n        }).then(function (res) {\n          setTimeout(function () {\n            document.getElementById(_this2.$store.state.sid).click();\n          }, 500);\n        });\n      }\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"retest\", function (data) {\n      _this2.RetestSave(data);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Antibiotik\", function (data) {\n      if (_this2.sample.status != \"ODOBREN\" && _this2.sample.status != \"VERIFICIRAN\") {\n        _this2.TemporaryAntibiotics = [];\n        _this2.TemporaryBacteries = [];\n        _this2.TemporaryBacteriesAdd = [];\n\n        _this2.Antibiotics.forEach(function (element) {\n          element.chosen = false;\n          element.disabled = false;\n        });\n\n        _this2.SelectedBacteries.forEach(function (selected) {\n          if (selected.opis == data) {\n            selected.antibiogram.antibiotici.forEach(function (ant) {\n              _this2.Antibiotics.forEach(function (antibiotik) {\n                if (antibiotik._id == ant._id) {\n                  antibiotik.disabled = true;\n                  antibiotik.chosen = true;\n                  antibiotik.rezultat = ant.rezultat;\n                }\n              });\n            });\n          }\n        });\n\n        _this2.ShowAntibiotics = true;\n      }\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"tabChanged\", function (data) {\n      _this2.CurrentTab = data;\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"AllowClick\", function (data) {\n      if (_this2.MicrobiologySample) {\n        if (data) {\n          _this2.AllowGetSample = false;\n        } else {\n          _this2.AllowGetSample = true;\n        }\n      }\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"MicroReset\", function () {\n      console.log(\"Reset: \" + _this2.$store.state.sid);\n      var Scenario = _this2.MicrobiologyScenario;\n\n      _this2.rezultati[0].rezultat = \"\";\n      _this2.rezultati[0].rezultat_m = [];\n      _this2.rezultati[0].realizovan = false;\n\n      _this2.MicrobiologyResult.DefaultBacteries.forEach(function (element) {\n        element.chosen = false;\n      });\n\n      _this2.MicrobiologyResult.RemainingBacteries.forEach(function (element) {\n        element.chosen = false;\n      });\n\n      _this2.SelectedBacteries = [];\n      _this2.ShowAllBacteries = false;\n\n      if (_this2.MicrobiologyScenario.includes(\"MAIB\")) {\n        _this2.main = false;\n\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + _this2.$store.state.sid, {\n          email: _this2.$store.state.userId,\n          token: _this2.$store.state.token,\n          site: _this2.$store.state.site,\n          rezultati: _this2.rezultati\n        }).then(function (res) {\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this2.$route.params.patient + \"/\" + _this2.$route.params.id + \"?token=\" + _this2.$store.state.token + \"&site=\" + _this2.$store.state.site + \"&date=\" + _this2.$route.query.date, {}).then(function (res) {\n            _this2.uzorci = [];\n\n            res.data.results.forEach(function (element) {\n              if (_this2.$store.state.sid === element.id) {\n                console.log(element.rezultati[0].rezultat[0]);\n              }\n\n              var check = 0;\n              var zaprimljen = 0;\n              var realizovan = 0;\n\n              if (element.verificiran) {\n                var status_uzorka = \"VERIFICIRAN\";\n              } else {\n                var status_uzorka = element.status;\n              }\n\n              element.rezultati.forEach(function (test) {\n                check++;\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                  zaprimljen++;\n                }\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                  realizovan++;\n                }\n\n                if (check === element.rezultati.length) {\n\n                  if (status_uzorka === \"VERIFICIRAN\") {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"VERIFICIRAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (status_uzorka === \"ODOBREN\") {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"ODOBREN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (zaprimljen < 1) {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"REALIZOVAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (realizovan < 1) {\n                    var stat = \"ZAPRIMLJEN\";\n                    if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                      if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                        stat = \"REALIZOVAN\";\n                      }\n                    }\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: stat,\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"U OBRADI\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  }\n                }\n              });\n            });\n\n            _this2.uzorci = _this2.uzorci.sort(function (a, b) {\n              return a.sid.localeCompare(b.sid, undefined, {\n                numeric: true,\n                sensitivity: \"base\"\n              });\n            });\n          }).then(function (res) {\n            _this2.MicrobiologyScenario = \"MAIBNoR\";\n            console.log(\"Scenario: \" + Scenario + \" - > \" + _this2.MicrobiologyScenario);\n            _this2.main = true;\n            __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$emit(\"CloseMicroReset\");\n          });\n        });\n      } else if (_this2.MicrobiologyScenario.includes(\"MANB\")) {\n        _this2.main = false;\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + _this2.$store.state.sid, {\n          email: _this2.$store.state.userId,\n          token: _this2.$store.state.token,\n          site: _this2.$store.state.site,\n          rezultati: _this2.rezultati\n        }).then(function (res) {\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this2.$route.params.patient + \"/\" + _this2.$route.params.id + \"?token=\" + _this2.$store.state.token + \"&site=\" + _this2.$store.state.site + \"&date=\" + _this2.$route.query.date, {}).then(function (res) {\n            _this2.uzorci = [];\n\n            res.data.results.forEach(function (element) {\n              if (_this2.$store.state.sid === element.id) {\n                console.log(element.rezultati[0].rezultat[0]);\n              }\n\n              var check = 0;\n              var zaprimljen = 0;\n              var realizovan = 0;\n\n              if (element.verificiran) {\n                var status_uzorka = \"VERIFICIRAN\";\n              } else {\n                var status_uzorka = element.status;\n              }\n\n              element.rezultati.forEach(function (test) {\n                check++;\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                  zaprimljen++;\n                }\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                  realizovan++;\n                }\n\n                if (check === element.rezultati.length) {\n                  if (status_uzorka === \"VERIFICIRAN\") {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"VERIFICIRAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (status_uzorka === \"ODOBREN\") {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"ODOBREN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (zaprimljen < 1) {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"REALIZOVAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (realizovan < 1) {\n                    var stat = \"ZAPRIMLJEN\";\n                    if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                      if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                        stat = \"REALIZOVAN\";\n                      }\n                    }\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: stat,\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"U OBRADI\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  }\n                }\n              });\n            });\n\n            _this2.uzorci = _this2.uzorci.sort(function (a, b) {\n              return a.sid.localeCompare(b.sid, undefined, {\n                numeric: true,\n                sensitivity: \"base\"\n              });\n            });\n          }).then(function (res) {\n            _this2.MicrobiologyScenario = \"MANBNoR\";\n            console.log(\"Scenario: \" + Scenario + \" - > \" + _this2.MicrobiologyScenario);\n            _this2.main = true;\n            __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$emit(\"CloseMicroReset\");\n          });\n        });\n      } else {}\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"MicroResult\", function () {\n      console.log(\"Defining result...\");\n\n      var Scenario = _this2.MicrobiologyScenario;\n\n      switch (_this2.MicrobiologyScenario) {\n        case \"MAIBNoR\":\n          _this2.rezultati[0].rezultat_m = [];\n          _this2.rezultati[0].rezultat_m.push({\n            bakterija: false,\n            negativan: _this2.ModalNegative,\n            pozitivan: _this2.ModalPositive,\n            _id: null,\n            naziv: null,\n            opis: null,\n            antibiogram: {\n              _id: null,\n              naziv: null,\n              opis: null,\n              antibiotici: [{\n                _id: null,\n                rbr_a: null,\n                naziv: null,\n                opis: null,\n                rezultat: null\n              }]\n            }\n          });\n\n          if (_this2.ModalNegative) {\n            _this2.rezultati[0].rezultat = _this2.NegativeResultSelection;\n            _this2.isLoading = true;\n            _this2.main = false;\n\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + _this2.$store.state.sid, {\n              email: _this2.$store.state.userId,\n              token: _this2.$store.state.token,\n              site: _this2.$store.state.site,\n              rezultati: _this2.rezultati\n            }).then(function (res) {\n              __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this2.$route.params.patient + \"/\" + _this2.$route.params.id + \"?token=\" + _this2.$store.state.token + \"&site=\" + _this2.$store.state.site + \"&date=\" + _this2.$route.query.date, {}).then(function (res) {\n                _this2.uzorci = [];\n\n                res.data.results.forEach(function (element) {\n                  if (_this2.$store.state.sid === element.id) {\n                    console.log(element.rezultati[0].rezultat[0]);\n                  }\n\n                  var check = 0;\n                  var zaprimljen = 0;\n                  var realizovan = 0;\n\n                  if (element.verificiran) {\n                    var status_uzorka = \"VERIFICIRAN\";\n                  } else {\n                    var status_uzorka = element.status;\n                  }\n\n                  element.rezultati.forEach(function (test) {\n                    check++;\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                      zaprimljen++;\n                    }\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                      realizovan++;\n                    }\n\n                    if (check === element.rezultati.length) {\n                      if (status_uzorka === \"VERIFICIRAN\") {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"VERIFICIRAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (status_uzorka === \"ODOBREN\") {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"ODOBREN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (zaprimljen < 1) {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"REALIZOVAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (realizovan < 1) {\n                        var stat = \"ZAPRIMLJEN\";\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                          if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                            stat = \"REALIZOVAN\";\n                          }\n                        }\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: stat,\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"U OBRADI\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      }\n                    }\n                  });\n                });\n\n                _this2.uzorci = _this2.uzorci.sort(function (a, b) {\n                  return a.sid.localeCompare(b.sid, undefined, {\n                    numeric: true,\n                    sensitivity: \"base\"\n                  });\n                });\n              }).then(function (res) {\n                __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$emit(\"CloseMicroResult\");\n                _this2.rezultati[0].realizovan = true;\n                _this2.MicrobiologyScenario = \"MAIBNeR\";\n                console.log(\"Scenario: \" + Scenario + \" - > \" + _this2.MicrobiologyScenario);\n                _this2.main = true;\n                _this2.isLoading = false;\n              });\n            });\n          } else {\n            _this2.PositiveResultSelection = \"\";\n            _this2.SelectedBacteries.forEach(function (element) {\n              _this2.PositiveResultSelection = _this2.PositiveResultSelection + element.opis + \"\\n\";\n              var Antibiotici = [];\n              var antibiotik = {};\n\n              _this2.Antibiotics.forEach(function (antibiotik) {\n                element.antibiogram.antibiotici.forEach(function (ant) {\n                  if (antibiotik._id == ant) {\n                    antibiotik = {\n                      _id: antibiotik._id,\n                      rbr_a: antibiotik.rbr_a,\n                      naziv: antibiotik.naziv,\n                      opis: antibiotik.opis,\n                      disabled: false,\n                      rezultat: \"\"\n                    };\n                    Antibiotici.push(antibiotik);\n                    antibiotik = {};\n                  }\n                });\n              });\n\n              _this2.rezultati[0].rezultat_m.push({\n                bakterija: true,\n                negativan: _this2.largeModalneg,\n                pozitivan: _this2.largeModalpos,\n                _id: element._id,\n                naziv: element.naziv,\n                opis: element.opis,\n                antibiogram: {\n                  _id: element.antibiogram._id,\n                  naziv: element.antibiogram.naziv,\n                  opis: element.antibiogram.opis,\n                  antibiotici: [].concat(Antibiotici)\n                }\n              });\n            });\n\n            _this2.rezultati[0].rezultat = _this2.PositiveResultSelection.trim();\n            _this2.isLoading = true;\n            _this2.main = false;\n\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + _this2.$store.state.sid, {\n              email: _this2.$store.state.userId,\n              token: _this2.$store.state.token,\n              site: _this2.$store.state.site,\n              rezultati: _this2.rezultati\n            }).then(function (res) {\n              __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this2.$route.params.patient + \"/\" + _this2.$route.params.id + \"?token=\" + _this2.$store.state.token + \"&site=\" + _this2.$store.state.site + \"&date=\" + _this2.$route.query.date, {}).then(function (res) {\n                _this2.uzorci = [];\n\n                res.data.results.forEach(function (element) {\n                  if (_this2.$store.state.sid === element.id) {\n                    console.log(element.rezultati[0].rezultat[0]);\n                  }\n\n                  var check = 0;\n                  var zaprimljen = 0;\n                  var realizovan = 0;\n\n                  if (element.verificiran) {\n                    var status_uzorka = \"VERIFICIRAN\";\n                  } else {\n                    var status_uzorka = element.status;\n                  }\n\n                  element.rezultati.forEach(function (test) {\n                    check++;\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                      zaprimljen++;\n                    }\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                      realizovan++;\n                    }\n\n                    if (check === element.rezultati.length) {\n                      if (status_uzorka === \"VERIFICIRAN\") {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"VERIFICIRAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (status_uzorka === \"ODOBREN\") {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"ODOBREN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (zaprimljen < 1) {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"REALIZOVAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (realizovan < 1) {\n                        var stat = \"ZAPRIMLJEN\";\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                          if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                            stat = \"REALIZOVAN\";\n                          }\n                        }\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: stat,\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"U OBRADI\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      }\n                    }\n                  });\n                });\n\n                _this2.uzorci = _this2.uzorci.sort(function (a, b) {\n                  return a.sid.localeCompare(b.sid, undefined, {\n                    numeric: true,\n                    sensitivity: \"base\"\n                  });\n                });\n              }).then(function (res) {\n                __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$emit(\"CloseMicroResult\");\n                _this2.rezultati[0].realizovan = true;\n                _this2.MicrobiologyScenario = \"MAIBPoR\";\n                console.log(\"Scenario: \" + Scenario + \" - > \" + _this2.MicrobiologyScenario);\n                _this2.main = true;\n                _this2.isLoading = false;\n              });\n            });\n          }\n\n          break;\n\n        case \"MANBNoR\":\n          _this2.rezultati[0].rezultat_m = [{\n            bakterija: false,\n            negativan: _this2.ModalNegative,\n            pozitivan: _this2.ModalPositive,\n            _id: null,\n            naziv: null,\n            opis: null,\n            antibiogram: {\n              _id: null,\n              naziv: null,\n              opis: null,\n              antibiotici: [{\n                _id: null,\n                rbr_a: null,\n                naziv: null,\n                opis: null,\n                rezultat: null\n              }]\n            }\n          }];\n\n          if (_this2.ModalNegative) {\n            _this2.rezultati[0].rezultat = _this2.NegativeResultSelection;\n            _this2.isLoading = true;\n            _this2.main = false;\n\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + _this2.$store.state.sid, {\n              email: _this2.$store.state.userId,\n              token: _this2.$store.state.token,\n              site: _this2.$store.state.site,\n              rezultati: _this2.rezultati\n            }).then(function (res) {\n              __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this2.$route.params.patient + \"/\" + _this2.$route.params.id + \"?token=\" + _this2.$store.state.token + \"&site=\" + _this2.$store.state.site + \"&date=\" + _this2.$route.query.date, {}).then(function (res) {\n                _this2.uzorci = [];\n\n                res.data.results.forEach(function (element) {\n                  if (_this2.$store.state.sid === element.id) {\n                    console.log(element.rezultati[0].rezultat[0]);\n                  }\n\n                  var check = 0;\n                  var zaprimljen = 0;\n                  var realizovan = 0;\n\n                  if (element.verificiran) {\n                    var status_uzorka = \"VERIFICIRAN\";\n                  } else {\n                    var status_uzorka = element.status;\n                  }\n\n                  element.rezultati.forEach(function (test) {\n                    check++;\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                      zaprimljen++;\n                    }\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                      realizovan++;\n                    }\n\n                    if (check === element.rezultati.length) {\n                      if (status_uzorka === \"VERIFICIRAN\") {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"VERIFICIRAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (status_uzorka === \"ODOBREN\") {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"ODOBREN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (zaprimljen < 1) {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"REALIZOVAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (realizovan < 1) {\n                        var stat = \"ZAPRIMLJEN\";\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                          if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                            stat = \"REALIZOVAN\";\n                          }\n                        }\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: stat,\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"U OBRADI\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      }\n                    }\n                  });\n                });\n\n                _this2.uzorci = _this2.uzorci.sort(function (a, b) {\n                  return a.sid.localeCompare(b.sid, undefined, {\n                    numeric: true,\n                    sensitivity: \"base\"\n                  });\n                });\n              }).then(function (res) {\n                __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$emit(\"CloseMicroResult\");\n                _this2.rezultati[0].realizovan = true;\n                _this2.MicrobiologyScenario = \"MANBNeR\";\n                console.log(\"Scenario: \" + Scenario + \" - > \" + _this2.MicrobiologyScenario);\n                _this2.main = true;\n                _this2.isLoading = false;\n              });\n            });\n          } else {\n            _this2.rezultati[0].rezultat = _this2.PositiveResultSelection;\n            _this2.isLoading = true;\n            _this2.main = false;\n\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + _this2.$store.state.sid, {\n              email: _this2.$store.state.userId,\n              token: _this2.$store.state.token,\n              site: _this2.$store.state.site,\n              rezultati: _this2.rezultati\n            }).then(function (res) {\n              __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this2.$route.params.patient + \"/\" + _this2.$route.params.id + \"?token=\" + _this2.$store.state.token + \"&site=\" + _this2.$store.state.site + \"&date=\" + _this2.$route.query.date, {}).then(function (res) {\n                _this2.uzorci = [];\n\n                res.data.results.forEach(function (element) {\n                  if (_this2.$store.state.sid === element.id) {\n                    console.log(element.rezultati[0].rezultat[0]);\n                  }\n\n                  var check = 0;\n                  var zaprimljen = 0;\n                  var realizovan = 0;\n\n                  if (element.verificiran) {\n                    var status_uzorka = \"VERIFICIRAN\";\n                  } else {\n                    var status_uzorka = element.status;\n                  }\n\n                  element.rezultati.forEach(function (test) {\n                    check++;\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                      zaprimljen++;\n                    }\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                      realizovan++;\n                    }\n\n                    if (check === element.rezultati.length) {\n                      if (status_uzorka === \"VERIFICIRAN\") {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"VERIFICIRAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (status_uzorka === \"ODOBREN\") {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"ODOBREN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (zaprimljen < 1) {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"REALIZOVAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (realizovan < 1) {\n                        var stat = \"ZAPRIMLJEN\";\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                          if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                            stat = \"REALIZOVAN\";\n                          }\n                        }\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: stat,\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"U OBRADI\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      }\n                    }\n                  });\n                });\n\n                _this2.uzorci = _this2.uzorci.sort(function (a, b) {\n                  return a.sid.localeCompare(b.sid, undefined, {\n                    numeric: true,\n                    sensitivity: \"base\"\n                  });\n                });\n              }).then(function (res) {\n                __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$emit(\"CloseMicroResult\");\n                _this2.rezultati[0].realizovan = true;\n                _this2.MicrobiologyScenario = \"MANBPoR\";\n                console.log(\"Scenario: \" + Scenario + \" - > \" + _this2.MicrobiologyScenario);\n                _this2.main = true;\n                _this2.isLoading = false;\n              });\n            });\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"ResetResultSelection\", function () {\n      switch (_this2.MicrobiologyScenario) {\n        case \"MAIBNoR\":\n          _this2.ModalNegative = false;\n          _this2.ModalPositive = false;\n          _this2.ModalPositiveCondition = false;\n          _this2.MicrobiologyModalHeader = \"Predefinisani rezultati\";\n          _this2.NegativeResultSelection = \"\";\n          _this2.PositiveResultSelection = \"\";\n          _this2.SelectedBacteries = [];\n          _this2.ShowAllBacteries = false;\n\n          break;\n\n        case \"MAIBNeR\":\n          _this2.SelectedBacteries = [];\n\n          break;\n\n        case \"MAIBPoR\":\n          break;\n\n        case \"MANBNoR\":\n          _this2.ModalNegative = false;\n          _this2.ModalPositive = false;\n          _this2.ModalPositiveCondition = false;\n          _this2.MicrobiologyModalHeader = \"Predefinisani rezultati\";\n          _this2.NegativeResultSelection = \"\";\n          _this2.PositiveResultSelection = \"\";\n          _this2.SelectedBacteries = [];\n          _this2.ShowAllBacteries = false;\n\n          break;\n\n        case \"MANBNeR\":\n          _this2.SelectedBacteries = [];\n\n          break;\n\n        case \"MANBPoR\":\n          _this2.SelectedBacteries = [];\n\n          break;\n\n        default:\n          break;\n      }\n\n      _this2.MicrobiologyResult.DefaultBacteries.forEach(function (element) {\n        element.chosen = false;\n      });\n\n      _this2.MicrobiologyResult.RemainingBacteries.forEach(function (element) {\n        element.chosen = false;\n      });\n\n      _this2.SelectedBacteries = [];\n      _this2.ShowAllBacteries = false;\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"CancelMicroResult\", function () {\n      switch (_this2.MicrobiologyScenario) {\n        case \"MAIBNoR\":\n          _this2.ModalNegative = false;\n          _this2.ModalPositive = false;\n          _this2.ModalPositiveCondition = false;\n          _this2.MicrobiologyModalHeader = \"Predefinisani rezultati\";\n          _this2.NegativeResultSelection = \"\";\n          _this2.PositiveResultSelection = \"\";\n          _this2.SelectedBacteries = [];\n          _this2.ShowAllBacteries = false;\n\n          break;\n\n        case \"MAIBNeR\":\n          _this2.SelectedBacteries = [];\n\n          break;\n\n        case \"MAIBPoR\":\n          break;\n\n        case \"MANBNoR\":\n          _this2.ModalNegative = false;\n          _this2.ModalPositive = false;\n          _this2.ModalPositiveCondition = false;\n          _this2.MicrobiologyModalHeader = \"Predefinisani rezultati\";\n          _this2.NegativeResultSelection = \"\";\n          _this2.PositiveResultSelection = \"\";\n          _this2.SelectedBacteries = [];\n          _this2.ShowAllBacteries = false;\n\n          break;\n\n        case \"MANBNeR\":\n          _this2.SelectedBacteries = [];\n\n          break;\n\n        case \"MANBPoR\":\n          _this2.SelectedBacteries = [];\n\n          break;\n\n        default:\n          break;\n      }\n\n      _this2.MicrobiologyResult.DefaultBacteries.forEach(function (element) {\n        element.chosen = false;\n      });\n\n      _this2.MicrobiologyResult.RemainingBacteries.forEach(function (element) {\n        element.chosen = false;\n      });\n\n      _this2.SelectedBacteries = [];\n      _this2.ShowAllBacteries = false;\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"MicroBactery\", function () {\n      console.log(\"Saving main result...\");\n\n      _this2.isLoading = true;\n      _this2.main = false;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + _this2.$store.state.sid, {\n        email: _this2.$store.state.userId,\n        token: _this2.$store.state.token,\n        site: _this2.$store.state.site,\n        rezultati: _this2.rezultati\n      }).then(function (res) {\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this2.$route.params.patient + \"/\" + _this2.$route.params.id + \"?token=\" + _this2.$store.state.token + \"&site=\" + _this2.$store.state.site + \"&date=\" + _this2.$route.query.date, {}).then(function (res) {\n          _this2.uzorci = [];\n\n          res.data.results.forEach(function (element) {\n            if (_this2.$store.state.sid === element.id) {\n              console.log(element.rezultati[0].rezultat[0]);\n            }\n\n            var check = 0;\n            var zaprimljen = 0;\n            var realizovan = 0;\n\n            if (element.verificiran) {\n              var status_uzorka = \"VERIFICIRAN\";\n            } else {\n              var status_uzorka = element.status;\n            }\n\n            element.rezultati.forEach(function (test) {\n              check++;\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                zaprimljen++;\n              }\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                realizovan++;\n              }\n\n              if (check === element.rezultati.length) {\n                if (status_uzorka === \"VERIFICIRAN\") {\n                  _this2.uzorci.push({\n                    sid: element.id,\n                    status: \"VERIFICIRAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (status_uzorka === \"ODOBREN\") {\n                  _this2.uzorci.push({\n                    sid: element.id,\n                    status: \"ODOBREN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (zaprimljen < 1) {\n                  _this2.uzorci.push({\n                    sid: element.id,\n                    status: \"REALIZOVAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (realizovan < 1) {\n                  var stat = \"ZAPRIMLJEN\";\n                  if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                    if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                      stat = \"REALIZOVAN\";\n                    }\n                  }\n                  _this2.uzorci.push({\n                    sid: element.id,\n                    status: stat,\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else {\n                  _this2.uzorci.push({\n                    sid: element.id,\n                    status: \"U OBRADI\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                }\n              }\n            });\n          });\n\n          _this2.uzorci = _this2.uzorci.sort(function (a, b) {\n            return a.sid.localeCompare(b.sid, undefined, {\n              numeric: true,\n              sensitivity: \"base\"\n            });\n          });\n        }).then(function (res) {\n          _this2.main = true;\n          _this2.isLoading = false;\n          __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$emit(\"CloseMicroBactery\");\n        });\n      });\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"CancelMicroBactery\", function () {});\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"PovratakMicroBactery\", function () {\n      _this2.ShowAntibiotics = false;\n      _this2.ShowBacteries = false;\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"SpasiMicroBactery\", function () {\n      if (_this2.TemporaryBacteriesAdd.length) {\n        console.log(\"Dodavanje bakterija...\");\n        var bakterija = {};\n        var antibiogram = {};\n        var antibiotik = {};\n\n        _this2.TemporaryBacteriesAdd.forEach(function (element) {\n          _this2.Antibiograms.forEach(function (antibgr) {\n            if (__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(element.antibiogram._id) === __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(antibgr._id)) {\n              antibiogram = antibgr;\n            }\n          });\n\n          antibiogram.antibiotici.forEach(function (antbtk) {\n            antbtk.disabled = false;\n            antbtk.rezultat = \"\";\n          });\n\n          bakterija.bakterija = true;\n          bakterija._id = element._id;\n          bakterija.naziv = element.naziv;\n          bakterija.opis = element.opis;\n          bakterija.antibiogram = antibiogram;\n\n          console.log(bakterija);\n\n          _this2.SelectedBacteries.push(bakterija);\n          _this2.BacteryTabs.push(bakterija.opis);\n          _this2.rezultati[0].rezultat_m.push(bakterija);\n          _this2.rezultati[0].rezultat = _this2.rezultati[0].rezultat + \"\\n\" + bakterija.opis;\n          bakterija = {};\n          antibiogram = {};\n        });\n      } else {\n        console.log(\"Dodavanje antibiotika...\");\n      }\n\n      if (_this2.TemporaryAntibiotics.length || _this2.TemporaryBacteriesAdd.length) {\n        _this2.TemporaryAntibiotics.forEach(function (element) {\n          _this2.rezultati[0].rezultat_m.forEach(function (selected) {\n            if (selected.opis == _this2.CurrentTab) {\n              selected.antibiogram.antibiotici.push(element);\n            }\n          });\n        });\n\n        _this2.isLoading = true;\n        _this2.main = false;\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + _this2.$store.state.sid, {\n          email: _this2.$store.state.userId,\n          token: _this2.$store.state.token,\n          site: _this2.$store.state.site,\n          rezultati: _this2.rezultati\n        }).then(function (res) {\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this2.$route.params.patient + \"/\" + _this2.$route.params.id + \"?token=\" + _this2.$store.state.token + \"&site=\" + _this2.$store.state.site + \"&date=\" + _this2.$route.query.date, {}).then(function (res) {\n            _this2.uzorci = [];\n\n            res.data.results.forEach(function (element) {\n              if (_this2.$store.state.sid === element.id) {\n                console.log(element.rezultati[0].rezultat[0]);\n              }\n\n              var check = 0;\n              var zaprimljen = 0;\n              var realizovan = 0;\n\n              if (element.verificiran) {\n                var status_uzorka = \"VERIFICIRAN\";\n              } else {\n                var status_uzorka = element.status;\n              }\n\n              element.rezultati.forEach(function (test) {\n                check++;\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                  zaprimljen++;\n                }\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                  realizovan++;\n                }\n\n                if (check === element.rezultati.length) {\n                  if (status_uzorka === \"VERIFICIRAN\") {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"VERIFICIRAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (status_uzorka === \"ODOBREN\") {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"ODOBREN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (zaprimljen < 1) {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"REALIZOVAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (realizovan < 1) {\n                    var stat = \"ZAPRIMLJEN\";\n                    if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                      if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                        stat = \"REALIZOVAN\";\n                      }\n                    }\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: stat,\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"U OBRADI\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  }\n                }\n              });\n            });\n\n            _this2.uzorci = _this2.uzorci.sort(function (a, b) {\n              return a.sid.localeCompare(b.sid, undefined, {\n                numeric: true,\n                sensitivity: \"base\"\n              });\n            });\n          }).then(function (res) {\n            _this2.MicrobiologyScenario = \"MAIBPoR\";\n            _this2.ShowAntibiotics = false;\n            _this2.ShowBacteries = false;\n\n            _this2.main = true;\n            _this2.isLoading = false;\n\n            if (_this2.TemporaryBacteriesAdd.length) {\n              _this2.CurrentTab = _this2.BacteryTabs[_this2.BacteryTabs.length - 1];\n            }\n          });\n        });\n      } else {\n        _this2.MicrobiologyScenario = \"MAIBPoR\";\n        _this2.ShowAntibiotics = false;\n        _this2.ShowBacteries = false;\n      }\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"UpdateMicroBactery\", function (data) {\n      if (!_this2.ShowAntibiotics && !_this2.ShowBacteries && _this2.MicrobiologyScenario === \"MAIBPoR\") {\n        if (_this2.sample.status != \"ODOBREN\" && _this2.sample.status != \"VERIFICIRAN\") {\n          _this2.TemporaryAntibiotics = [];\n          _this2.TemporaryBacteries = [];\n          _this2.TemporaryBacteriesAdd = [];\n          var obj = {};\n\n          _this2.Bacteries.forEach(function (element) {\n            obj.chosen = false;\n            obj.disabled = false;\n            obj._id = element._id;\n            obj.naziv = element.naziv;\n            obj.opis = element.opis;\n            obj.antibiogram = element.antibiogram;\n            obj.__v = element.__v;\n            obj.chosen = element.chosen;\n            _this2.TemporaryBacteries.push(obj);\n            obj = {};\n          });\n\n          _this2.TemporaryBacteries.forEach(function (element) {\n            _this2.SelectedBacteries.forEach(function (selected) {\n              if (selected._id == element._id) {\n                element.chosen = true;\n                element.disabled = true;\n              }\n            });\n          });\n\n          _this2.ShowBacteries = true;\n        }\n      }\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Parametar\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"trash\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"edit\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"comment\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"barcode\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"save\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"check\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"verify\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"undo\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"unlock\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Nalaz\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"pdf\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Sample\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Deleted\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Edited\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"SaveMulti\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Mail\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Error\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Analyser\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Sljedeci\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Prethodni\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Search\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Push\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Reference\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"graph\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"table\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"retest\");\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"tabChanged\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Antibiotik\");\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"MicroResult\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"ResetResultSelection\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"CancelMicroResult\");\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"MicroReset\");\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"AllowClick\");\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"MicroBactery\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"CancelMicroBactery\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"PovratakMicroBactery\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"SpasiMicroBactery\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"UpdateMicroBactery\");\n  },\n  destroyed: function destroyed() {},\n  created: function created() {\n    this.Created();\n\n    this.Previous.pid = Number(this.$route.params.id) - 1;\n    this.Next.pid = Number(this.$route.params.id) + 1;\n    this.query_date = this.$route.query.date.substring(8, 10) + \".\" + this.$route.query.date.substring(5, 7) + \".\" + this.$route.query.date.substring(0, 4);\n\n    this.Datum.today = new Date(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date().setDate(new Date().getDate()))).substring(1, 11) + \"T00:00:00\");\n\n    this.today_date = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date().setDate(new Date().getDate()))).substring(1, 11).substring(8, 10) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date().setDate(new Date().getDate()))).substring(1, 11).substring(5, 7) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date().setDate(new Date().getDate()))).substring(1, 11).substring(0, 4);\n\n    this.Datum.query = new Date(this.$route.query.date.substring(0, 10) + \"T00:00:00\");\n\n    this.Datum.next = new Date(new Date(this.$route.query.date.substring(0, 10) + \"T00:00:00\").setDate(this.Datum.query.getDate() + 1));\n\n    this.Datum.previous = new Date(new Date(this.$route.query.date.substring(0, 10) + \"T00:00:00\").setDate(this.Datum.query.getDate() - 1));\n\n    if (new Date(this.Datum.today) > new Date(this.Datum.query)) {\n      this.pagination = false;\n    } else if (new Date(this.Datum.today) < new Date(this.Datum.query)) {\n      this.pagination = false;\n    } else {\n      this.pagination = true;\n    }\n\n    this.interpretacije = this.interpretacije.sort(function (a, b) {\n      return a.localeCompare(b, undefined, {\n        numeric: true,\n        sensitivity: \"base\"\n      });\n    });\n  },\n\n\n  methods: {\n    RetestSave: function RetestSave(data) {\n      var _this3 = this;\n\n      this.isLoading = true;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"rezultati/odobravanje/retest/save/\", {\n        sid: this.$store.state.sid,\n        rezultati: this.rezultati,\n        site: this.$store.state.site,\n        token: this.$store.state.token\n      }).then(function (res) {\n        if (res.data.success) {\n          _this3.isLoading = false;\n          _this3.save_retest = false;\n        } else {}\n      });\n    },\n    ExclamationMulti: function ExclamationMulti(test) {\n      this.warning = { analiza: \"\", text: \"\", napomena: \"\", control: \"\" };\n      var rezultat = test.rezultat.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n      var m_interp = {};\n      var m_opis = \"\";\n\n      this.analitiprikaz.forEach(function (element) {\n        element.labassay.multiparam.forEach(function (param) {\n          if (__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(param._id) == __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(test.analit)) {\n\n            m_interp = param.interpretacija;\n            m_opis = param.opis;\n          }\n        });\n      });\n\n      switch (this.Interpretacija(test.opis, rezultat, test.jedinica, test.refd, test.refg, this.$store.state.site, test.interp, \"\", this.spec)[2]) {\n        case \"L\":\n          this.warning = {\n            analiza: m_opis,\n            text: m_interp.snizeno.text.trim(),\n            napomena: m_interp.napomena.trim(),\n            control: \"Sniženo\"\n          };\n          break;\n\n        case \"H\":\n          switch (test.interp) {\n            case \"neg\":\n              this.warning = {\n                analiza: m_opis,\n                text: m_interp.poviseno.text.trim(),\n                napomena: m_interp.napomena.trim(),\n                control: \"Pozitivan\"\n              };\n              break;\n\n            default:\n              this.warning = {\n                analiza: m_opis,\n                text: m_interp.poviseno.text.trim(),\n                napomena: m_interp.napomena.trim(),\n                control: \"Povišeno\"\n              };\n              break;\n          }\n\n          break;\n\n        default:\n          this.warning = { analiza: \"\", text: \"\", napomena: \"\", control: \"\" };\n          break;\n      }\n\n      if (this.warning.text && this.warning.text != \"\") {}\n    },\n    Exclamation: function Exclamation(test) {\n      this.warning = { analiza: \"\", text: \"\", napomena: \"\", control: \"\" };\n      var rezultat = test.rezultat.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n      switch (this.Interpretacija(test.opis, rezultat, test.jedinica, test.dRef, test.gRef, this.$store.state.site, test.interp, test.extend, this.spec)[2]) {\n        case \"L\":\n          this.warning = {\n            analiza: test.analit,\n            text: test.interpretacija.snizeno.text.trim(),\n            napomena: test.interpretacija.napomena.trim(),\n            control: \"Sniženo\"\n          };\n          break;\n\n        case \"H\":\n          switch (test.interp) {\n            case \"neg\":\n              this.warning = {\n                analiza: test.analit,\n                text: test.interpretacija.poviseno.text.trim(),\n                napomena: test.interpretacija.napomena.trim(),\n                control: \"Pozitivan\"\n              };\n              break;\n\n            default:\n              this.warning = {\n                analiza: test.analit,\n                text: test.interpretacija.poviseno.text.trim(),\n                napomena: test.interpretacija.napomena.trim(),\n                control: \"Povišeno\"\n              };\n              break;\n          }\n\n          break;\n\n        default:\n          this.warning = { analiza: \"\", text: \"\", napomena: \"\", control: \"\" };\n          break;\n      }\n\n      if (this.warning.text && this.warning.text != \"\") {\n        this.$refs.staticModalExclamation.open();\n      }\n    },\n    LabAssayEval: function LabAssayEval(e, test) {\n      var _this4 = this;\n\n      this.analiza_eval = test;\n      e.preventDefault();\n      this.spinner = false;\n      this.showLineChart = false;\n      var palette = __WEBPACK_IMPORTED_MODULE_5_vuex_store__[\"a\" /* default */].getters.palette;\n      this.table_header = test.ime + \" | \" + test.analit;\n      if (!test.multidata) {\n        this.isLoading = true;\n        this.Procjena = [];\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"/labassay/evaluation/single\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&range=\" + \"14\", {}).then(function (response) {\n          if (response.data.Results.length) {\n            var obj = {};\n            var count = 0;\n\n            response.data.Results.forEach(function (element) {\n              count++;\n              element.rezultati.forEach(function (rez) {\n                if (rez.labassay === test.labassay_id && element.verificiran && rez.rezultat[rez.rezultat.length - 1].rezultat_f.trim() != \"\") {\n                  obj.rezultat = rez.rezultat[rez.rezultat.length - 1].rezultat_f;\n                  obj.jedinica = rez.rezultat[rez.rezultat.length - 1].jedinice_f;\n                  obj.analit = \"\";\n                  obj.interp = rez.interp;\n                  obj.extend = rez.extend;\n                  obj.refd = rez.refd;\n                  obj.refg = rez.refg;\n                  obj.sid = element.id;\n                  obj.updated_at = rez.rezultat[rez.rezultat.length - 1].updated_at;\n\n                  var datum = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(rez.rezultat[rez.rezultat.length - 1].updated_at).slice(9, 11) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(rez.rezultat[rez.rezultat.length - 1].updated_at).slice(6, 8) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(rez.rezultat[rez.rezultat.length - 1].updated_at).slice(1, 5);\n                  var time = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date(rez.rezultat[rez.rezultat.length - 1].updated_at).getTime() - new Date(rez.rezultat[rez.rezultat.length - 1].updated_at).getTimezoneOffset() * 60000).toISOString()).substring(12, 17);\n\n                  obj.datum = datum;\n                  obj.vrijeme = time;\n                  obj.kontrola = _this4.Interpretacija(\"\", obj.rezultat, obj.jedinica, obj.refd, obj.refg, _this4.$store.state.site, obj.interp, obj.extend, _this4.spec)[5];\n\n                  _this4.Procjena.push(obj);\n                  obj = {};\n                }\n              });\n\n              if (count == response.data.Results.length) {\n                _this4.Procjena.sort(function (a, b) {\n                  return Date.parse(a.updated_at) == Date.parse(b.updated_at) ? 0 : +(Date.parse(a.updated_at) < Date.parse(b.updated_at)) || -1;\n                });\n\n                var data = [];\n\n                if (_this4.Procjena.length) {\n                  _this4.optionsLineChart = {\n                    responsive: true,\n                    maintainAspectRatio: false,\n                    title: {\n                      display: true,\n                      text: \"\"\n                    },\n                    scales: {\n                      xAxes: [{\n                        display: true,\n                        gridLines: {\n                          display: true,\n                          color: \"#eee\"\n                        }\n                      }],\n                      yAxes: [{\n                        display: true,\n                        gridLines: {\n                          display: true,\n                          color: \"#eee\"\n                        }\n                      }]\n                    }\n                  };\n\n                  var labels = [];\n                  var kontrola = [];\n                  var temp = \"\";\n\n                  _this4.Procjena.forEach(function (element) {\n                    if (!isNaN(element.rezultat.trim())) {\n                      switch (element.kontrola) {\n                        case \"Red\":\n                          kontrola.push(palette.danger);\n                          break;\n                        case \"Green\":\n                          kontrola.push(palette.primary);\n                          break;\n                        case \"Yellow\":\n                          kontrola.push(palette.warning);\n                          break;\n\n                        default:\n                          kontrola.push(palette.info);\n                          break;\n                      }\n\n                      labels.push(element.datum);\n                      data.push(element.rezultat);\n                    }\n                  });\n\n                  _this4.dataLineChart = {\n                    labels: labels,\n                    datasets: [{\n                      label: test.ime + \" | \" + test.analit,\n                      backgroundColor: __WEBPACK_IMPORTED_MODULE_6_services_utils__[\"a\" /* default */].hex2rgb(palette.info, 0.5).css,\n                      pointBorderColor: kontrola,\n                      pointBackgroundColor: kontrola,\n                      borderColor: palette.transparent,\n                      data: data\n                    }]\n                  };\n\n                  if (data.length) {\n                    _this4.showLineChart = true;\n                  }\n\n                  _this4.$refs.staticModalLabAssayEvalSingle.open();\n                } else {}\n              }\n            });\n          } else {}\n          _this4.isLoading = false;\n        });\n      } else {\n\n        this.multiparam_izbor = test.multiparam[0].opis;\n        this.multiparam_id = test.multiparam[0]._id;\n\n        this.multiparams = [];\n\n        this.multiparam_izbornik = [];\n\n        test.multiparam.forEach(function (element) {\n          _this4.multiparam_izbornik.push(element.opis);\n          _this4.multiparams.push(element);\n        });\n\n        this.isLoading = true;\n        this.Procjena = [];\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"/labassay/evaluation/multi\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&labassay=\" + test.labassay_id + \"&range=\" + \"14\", {}).then(function (response) {\n          if (response.data.Multi.length) {\n            _this4.Response = response.data;\n\n            var obj = {};\n            var count = 0;\n\n            response.data.Multi.forEach(function (element) {\n              count++;\n              element.multi.forEach(function (param) {\n                if (_this4.multiparam_id == param.labassay && param.rezultat[0].rezultat_f.trim() != \"\") {\n                  obj.rezultat = param.rezultat[0].rezultat_f;\n                  obj.jedinica = param.rezultat[0].jedinice_f;\n                  obj.analit = \"Nema podataka\";\n                  obj.interp = param.interp;\n                  obj.extend = param.extend;\n                  obj.refd = param.refd;\n                  obj.refg = param.refg;\n                  obj.sid = \"Nema podataka\";\n                  obj.updated_at = new Date(param.rezultat[0].updated_at);\n\n                  var datum = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(9, 11) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(6, 8) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(1, 5);\n                  var time = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date(param.rezultat[0].updated_at).getTime() - new Date(param.rezultat[0].updated_at).getTimezoneOffset() * 60000).toISOString()).substring(12, 17);\n                  obj.datum = datum;\n                  obj.vrijeme = time;\n                  obj.kontrola = _this4.Interpretacija(\"\", obj.rezultat, obj.jedinica, obj.refd, obj.refg, _this4.$store.state.site, obj.interp, obj.extend, _this4.spec)[5];\n\n                  _this4.Procjena.push(obj);\n                  obj = {};\n                }\n              });\n\n              if (count == response.data.Multi.length) {\n                _this4.Procjena.sort(function (a, b) {\n                  return Date.parse(a.updated_at) == Date.parse(b.updated_at) ? 0 : +(Date.parse(a.updated_at) < Date.parse(b.updated_at)) || -1;\n                });\n\n                var data = [];\n\n                if (_this4.Procjena.length) {\n                  _this4.optionsLineChart = {\n                    responsive: true,\n                    maintainAspectRatio: false,\n                    title: {\n                      display: true,\n                      text: \"\"\n                    },\n                    scales: {\n                      xAxes: [{\n                        display: true,\n                        gridLines: {\n                          display: true,\n                          color: \"#eee\"\n                        }\n                      }],\n                      yAxes: [{\n                        display: true,\n                        gridLines: {\n                          display: true,\n                          color: \"#eee\"\n                        }\n                      }]\n                    }\n                  };\n\n                  var labels = [];\n                  var kontrola = [];\n                  var temp = \"\";\n\n                  _this4.Procjena.forEach(function (element) {\n                    if (!isNaN(element.rezultat.trim())) {\n                      switch (element.kontrola) {\n                        case \"Red\":\n                          kontrola.push(palette.danger);\n                          break;\n                        case \"Green\":\n                          kontrola.push(palette.primary);\n                          break;\n                        case \"Yellow\":\n                          kontrola.push(palette.warning);\n                          break;\n\n                        default:\n                          kontrola.push(palette.info);\n                          break;\n                      }\n\n                      labels.push(element.datum);\n                      data.push(element.rezultat);\n                    }\n                  });\n\n                  _this4.dataLineChart = {\n                    labels: labels,\n                    datasets: [{\n                      label: test.ime + \" | \" + test.analit,\n                      backgroundColor: __WEBPACK_IMPORTED_MODULE_6_services_utils__[\"a\" /* default */].hex2rgb(palette.info, 0.5).css,\n                      pointBorderColor: kontrola,\n                      pointBackgroundColor: kontrola,\n                      borderColor: palette.transparent,\n                      data: data\n                    }]\n                  };\n\n                  if (data.length) {\n                    _this4.showLineChart = true;\n                  }\n\n                  _this4.$refs.staticModalLabAssayEvalMulti.open();\n                } else {}\n              }\n            });\n          } else {}\n          _this4.isLoading = false;\n        });\n      }\n    },\n    Evaluation: function Evaluation(test) {\n      var _this5 = this;\n\n      this.analiza_eval = test;\n      this.spinner = false;\n      if (true) {\n        this.showLineChart = false;\n        var palette = __WEBPACK_IMPORTED_MODULE_5_vuex_store__[\"a\" /* default */].getters.palette;\n        this.table_header = test.ime + \" | \" + test.analit;\n\n        if (test.multidata) {\n          this.multiparam_izbor = test.multiparam[0].opis;\n          this.multiparam_id = test.multiparam[0]._id;\n\n          this.multiparams = [];\n\n          this.multiparam_izbornik = [];\n\n          test.multiparam.forEach(function (element) {\n            _this5.multiparam_izbornik.push(element.opis);\n            _this5.multiparams.push(element);\n          });\n\n          this.isLoading = true;\n          this.Procjena = [];\n\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"/patient/evaluation/multi\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&patient=\" + this.pacijent + \"&labassay=\" + test.labassay_id, {}).then(function (response) {\n            if (response.data.Multi.length) {\n              _this5.Response = response.data;\n\n              var obj = {};\n              var count = 0;\n\n              response.data.Multi.forEach(function (element) {\n                count++;\n                element.multi.forEach(function (param) {\n                  if (_this5.multiparam_id == param.labassay && param.rezultat[0].rezultat_f.trim() != \"\") {\n                    obj.rezultat = param.rezultat[0].rezultat_f;\n                    obj.jedinica = param.rezultat[0].jedinice_f;\n                    obj.analit = \"Nema podataka\";\n                    obj.interp = param.interp;\n                    obj.extend = param.extend;\n                    obj.refd = param.refd;\n                    obj.refg = param.refg;\n                    obj.sid = \"Nema podataka\";\n                    obj.updated_at = new Date(param.rezultat[0].updated_at);\n\n                    var datum = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(9, 11) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(6, 8) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(1, 5);\n                    var time = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date(param.rezultat[0].updated_at).getTime() - new Date(param.rezultat[0].updated_at).getTimezoneOffset() * 60000).toISOString()).substring(12, 17);\n                    obj.datum = datum;\n                    obj.vrijeme = time;\n                    obj.kontrola = _this5.Interpretacija(\"\", obj.rezultat, obj.jedinica, obj.refd, obj.refg, _this5.$store.state.site, obj.interp, obj.extend, _this5.spec)[5];\n\n                    _this5.Procjena.push(obj);\n                    obj = {};\n                  }\n                });\n\n                if (count == response.data.Multi.length) {\n                  _this5.Procjena.sort(function (a, b) {\n                    return Date.parse(a.updated_at) == Date.parse(b.updated_at) ? 0 : +(Date.parse(a.updated_at) < Date.parse(b.updated_at)) || -1;\n                  });\n\n                  var data = [];\n\n                  if (_this5.Procjena.length) {\n                    _this5.optionsLineChart = {\n                      responsive: true,\n                      maintainAspectRatio: false,\n                      title: {\n                        display: true,\n                        text: \"\"\n                      },\n                      scales: {\n                        xAxes: [{\n                          display: true,\n                          gridLines: {\n                            display: true,\n                            color: \"#eee\"\n                          }\n                        }],\n                        yAxes: [{\n                          display: true,\n                          gridLines: {\n                            display: true,\n                            color: \"#eee\"\n                          }\n                        }]\n                      }\n                    };\n\n                    var labels = [];\n                    var kontrola = [];\n                    var temp = \"\";\n\n                    _this5.Procjena.forEach(function (element) {\n                      if (!isNaN(element.rezultat.trim())) {\n                        switch (element.kontrola) {\n                          case \"Red\":\n                            kontrola.push(palette.danger);\n                            break;\n                          case \"Green\":\n                            kontrola.push(palette.primary);\n                            break;\n                          case \"Yellow\":\n                            kontrola.push(palette.warning);\n                            break;\n\n                          default:\n                            kontrola.push(palette.info);\n                            break;\n                        }\n\n                        labels.push(element.datum);\n                        data.push(element.rezultat);\n                      }\n                    });\n\n                    _this5.dataLineChart = {\n                      labels: labels,\n                      datasets: [{\n                        label: test.ime + \" | \" + test.analit,\n                        backgroundColor: __WEBPACK_IMPORTED_MODULE_6_services_utils__[\"a\" /* default */].hex2rgb(palette.info, 0.5).css,\n                        pointBorderColor: kontrola,\n                        pointBackgroundColor: kontrola,\n                        borderColor: palette.transparent,\n                        data: data\n                      }]\n                    };\n\n                    if (data.length) {\n                      _this5.showLineChart = true;\n                    }\n\n                    _this5.$refs.staticModalEvaluationMulti.open();\n                  } else {}\n                }\n              });\n            } else {}\n            _this5.isLoading = false;\n          });\n        } else {\n          this.isLoading = true;\n          this.Procjena = [];\n\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"/patient/evaluation/single\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&patient=\" + this.pacijent, {}).then(function (response) {\n            if (response.data.Results.length) {\n              var obj = {};\n              var count = 0;\n\n              response.data.Results.forEach(function (element) {\n                count++;\n                element.rezultati.forEach(function (rez) {\n                  if (rez.labassay === test.labassay_id && element.verificiran && rez.rezultat[rez.rezultat.length - 1].rezultat_f.trim() != \"\") {\n                    obj.rezultat = rez.rezultat[rez.rezultat.length - 1].rezultat_f;\n                    obj.jedinica = rez.rezultat[rez.rezultat.length - 1].jedinice_f;\n                    obj.analit = \"\";\n                    obj.interp = rez.interp;\n                    obj.extend = rez.extend;\n                    obj.refd = rez.refd;\n                    obj.refg = rez.refg;\n                    obj.sid = element.id;\n                    obj.updated_at = rez.rezultat[rez.rezultat.length - 1].updated_at;\n\n                    var datum = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(rez.rezultat[rez.rezultat.length - 1].updated_at).slice(9, 11) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(rez.rezultat[rez.rezultat.length - 1].updated_at).slice(6, 8) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(rez.rezultat[rez.rezultat.length - 1].updated_at).slice(1, 5);\n                    var time = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date(rez.rezultat[rez.rezultat.length - 1].updated_at).getTime() - new Date(rez.rezultat[rez.rezultat.length - 1].updated_at).getTimezoneOffset() * 60000).toISOString()).substring(12, 17);\n\n                    obj.datum = datum;\n                    obj.vrijeme = time;\n                    obj.kontrola = _this5.Interpretacija(\"\", obj.rezultat, obj.jedinica, obj.refd, obj.refg, _this5.$store.state.site, obj.interp, obj.extend, _this5.spec)[5];\n\n                    _this5.Procjena.push(obj);\n                    obj = {};\n                  }\n                });\n\n                if (count == response.data.Results.length) {\n                  _this5.Procjena.sort(function (a, b) {\n                    return Date.parse(a.updated_at) == Date.parse(b.updated_at) ? 0 : +(Date.parse(a.updated_at) < Date.parse(b.updated_at)) || -1;\n                  });\n\n                  var data = [];\n\n                  if (_this5.Procjena.length) {\n                    _this5.optionsLineChart = {\n                      responsive: true,\n                      maintainAspectRatio: false,\n                      title: {\n                        display: true,\n                        text: \"\"\n                      },\n                      scales: {\n                        xAxes: [{\n                          display: true,\n                          gridLines: {\n                            display: true,\n                            color: \"#eee\"\n                          }\n                        }],\n                        yAxes: [{\n                          display: true,\n                          gridLines: {\n                            display: true,\n                            color: \"#eee\"\n                          }\n                        }]\n                      }\n                    };\n\n                    var labels = [];\n                    var kontrola = [];\n                    var temp = \"\";\n\n                    _this5.Procjena.forEach(function (element) {\n                      if (!isNaN(element.rezultat.trim())) {\n                        switch (element.kontrola) {\n                          case \"Red\":\n                            kontrola.push(palette.danger);\n                            break;\n                          case \"Green\":\n                            kontrola.push(palette.primary);\n                            break;\n                          case \"Yellow\":\n                            kontrola.push(palette.warning);\n                            break;\n\n                          default:\n                            kontrola.push(palette.info);\n                            break;\n                        }\n\n                        labels.push(element.datum);\n                        data.push(element.rezultat);\n                      }\n                    });\n\n                    _this5.dataLineChart = {\n                      labels: labels,\n                      datasets: [{\n                        label: test.ime + \" | \" + test.analit,\n                        backgroundColor: __WEBPACK_IMPORTED_MODULE_6_services_utils__[\"a\" /* default */].hex2rgb(palette.info, 0.5).css,\n                        pointBorderColor: kontrola,\n                        pointBackgroundColor: kontrola,\n                        borderColor: palette.transparent,\n                        data: data\n                      }]\n                    };\n\n                    if (data.length) {\n                      _this5.showLineChart = true;\n                    }\n\n                    _this5.$refs.staticModalEvaluationSingle.open();\n                  } else {}\n                }\n              });\n            } else {}\n            _this5.isLoading = false;\n          });\n        }\n      }\n    },\n    filteredAntibiotics: function filteredAntibiotics(column, columns) {\n      var _this6 = this;\n\n      return this.Antibiotics.filter(function (item) {\n        return _this6.Antibiotics.indexOf(item) % columns === column - 1;\n      });\n    },\n    filteredBacteries: function filteredBacteries(column, columns) {\n      var _this7 = this;\n\n      return this.TemporaryBacteries.filter(function (item) {\n        return _this7.TemporaryBacteries.indexOf(item) % columns === column - 1;\n      });\n    },\n    AddAntibiotics: function AddAntibiotics(data) {\n      var obj = {};\n\n      if (!data.chosen) {\n        obj._id = data._id, obj.rbr_a = data.rbr_a, obj.naziv = data.naziv, obj.opis = data.opis, obj.rezultat = \"\";\n        this.TemporaryAntibiotics.push(obj);\n      } else {\n        for (var i = 0; i < this.TemporaryAntibiotics.length; i++) {\n          if (this.TemporaryAntibiotics[i]._id === data._id) {\n            this.TemporaryAntibiotics.splice(i, 1);\n            break;\n          }\n        }\n      }\n    },\n    AddBacteries: function AddBacteries(data) {\n      if (!data.chosen) {\n        this.TemporaryBacteriesAdd.push(data);\n      } else {\n        for (var i = 0; i < this.TemporaryBacteriesAdd.length; i++) {\n          if (this.TemporaryBacteriesAdd[i]._id === data._id) {\n            this.TemporaryBacteriesAdd.splice(i, 1);\n            break;\n          }\n        }\n      }\n    },\n    OpenMicroSelect: function OpenMicroSelect($event, test) {\n      var _this8 = this;\n\n      console.log(\"Select Modal opening...\");\n\n      this.CurrentTab = \"\";\n      this.testovi = [];\n      this.rezultati = [];\n      this.analitiprikaz = [];\n      this.calculated = false;\n      this.show_table = false;\n      this.main = false;\n\n      var topcije = null;\n      topcije = __WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__[\"a\" /* default */].rez;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/showsingle/\" + this.$store.state.sid + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site, {}).then(function (res) {\n        console.log(res.data);\n        var test = {};\n\n        if (res.data.data.length) {\n          res.data.data.sort(function (a, b) {\n            return a.testovi.labassay.grupa + a.testovi.labassay.grouporder == b.testovi.labassay.grupa + b.testovi.labassay.grouporder ? 0 : +(a.testovi.labassay.grupa + a.testovi.labassay.grouporder > b.testovi.labassay.grupa + b.testovi.labassay.grouporder) || -1;\n          });\n\n          _this8.testovi = res.data.data;\n          _this8.analitiprikaz = res.data.multidata;\n\n          res.data.data.forEach(function (element) {\n            test = {};\n            test.realizovan = false;\n\n            test.ime = element.testovi.labassay.naziv;\n            test.test = element.testovi.labassay.sifra;\n            test.analit = element.testovi.labassay.analit;\n            test.IDE = element.testovi._id;\n            test.labassay_id = element.testovi.labassay._id;\n\n            test.multi_count = 0;\n            test.multi_rezultati = [];\n\n            res.data.multidata.forEach(function (multi) {\n              if (multi.labassay._id === element.testovi.labassay._id) {\n                test.multi_rezultati = multi.rezultat;\n                test.multi_count = multi.rezultat[0].rezultat.length;\n              }\n            });\n\n            test.kategorija = element.testovi.labassay.kategorija;\n            test.analyser = element.testovi.labassay.analyser;\n            test.multiparam = element.testovi.labassay.multiparam;\n            test.vise = element.testovi.rezultat.length;\n            test.calculated = element.testovi.labassay.calculated;\n            test.manual = element.testovi.labassay.manual;\n\n            test.select_options = eval(\"topcije.\" + element.testovi.interp.replace(\"%\", \"_\").replace(\"/\", \"_\").replace(\" \", \"_\").replace(/-/g, \"_\").replace(\"#\", \"_\").replace(/^\\d+/, \"\"));\n\n            element.testovi.rezultat.forEach(function (rezultat) {\n              test.sekcija = rezultat.anaassay.sekcija;\n              test.rezultat = rezultat.rezultat_f;\n              test.result = rezultat;\n              test.anaassay = rezultat.anaassay;\n\n              if (rezultat.rezultat_f != \"\") {\n                test.realizovan = true;\n              }\n\n              test.unit = rezultat.jedinice_f;\n\n              if (res.data.verificiran || res.data.status === \"ODOBREN\") {\n                test.odobren = \"ODOBREN\";\n                test.edit = false;\n              } else {\n                test.odobren != \"ODOBREN\";\n                test.edit = true;\n              }\n\n              test.jedinica = rezultat.jedinice_f;\n              test.id = rezultat._id;\n              test.multidata = element.testovi.labassay.multi;\n              test.rezultat_m = rezultat.rezultat_m;\n              test.bakterije = element.testovi.labassay.bakterije;\n              test.neg_description = element.testovi.labassay.neg_description;\n              test.pos_description = element.testovi.labassay.pos_description;\n              test.refSet = element.testovi.grupa;\n              test.dRef = element.testovi.refd;\n              test.gRef = element.testovi.refg;\n              test.interp = element.testovi.interp;\n              test.extend = element.testovi.extend;\n              test.retest = element.testovi.retest;\n              test.interpretacija = element.testovi.labassay.interpretacija;\n            });\n\n            if (test.select_options != undefined && !test.select_options.includes(test.rezultat)) {\n              test.select_options.unshift(test.rezultat);\n            }\n            _this8.rezultati.push(test);\n          });\n\n          if (_this8.MicrobiologySample && _this8.AllowGetSample) {\n            var bakterioloski = false;\n            var negativan = false;\n            var pozitivan = false;\n            var bakterijed = [];\n            var bakterijei = [];\n            var neg_rezultati = [];\n            var poz_rezultati = [];\n\n            _this8.CurrentTest = _this8.rezultati[0].analit;\n\n            neg_rezultati = [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this8.rezultati[0].neg_description));\n            poz_rezultati = [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this8.rezultati[0].pos_description));\n\n            if (_this8.rezultati[0].bakterije.length) {\n              bakterioloski = true;\n\n              var counter = 0;\n              var ima = false;\n\n              _this8.Bacteries.forEach(function (element) {\n                element.chosen = false;\n                counter = 0;\n                ima = false;\n                _this8.rezultati[0].bakterije.forEach(function (bakt) {\n                  counter++;\n                  if (element._id == bakt) {\n                    ima = true;\n                  }\n\n                  if (counter === _this8.rezultati[0].bakterije.length && !ima) {\n                    bakterijed.push(element);\n                  }\n\n                  if (counter === _this8.rezultati[0].bakterije.length && ima) {\n                    bakterijei.push(element);\n                  }\n                });\n              });\n\n              switch (_this8.rezultati[0].rezultat_m.length) {\n                case 0:\n                  _this8.MicrobiologyScenario = \"MAIBNoR\";\n                  _this8.SelectedBacteries = [];\n                  break;\n                case 1:\n                  _this8.MicrobiologyScenario = \"MAIBNeR\";\n                  _this8.SelectedBacteries = [];\n\n                  negativan = true;\n\n                  if (!neg_rezultati.includes(_this8.rezultati[0].rezultat.trim())) {\n                    neg_rezultati.unshift(_this8.rezultati[0].rezultat.trim());\n                  }\n\n                  break;\n\n                default:\n                  _this8.MicrobiologyScenario = \"MAIBPoR\";\n                  _this8.SelectedBacteries = [];\n                  _this8.BacteryTabs = [];\n\n                  _this8.rezultati[0].rezultat_m.forEach(function (element) {\n                    if (element.bakterija) {\n                      _this8.SelectedBacteries.push(element);\n                      _this8.BacteryTabs.push(element.opis);\n                    }\n                  });\n\n                  console.log(\"Izabrane bakterije:\");\n                  console.log(_this8.SelectedBacteries);\n\n                  var maxVal = _this8.SelectedBacteries.reduce(function (max, val) {\n                    return max.antibiogram.antibiotici.length > val.antibiogram.antibiotici.length ? max : val;\n                  });\n\n                  if (_this8.CurrentTab == \"\") {}\n                  _this8.CurrentTab = _this8.SelectedBacteries[0].opis;\n\n                  bakterijed.forEach(function (element) {\n                    _this8.SelectedBacteries.forEach(function (bact) {\n                      if (element._id == bact._id) {\n                        element.chosen = true;\n                      }\n                    });\n                  });\n\n                  bakterijei.forEach(function (element) {\n                    _this8.SelectedBacteries.forEach(function (bact) {\n                      if (element._id == bact._id) {\n                        element.chosen = true;\n                      }\n                    });\n                  });\n\n                  pozitivan = true;\n                  if (!poz_rezultati.includes(_this8.rezultati[0].rezultat.trim())) {\n                    poz_rezultati.unshift(_this8.rezultati[0].rezultat.trim());\n                  }\n\n                  break;\n              }\n            } else {\n              bakterioloski = false;\n              _this8.SelectedBacteries = [];\n\n              switch (_this8.rezultati[0].rezultat_m.length) {\n                case 0:\n                  _this8.MicrobiologyScenario = \"MANBNoR\";\n                  neg_rezultati = _this8.rezultati[0].neg_description;\n                  poz_rezultati = _this8.rezultati[0].pos_description;\n\n                  break;\n\n                case 1:\n                  if (_this8.rezultati[0].rezultat_m[0].negativan === true) {\n                    _this8.MicrobiologyScenario = \"MANBNeR\";\n\n                    negativan = true;\n\n                    if (!neg_rezultati.includes(_this8.rezultati[0].rezultat.trim())) {\n                      neg_rezultati.unshift(_this8.rezultati[0].rezultat.trim());\n                    }\n                  } else {\n                    _this8.MicrobiologyScenario = \"MANBPoR\";\n\n                    pozitivan = true;\n\n                    if (!poz_rezultati.includes(_this8.rezultati[0].rezultat.trim())) {\n                      poz_rezultati.unshift(_this8.rezultati[0].rezultat.trim());\n                    }\n                  }\n\n                  break;\n\n                default:\n                  _this8.MicrobiologyScenario = \"Unknown\";\n\n                  break;\n              }\n            }\n\n            _this8.MicrobiologyResult = {\n              negative: negativan,\n              positive: pozitivan,\n              BUG: bakterioloski,\n              F_RESULT: _this8.rezultati[0].rezultat,\n              M_RESULT: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this8.rezultati[0].rezultat_m)),\n              DefaultBacteries: [].concat(bakterijei),\n              RemainingBacteries: [].concat(bakterijed),\n              NegativeDescriptions: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(neg_rezultati)),\n              PositiveDescriptions: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(poz_rezultati))\n            };\n          } else {\n            _this8.MicrobiologyScenario = \"Unknown\";\n\n            _this8.MicrobiologyResult = {\n              negative: null,\n              positive: null,\n              BUG: null,\n              F_RESULT: \"\",\n              M_RESULT: [],\n              DefaultBacteries: [],\n              RemainingBacteries: [],\n              NegativeDescriptions: [],\n              PositiveDescriptions: []\n            };\n          }\n\n          _this8.rezultati.forEach(function (element) {\n            if (element.calculated) {\n              _this8.calculated = true;\n            }\n          });\n        }\n      }).then(function () {\n        _this8.ShowAntibiotics = false;\n        _this8.ShowBacteries = false;\n        _this8.show_table = true;\n        _this8.main = true;\n        _this8.$refs.staticModalMicroBacterySelect.open();\n      });\n    },\n    OpenMicro: function OpenMicro($event, test) {\n      var _this9 = this;\n\n      console.log(\"Result Modal opening...\");\n      this.CurrentTab = \"\";\n      this.testovi = [];\n      this.rezultati = [];\n      this.analitiprikaz = [];\n      this.calculated = false;\n      this.show_table = false;\n      this.main = false;\n\n      var topcije = null;\n      topcije = __WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__[\"a\" /* default */].rez;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/showsingle/\" + this.$store.state.sid + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site, {}).then(function (res) {\n        console.log(res.data);\n        var test = {};\n\n        if (res.data.data.length) {\n          res.data.data.sort(function (a, b) {\n            return a.testovi.labassay.grupa + a.testovi.labassay.grouporder == b.testovi.labassay.grupa + b.testovi.labassay.grouporder ? 0 : +(a.testovi.labassay.grupa + a.testovi.labassay.grouporder > b.testovi.labassay.grupa + b.testovi.labassay.grouporder) || -1;\n          });\n\n          _this9.testovi = res.data.data;\n          _this9.analitiprikaz = res.data.multidata;\n\n          res.data.data.forEach(function (element) {\n            test = {};\n            test.realizovan = false;\n\n            test.ime = element.testovi.labassay.naziv;\n            test.test = element.testovi.labassay.sifra;\n            test.analit = element.testovi.labassay.analit;\n            test.IDE = element.testovi._id;\n            test.labassay_id = element.testovi.labassay._id;\n\n            test.multi_count = 0;\n            test.multi_rezultati = [];\n\n            res.data.multidata.forEach(function (multi) {\n              if (multi.labassay._id === element.testovi.labassay._id) {\n                test.multi_rezultati = multi.rezultat;\n                test.multi_count = multi.rezultat[0].rezultat.length;\n              }\n            });\n\n            test.kategorija = element.testovi.labassay.kategorija;\n            test.analyser = element.testovi.labassay.analyser;\n            test.multiparam = element.testovi.labassay.multiparam;\n            test.vise = element.testovi.rezultat.length;\n            test.calculated = element.testovi.labassay.calculated;\n            test.manual = element.testovi.labassay.manual;\n\n            test.select_options = eval(\"topcije.\" + element.testovi.interp.replace(\"%\", \"_\").replace(\"/\", \"_\").replace(\" \", \"_\").replace(/-/g, \"_\").replace(\"#\", \"_\").replace(/^\\d+/, \"\"));\n\n            element.testovi.rezultat.forEach(function (rezultat) {\n              test.sekcija = rezultat.anaassay.sekcija;\n              test.rezultat = rezultat.rezultat_f;\n              test.result = rezultat;\n              test.anaassay = rezultat.anaassay;\n\n              if (rezultat.rezultat_f != \"\") {\n                test.realizovan = true;\n              }\n\n              test.unit = rezultat.jedinice_f;\n\n              if (res.data.verificiran || res.data.status === \"ODOBREN\") {\n                test.odobren = \"ODOBREN\";\n                test.edit = false;\n              } else {\n                test.odobren != \"ODOBREN\";\n                test.edit = true;\n              }\n\n              test.jedinica = rezultat.jedinice_f;\n              test.id = rezultat._id;\n              test.multidata = element.testovi.labassay.multi;\n              test.rezultat_m = rezultat.rezultat_m;\n              test.bakterije = element.testovi.labassay.bakterije;\n              test.neg_description = element.testovi.labassay.neg_description;\n              test.pos_description = element.testovi.labassay.pos_description;\n              test.refSet = element.testovi.grupa;\n              test.dRef = element.testovi.refd;\n              test.gRef = element.testovi.refg;\n              test.interp = element.testovi.interp;\n              test.extend = element.testovi.extend;\n              test.retest = element.testovi.retest;\n              test.interpretacija = element.testovi.labassay.interpretacija;\n            });\n\n            if (test.select_options != undefined && !test.select_options.includes(test.rezultat)) {\n              test.select_options.unshift(test.rezultat);\n            }\n            _this9.rezultati.push(test);\n          });\n\n          if (_this9.MicrobiologySample && _this9.AllowGetSample) {\n            var bakterioloski = false;\n            var negativan = false;\n            var pozitivan = false;\n            var bakterijed = [];\n            var bakterijei = [];\n            var neg_rezultati = [];\n            var poz_rezultati = [];\n\n            _this9.CurrentTest = _this9.rezultati[0].analit;\n\n            neg_rezultati = [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this9.rezultati[0].neg_description));\n            poz_rezultati = [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this9.rezultati[0].pos_description));\n\n            if (_this9.rezultati[0].bakterije.length) {\n              bakterioloski = true;\n\n              var counter = 0;\n              var ima = false;\n\n              _this9.Bacteries.forEach(function (element) {\n                element.chosen = false;\n                counter = 0;\n                ima = false;\n                _this9.rezultati[0].bakterije.forEach(function (bakt) {\n                  counter++;\n                  if (element._id == bakt) {\n                    ima = true;\n                  }\n\n                  if (counter === _this9.rezultati[0].bakterije.length && !ima) {\n                    bakterijed.push(element);\n                  }\n\n                  if (counter === _this9.rezultati[0].bakterije.length && ima) {\n                    bakterijei.push(element);\n                  }\n                });\n              });\n\n              switch (_this9.rezultati[0].rezultat_m.length) {\n                case 0:\n                  _this9.MicrobiologyScenario = \"MAIBNoR\";\n                  _this9.SelectedBacteries = [];\n                  break;\n                case 1:\n                  _this9.MicrobiologyScenario = \"MAIBNeR\";\n                  _this9.SelectedBacteries = [];\n\n                  negativan = true;\n\n                  if (!neg_rezultati.includes(_this9.rezultati[0].rezultat.trim())) {\n                    neg_rezultati.unshift(_this9.rezultati[0].rezultat.trim());\n                  }\n\n                  break;\n\n                default:\n                  _this9.MicrobiologyScenario = \"MAIBPoR\";\n                  _this9.SelectedBacteries = [];\n                  _this9.BacteryTabs = [];\n\n                  _this9.rezultati[0].rezultat_m.forEach(function (element) {\n                    if (element.bakterija) {\n                      _this9.SelectedBacteries.push(element);\n                      _this9.BacteryTabs.push(element.opis);\n                    }\n                  });\n\n                  console.log(\"Izabrane bakterije:\");\n                  console.log(_this9.SelectedBacteries);\n\n                  var maxVal = _this9.SelectedBacteries.reduce(function (max, val) {\n                    return max.antibiogram.antibiotici.length > val.antibiogram.antibiotici.length ? max : val;\n                  });\n\n                  if (_this9.CurrentTab == \"\") {}\n                  _this9.CurrentTab = _this9.SelectedBacteries[0].opis;\n\n                  bakterijed.forEach(function (element) {\n                    _this9.SelectedBacteries.forEach(function (bact) {\n                      if (element._id == bact._id) {\n                        element.chosen = true;\n                      }\n                    });\n                  });\n\n                  bakterijei.forEach(function (element) {\n                    _this9.SelectedBacteries.forEach(function (bact) {\n                      if (element._id == bact._id) {\n                        element.chosen = true;\n                      }\n                    });\n                  });\n\n                  pozitivan = true;\n                  if (!poz_rezultati.includes(_this9.rezultati[0].rezultat.trim())) {\n                    poz_rezultati.unshift(_this9.rezultati[0].rezultat.trim());\n                  }\n\n                  break;\n              }\n            } else {\n              bakterioloski = false;\n              _this9.SelectedBacteries = [];\n\n              switch (_this9.rezultati[0].rezultat_m.length) {\n                case 0:\n                  _this9.MicrobiologyScenario = \"MANBNoR\";\n                  neg_rezultati = _this9.rezultati[0].neg_description;\n                  poz_rezultati = _this9.rezultati[0].pos_description;\n\n                  break;\n\n                case 1:\n                  if (_this9.rezultati[0].rezultat_m[0].negativan === true) {\n                    _this9.MicrobiologyScenario = \"MANBNeR\";\n\n                    negativan = true;\n\n                    if (!neg_rezultati.includes(_this9.rezultati[0].rezultat.trim())) {\n                      neg_rezultati.unshift(_this9.rezultati[0].rezultat.trim());\n                    }\n                  } else {\n                    _this9.MicrobiologyScenario = \"MANBPoR\";\n\n                    pozitivan = true;\n\n                    if (!poz_rezultati.includes(_this9.rezultati[0].rezultat.trim())) {\n                      poz_rezultati.unshift(_this9.rezultati[0].rezultat.trim());\n                    }\n                  }\n\n                  break;\n\n                default:\n                  _this9.MicrobiologyScenario = \"Unknown\";\n\n                  break;\n              }\n            }\n\n            _this9.MicrobiologyResult = {\n              negative: negativan,\n              positive: pozitivan,\n              BUG: bakterioloski,\n              F_RESULT: _this9.rezultati[0].rezultat,\n              M_RESULT: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this9.rezultati[0].rezultat_m)),\n              DefaultBacteries: [].concat(bakterijei),\n              RemainingBacteries: [].concat(bakterijed),\n              NegativeDescriptions: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(neg_rezultati)),\n              PositiveDescriptions: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(poz_rezultati))\n            };\n          } else {\n            _this9.MicrobiologyScenario = \"Unknown\";\n\n            _this9.MicrobiologyResult = {\n              negative: null,\n              positive: null,\n              BUG: null,\n              F_RESULT: \"\",\n              M_RESULT: [],\n              DefaultBacteries: [],\n              RemainingBacteries: [],\n              NegativeDescriptions: [],\n              PositiveDescriptions: []\n            };\n          }\n\n          _this9.rezultati.forEach(function (element) {\n            if (element.calculated) {\n              _this9.calculated = true;\n            }\n          });\n        }\n      }).then(function () {\n        _this9.ShowAntibiotics = false;\n        _this9.ShowBacteries = false;\n        _this9.show_table = true;\n        _this9.main = true;\n        _this9.$refs.staticModalMicroBactery.open();\n      });\n    },\n    SelectBactery: function SelectBactery(data) {\n      if (!data.chosen) {\n        this.SelectedBacteries.push(data);\n      } else {\n        for (var i = this.SelectedBacteries.length - 1; i >= 0; i--) {\n          if (this.SelectedBacteries[i]._id === data._id) {\n            this.SelectedBacteries.splice(i, 1);\n          }\n        }\n      }\n\n      if (this.SelectedBacteries.length > 0) {\n        this.ModalPositiveCondition = true;\n      } else {\n        this.ModalPositiveCondition = false;\n      }\n    },\n    MicroResultSelect: function MicroResultSelect(event) {\n      var _this10 = this;\n\n      this.uzorci.forEach(function (element) {\n        if (element.sid === _this10.$store.state.sid) {\n          _this10.sample.status = \"ZAPRIMLJEN\";\n        }\n      });\n      this.$refs.staticModalSelectResult.open();\n    },\n    ResetSample: function ResetSample(event) {\n      this.$refs.staticModalResetSample.open();\n    },\n    onCancel: function onCancel() {},\n    Prethodni: function Prethodni() {\n      var _this11 = this;\n\n      this.pagination = false;\n\n      var check = 0;\n      var found = false;\n      this.Results.forEach(function (element) {\n        check++;\n        if (element.pid == _this11.Previous.pid) {\n          found = true;\n          __WEBPACK_IMPORTED_MODULE_4__router__[\"a\" /* default */].push(\"/obrada/rezultati/\" + element.patient + \"/\" + element.pid + \"?date=\" + element.date);\n        }\n      });\n\n      if (check === this.Results.length) {\n        if (found) {\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"/rezultati/pagination\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&pid=\" + this.Previous.pid.toString() + \"&date=\" + this.$route.query.date, {}).then(function (res) {\n            res.data.rezultati = res.data.rezultati.sort(function (a, b) {\n              return a.pid.localeCompare(b.pid, undefined, {\n                numeric: true,\n                sensitivity: \"base\"\n              });\n            });\n\n            _this11.data_length = res.data.rezultati[res.data.rezultati.length - 1].pid;\n            _this11.data_min = res.data.rezultati[0].pid;\n            if (__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_own_property_names___default()(res.data).length === 0) {\n\n              _this11.pagination = true;\n              _this11.backward_disabled = true;\n            } else {\n              _this11.data_pid = res.data.data.pid;\n              _this11.Results = res.data.rezultati;\n\n              __WEBPACK_IMPORTED_MODULE_4__router__[\"a\" /* default */].push(\"/obrada/rezultati/\" + res.data.data.patient + \"/\" + res.data.data.pid + \"?date=\" + res.data.data.date);\n            }\n          });\n        } else {\n          this.Previous.pid = this.Previous.pid - 1;\n          if (this.Previous.pid > 0) {\n            this.Prethodni();\n          } else {}\n        }\n      } else {}\n    },\n    Sljedeci: function Sljedeci() {\n      var _this12 = this;\n\n      this.pagination = false;\n\n      var check = 0;\n      var found = false;\n      this.Results.forEach(function (element) {\n        check++;\n        if (element.pid == _this12.Next.pid) {\n          found = true;\n          __WEBPACK_IMPORTED_MODULE_4__router__[\"a\" /* default */].push(\"/obrada/rezultati/\" + element.patient + \"/\" + element.pid + \"?date=\" + element.date);\n        }\n      });\n\n      if (check === this.Results.length) {\n        if (found) {\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"/rezultati/pagination\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&pid=\" + this.Next.pid.toString() + \"&date=\" + this.$route.query.date, {}).then(function (res) {\n            res.data.rezultati = res.data.rezultati.sort(function (a, b) {\n              return a.pid.localeCompare(b.pid, undefined, {\n                numeric: true,\n                sensitivity: \"base\"\n              });\n            });\n\n            _this12.data_length = res.data.rezultati[res.data.rezultati.length - 1].pid;\n            _this12.data_min = res.data.rezultati[0].pid;\n            if (__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_own_property_names___default()(res.data).length === 0) {\n\n              _this12.pagination = true;\n              _this12.forward_disabled = true;\n            } else {\n              _this12.data_pid = res.data.data.pid;\n              _this12.Results = res.data.rezultati;\n\n              __WEBPACK_IMPORTED_MODULE_4__router__[\"a\" /* default */].push(\"/obrada/rezultati/\" + res.data.data.patient + \"/\" + res.data.data.pid + \"?date=\" + res.data.data.date);\n            }\n          });\n        } else {\n          this.Next.pid = this.Next.pid + 1;\n          this.Sljedeci();\n        }\n      } else {}\n    },\n    Created: function Created() {\n      var _this13 = this;\n\n      this.MicrobiologyOrder = false;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/odobravanje/samples/\" + this.$route.params.patient + \"/\" + this.$route.params.id + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&date=\" + this.$route.query.date, {}).then(function (res) {\n        _this13.header = res.data.results[0].patient.ime + \" \" + res.data.results[0].patient.prezime;\n        _this13.lokacija = res.data.lokacija;\n        _this13.klijent = res.data.results[0].customer;\n        console.log(_this13.klijent);\n        _this13.final_pdf = res.data.final_pdf;\n\n        _this13.analyser_patient = res.data.results[0].patient;\n\n        _this13.timestamp = res.data.results[0].timestamp;\n\n        _this13.pacijent = res.data.results[0].patient._id;\n        _this13.ime = res.data.results[0].patient.ime;\n        _this13.prezime = res.data.results[0].patient.prezime;\n        _this13.data_spol = res.data.results[0].patient.spol;\n        _this13.jmbg = res.data.results[0].patient.jmbg;\n        _this13.pid = res.data.results[0].sample.pid;\n\n        _this13.email = res.data.results[0].patient.email.trim();\n        _this13.email_tmp = res.data.results[0].patient.email.trim();\n\n        var str = \"\";\n        var tmp = \"\";\n        var jmbgDan = _this13.jmbg.slice(0, 2);\n        var jmbgMjesec = _this13.jmbg.slice(2, 4);\n        var jmbgGodina = _this13.jmbg.slice(4, 7);\n\n        if (jmbgGodina[0] === \"9\") {\n          str = \"1\";\n          tmp = jmbgGodina;\n          jmbgGodina = str.concat(tmp);\n        } else if (jmbgGodina[0] === \"0\") {\n          str = \"2\";\n          tmp = jmbgGodina;\n          jmbgGodina = str.concat(tmp);\n        } else {\n          console.warn(\"Invalid year...\");\n        }\n\n        var date = jmbgGodina + \"-\" + jmbgMjesec + \"-\" + jmbgDan;\n        var jmbgObj = _this13.parse_date(date);\n        var zGodina = jmbgObj.years + 1;\n        _this13.starost = zGodina;\n\n        if (!_this13.Email(_this13.email)) {\n          _this13.email = \"\";\n          _this13.email_tmp = \"\";\n        }\n\n        _this13.count = res.data.results.length;\n        _this13.approved = 0;\n        _this13.verified = 0;\n\n        _this13.odobren = true;\n        _this13.verificiran = true;\n        _this13.partials = [];\n        _this13.partials_condition = false;\n\n        res.data.results.forEach(function (element) {\n          if (element.verificiran) {\n            _this13.verified++;\n            _this13.partials.push(element._id);\n          }\n          if (element.status === \"ODOBREN\" || element.status === \"VERIFICIRAN\") {\n            _this13.approved++;\n          }\n          if (element.status != \"ODOBREN\" && element.status != \"VERIFICIRAN\") {\n            _this13.odobren = false;\n          }\n          if (!element.verificiran) {\n            _this13.verificiran = false;\n          }\n        });\n\n        if (_this13.count > _this13.verified && _this13.verified > 1) {\n          _this13.partials_condition = true;\n        }\n\n        _this13.uzorci = [];\n\n        _this13.nalaz.patient = res.data.results[0].patient._id;\n        _this13.nalaz.samples = [];\n\n        res.data.results.forEach(function (element) {\n          var check = 0;\n          var zaprimljen = 0;\n          var realizovan = 0;\n\n          if (element.verificiran) {\n            var status_uzorka = \"VERIFICIRAN\";\n          } else {\n            var status_uzorka = element.status;\n          }\n\n          _this13.nalaz.samples.push(element._id);\n\n          element.rezultati.forEach(function (test) {\n            check++;\n\n            if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n              zaprimljen++;\n            }\n\n            if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n              realizovan++;\n            }\n\n            if (check === element.rezultati.length) {\n\n              if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                _this13.MicrobiologyOrder = true;\n              }\n\n              if (status_uzorka === \"VERIFICIRAN\") {\n                _this13.uzorci.push({\n                  sid: element.id,\n                  status: \"VERIFICIRAN\",\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              } else if (status_uzorka === \"ODOBREN\") {\n                _this13.uzorci.push({\n                  sid: element.id,\n                  status: \"ODOBREN\",\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              } else if (zaprimljen < 1) {\n                _this13.uzorci.push({\n                  sid: element.id,\n                  status: \"REALIZOVAN\",\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              } else if (realizovan < 1) {\n                var stat = \"ZAPRIMLJEN\";\n                if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                  if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                    stat = \"REALIZOVAN\";\n                  }\n                }\n                _this13.uzorci.push({\n                  sid: element.id,\n                  status: stat,\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              } else {\n                _this13.uzorci.push({\n                  sid: element.id,\n                  status: \"U OBRADI\",\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              }\n            }\n          });\n        });\n\n        _this13.uzorci = _this13.uzorci.sort(function (a, b) {\n          return a.sid.localeCompare(b.sid, undefined, {\n            numeric: true,\n            sensitivity: \"base\"\n          });\n        });\n        _this13.main = true;\n\n        _this13.pagination = true;\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"/rezultati/pagination\" + \"?token=\" + _this13.$store.state.token + \"&site=\" + _this13.$store.state.site + \"&pid=\" + _this13.$route.params.id + \"&date=\" + _this13.$route.query.date, {}).then(function (res) {\n          res.data.rezultati = res.data.rezultati.sort(function (a, b) {\n            return a.pid.localeCompare(b.pid, undefined, {\n              numeric: true,\n              sensitivity: \"base\"\n            });\n          });\n\n          _this13.data_length = res.data.rezultati[res.data.rezultati.length - 1].pid;\n          _this13.data_min = res.data.rezultati[0].pid;\n          if (__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_own_property_names___default()(res.data).length === 0) {\n\n            _this13.pagination = true;\n          } else {\n            _this13.data_pid = res.data.data.pid;\n            _this13.Results = res.data.rezultati;\n          }\n\n          if (_this13.MicrobiologyOrder) {\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"mikrobiologija/bakterije/get?token=\" + _this13.$store.state.token + \"&site=\" + _this13.$store.state.site, {}).then(function (res) {\n              _this13.Bacteries = res.data.bakterije;\n              __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"mikrobiologija/antibiogrami/get?token=\" + _this13.$store.state.token + \"&site=\" + _this13.$store.state.site, {}).then(function (res) {\n                _this13.Antibiograms = res.data.antibiogrami;\n\n                _this13.Antibiograms.sort(function (a, b) {\n                  return a.naziv.localeCompare(b.naziv, undefined, {\n                    numeric: true,\n                    sensitivity: \"base\"\n                  });\n                });\n\n                __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"mikrobiologija/antibiotici/get?token=\" + _this13.$store.state.token + \"&site=\" + _this13.$store.state.site, {}).then(function (res) {\n                  res.data.antibiotici.sort(function (a, b) {\n                    return a.rbr_a.localeCompare(b.rbr_a, undefined, {\n                      numeric: true,\n                      sensitivity: \"base\"\n                    });\n                  });\n\n                  _this13.Antibiotics = [];\n\n                  res.data.antibiotici.forEach(function (element) {\n                    element.chosen = false;\n                    element.disabled = false;\n                    _this13.Antibiotics.push(element);\n                  });\n                });\n              });\n            });\n          }\n        });\n      });\n    },\n    Povratak: function Povratak() {\n      __WEBPACK_IMPORTED_MODULE_4__router__[\"a\" /* default */].push(\"/obrada/pregled/\" + \"?sekcija=\" + \"SVE\");\n    },\n    Nazad: function Nazad() {\n      this.email_button = false;\n      this.main = true;\n      this.pdf = false;\n    },\n\n\n    Email: function Email(email) {\n      if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    parse_date: function parse_date(date) {\n      date = date.split(\"-\");\n      var today = new Date();\n      var year = today.getFullYear();\n      var month = today.getMonth() + 1;\n      var day = today.getDate();\n      var yy = parseInt(date[0]);\n      var mm = parseInt(date[1]);\n      var dd = parseInt(date[2]);\n      var years, months, days;\n\n      months = month - mm;\n      if (day < dd) {\n        months = months - 1;\n      }\n\n      years = year - yy;\n      if (month * 100 + day < mm * 100 + dd) {\n        years = years - 1;\n        months = months + 12;\n      }\n\n      days = Math.floor((today.getTime() - new Date(yy + years, mm + months - 1, dd).getTime()) / (24 * 60 * 60 * 1000));\n\n      return { years: years, months: months, days: days };\n    },\n\n    GetSingleSample: function GetSingleSample(data) {\n      var _this14 = this;\n\n      this.testovi = [];\n      this.rezultati = [];\n      this.analitiprikaz = [];\n      this.calculated = false;\n\n      var topcije = null;\n      topcije = __WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__[\"a\" /* default */].rez;\n\n      this.show_table = false;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/showsingle/\" + data.sid + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site, {}).then(function (res) {\n        var test = {};\n\n        if (res.data.data.length) {\n          res.data.data.sort(function (a, b) {\n            return a.testovi.labassay.grupa + a.testovi.labassay.grouporder == b.testovi.labassay.grupa + b.testovi.labassay.grouporder ? 0 : +(a.testovi.labassay.grupa + a.testovi.labassay.grouporder > b.testovi.labassay.grupa + b.testovi.labassay.grouporder) || -1;\n          });\n\n          _this14.testovi = res.data.data;\n          _this14.analitiprikaz = res.data.multidata;\n\n          res.data.data.forEach(function (element) {\n            test = {};\n            test.realizovan = false;\n\n            test.ime = element.testovi.labassay.naziv;\n            test.test = element.testovi.labassay.sifra;\n            test.analit = element.testovi.labassay.analit;\n            test.IDE = element.testovi._id;\n            test.labassay_id = element.testovi.labassay._id;\n\n            test.multi_count = 0;\n            test.multi_rezultati = [];\n\n            res.data.multidata.forEach(function (multi) {\n              if (multi.labassay._id === element.testovi.labassay._id) {\n                test.multi_rezultati = multi.rezultat;\n                test.multi_count = multi.rezultat[0].rezultat.length;\n              }\n            });\n\n            test.kategorija = element.testovi.labassay.kategorija;\n            test.analyser = element.testovi.labassay.analyser;\n            test.multiparam = element.testovi.labassay.multiparam;\n            test.vise = element.testovi.rezultat.length;\n            test.calculated = element.testovi.labassay.calculated;\n            test.manual = element.testovi.labassay.manual;\n\n            test.select_options = eval(\"topcije.\" + element.testovi.interp.replace(\"%\", \"_\").replace(\"/\", \"_\").replace(\" \", \"_\").replace(/-/g, \"_\").replace(\"#\", \"_\").replace(/^\\d+/, \"\"));\n\n            element.testovi.rezultat.forEach(function (rezultat) {\n              test.sekcija = rezultat.anaassay.sekcija;\n\n              if (rezultat.anaassay._id === \"5f1877edb34ecd0c70fb0adc\" && rezultat.rezultat_f.trim() == \"\") {\n                console.log(\"Starost pacijenta: \" + _this14.starost);\n                test.rezultat = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(_this14.starost);\n              } else {\n                test.rezultat = rezultat.rezultat_f;\n              }\n\n              test.result = rezultat;\n              test.anaassay = rezultat.anaassay;\n\n              if (rezultat.rezultat_f != \"\") {\n                test.realizovan = true;\n              }\n\n              test.unit = rezultat.jedinice_f;\n\n              if (res.data.verificiran || res.data.status === \"ODOBREN\") {\n                test.odobren = \"ODOBREN\";\n                test.edit = false;\n              } else {\n                test.odobren != \"ODOBREN\";\n                test.edit = true;\n              }\n\n              test.jedinica = rezultat.jedinice_f;\n              test.id = rezultat._id;\n              test.multidata = element.testovi.labassay.multi;\n              test.rezultat_m = rezultat.rezultat_m;\n              test.bakterije = element.testovi.labassay.bakterije;\n              test.neg_description = element.testovi.labassay.neg_description;\n              test.pos_description = element.testovi.labassay.pos_description;\n              test.refSet = element.testovi.grupa;\n              test.dRef = element.testovi.refd;\n              test.gRef = element.testovi.refg;\n              test.interp = element.testovi.interp;\n              test.extend = element.testovi.extend;\n              test.retest = element.testovi.retest;\n              test.interpretacija = element.testovi.labassay.interpretacija;\n            });\n\n            if (test.select_options != undefined && !test.select_options.includes(test.rezultat)) {\n              test.select_options.unshift(test.rezultat);\n            }\n            _this14.rezultati.push(test);\n          });\n\n          if (_this14.MicrobiologySample) {\n\n            var bakterioloski = false;\n            var negativan = false;\n            var pozitivan = false;\n            var bakterijed = [];\n            var bakterijei = [];\n            var neg_rezultati = [];\n            var poz_rezultati = [];\n\n            _this14.CurrentTest = _this14.rezultati[0].analit;\n\n            neg_rezultati = [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this14.rezultati[0].neg_description));\n            poz_rezultati = [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this14.rezultati[0].pos_description));\n\n            if (_this14.rezultati[0].bakterije.length) {\n              console.log(\"Ima bakterije.\");\n\n              bakterioloski = true;\n\n              var counter = 0;\n              var ima = false;\n\n              _this14.Bacteries.forEach(function (element) {\n                element.chosen = false;\n                counter = 0;\n                ima = false;\n                _this14.rezultati[0].bakterije.forEach(function (bakt) {\n                  counter++;\n                  if (element._id == bakt) {\n                    ima = true;\n                  }\n\n                  if (counter === _this14.rezultati[0].bakterije.length && !ima) {\n                    bakterijed.push(element);\n                  }\n\n                  if (counter === _this14.rezultati[0].bakterije.length && ima) {\n                    bakterijei.push(element);\n                  }\n                });\n              });\n\n              switch (_this14.rezultati[0].rezultat_m.length) {\n                case 0:\n                  _this14.MicrobiologyScenario = \"MAIBNoR\";\n                  _this14.SelectedBacteries = [];\n                  break;\n                case 1:\n                  _this14.MicrobiologyScenario = \"MAIBNeR\";\n                  _this14.SelectedBacteries = [];\n\n                  negativan = true;\n\n                  if (!neg_rezultati.includes(_this14.rezultati[0].rezultat.trim())) {\n                    neg_rezultati.unshift(_this14.rezultati[0].rezultat.trim());\n                  }\n\n                  break;\n\n                default:\n                  _this14.MicrobiologyScenario = \"MAIBPoR\";\n                  _this14.SelectedBacteries = [];\n                  _this14.BacteryTabs = [];\n\n                  _this14.rezultati[0].rezultat_m.forEach(function (element) {\n                    if (element.bakterija) {\n                      _this14.SelectedBacteries.push(element);\n                      _this14.BacteryTabs.push(element.opis);\n                    }\n                  });\n\n                  console.log(\"Izabrane bakterije:\");\n                  console.log(_this14.SelectedBacteries);\n\n                  var maxVal = _this14.SelectedBacteries.reduce(function (max, val) {\n                    return max.antibiogram.antibiotici.length > val.antibiogram.antibiotici.length ? max : val;\n                  });\n\n                  if (_this14.CurrentTab == \"\") {}\n                  _this14.CurrentTab = _this14.SelectedBacteries[0].opis;\n\n                  bakterijed.forEach(function (element) {\n                    _this14.SelectedBacteries.forEach(function (bact) {\n                      if (element._id == bact._id) {\n                        element.chosen = true;\n                      }\n                    });\n                  });\n\n                  bakterijei.forEach(function (element) {\n                    _this14.SelectedBacteries.forEach(function (bact) {\n                      if (element._id == bact._id) {\n                        element.chosen = true;\n                      }\n                    });\n                  });\n\n                  pozitivan = true;\n                  if (!poz_rezultati.includes(_this14.rezultati[0].rezultat.trim())) {\n                    poz_rezultati.unshift(_this14.rezultati[0].rezultat.trim());\n                  }\n\n                  break;\n              }\n            } else {\n              bakterioloski = false;\n\n              console.log(\"Nema bakterije.\");\n\n              _this14.SelectedBacteries = [];\n\n              switch (_this14.rezultati[0].rezultat_m.length) {\n                case 0:\n                  _this14.MicrobiologyScenario = \"MANBNoR\";\n                  neg_rezultati = _this14.rezultati[0].neg_description;\n                  poz_rezultati = _this14.rezultati[0].pos_description;\n\n                  break;\n\n                case 1:\n                  if (_this14.rezultati[0].rezultat_m[0].negativan === true) {\n                    _this14.MicrobiologyScenario = \"MANBNeR\";\n\n                    negativan = true;\n\n                    if (!neg_rezultati.includes(_this14.rezultati[0].rezultat.trim())) {\n                      neg_rezultati.unshift(_this14.rezultati[0].rezultat.trim());\n                    }\n                  } else {\n                    _this14.MicrobiologyScenario = \"MANBPoR\";\n\n                    pozitivan = true;\n\n                    if (!poz_rezultati.includes(_this14.rezultati[0].rezultat.trim())) {\n                      poz_rezultati.unshift(_this14.rezultati[0].rezultat.trim());\n                    }\n                  }\n\n                  break;\n\n                default:\n                  _this14.MicrobiologyScenario = \"Unknown\";\n\n                  break;\n              }\n            }\n\n            _this14.MicrobiologyResult = {\n              negative: negativan,\n              positive: pozitivan,\n              BUG: bakterioloski,\n              F_RESULT: _this14.rezultati[0].rezultat,\n              M_RESULT: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this14.rezultati[0].rezultat_m)),\n              DefaultBacteries: [].concat(bakterijei),\n              RemainingBacteries: [].concat(bakterijed),\n              NegativeDescriptions: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(neg_rezultati)),\n              PositiveDescriptions: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(poz_rezultati))\n            };\n          } else {\n\n            _this14.MicrobiologyScenario = \"Unknown\";\n\n            _this14.MicrobiologyResult = {\n              negative: null,\n              positive: null,\n              BUG: null,\n              F_RESULT: \"\",\n              M_RESULT: [],\n              DefaultBacteries: [],\n              RemainingBacteries: [],\n              NegativeDescriptions: [],\n              PositiveDescriptions: []\n            };\n          }\n\n          _this14.rezultati.forEach(function (element) {\n            if (element.calculated) {\n              _this14.calculated = true;\n            }\n          });\n\n          _this14.sample = data;\n          _this14.show_table = true;\n        }\n      }).then(function () {\n        __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$emit(\"SetClientHeight\", data.sid);\n      });\n    },\n    SelectAnalyser: function SelectAnalyser(test) {\n      var _this15 = this;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/odobravanje/analysers\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&test=\" + test.labassay_id, {}).then(function (res) {\n        _this15.analysers = [];\n\n        res.data.anaassays.forEach(function (element) {\n          element.aparat.site = element.site;\n          _this15.analysers.push(element.aparat);\n        });\n\n        _this15.analysers.forEach(function (analyser) {\n          analyser.selected = false;\n        });\n\n        _this15.analiza = test;\n\n        _this15.rezultati.forEach(function (element) {\n          _this15.analysers.forEach(function (analyser) {\n            if (element.ime === _this15.analiza.ime && element.anaassay.aparat === analyser._id) {\n              analyser.selected = true;\n              _this15.analyser_selected = analyser;\n            }\n          });\n        });\n        _this15.$refs.staticModalAparati.open();\n      });\n    },\n    AnalyserSelected: function AnalyserSelected(analyser) {\n      var _this16 = this;\n\n      this.analyser = analyser;\n\n      if (this.analyser_selected._id === analyser._id) {\n        this.$refs.staticModalAparati.close();\n      } else {\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"rezultati/odobravanje/references\", {\n          token: this.$store.state.token,\n          site: this.$store.state.site,\n          id: this.sample.sid,\n          pacijent: this.analyser_patient,\n          analiza: this.analiza,\n          analyser: this.analyser\n        }).then(function (res) {\n          if (res.data.success) {\n            var data = {};\n\n            _this16.uzorci.forEach(function (element) {\n              if (element.sid === _this16.$store.state.sid) {\n                data = element;\n              }\n            });\n\n            _this16.testovi = [];\n            _this16.rezultati = [];\n            _this16.analitiprikaz = [];\n            _this16.calculated = false;\n\n            var topcije = null;\n            topcije = __WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__[\"a\" /* default */].rez;\n\n            _this16.show_table = false;\n\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/showsingle/\" + data.sid + \"?token=\" + _this16.$store.state.token + \"&site=\" + _this16.$store.state.site, {}).then(function (res) {\n              var test = {};\n\n              if (res.data.data.length) {\n                res.data.data.sort(function (a, b) {\n                  return a.testovi.labassay.grupa + a.testovi.labassay.grouporder == b.testovi.labassay.grupa + b.testovi.labassay.grouporder ? 0 : +(a.testovi.labassay.grupa + a.testovi.labassay.grouporder > b.testovi.labassay.grupa + b.testovi.labassay.grouporder) || -1;\n                });\n\n                _this16.testovi = res.data.data;\n                _this16.analitiprikaz = res.data.multidata;\n\n                res.data.data.forEach(function (element) {\n                  test = {};\n                  test.realizovan = false;\n\n                  test.ime = element.testovi.labassay.naziv;\n                  test.test = element.testovi.labassay.sifra;\n                  test.analit = element.testovi.labassay.analit;\n                  test.IDE = element.testovi._id;\n                  test.labassay_id = element.testovi.labassay._id;\n\n                  test.multi_count = 0;\n                  test.multi_rezultati = [];\n\n                  res.data.multidata.forEach(function (multi) {\n                    if (multi.labassay._id === element.testovi.labassay._id) {\n                      test.multi_rezultati = multi.rezultat;\n                      test.multi_count = multi.rezultat[0].rezultat.length;\n                    }\n                  });\n\n                  test.kategorija = element.testovi.labassay.kategorija;\n                  test.analyser = element.testovi.labassay.analyser;\n                  test.multiparam = element.testovi.labassay.multiparam;\n                  test.vise = element.testovi.rezultat.length;\n                  test.calculated = element.testovi.labassay.calculated;\n                  test.manual = element.testovi.labassay.manual;\n\n                  test.select_options = eval(\"topcije.\" + element.testovi.interp.replace(\"%\", \"_\").replace(\"/\", \"_\").replace(\" \", \"_\").replace(/-/g, \"_\").replace(\"#\", \"_\").replace(/^\\d+/, \"\"));\n\n                  element.testovi.rezultat.forEach(function (rezultat) {\n                    test.sekcija = rezultat.anaassay.sekcija;\n                    test.rezultat = rezultat.rezultat_f;\n                    test.result = rezultat;\n                    test.anaassay = rezultat.anaassay;\n\n                    if (rezultat.rezultat_f != \"\") {\n                      test.realizovan = true;\n                    }\n\n                    test.unit = rezultat.jedinice_f;\n\n                    if (res.data.verificiran || res.data.status === \"ODOBREN\") {\n                      test.odobren = \"ODOBREN\";\n                      test.edit = false;\n                    } else {\n                      test.odobren != \"ODOBREN\";\n                      test.edit = true;\n                    }\n\n                    test.jedinica = rezultat.jedinice_f;\n                    test.id = rezultat._id;\n                    test.multidata = element.testovi.labassay.multi;\n                    test.rezultat_m = rezultat.rezultat_m;\n                    test.bakterije = element.testovi.labassay.bakterije;\n                    test.neg_description = element.testovi.labassay.neg_description;\n                    test.pos_description = element.testovi.labassay.pos_description;\n                    test.refSet = element.testovi.grupa;\n                    test.dRef = element.testovi.refd;\n                    test.gRef = element.testovi.refg;\n                    test.interp = element.testovi.interp;\n                    test.extend = element.testovi.extend;\n                    test.retest = element.testovi.retest;\n                    test.interpretacija = element.testovi.labassay.interpretacija;\n                  });\n\n                  if (test.select_options != undefined && !test.select_options.includes(test.rezultat)) {\n                    test.select_options.unshift(test.rezultat);\n                  }\n                  _this16.rezultati.push(test);\n                });\n\n                _this16.rezultati.forEach(function (element) {\n                  if (element.calculated) {\n                    _this16.calculated = true;\n                  }\n                });\n\n                _this16.sample = data;\n                _this16.show_table = true;\n              }\n            });\n            _this16.$refs.staticModalAparati.close();\n          } else {}\n        });\n      }\n    },\n    Reference: function Reference(event, test) {\n      this.reference = {\n        sample: this.$store.state.sid,\n        labassay: test.labassay_id,\n        naziv: test.ime,\n        opis: test.analit,\n        dref: test.dRef,\n        gref: test.gRef,\n        interp: test.interp,\n        extend: test.extend,\n        jedinica: test.jedinica\n      };\n      this.$refs.staticModalReference.open();\n    },\n    BarcodePrint: function BarcodePrint(data) {\n      var _this17 = this;\n\n      var link = __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"p\" /* barcode */] + data.sid + \".png\";\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"uzorci/barcode/\" + data.sid + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site, {}).then(function (res) {\n        printEPL(res.data.name + \" \" + res.data.surname, _this17.sid, res.data.pacijentRBr, res.data.godiste, res.data.datum, link, res.data.code, _this17.$store.state.site, undefined, undefined);\n      });\n    },\n    SaveResults: function SaveResults(rezultati, from) {\n      var _this18 = this;\n\n      this.isLoading = true;\n\n      if (!this.MicrobiologySample) {\n        rezultati.forEach(function (element) {\n          element.rezultat = element.rezultat.replace(/,/g, \".\");\n        });\n\n        rezultati[0].rezultat_m = [];\n      }\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\n        email: this.$store.state.userId,\n        token: this.$store.state.token,\n        site: this.$store.state.site,\n        rezultati: rezultati\n      }).then(function (res) {\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this18.$route.params.patient + \"/\" + _this18.$route.params.id + \"?token=\" + _this18.$store.state.token + \"&site=\" + _this18.$store.state.site + \"&date=\" + _this18.$route.query.date, {}).then(function (res) {\n          _this18.uzorci = [];\n\n          res.data.results.forEach(function (element) {\n            var check = 0;\n            var zaprimljen = 0;\n            var realizovan = 0;\n\n            if (element.verificiran) {\n              var status_uzorka = \"VERIFICIRAN\";\n            } else {\n              var status_uzorka = element.status;\n            }\n\n            element.rezultati.forEach(function (test) {\n              check++;\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                zaprimljen++;\n              }\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                realizovan++;\n              }\n\n              if (check === element.rezultati.length) {\n\n                if (status_uzorka === \"VERIFICIRAN\") {\n                  _this18.uzorci.push({\n                    sid: element.id,\n                    status: \"VERIFICIRAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (status_uzorka === \"ODOBREN\") {\n                  _this18.uzorci.push({\n                    sid: element.id,\n                    status: \"ODOBREN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (zaprimljen < 1) {\n                  _this18.uzorci.push({\n                    sid: element.id,\n                    status: \"REALIZOVAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (realizovan < 1) {\n                  var stat = \"ZAPRIMLJEN\";\n                  if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                    if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                      stat = \"REALIZOVAN\";\n                    }\n                  }\n                  _this18.uzorci.push({\n                    sid: element.id,\n                    status: stat,\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else {\n                  _this18.uzorci.push({\n                    sid: element.id,\n                    status: \"U OBRADI\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                }\n              }\n            });\n          });\n\n          _this18.uzorci = _this18.uzorci.sort(function (a, b) {\n            return a.sid.localeCompare(b.sid, undefined, {\n              numeric: true,\n              sensitivity: \"base\"\n            });\n          });\n\n          _this18.isLoading = false;\n        });\n      });\n    },\n    DeletedSample: function DeletedSample(data) {\n      var _this19 = this;\n\n      this.uzorci.forEach(function (element) {\n        if (element.sid === data) {\n          element.removed = false;\n        }\n      });\n\n      for (var i = 0; i < this.uzorci.length; i++) {\n        if (this.uzorci[i].sid === data) {\n          this.uzorci.splice(i, 1);\n          break;\n        }\n      }\n\n      if (this.uzorci.length) {\n        this.show = false;\n        this.main = false;\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/odobravanje/samples/\" + this.$route.params.patient + \"/\" + this.$route.params.id + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&date=\" + this.$route.query.date, {}).then(function (res) {\n          _this19.count = res.data.results.length;\n          _this19.approved = 0;\n\n          _this19.odobren = true;\n          _this19.verificiran = true;\n\n          _this19.resdata = {};\n\n          _this19.resdata = res.data.results;\n\n          res.data.results.forEach(function (element) {\n            if (element.status === \"ODOBREN\" || element.status === \"VERIFICIRAN\") {\n              _this19.approved++;\n            }\n            if (element.status != \"ODOBREN\" && element.status != \"VERIFICIRAN\") {\n              _this19.odobren = false;\n            }\n            if (!element.verificiran) {\n              _this19.verificiran = false;\n            }\n          });\n\n          if (_this19.count == _this19.approved) {\n            var report = [];\n\n            _this19.uzorci.forEach(function (element) {\n              report.push(element._id);\n            });\n\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"nalazi/create\", {\n              token: _this19.$store.state.token,\n              site: _this19.$store.state.site,\n              type: \"multi\",\n              uzorci: _this19.uzorci,\n              samples: report,\n              timestamp: _this19.timestamp,\n              napomena: \"\",\n              status: false,\n              idNalaza: \"\",\n              location: \"/\",\n              klijent: _this19.klijent,\n              naziv: _this19.timestamp\n            }).then(function (res) {\n              if (res.data.success) {\n                __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"nalazi/memo\", {\n                  token: _this19.$store.state.token,\n                  site: _this19.$store.state.site,\n                  timestamp: _this19.timestamp,\n                  height: res.data.memo,\n                  location: \"/\",\n                  naziv: _this19.timestamp\n                }).then(function (res) {\n                  _this19.final_pdf = true;\n\n                  _this19.uzorci = [];\n\n                  _this19.resdata.forEach(function (element) {\n                    var check = 0;\n                    var zaprimljen = 0;\n                    var realizovan = 0;\n\n                    if (element.verificiran) {\n                      var status_uzorka = \"VERIFICIRAN\";\n                    } else {\n                      var status_uzorka = element.status;\n                    }\n\n                    element.rezultati.forEach(function (test) {\n                      check++;\n\n                      if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                        zaprimljen++;\n                      }\n\n                      if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                        realizovan++;\n                      }\n\n                      if (check === element.rezultati.length) {\n\n                        if (status_uzorka === \"VERIFICIRAN\") {\n                          _this19.uzorci.push({\n                            sid: element.id,\n                            status: \"VERIFICIRAN\",\n                            pdf_exists: element.pdf_exists,\n                            tip: element.sample.tip,\n                            _id: element._id,\n                            removed: false\n                          });\n                        } else if (status_uzorka === \"ODOBREN\") {\n                          _this19.uzorci.push({\n                            sid: element.id,\n                            status: \"ODOBREN\",\n                            pdf_exists: element.pdf_exists,\n                            tip: element.sample.tip,\n                            _id: element._id,\n                            removed: false\n                          });\n                        } else if (zaprimljen < 1) {\n                          _this19.uzorci.push({\n                            sid: element.id,\n                            status: \"REALIZOVAN\",\n                            pdf_exists: element.pdf_exists,\n                            tip: element.sample.tip,\n                            _id: element._id,\n                            removed: false\n                          });\n                        } else if (realizovan < 1) {\n                          var stat = \"ZAPRIMLJEN\";\n                          if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                            if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                              stat = \"REALIZOVAN\";\n                            }\n                          }\n                          _this19.uzorci.push({\n                            sid: element.id,\n                            status: stat,\n                            pdf_exists: element.pdf_exists,\n                            tip: element.sample.tip,\n                            _id: element._id,\n                            removed: false\n                          });\n                        } else {\n                          _this19.uzorci.push({\n                            sid: element.id,\n                            status: \"U OBRADI\",\n                            pdf_exists: element.pdf_exists,\n                            tip: element.sample.tip,\n                            _id: element._id,\n                            removed: false\n                          });\n                        }\n                      }\n                    });\n                  });\n\n                  _this19.uzorci = _this19.uzorci.sort(function (a, b) {\n                    return a.sid.localeCompare(b.sid, undefined, {\n                      numeric: true,\n                      sensitivity: \"base\"\n                    });\n                  });\n\n                  _this19.main = true;\n                  _this19.show = true;\n                });\n              }\n            });\n          } else {\n            _this19.uzorci = [];\n\n            res.data.results.forEach(function (element) {\n              var check = 0;\n              var zaprimljen = 0;\n              var realizovan = 0;\n\n              if (element.verificiran) {\n                var status_uzorka = \"VERIFICIRAN\";\n              } else {\n                var status_uzorka = element.status;\n              }\n\n              element.rezultati.forEach(function (test) {\n                check++;\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                  zaprimljen++;\n                }\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                  realizovan++;\n                }\n\n                if (check === element.rezultati.length) {\n\n                  if (status_uzorka === \"VERIFICIRAN\") {\n                    _this19.uzorci.push({\n                      sid: element.id,\n                      status: \"VERIFICIRAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (status_uzorka === \"ODOBREN\") {\n                    _this19.uzorci.push({\n                      sid: element.id,\n                      status: \"ODOBREN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (zaprimljen < 1) {\n                    _this19.uzorci.push({\n                      sid: element.id,\n                      status: \"REALIZOVAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (realizovan < 1) {\n                    var stat = \"ZAPRIMLJEN\";\n                    if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                      if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                        stat = \"REALIZOVAN\";\n                      }\n                    }\n                    _this19.uzorci.push({\n                      sid: element.id,\n                      status: stat,\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else {\n                    _this19.uzorci.push({\n                      sid: element.id,\n                      status: \"U OBRADI\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  }\n                }\n              });\n            });\n\n            _this19.uzorci = _this19.uzorci.sort(function (a, b) {\n              return a.sid.localeCompare(b.sid, undefined, {\n                numeric: true,\n                sensitivity: \"base\"\n              });\n            });\n\n            _this19.main = true;\n            _this19.show = true;\n          }\n        });\n      } else {\n        __WEBPACK_IMPORTED_MODULE_4__router__[\"a\" /* default */].push(\"/obrada/pregled\");\n      }\n    },\n    EditSample: function EditSample(data) {\n      var _this20 = this;\n\n      document.getElementById(data).click();\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/odobravanje/samples/\" + this.$route.params.patient + \"/\" + this.$route.params.id + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&date=\" + this.$route.query.date, {}).then(function (res) {\n        _this20.uzorci = [];\n\n        res.data.results.forEach(function (element) {\n          var check = 0;\n          var zaprimljen = 0;\n          var realizovan = 0;\n\n          if (element.verificiran) {\n            var status_uzorka = \"VERIFICIRAN\";\n          } else {\n            var status_uzorka = element.status;\n          }\n\n          element.rezultati.forEach(function (test) {\n            check++;\n\n            if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n              zaprimljen++;\n            }\n\n            if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n              realizovan++;\n            }\n\n            if (check === element.rezultati.length) {\n\n              if (status_uzorka === \"VERIFICIRAN\") {\n                _this20.uzorci.push({\n                  sid: element.id,\n                  status: \"VERIFICIRAN\",\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              } else if (status_uzorka === \"ODOBREN\") {\n                _this20.uzorci.push({\n                  sid: element.id,\n                  status: \"ODOBREN\",\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              } else if (zaprimljen < 1) {\n                _this20.uzorci.push({\n                  sid: element.id,\n                  status: \"REALIZOVAN\",\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              } else if (realizovan < 1) {\n                var stat = \"ZAPRIMLJEN\";\n                if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                  if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                    stat = \"REALIZOVAN\";\n                  }\n                }\n                _this20.uzorci.push({\n                  sid: element.id,\n                  status: stat,\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              } else {\n                _this20.uzorci.push({\n                  sid: element.id,\n                  status: \"U OBRADI\",\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              }\n            }\n          });\n        });\n\n        _this20.uzorci = _this20.uzorci.sort(function (a, b) {\n          return a.sid.localeCompare(b.sid, undefined, {\n            numeric: true,\n            sensitivity: \"base\"\n          });\n        });\n      }).then(function () {\n        setTimeout(function () {\n          document.getElementById(_this20.$store.state.sid).click();\n        }, 500);\n      });\n    },\n\n\n    RetestEnable: function RetestEnable(event) {\n      var _this21 = this;\n\n      this.rezultati.forEach(function (element) {\n        if (element.test === event.target.id) {\n          element.retest = true;\n        }\n      });\n\n      this.save_retest = true;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"rezultati/odobravanje/retest/da/\", {\n        id_u: this.$store.state.sid,\n        id_t: event.target.id,\n        site: this.$store.state.site,\n        token: this.$store.state.token\n      }).then(function (res) {\n        if (res.data.success) {\n          _this21.rezultati.forEach(function (element) {\n            if (element.test === event.target.id) {\n              element.retest = true;\n            }\n          });\n        }\n      });\n    },\n\n    RetestDisable: function RetestDisable(event) {\n      var _this22 = this;\n\n      this.rezultati.forEach(function (element) {\n        if (element.test === event.target.id) {\n          element.retest = false;\n        }\n      });\n\n      this.save_retest = true;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"rezultati/odobravanje/retest/ne/\", {\n        id_u: this.$store.state.sid,\n        id_t: event.target.id,\n        site: this.$store.state.site,\n        token: this.$store.state.token\n      }).then(function (res) {\n        if (res.data.success) {\n          _this22.rezultati.forEach(function (element) {\n            if (element.test === event.target.id) {\n              element.retest = false;\n            }\n          });\n        }\n      });\n    },\n\n    MultiGet: function MultiGet(event, naziv, ana, rezultat, odobren) {\n      var _this23 = this;\n\n      this.naslov = \"Rezultati testa: \" + naziv + \" (\" + ana + \")\";\n      this.analiti = [];\n      var single = {};\n      var i = 0;\n      var kontrola = false;\n\n      this.uzorci.forEach(function (element) {\n        if (element.sid === _this23.$store.state.sid) {\n          _this23.check = element.status;\n        }\n      });\n\n      this.analitiprikaz.forEach(function (element) {\n        i++;\n        single = {};\n\n        var opcije = null;\n        opcije = __WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__[\"a\" /* default */].data;\n\n        var noResult = true;\n\n        if (event.target.id === element.labassay._id) {\n          console.log(element.labassay);\n          element.rezultat.forEach(function (analit) {\n            if (analit.rezultat[0].rezultat_f.trim() != \"\") {\n              noResult = false;\n            }\n          });\n          console.log(noResult);\n        }\n\n        if (event.target.id === element.labassay._id) {\n          element.rezultat.forEach(function (analit) {\n            single.kod = analit.rezultat[0].module_sn;\n\n            element.labassay.multiparam.forEach(function (mparam) {\n              if (mparam.kod === single.kod) {\n                if (mparam.izbornik.length) {\n                  single.select_options = mparam.izbornik;\n                } else {\n                  single.select_options = undefined;\n                }\n              }\n            });\n\n            var tmpOptionsAna = [];\n            if (single.select_options != undefined) {\n              tmpOptionsAna = single.select_options.slice();\n              single.select_options = tmpOptionsAna.slice();\n            }\n\n            if (analit.rezultat[0].rezultat_f.trim() != \"\" && single.select_options != undefined && !single.select_options.includes(analit.rezultat[0].rezultat_f)) {\n              if (single.kod != \"s03\" && single.kod != \"s04\" && single.kod != \"s08\" && single.kod != \"s09\") {\n                single.select_options.unshift(analit.rezultat[0].rezultat_f);\n              }\n            }\n\n            single.refd = analit.refd;\n            single.labID = event.target.id;\n            single.refg = analit.refg;\n            single.interp = analit.interp;\n            single.interpretacija = null;\n            single.nazivTesta = naziv;\n            single.grupa = analit.grupa;\n            single.naziv = analit.rezultat[0].sn;\n            single.opis = analit.rezultat[0].dilucija;\n            single.jedinica = analit.rezultat[0].jedinice_f;\n            single.rezultat = analit.rezultat[0].rezultat_f;\n            single.flag = analit.rezultat[0].rezultat_i;\n            single.manual = element.labassay.manual;\n            single.odobren = odobren;\n\n            if (single.select_options != undefined && (single.kod === \"s03\" || single.kod === \"s04\" || single.kod === \"s08\" || single.kod === \"s09\")) {\n              single.rezultat_multiple = single.rezultat.split(\";\");\n              for (var i = single.rezultat_multiple.length - 1; i >= 0; i--) {\n                single.rezultat_multiple[i] = single.rezultat_multiple[i].trim();\n                if (single.rezultat_multiple[i] === \"\") {\n                  single.rezultat_multiple.splice(i, 1);\n                }\n              }\n            } else {\n              single.rezultat_multiple = [];\n            }\n\n            if (_this23.check === \"ODOBREN\" || _this23.check === \"VERIFICIRAN\") {\n              single.edit = false;\n            } else {\n              single.edit = true;\n            }\n\n            if (ana === \"Opšti pregled urina\" && _this23.check != \"ODOBREN\" && _this23.check != \"VERIFICIRAN\") {\n              if (analit.rezultat[0].rezultat_f === \"\" && single.select_options != undefined) {\n                if (noResult) {\n                  single.rezultat = single.select_options[1];\n                }\n              }\n            }\n\n            single.analit = analit.rezultat[0].anaassay;\n            single.izbor = ana;\n\n            if (single.kod === \"o12\" && single.rezultat.trim() === \"\") {\n              if (noResult) {\n                single.rezultat = \"16\";\n              }\n            }\n\n            _this23.analiti.push(single);\n\n            single = {};\n          });\n        }\n\n        if (i === _this23.analitiprikaz.length) {\n          kontrola = true;\n        }\n      });\n\n      if (kontrola) {\n        this.$refs.largeModalMulti.open();\n      }\n    },\n\n    Interpretacija: function Interpretacija(test, rezultat, jedinica, refd, refg, site, interp, extend, spec) {\n      return Object(__WEBPACK_IMPORTED_MODULE_10__functions_reference_js__[\"Interpretation\"])(test, rezultat, jedinica, refd, refg, site, interp, extend, spec);\n    },\n\n    MailDialog: function MailDialog() {\n      this.$refs.staticModalSendMail.open();\n    },\n    SendMail: function SendMail(email) {\n      var _this24 = this;\n\n      this.isLoading = true;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"nalazi/mail\", {\n        token: this.$store.state.token,\n        site: this.$store.state.site,\n        email: email,\n        timestamp: this.timestamp,\n        location: \"/\",\n        naziv: this.timestamp\n      }).then(function (res) {\n        _this24.isLoading = false;\n\n        if (res.data.success) {\n          _this24.toastText = \"Nalaz uspješno poslan.\";\n          _this24.toastIcon = \"fa-check\";\n          _this24.toastPosition = \"top-right\";\n          _this24.className = \"vuestic-toast-primary\";\n\n          _this24.showToast(_this24.toastText, {\n            icon: _this24.toastIcon,\n            position: _this24.toastPosition,\n            duration: 2500,\n            fullWidth: _this24.false,\n            className: _this24.className\n          });\n\n          if (_this24.email_changed) {\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"pacijenti/detalji/update/\" + _this24.pacijent, {\n              email: email.trim(),\n              token: _this24.$store.state.token,\n              site: _this24.$store.state.site\n            }).then(function (res) {});\n          }\n        } else {\n          _this24.toastText = \"Greška prilikom slanja nalaza!\";\n          _this24.toastIcon = \"fa-remove\";\n          _this24.toastPosition = \"top-right\";\n          _this24.className = \"vuestic-toast-danger\";\n\n          _this24.showToast(_this24.toastText, {\n            icon: _this24.toastIcon,\n            position: _this24.toastPosition,\n            duration: 2500,\n            fullWidth: _this24.false,\n            className: _this24.className\n          });\n        }\n      });\n    },\n    SaveMultiResults: function SaveMultiResults(analiti, data) {\n      var _this25 = this;\n\n      analiti.forEach(function (analit) {\n        analit.rezultat = analit.rezultat.replace(/,/g, \".\");\n\n        if (analit.rezultat_multiple.length) {\n          analit.rezultat = \"\";\n\n          analit.rezultat_multiple.forEach(function (element) {\n            if (element === \"\") {} else {\n              analit.rezultat = analit.rezultat + element + \";\";\n            }\n          });\n\n          analit.rezultat = analit.rezultat.trim().slice(0, analit.rezultat.length - 1);\n        }\n      });\n\n      this.isLoading = true;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"/rezultati/odobravanje/analiti/\" + this.$store.state.sid, {\n        analiti: analiti,\n        site: this.$store.state.site,\n        token: this.$store.state.token\n      }).then(function (res) {\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this25.$route.params.patient + \"/\" + _this25.$route.params.id + \"?token=\" + _this25.$store.state.token + \"&site=\" + _this25.$store.state.site + \"&date=\" + _this25.$route.query.date, {}).then(function (res) {\n          _this25.uzorci = [];\n\n          res.data.results.forEach(function (element) {\n            var check = 0;\n            var zaprimljen = 0;\n            var realizovan = 0;\n\n            if (element.verificiran) {\n              var status_uzorka = \"VERIFICIRAN\";\n            } else {\n              var status_uzorka = element.status;\n            }\n\n            element.rezultati.forEach(function (test) {\n              check++;\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                zaprimljen++;\n              }\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                realizovan++;\n              }\n\n              if (check === element.rezultati.length) {\n\n                if (status_uzorka === \"VERIFICIRAN\") {\n                  _this25.uzorci.push({\n                    sid: element.id,\n                    status: \"VERIFICIRAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (status_uzorka === \"ODOBREN\") {\n                  _this25.uzorci.push({\n                    sid: element.id,\n                    status: \"ODOBREN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (zaprimljen < 1) {\n                  _this25.uzorci.push({\n                    sid: element.id,\n                    status: \"REALIZOVAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (realizovan < 1) {\n                  var stat = \"ZAPRIMLJEN\";\n                  if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                    if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                      stat = \"REALIZOVAN\";\n                    }\n                  }\n                  _this25.uzorci.push({\n                    sid: element.id,\n                    status: stat,\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else {\n                  _this25.uzorci.push({\n                    sid: element.id,\n                    status: \"U OBRADI\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                }\n              }\n            });\n          });\n\n          _this25.uzorci = _this25.uzorci.sort(function (a, b) {\n            return a.sid.localeCompare(b.sid, undefined, {\n              numeric: true,\n              sensitivity: \"base\"\n            });\n          });\n\n          _this25.isLoading = false;\n        });\n      }).then(function (res) {\n        var data = {};\n\n        _this25.uzorci.forEach(function (element) {\n          if (element.sid === _this25.$store.state.sid) {\n            data = element;\n          }\n        });\n\n        _this25.testovi = [];\n        _this25.rezultati = [];\n        _this25.analitiprikaz = [];\n        _this25.calculated = false;\n\n        var topcije = null;\n        topcije = __WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__[\"a\" /* default */].rez;\n\n        _this25.show_table = false;\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/showsingle/\" + data.sid + \"?token=\" + _this25.$store.state.token + \"&site=\" + _this25.$store.state.site, {}).then(function (res) {\n          var test = {};\n\n          if (res.data.data.length) {\n            res.data.data.sort(function (a, b) {\n              return a.testovi.labassay.grupa + a.testovi.labassay.grouporder == b.testovi.labassay.grupa + b.testovi.labassay.grouporder ? 0 : +(a.testovi.labassay.grupa + a.testovi.labassay.grouporder > b.testovi.labassay.grupa + b.testovi.labassay.grouporder) || -1;\n            });\n\n            _this25.testovi = res.data.data;\n            _this25.analitiprikaz = res.data.multidata;\n\n            res.data.data.forEach(function (element) {\n              test = {};\n              test.realizovan = false;\n\n              test.ime = element.testovi.labassay.naziv;\n              test.test = element.testovi.labassay.sifra;\n              test.analit = element.testovi.labassay.analit;\n              test.IDE = element.testovi._id;\n              test.labassay_id = element.testovi.labassay._id;\n\n              test.multi_count = 0;\n              test.multi_rezultati = [];\n\n              res.data.multidata.forEach(function (multi) {\n                if (multi.labassay._id === element.testovi.labassay._id) {\n                  test.multi_rezultati = multi.rezultat;\n                  test.multi_count = multi.rezultat[0].rezultat.length;\n                }\n              });\n\n              test.kategorija = element.testovi.labassay.kategorija;\n              test.analyser = element.testovi.labassay.analyser;\n              test.multiparam = element.testovi.labassay.multiparam;\n              test.vise = element.testovi.rezultat.length;\n              test.calculated = element.testovi.labassay.calculated;\n              test.manual = element.testovi.labassay.manual;\n\n              test.select_options = eval(\"topcije.\" + element.testovi.interp.replace(\"%\", \"_\").replace(\"/\", \"_\").replace(\" \", \"_\").replace(/-/g, \"_\").replace(\"#\", \"_\").replace(/^\\d+/, \"\"));\n\n              element.testovi.rezultat.forEach(function (rezultat) {\n                test.sekcija = rezultat.anaassay.sekcija;\n                test.rezultat = rezultat.rezultat_f;\n                test.result = rezultat;\n                test.anaassay = rezultat.anaassay;\n\n                if (rezultat.rezultat_f != \"\") {\n                  test.realizovan = true;\n                }\n\n                test.unit = rezultat.jedinice_f;\n\n                if (res.data.verificiran || res.data.status === \"ODOBREN\") {\n                  test.odobren = \"ODOBREN\";\n                  test.edit = false;\n                } else {\n                  test.odobren != \"ODOBREN\";\n                  test.edit = true;\n                }\n\n                test.jedinica = rezultat.jedinice_f;\n                test.id = rezultat._id;\n                test.multidata = element.testovi.labassay.multi;\n                test.rezultat_m = rezultat.rezultat_m;\n                test.bakterije = element.testovi.labassay.bakterije;\n                test.neg_description = element.testovi.labassay.neg_description;\n                test.pos_description = element.testovi.labassay.pos_description;\n                test.refSet = element.testovi.grupa;\n                test.dRef = element.testovi.refd;\n                test.gRef = element.testovi.refg;\n                test.interp = element.testovi.interp;\n                test.extend = element.testovi.extend;\n                test.retest = element.testovi.retest;\n                test.interpretacija = element.testovi.labassay.interpretacija;\n              });\n\n              if (test.select_options != undefined && !test.select_options.includes(test.rezultat)) {\n                test.select_options.unshift(test.rezultat);\n              }\n              _this25.rezultati.push(test);\n            });\n\n            _this25.rezultati.forEach(function (element) {\n              if (element.calculated) {\n                _this25.calculated = true;\n              }\n            });\n\n            _this25.sample = data;\n            _this25.show_table = true;\n          }\n        });\n      });\n    },\n\n\n    Calculate: function Calculate(event, id, ime, edited) {\n      var _this26 = this;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"/rezultati/odobravanje/calculate/\" + this.$store.state.sid, {\n        _id: id,\n        token: this.$store.state.token,\n        site: this.$store.state.site,\n        ime: ime,\n        pid: this.pid\n      }).then(function (res) {\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this26.$route.params.patient + \"/\" + _this26.$route.params.id + \"?token=\" + _this26.$store.state.token + \"&site=\" + _this26.$store.state.site + \"&date=\" + _this26.$route.query.date, {}).then(function (res) {\n          _this26.uzorci = [];\n\n          res.data.results.forEach(function (element) {\n            var check = 0;\n            var zaprimljen = 0;\n            var realizovan = 0;\n\n            if (element.verificiran) {\n              var status_uzorka = \"VERIFICIRAN\";\n            } else {\n              var status_uzorka = element.status;\n            }\n\n            element.rezultati.forEach(function (test) {\n              check++;\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                zaprimljen++;\n              }\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                realizovan++;\n              }\n\n              if (check === element.rezultati.length) {\n\n                if (status_uzorka === \"VERIFICIRAN\") {\n                  _this26.uzorci.push({\n                    sid: element.id,\n                    status: \"VERIFICIRAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (status_uzorka === \"ODOBREN\") {\n                  _this26.uzorci.push({\n                    sid: element.id,\n                    status: \"ODOBREN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (zaprimljen < 1) {\n                  _this26.uzorci.push({\n                    sid: element.id,\n                    status: \"REALIZOVAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (realizovan < 1) {\n                  var stat = \"ZAPRIMLJEN\";\n                  if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                    if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                      stat = \"REALIZOVAN\";\n                    }\n                  }\n                  _this26.uzorci.push({\n                    sid: element.id,\n                    status: stat,\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else {\n                  _this26.uzorci.push({\n                    sid: element.id,\n                    status: \"U OBRADI\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                }\n              }\n            });\n          });\n\n          _this26.uzorci = _this26.uzorci.sort(function (a, b) {\n            return a.sid.localeCompare(b.sid, undefined, {\n              numeric: true,\n              sensitivity: \"base\"\n            });\n          });\n        });\n      }).then(function (res) {\n        var data = {};\n\n        _this26.uzorci.forEach(function (element) {\n          if (element.sid === _this26.$store.state.sid) {\n            data = element;\n          }\n        });\n\n        _this26.testovi = [];\n        _this26.rezultati = [];\n        _this26.analitiprikaz = [];\n        _this26.calculated = false;\n\n        var topcije = null;\n        topcije = __WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__[\"a\" /* default */].rez;\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/showsingle/\" + data.sid + \"?token=\" + _this26.$store.state.token + \"&site=\" + _this26.$store.state.site, {}).then(function (res) {\n          var test = {};\n\n          if (res.data.data.length) {\n            res.data.data.sort(function (a, b) {\n              return a.testovi.labassay.grupa + a.testovi.labassay.grouporder == b.testovi.labassay.grupa + b.testovi.labassay.grouporder ? 0 : +(a.testovi.labassay.grupa + a.testovi.labassay.grouporder > b.testovi.labassay.grupa + b.testovi.labassay.grouporder) || -1;\n            });\n\n            _this26.testovi = res.data.data;\n            _this26.analitiprikaz = res.data.multidata;\n\n            res.data.data.forEach(function (element) {\n              test = {};\n              test.realizovan = false;\n\n              test.ime = element.testovi.labassay.naziv;\n              test.test = element.testovi.labassay.sifra;\n              test.analit = element.testovi.labassay.analit;\n              test.IDE = element.testovi._id;\n              test.labassay_id = element.testovi.labassay._id;\n\n              test.multi_count = 0;\n              test.multi_rezultati = [];\n\n              res.data.multidata.forEach(function (multi) {\n                if (multi.labassay._id === element.testovi.labassay._id) {\n                  test.multi_rezultati = multi.rezultat;\n                  test.multi_count = multi.rezultat[0].rezultat.length;\n                }\n              });\n\n              test.kategorija = element.testovi.labassay.kategorija;\n              test.analyser = element.testovi.labassay.analyser;\n              test.multiparam = element.testovi.labassay.multiparam;\n              test.vise = element.testovi.rezultat.length;\n              test.calculated = element.testovi.labassay.calculated;\n              test.manual = element.testovi.labassay.manual;\n\n              test.select_options = eval(\"topcije.\" + element.testovi.interp.replace(\"%\", \"_\").replace(\"/\", \"_\").replace(\" \", \"_\").replace(/-/g, \"_\").replace(\"#\", \"_\").replace(/^\\d+/, \"\"));\n\n              element.testovi.rezultat.forEach(function (rezultat) {\n                test.sekcija = rezultat.anaassay.sekcija;\n                test.rezultat = rezultat.rezultat_f;\n                test.result = rezultat;\n                test.anaassay = rezultat.anaassay;\n\n                if (rezultat.rezultat_f != \"\") {\n                  test.realizovan = true;\n                }\n\n                test.unit = rezultat.jedinice_f;\n\n                if (res.data.verificiran || res.data.status === \"ODOBREN\") {\n                  test.odobren = \"ODOBREN\";\n                  test.edit = false;\n                } else {\n                  test.odobren != \"ODOBREN\";\n                  test.edit = true;\n                }\n\n                test.jedinica = rezultat.jedinice_f;\n                test.id = rezultat._id;\n                test.multidata = element.testovi.labassay.multi;\n                test.rezultat_m = rezultat.rezultat_m;\n                test.bakterije = element.testovi.labassay.bakterije;\n                test.neg_description = element.testovi.labassay.neg_description;\n                test.pos_description = element.testovi.labassay.pos_description;\n                test.refSet = element.testovi.grupa;\n                test.dRef = element.testovi.refd;\n                test.gRef = element.testovi.refg;\n                test.interp = element.testovi.interp;\n                test.extend = element.testovi.extend;\n                test.retest = element.testovi.retest;\n                test.interpretacija = element.testovi.labassay.interpretacija;\n              });\n\n              if (test.select_options != undefined && !test.select_options.includes(test.rezultat)) {\n                test.select_options.unshift(test.rezultat);\n              }\n              _this26.rezultati.push(test);\n            });\n\n            _this26.rezultati.forEach(function (element) {\n              if (element.calculated) {\n                _this26.calculated = true;\n              }\n            });\n\n            _this26.sample = data;\n          }\n        });\n      });\n    },\n\n    Approve: function Approve(rezultati) {\n      var _this27 = this;\n\n      this.rezultati.forEach(function (element) {\n        element.edit = false;\n      });\n\n      this.calculated = false;\n\n      if (!this.MicrobiologySample) {\n        rezultati.forEach(function (element) {\n          element.rezultat = element.rezultat.replace(/,/g, \".\");\n        });\n\n        rezultati[0].rezultat_m = [];\n      }\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\n        email: this.$store.state.userId,\n        token: this.$store.state.token,\n        site: this.$store.state.site,\n        rezultati: rezultati\n      }).then(function (res) {\n        _this27.isLoading = true;\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"/rezultati/odobravanje/odobri/\" + _this27.$store.state.sid, {\n          testovi: rezultati,\n          site: _this27.$store.state.site,\n          token: _this27.$store.state.token\n        }).then(function (res) {\n          _this27.sample.status = \"ODOBREN\";\n\n          _this27.report = {};\n\n          _this27.uzorci.forEach(function (element) {\n            if (element.sid === _this27.$store.state.sid) {\n              _this27.report = element;\n            }\n          });\n\n          var sample = [];\n          sample.push(_this27.report._id);\n\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"nalazi/create\", {\n            token: _this27.$store.state.token,\n            site: _this27.$store.state.site,\n            type: \"single\",\n            uzorci: _this27.uzorci,\n            samples: sample,\n            timestamp: _this27.timestamp,\n            napomena: \"\",\n            status: false,\n            idNalaza: \"\",\n            location: \"/samples\",\n            klijent: _this27.klijent,\n            naziv: _this27.report.sid\n          }).then(function (res) {\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this27.$route.params.patient + \"/\" + _this27.$route.params.id + \"?token=\" + _this27.$store.state.token + \"&site=\" + _this27.$store.state.site + \"&date=\" + _this27.$route.query.date, {}).then(function (res) {\n              _this27.final_pdf = res.data.final_pdf;\n\n              _this27.count = res.data.results.length;\n              _this27.approved = 0;\n\n              _this27.odobren = true;\n              _this27.verificiran = true;\n\n              res.data.results.forEach(function (element) {\n                if (element.status === \"ODOBREN\" || element.status === \"VERIFICIRAN\") {\n                  _this27.approved++;\n                }\n                if (element.status != \"ODOBREN\" && element.status != \"VERIFICIRAN\") {\n                  _this27.odobren = false;\n                }\n                if (!element.verificiran) {\n                  _this27.verificiran = false;\n                }\n              });\n\n              var response = res.data.results;\n\n              if (_this27.count == _this27.approved) {\n\n                var report = [];\n\n                _this27.uzorci.forEach(function (element) {\n                  report.push(element._id);\n                });\n\n                __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"nalazi/create\", {\n                  token: _this27.$store.state.token,\n                  site: _this27.$store.state.site,\n                  type: \"multi\",\n                  uzorci: _this27.uzorci,\n                  samples: report,\n                  timestamp: _this27.timestamp,\n                  napomena: \"\",\n                  status: false,\n                  idNalaza: \"\",\n                  location: \"/\",\n                  klijent: _this27.klijent,\n                  naziv: _this27.timestamp\n                }).then(function (res) {\n                  if (res.data.success) {\n                    __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"nalazi/memo\", {\n                      token: _this27.$store.state.token,\n                      site: _this27.$store.state.site,\n                      timestamp: _this27.timestamp,\n                      height: res.data.memo,\n                      location: \"/\",\n                      naziv: _this27.timestamp\n                    }).then(function (res) {\n                      _this27.uzorci = [];\n\n                      response.forEach(function (element) {\n                        var check = 0;\n                        var zaprimljen = 0;\n                        var realizovan = 0;\n\n                        if (element.verificiran) {\n                          var status_uzorka = \"VERIFICIRAN\";\n                        } else {\n                          var status_uzorka = element.status;\n                        }\n\n                        element.rezultati.forEach(function (test) {\n                          check++;\n\n                          if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                            zaprimljen++;\n                          }\n\n                          if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                            realizovan++;\n                          }\n\n                          if (check === element.rezultati.length) {\n\n                            if (status_uzorka === \"VERIFICIRAN\") {\n                              _this27.uzorci.push({\n                                sid: element.id,\n                                status: \"VERIFICIRAN\",\n                                pdf_exists: element.pdf_exists,\n                                tip: element.sample.tip,\n                                _id: element._id,\n                                removed: false\n                              });\n                            } else if (status_uzorka === \"ODOBREN\") {\n                              _this27.uzorci.push({\n                                sid: element.id,\n                                status: \"ODOBREN\",\n                                pdf_exists: element.pdf_exists,\n                                tip: element.sample.tip,\n                                _id: element._id,\n                                removed: false\n                              });\n                            } else if (zaprimljen < 1) {\n                              _this27.uzorci.push({\n                                sid: element.id,\n                                status: \"REALIZOVAN\",\n                                pdf_exists: element.pdf_exists,\n                                tip: element.sample.tip,\n                                _id: element._id,\n                                removed: false\n                              });\n                            } else if (realizovan < 1) {\n                              var stat = \"ZAPRIMLJEN\";\n                              if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                                if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                                  stat = \"REALIZOVAN\";\n                                }\n                              }\n                              _this27.uzorci.push({\n                                sid: element.id,\n                                status: stat,\n                                pdf_exists: element.pdf_exists,\n                                tip: element.sample.tip,\n                                _id: element._id,\n                                removed: false\n                              });\n                            } else {\n                              _this27.uzorci.push({\n                                sid: element.id,\n                                status: \"U OBRADI\",\n                                pdf_exists: element.pdf_exists,\n                                tip: element.sample.tip,\n                                _id: element._id,\n                                removed: false\n                              });\n                            }\n                          }\n                        });\n                      });\n\n                      _this27.uzorci = _this27.uzorci.sort(function (a, b) {\n                        return a.sid.localeCompare(b.sid, undefined, {\n                          numeric: true,\n                          sensitivity: \"base\"\n                        });\n                      });\n\n                      _this27.main = true;\n\n                      _this27.isLoading = false;\n                    });\n                  }\n                });\n              } else {\n                _this27.uzorci = [];\n\n                res.data.results.forEach(function (element) {\n                  var check = 0;\n                  var zaprimljen = 0;\n                  var realizovan = 0;\n\n                  if (element.verificiran) {\n                    var status_uzorka = \"VERIFICIRAN\";\n                  } else {\n                    var status_uzorka = element.status;\n                  }\n\n                  element.rezultati.forEach(function (test) {\n                    check++;\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                      zaprimljen++;\n                    }\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                      realizovan++;\n                    }\n\n                    if (check === element.rezultati.length) {\n\n                      if (status_uzorka === \"VERIFICIRAN\") {\n                        _this27.uzorci.push({\n                          sid: element.id,\n                          status: \"VERIFICIRAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (status_uzorka === \"ODOBREN\") {\n                        _this27.uzorci.push({\n                          sid: element.id,\n                          status: \"ODOBREN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (zaprimljen < 1) {\n                        _this27.uzorci.push({\n                          sid: element.id,\n                          status: \"REALIZOVAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (realizovan < 1) {\n                        var stat = \"ZAPRIMLJEN\";\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                          if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                            stat = \"REALIZOVAN\";\n                          }\n                        }\n                        _this27.uzorci.push({\n                          sid: element.id,\n                          status: stat,\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else {\n                        _this27.uzorci.push({\n                          sid: element.id,\n                          status: \"U OBRADI\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      }\n                    }\n                  });\n                });\n\n                _this27.uzorci = _this27.uzorci.sort(function (a, b) {\n                  return a.sid.localeCompare(b.sid, undefined, {\n                    numeric: true,\n                    sensitivity: \"base\"\n                  });\n                });\n\n                _this27.main = true;\n\n                _this27.isLoading = false;\n              }\n            }).then(function (res) {});\n          });\n        });\n      });\n    },\n    Disapprove: function Disapprove(rezultati, from) {\n      var _this28 = this;\n\n      this.rezultati.forEach(function (element) {\n        if (element.calculated) {\n          _this28.calculated = true;\n        }\n      });\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"/rezultati/odobravanje/ukloni/\" + this.$store.state.sid, {\n        testovi: rezultati,\n        site: this.$store.state.site,\n        token: this.$store.state.token\n      }).then(function (res) {\n        _this28.isLoading = true;\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this28.$route.params.patient + \"/\" + _this28.$route.params.id + \"?token=\" + _this28.$store.state.token + \"&site=\" + _this28.$store.state.site + \"&date=\" + _this28.$route.query.date, {}).then(function (res) {\n          _this28.sample.status = \"REALIZOVAN\";\n\n          _this28.final_pdf = res.data.final_pdf;\n\n          _this28.count = res.data.results.length;\n          _this28.approved = 0;\n\n          _this28.odobren = true;\n          _this28.verificiran = true;\n\n          res.data.results.forEach(function (element) {\n            if (element.status === \"ODOBREN\" || element.status === \"VERIFICIRAN\") {\n              _this28.approved++;\n            }\n            if (element.status != \"ODOBREN\" && element.status != \"VERIFICIRAN\") {\n              _this28.odobren = false;\n            }\n            if (!element.verificiran) {\n              _this28.verificiran = false;\n            }\n          });\n\n          _this28.uzorci = [];\n\n          res.data.results.forEach(function (element) {\n            var check = 0;\n            var zaprimljen = 0;\n            var realizovan = 0;\n\n            if (element.verificiran) {\n              var status_uzorka = \"VERIFICIRAN\";\n            } else {\n              var status_uzorka = element.status;\n            }\n\n            element.rezultati.forEach(function (test) {\n              check++;\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                zaprimljen++;\n              }\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                realizovan++;\n              }\n\n              if (check === element.rezultati.length) {\n\n                if (status_uzorka === \"VERIFICIRAN\") {\n                  _this28.uzorci.push({\n                    sid: element.id,\n                    status: \"VERIFICIRAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (status_uzorka === \"ODOBREN\") {\n                  _this28.uzorci.push({\n                    sid: element.id,\n                    status: \"ODOBREN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (zaprimljen < 1) {\n                  _this28.uzorci.push({\n                    sid: element.id,\n                    status: \"REALIZOVAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (realizovan < 1) {\n                  var stat = \"ZAPRIMLJEN\";\n                  if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                    if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                      stat = \"REALIZOVAN\";\n                    }\n                  }\n                  _this28.uzorci.push({\n                    sid: element.id,\n                    status: stat,\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else {\n                  _this28.uzorci.push({\n                    sid: element.id,\n                    status: \"U OBRADI\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                }\n              }\n            });\n          });\n\n          _this28.uzorci = _this28.uzorci.sort(function (a, b) {\n            return a.sid.localeCompare(b.sid, undefined, {\n              numeric: true,\n              sensitivity: \"base\"\n            });\n          });\n\n          _this28.main = true;\n        });\n\n        _this28.rezultati.forEach(function (element) {\n          element.edit = true;\n        });\n\n        _this28.isLoading = false;\n      });\n    },\n    Verify: function Verify(data) {\n      var _this29 = this;\n\n      if (!this.$store.state.access.verify) {\n        this.$refs.staticModalVerifyPrivilege.open();\n      } else {\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"/rezultati/obrada/verifikacija/\" + this.$store.state.sid, {\n          site: this.$store.state.site,\n          token: this.$store.state.token,\n          verify: true\n        }).then(function (res) {\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this29.$route.params.patient + \"/\" + _this29.$route.params.id + \"?token=\" + _this29.$store.state.token + \"&site=\" + _this29.$store.state.site + \"&date=\" + _this29.$route.query.date, {}).then(function (res) {\n            _this29.sample.status = \"VERIFICIRAN\";\n\n            _this29.final_pdf = res.data.final_pdf;\n\n            _this29.count = res.data.results.length;\n            _this29.approved = 0;\n            _this29.verified = 0;\n\n            _this29.odobren = true;\n            _this29.verificiran = true;\n            _this29.partials = [];\n            _this29.partials_condition = false;\n\n            res.data.results.forEach(function (element) {\n              if (element.verificiran) {\n                _this29.partials.push(element._id);\n                _this29.verified++;\n              }\n              if (element.status === \"ODOBREN\" || element.status === \"VERIFICIRAN\") {\n                _this29.approved++;\n              }\n              if (element.status != \"ODOBREN\" && element.status != \"VERIFICIRAN\") {\n                _this29.odobren = false;\n              }\n              if (!element.verificiran) {\n                _this29.verificiran = false;\n              }\n            });\n\n            if (_this29.count > _this29.verified && _this29.verified > 1) {\n              _this29.partials_condition = true;\n            }\n\n            _this29.uzorci = [];\n\n            res.data.results.forEach(function (element) {\n              var check = 0;\n              var zaprimljen = 0;\n              var realizovan = 0;\n\n              if (element.verificiran) {\n                var status_uzorka = \"VERIFICIRAN\";\n              } else {\n                var status_uzorka = element.status;\n              }\n\n              element.rezultati.forEach(function (test) {\n                check++;\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                  zaprimljen++;\n                }\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                  realizovan++;\n                }\n\n                if (check === element.rezultati.length) {\n\n                  if (status_uzorka === \"VERIFICIRAN\") {\n                    _this29.uzorci.push({\n                      sid: element.id,\n                      status: \"VERIFICIRAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (status_uzorka === \"ODOBREN\") {\n                    _this29.uzorci.push({\n                      sid: element.id,\n                      status: \"ODOBREN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (zaprimljen < 1) {\n                    _this29.uzorci.push({\n                      sid: element.id,\n                      status: \"REALIZOVAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (realizovan < 1) {\n                    var stat = \"ZAPRIMLJEN\";\n                    if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                      if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                        stat = \"REALIZOVAN\";\n                      }\n                    }\n                    _this29.uzorci.push({\n                      sid: element.id,\n                      status: stat,\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else {\n                    _this29.uzorci.push({\n                      sid: element.id,\n                      status: \"U OBRADI\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  }\n                }\n              });\n            });\n\n            _this29.uzorci = _this29.uzorci.sort(function (a, b) {\n              return a.sid.localeCompare(b.sid, undefined, {\n                numeric: true,\n                sensitivity: \"base\"\n              });\n            });\n\n            if (_this29.verificiran) {\n              __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"rezultati/nalazi/status\", {\n                token: _this29.$store.state.token,\n                site: _this29.$store.state.site,\n                timestamp: _this29.timestamp,\n                location: \"/\",\n                naziv: _this29.timestamp,\n                status: true\n              }).then(function (res) {\n                _this29.main = true;\n\n                if (_this29.lokacija.sendEmail) {\n                  __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"nalazi/mail\", {\n                    token: _this29.$store.state.token,\n                    site: _this29.$store.state.site,\n                    email: _this29.lokacija.email,\n                    timestamp: _this29.timestamp,\n                    location: \"/\",\n                    naziv: _this29.timestamp\n                  }).then(function (res) {\n                    if (res.data.success) {} else {\n                      _this29.toastText = \"Greška prilikom slanja nalaza!\";\n                      _this29.toastIcon = \"fa-remove\";\n                      _this29.toastPosition = \"top-right\";\n                      _this29.className = \"vuestic-toast-danger\";\n\n                      _this29.showToast(_this29.toastText, {\n                        icon: _this29.toastIcon,\n                        position: _this29.toastPosition,\n                        duration: 2500,\n                        fullWidth: _this29.false,\n                        className: _this29.className\n                      });\n                    }\n                  });\n                } else {}\n              });\n            } else {\n              _this29.main = true;\n            }\n          });\n        });\n      }\n    },\n    UnVerify: function UnVerify(data) {\n      var _this30 = this;\n\n      if (!this.$store.state.access.verify) {\n        this.$refs.staticModalVerifyPrivilege.open();\n      } else {\n        this.verificiran = false;\n        this.sid = data.sid;\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"/rezultati/obrada/verifikacija/\" + data.sid, {\n          site: this.$store.state.site,\n          token: this.$store.state.token,\n          verify: false\n        }).then(function (res) {\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this30.$route.params.patient + \"/\" + _this30.$route.params.id + \"?token=\" + _this30.$store.state.token + \"&site=\" + _this30.$store.state.site + \"&date=\" + _this30.$route.query.date, {}).then(function (res) {\n            _this30.sample.status = \"ODOBREN\";\n\n            _this30.final_pdf = res.data.final_pdf;\n\n            _this30.count = res.data.results.length;\n            _this30.approved = 0;\n\n            _this30.odobren = true;\n            _this30.verificiran = true;\n            _this30.verified = 0;\n            _this30.partials = [];\n            _this30.partials_condition = false;\n\n            res.data.results.forEach(function (element) {\n              if (element.verificiran) {\n                _this30.verified++;\n                _this30.partials.push(element._id);\n              }\n              if (element.status === \"ODOBREN\" || element.status === \"VERIFICIRAN\") {\n                _this30.approved++;\n              }\n              if (element.status != \"ODOBREN\" && element.status != \"VERIFICIRAN\") {\n                _this30.odobren = false;\n              }\n              if (!element.verificiran) {\n                _this30.verificiran = false;\n              }\n            });\n\n            if (_this30.count > _this30.verified && _this30.verified > 1) {\n              _this30.partials_condition = true;\n            }\n\n            _this30.uzorci = [];\n\n            res.data.results.forEach(function (element) {\n              var check = 0;\n              var zaprimljen = 0;\n              var realizovan = 0;\n\n              if (element.verificiran) {\n                var status_uzorka = \"VERIFICIRAN\";\n              } else {\n                var status_uzorka = element.status;\n              }\n\n              element.rezultati.forEach(function (test) {\n                check++;\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                  zaprimljen++;\n                }\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                  realizovan++;\n                }\n\n                if (check === element.rezultati.length) {\n\n                  if (status_uzorka === \"VERIFICIRAN\") {\n                    _this30.uzorci.push({\n                      sid: element.id,\n                      status: \"VERIFICIRAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (status_uzorka === \"ODOBREN\") {\n                    _this30.uzorci.push({\n                      sid: element.id,\n                      status: \"ODOBREN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (zaprimljen < 1) {\n                    _this30.uzorci.push({\n                      sid: element.id,\n                      status: \"REALIZOVAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (realizovan < 1) {\n                    var stat = \"ZAPRIMLJEN\";\n                    if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                      if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                        stat = \"REALIZOVAN\";\n                      }\n                    }\n                    _this30.uzorci.push({\n                      sid: element.id,\n                      status: stat,\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else {\n                    _this30.uzorci.push({\n                      sid: element.id,\n                      status: \"U OBRADI\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  }\n                }\n              });\n            });\n\n            _this30.uzorci = _this30.uzorci.sort(function (a, b) {\n              return a.sid.localeCompare(b.sid, undefined, {\n                numeric: true,\n                sensitivity: \"base\"\n              });\n            });\n\n            if (!_this30.verificiran) {\n              __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"rezultati/nalazi/status\", {\n                token: _this30.$store.state.token,\n                site: _this30.$store.state.site,\n                timestamp: _this30.timestamp,\n                location: \"/\",\n                naziv: _this30.timestamp,\n                status: false\n              }).then(function (res) {\n                _this30.main = true;\n              });\n            } else {\n              _this30.main = true;\n            }\n          });\n        });\n      }\n    },\n    GetResults: function GetResults(data, status) {\n      var _this31 = this;\n\n      this.sample_status = status;\n      this.vise = [];\n      this.labassay = \"\";\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"/rezultati/odobravanje/results\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site, {\n        id: this.sample.sid,\n        labassay: data.labassay_id\n      }).then(function (res) {\n        if (res.data.success) {\n          _this31.vise = res.data.element;\n          _this31.labassay = _this31.vise.labassay.naziv + \" (\" + _this31.vise.labassay.analit + \")\";\n\n          var i = 0;\n          res.data.element.rezultat.forEach(function (element) {\n            i++;\n            if (res.data.element.rezultat.length == i) {\n              element.izabran = true;\n            } else {\n              element.izabran = false;\n            }\n          });\n\n          _this31.vise.rezultat.sort(function (a, b) {\n            return Date.parse(a.created_at) == Date.parse(b.created_at) ? 0 : +(Date.parse(a.created_at) < Date.parse(b.created_at)) || -1;\n          });\n\n          _this31.$refs.staticModalAllResults.open();\n        }\n      });\n    },\n    GetResultsMulti: function GetResultsMulti(data, status) {\n      this.sample_status = status;\n\n      this.multi_rezultati = [];\n      this.multi_test = data.ime + \" (\" + data.analit + \")\";\n\n      data.multi_rezultati.forEach(function (element) {\n        element.rezultat.forEach(function (rez) {});\n      });\n    },\n    IzborTesta: function IzborTesta(vise, test) {\n      var _this32 = this;\n\n      document.getElementById(this.sample.sid).click();\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"/rezultati/odobravanje/choose\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site, {\n        id: this.sample.sid,\n        labassay: vise.labassay._id,\n        picked: test._id\n      }).then(function (res) {\n        document.getElementById(_this32.sample.sid).click();\n        _this32.$refs.staticModalAllResults.close();\n      });\n    },\n    Partials: function Partials() {\n      var _this33 = this;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"nalazi/create\", {\n        token: this.$store.state.token,\n        site: this.$store.state.site,\n        type: \"partial\",\n        uzorci: this.uzorci,\n        samples: this.partials,\n        timestamp: this.timestamp,\n        napomena: \"\",\n        status: false,\n        idNalaza: \"\",\n        location: \"/partials\",\n        klijent: this.klijent,\n        naziv: this.timestamp\n      }).then(function (res) {\n        if (res.data.success) {\n          if (!res.data.success) {\n            _this33.$refs.staticModalError.open();\n          } else {\n            _this33.path = _this33.timestamp + \".pdf\";\n\n            _this33.url = __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"r\" /* server */] + \"nalazi/partials/\" + _this33.path;\n\n            var options = {\n              width: \"100%\",\n              height: \"800px\"\n            };\n            __WEBPACK_IMPORTED_MODULE_16_pdfobject___default.a.embed(_this33.url, \"#pdf-container\", options);\n\n            _this33.email_button = true;\n            _this33.main = false;\n            _this33.pdf = true;\n          }\n        }\n      });\n    }\n  }\n});\n\n/***/ }),\n\n/***/ \"MbHo\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"FZ+f\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \".vld-overlay{bottom:0;left:0;position:absolute;right:0;top:0;align-items:center;display:none;justify-content:center;overflow:hidden;z-index:1}.vld-overlay.is-active{display:flex}.vld-overlay.is-full-page{z-index:999;position:fixed}.vld-overlay .vld-background{bottom:0;left:0;position:absolute;right:0;top:0;background:#fff;opacity:.5}.vld-overlay .vld-icon,.vld-parent{position:relative}\", \"\", {\"version\":3,\"sources\":[\"C:/Users/atom/Desktop/BioLAB/client/node_modules/vue-loading-overlay/dist/vue-loading.css\"],\"names\":[],\"mappings\":\"AAAA,aACE,SAAU,AACV,OAAQ,AACR,kBAAmB,AACnB,QAAS,AACT,MAAO,AACP,mBAAoB,AACpB,aAAc,AACd,uBAAwB,AACxB,gBAAiB,AACjB,SAAU,CACX,AAED,uBACE,YAAa,CACd,AAED,0BACE,YAAa,AACb,cAAe,CAChB,AAED,6BACE,SAAU,AACV,OAAQ,AACR,kBAAmB,AACnB,QAAS,AACT,MAAO,AACP,gBAAiB,AACjB,UAAY,CACb,AAED,mCACE,iBAAkB,CACnB\",\"file\":\"vue-loading.css\",\"sourcesContent\":[\".vld-overlay {\\n  bottom: 0;\\n  left: 0;\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  align-items: center;\\n  display: none;\\n  justify-content: center;\\n  overflow: hidden;\\n  z-index: 1\\n}\\n\\n.vld-overlay.is-active {\\n  display: flex\\n}\\n\\n.vld-overlay.is-full-page {\\n  z-index: 999;\\n  position: fixed\\n}\\n\\n.vld-overlay .vld-background {\\n  bottom: 0;\\n  left: 0;\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  background: #fff;\\n  opacity: 0.5\\n}\\n\\n.vld-overlay .vld-icon, .vld-parent {\\n  position: relative\\n}\\n\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"R7hf\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: \"badgeColumn\",\n  props: {\n    rowData: {\n      type: Object,\n      required: true\n    },\n    rowIndex: {\n      type: Number\n    }\n  },\n  data: function data() {\n    return {\n      classObject: {\n        \"badge-warning\": this.rowIndex % 6 === 0,\n        \"badge-primary\": this.rowIndex % 6 === 1,\n        \"badge-danger\": this.rowIndex % 6 === 2,\n        \"badge-info\": this.rowIndex % 6 === 3,\n        \"badge-violet\": this.rowIndex % 6 === 4,\n        \"badge-dark-blue\": this.rowIndex % 6 === 5\n      }\n    };\n  }\n});\n\n/***/ }),\n\n/***/ \"RHNw\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"circle\",class:_vm.classObject})}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ \"Rrel\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = __webpack_require__(\"TcQ7\");\nvar gOPN = __webpack_require__(\"n0T6\").f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n\n\n/***/ }),\n\n/***/ \"SYh3\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"MbHo\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"rjj0\")(\"745170b4\", content, true);\n\n/***/ }),\n\n/***/ \"UqI+\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*global ActiveXObject, window, console, define, module, jQuery */\n//jshint unused:false, strict: false\n\n/*\n    PDFObject v2.1.1\n    https://github.com/pipwerks/PDFObject\n    Copyright (c) 2008-2018 Philip Hutchison\n    MIT-style license: http://pipwerks.mit-license.org/\n    UMD module pattern from https://github.com/umdjs/umd/blob/master/templates/returnExports.js\n*/\n\n(function (root, factory) {\n    if (true) {\n        // AMD. Register as an anonymous module.\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if (typeof module === 'object' && module.exports) {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    } else {\n        // Browser globals (root is window)\n        root.PDFObject = factory();\n  }\n}(this, function () {\n\n    \"use strict\";\n    //jshint unused:true\n\n    //PDFObject is designed for client-side (browsers), not server-side (node)\n    //Will choke on undefined navigator and window vars when run on server\n    //Return boolean false and exit function when running server-side\n\n    if(typeof window === \"undefined\" || typeof navigator === \"undefined\"){ return false; }\n\n    var pdfobjectversion = \"2.1.1\",\n        ua = window.navigator.userAgent,\n\n        //declare booleans\n        supportsPDFs,\n        isIE,\n        supportsPdfMimeType = (typeof navigator.mimeTypes['application/pdf'] !== \"undefined\"),\n        supportsPdfActiveX,\n        isModernBrowser = (function (){ return (typeof window.Promise !== \"undefined\"); })(),\n        isFirefox = (function (){ return (ua.indexOf(\"irefox\") !== -1); } )(),\n        isFirefoxWithPDFJS = (function (){\n            //Firefox started shipping PDF.js in Firefox 19.\n            //If this is Firefox 19 or greater, assume PDF.js is available\n            if(!isFirefox){ return false; }\n            //parse userAgent string to get release version (\"rv\")\n            //ex: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:57.0) Gecko/20100101 Firefox/57.0\n            return (parseInt(ua.split(\"rv:\")[1].split(\".\")[0], 10) > 18);\n        })(),\n        isIOS = (function (){ return (/iphone|ipad|ipod/i.test(ua.toLowerCase())); })(),\n\n        //declare functions\n        createAXO,\n        buildFragmentString,\n        log,\n        embedError,\n        embed,\n        getTargetElement,\n        generatePDFJSiframe,\n        generateEmbedElement;\n\n\n    /* ----------------------------------------------------\n       Supporting functions\n       ---------------------------------------------------- */\n\n    createAXO = function (type){\n        var ax;\n        try {\n            ax = new ActiveXObject(type);\n        } catch (e) {\n            ax = null; //ensure ax remains null\n        }\n        return ax;\n    };\n\n    //IE11 still uses ActiveX for Adobe Reader, but IE 11 doesn't expose\n    //window.ActiveXObject the same way previous versions of IE did\n    //window.ActiveXObject will evaluate to false in IE 11, but \"ActiveXObject\" in window evaluates to true\n    //so check the first one for older IE, and the second for IE11\n    //FWIW, MS Edge (replacing IE11) does not support ActiveX at all, both will evaluate false\n    //Constructed as a method (not a prop) to avoid unneccesarry overhead -- will only be evaluated if needed\n    isIE = function (){ return !!(window.ActiveXObject || \"ActiveXObject\" in window); };\n\n    //If either ActiveX support for \"AcroPDF.PDF\" or \"PDF.PdfCtrl\" are found, return true\n    //Constructed as a method (not a prop) to avoid unneccesarry overhead -- will only be evaluated if needed\n    supportsPdfActiveX = function (){ return !!(createAXO(\"AcroPDF.PDF\") || createAXO(\"PDF.PdfCtrl\")); };\n\n    //Determines whether PDF support is available\n    supportsPDFs = (\n        //as of iOS 12, inline PDF rendering is still not supported in Safari or native webview\n        //3rd-party browsers (eg Chrome, Firefox) use Apple's webview for rendering, and thus the same result as Safari\n        //Therefore if iOS, we shall assume that PDF support is not available\n        !isIOS && (\n            //Modern versions of Firefox come bundled with PDFJS\n            isFirefoxWithPDFJS || \n            //Browsers that still support the original MIME type check\n            supportsPdfMimeType || (\n                //Pity the poor souls still using IE\n                isIE() && supportsPdfActiveX()\n            )\n        )\n    );\n\n    //Create a fragment identifier for using PDF Open parameters when embedding PDF\n    buildFragmentString = function(pdfParams){\n\n        var string = \"\",\n            prop;\n\n        if(pdfParams){\n\n            for (prop in pdfParams) {\n                if (pdfParams.hasOwnProperty(prop)) {\n                    string += encodeURIComponent(prop) + \"=\" + encodeURIComponent(pdfParams[prop]) + \"&\";\n                }\n            }\n\n            //The string will be empty if no PDF Params found\n            if(string){\n\n                string = \"#\" + string;\n\n                //Remove last ampersand\n                string = string.slice(0, string.length - 1);\n\n            }\n\n        }\n\n        return string;\n\n    };\n\n    log = function (msg){\n        if(typeof console !== \"undefined\" && console.log){\n            console.log(\"[PDFObject] \" + msg);\n        }\n    };\n\n    embedError = function (msg){\n        log(msg);\n        return false;\n    };\n\n    getTargetElement = function (targetSelector){\n\n        //Default to body for full-browser PDF\n        var targetNode = document.body;\n\n        //If a targetSelector is specified, check to see whether\n        //it's passing a selector, jQuery object, or an HTML element\n\n        if(typeof targetSelector === \"string\"){\n\n            //Is CSS selector\n            targetNode = document.querySelector(targetSelector);\n\n        } else if (typeof jQuery !== \"undefined\" && targetSelector instanceof jQuery && targetSelector.length) {\n\n            //Is jQuery element. Extract HTML node\n            targetNode = targetSelector.get(0);\n\n        } else if (typeof targetSelector.nodeType !== \"undefined\" && targetSelector.nodeType === 1){\n\n            //Is HTML element\n            targetNode = targetSelector;\n\n        }\n\n        return targetNode;\n\n    };\n\n    generatePDFJSiframe = function (targetNode, url, pdfOpenFragment, PDFJS_URL, id){\n\n        var fullURL = PDFJS_URL + \"?file=\" + encodeURIComponent(url) + pdfOpenFragment;\n        var scrollfix = (isIOS) ? \"-webkit-overflow-scrolling: touch; overflow-y: scroll; \" : \"overflow: hidden; \";\n        var iframe = \"<div style='\" + scrollfix + \"position: absolute; top: 0; right: 0; bottom: 0; left: 0;'><iframe  \" + id + \" src='\" + fullURL + \"' style='border: none; width: 100%; height: 100%;' frameborder='0'></iframe></div>\";\n        targetNode.className += \" pdfobject-container\";\n        targetNode.style.position = \"relative\";\n        targetNode.style.overflow = \"auto\";\n        targetNode.innerHTML = iframe;\n        return targetNode.getElementsByTagName(\"iframe\")[0];\n\n    };\n\n    generateEmbedElement = function (targetNode, targetSelector, url, pdfOpenFragment, width, height, id){\n\n        var style = \"\";\n\n        if(targetSelector && targetSelector !== document.body){\n            style = \"width: \" + width + \"; height: \" + height + \";\";\n        } else {\n            style = \"position: absolute; top: 0; right: 0; bottom: 0; left: 0; width: 100%; height: 100%;\";\n        }\n\n        targetNode.className += \" pdfobject-container\";\n        targetNode.innerHTML = \"<embed \" + id + \" class='pdfobject' src='\" + url + pdfOpenFragment + \"' type='application/pdf' style='overflow: auto; \" + style + \"'/>\";\n\n        return targetNode.getElementsByTagName(\"embed\")[0];\n\n    };\n\n    embed = function(url, targetSelector, options){\n\n        //Ensure URL is available. If not, exit now.\n        if(typeof url !== \"string\"){ return embedError(\"URL is not valid\"); }\n\n        //If targetSelector is not defined, convert to boolean\n        targetSelector = (typeof targetSelector !== \"undefined\") ? targetSelector : false;\n\n        //Ensure options object is not undefined -- enables easier error checking below\n        options = (typeof options !== \"undefined\") ? options : {};\n\n        //Get passed options, or set reasonable defaults\n        var id = (options.id && typeof options.id === \"string\") ? \"id='\" + options.id + \"'\" : \"\",\n            page = (options.page) ? options.page : false,\n            pdfOpenParams = (options.pdfOpenParams) ? options.pdfOpenParams : {},\n            fallbackLink = (typeof options.fallbackLink !== \"undefined\") ? options.fallbackLink : true,\n            width = (options.width) ? options.width : \"100%\",\n            height = (options.height) ? options.height : \"100%\",\n            assumptionMode = (typeof options.assumptionMode === \"boolean\") ? options.assumptionMode : true,\n            forcePDFJS = (typeof options.forcePDFJS === \"boolean\") ? options.forcePDFJS : false,\n            PDFJS_URL = (options.PDFJS_URL) ? options.PDFJS_URL : false,\n            targetNode = getTargetElement(targetSelector),\n            fallbackHTML = \"\",\n            pdfOpenFragment = \"\",\n            fallbackHTML_default = \"<p>This browser does not support inline PDFs. Please download the PDF to view it: <a href='[url]'>Download PDF</a></p>\";\n\n        //If target element is specified but is not valid, exit without doing anything\n        if(!targetNode){ return embedError(\"Target element cannot be determined\"); }\n\n\n        //page option overrides pdfOpenParams, if found\n        if(page){\n            pdfOpenParams.page = page;\n        }\n\n        //Stringify optional Adobe params for opening document (as fragment identifier)\n        pdfOpenFragment = buildFragmentString(pdfOpenParams);\n\n        //Do the dance\n\n        //If the forcePDFJS option is invoked, skip everything else and embed as directed\n        if(forcePDFJS && PDFJS_URL){\n\n            return generatePDFJSiframe(targetNode, url, pdfOpenFragment, PDFJS_URL, id);\n\n        //If traditional support is provided, or if this is a modern browser and not iOS (see comment for supportsPDFs declaration)\n        } else if(supportsPDFs || (assumptionMode && isModernBrowser && !isIOS)){\n\n            return generateEmbedElement(targetNode, targetSelector, url, pdfOpenFragment, width, height, id);\n\n        //If everything else has failed and a PDFJS fallback is provided, try to use it\n        } else if(PDFJS_URL){\n\n            return generatePDFJSiframe(targetNode, url, pdfOpenFragment, PDFJS_URL, id);\n\n        } else {\n\n            //Display the fallback link if available\n            if(fallbackLink){\n\n                fallbackHTML = (typeof fallbackLink === \"string\") ? fallbackLink : fallbackHTML_default;\n                targetNode.innerHTML = fallbackHTML.replace(/\\[url\\]/g, url);\n\n            }\n\n            return embedError(\"This browser does not support embedded PDFs\");\n\n        }\n\n    };\n\n    return {\n        embed: function (a,b,c){ return embed(a,b,c); },\n        pdfobjectversion: (function () { return pdfobjectversion; })(),\n        supportsPDFs: (function (){ return supportsPDFs; })()\n    };\n\n}));\n\n/***/ }),\n\n/***/ \"XMpX\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_BadgeColumn_vue__ = __webpack_require__(\"R7hf\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_1099f53e_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_BadgeColumn_vue__ = __webpack_require__(\"RHNw\");\nfunction injectStyle (ssrContext) {\n  __webpack_require__(\"FrRU\")\n}\nvar normalizeComponent = __webpack_require__(\"VU/8\")\n/* script */\n\n/* template */\n\n/* template functional */\n  var __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-1099f53e\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_BadgeColumn_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_1099f53e_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_BadgeColumn_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ \"ZZvs\":\n/***/ (function(module, exports, __webpack_require__) {\n\n!function(t,e){ true?module.exports=e():\"function\"==typeof define&&define.amd?define(\"VueLoading\",[],e):\"object\"==typeof exports?exports.VueLoading=e():t.VueLoading=e()}(\"undefined\"!=typeof self?self:this,function(){return function(t){var e={};function i(n){if(e[n])return e[n].exports;var r=e[n]={i:n,l:!1,exports:{}};return t[n].call(r.exports,r,r.exports,i),r.l=!0,r.exports}return i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},i.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var r in t)i.d(n,r,function(e){return t[e]}.bind(null,r));return n},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,\"a\",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p=\"\",i(i.s=1)}([function(t,e,i){},function(t,e,i){\"use strict\";i.r(e);var n=\"undefined\"!=typeof window?window.HTMLElement:Object,r={mounted:function(){document.addEventListener(\"focusin\",this.focusIn)},methods:{focusIn:function(t){if(this.isActive&&t.target!==this.$el&&!this.$el.contains(t.target)){var e=this.container?this.container:this.isFullPage?null:this.$el.parentElement;(this.isFullPage||e&&e.contains(t.target))&&(t.preventDefault(),this.$el.focus())}}},beforeDestroy:function(){document.removeEventListener(\"focusin\",this.focusIn)}};function a(t,e,i,n,r,a,o,s){var u,l=\"function\"==typeof t?t.options:t;if(e&&(l.render=e,l.staticRenderFns=i,l._compiled=!0),n&&(l.functional=!0),a&&(l._scopeId=\"data-v-\"+a),o?(u=function(t){(t=t||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||\"undefined\"==typeof __VUE_SSR_CONTEXT__||(t=__VUE_SSR_CONTEXT__),r&&r.call(this,t),t&&t._registeredComponents&&t._registeredComponents.add(o)},l._ssrRegister=u):r&&(u=s?function(){r.call(this,this.$root.$options.shadowRoot)}:r),u)if(l.functional){l._injectStyles=u;var c=l.render;l.render=function(t,e){return u.call(e),c(t,e)}}else{var d=l.beforeCreate;l.beforeCreate=d?[].concat(d,u):[u]}return{exports:t,options:l}}var o=a({name:\"spinner\",props:{color:{type:String,default:\"#000\"},height:{type:Number,default:64},width:{type:Number,default:64}}},function(){var t=this.$createElement,e=this._self._c||t;return e(\"svg\",{attrs:{viewBox:\"0 0 38 38\",xmlns:\"http://www.w3.org/2000/svg\",width:this.width,height:this.height,stroke:this.color}},[e(\"g\",{attrs:{fill:\"none\",\"fill-rule\":\"evenodd\"}},[e(\"g\",{attrs:{transform:\"translate(1 1)\",\"stroke-width\":\"2\"}},[e(\"circle\",{attrs:{\"stroke-opacity\":\".25\",cx:\"18\",cy:\"18\",r:\"18\"}}),e(\"path\",{attrs:{d:\"M36 18c0-9.94-8.06-18-18-18\"}},[e(\"animateTransform\",{attrs:{attributeName:\"transform\",type:\"rotate\",from:\"0 18 18\",to:\"360 18 18\",dur:\"0.8s\",repeatCount:\"indefinite\"}})],1)])])])},[],!1,null,null,null).exports,s=a({name:\"dots\",props:{color:{type:String,default:\"#000\"},height:{type:Number,default:240},width:{type:Number,default:60}}},function(){var t=this.$createElement,e=this._self._c||t;return e(\"svg\",{attrs:{viewBox:\"0 0 120 30\",xmlns:\"http://www.w3.org/2000/svg\",fill:this.color,width:this.width,height:this.height}},[e(\"circle\",{attrs:{cx:\"15\",cy:\"15\",r:\"15\"}},[e(\"animate\",{attrs:{attributeName:\"r\",from:\"15\",to:\"15\",begin:\"0s\",dur:\"0.8s\",values:\"15;9;15\",calcMode:\"linear\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"fill-opacity\",from:\"1\",to:\"1\",begin:\"0s\",dur:\"0.8s\",values:\"1;.5;1\",calcMode:\"linear\",repeatCount:\"indefinite\"}})]),e(\"circle\",{attrs:{cx:\"60\",cy:\"15\",r:\"9\",\"fill-opacity\":\"0.3\"}},[e(\"animate\",{attrs:{attributeName:\"r\",from:\"9\",to:\"9\",begin:\"0s\",dur:\"0.8s\",values:\"9;15;9\",calcMode:\"linear\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"fill-opacity\",from:\"0.5\",to:\"0.5\",begin:\"0s\",dur:\"0.8s\",values:\".5;1;.5\",calcMode:\"linear\",repeatCount:\"indefinite\"}})]),e(\"circle\",{attrs:{cx:\"105\",cy:\"15\",r:\"15\"}},[e(\"animate\",{attrs:{attributeName:\"r\",from:\"15\",to:\"15\",begin:\"0s\",dur:\"0.8s\",values:\"15;9;15\",calcMode:\"linear\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"fill-opacity\",from:\"1\",to:\"1\",begin:\"0s\",dur:\"0.8s\",values:\"1;.5;1\",calcMode:\"linear\",repeatCount:\"indefinite\"}})])])},[],!1,null,null,null).exports,u=a({name:\"bars\",props:{color:{type:String,default:\"#000\"},height:{type:Number,default:40},width:{type:Number,default:40}}},function(){var t=this.$createElement,e=this._self._c||t;return e(\"svg\",{attrs:{xmlns:\"http://www.w3.org/2000/svg\",viewBox:\"0 0 30 30\",height:this.height,width:this.width,fill:this.color}},[e(\"rect\",{attrs:{x:\"0\",y:\"13\",width:\"4\",height:\"5\"}},[e(\"animate\",{attrs:{attributeName:\"height\",attributeType:\"XML\",values:\"5;21;5\",begin:\"0s\",dur:\"0.6s\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"y\",attributeType:\"XML\",values:\"13; 5; 13\",begin:\"0s\",dur:\"0.6s\",repeatCount:\"indefinite\"}})]),e(\"rect\",{attrs:{x:\"10\",y:\"13\",width:\"4\",height:\"5\"}},[e(\"animate\",{attrs:{attributeName:\"height\",attributeType:\"XML\",values:\"5;21;5\",begin:\"0.15s\",dur:\"0.6s\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"y\",attributeType:\"XML\",values:\"13; 5; 13\",begin:\"0.15s\",dur:\"0.6s\",repeatCount:\"indefinite\"}})]),e(\"rect\",{attrs:{x:\"20\",y:\"13\",width:\"4\",height:\"5\"}},[e(\"animate\",{attrs:{attributeName:\"height\",attributeType:\"XML\",values:\"5;21;5\",begin:\"0.3s\",dur:\"0.6s\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"y\",attributeType:\"XML\",values:\"13; 5; 13\",begin:\"0.3s\",dur:\"0.6s\",repeatCount:\"indefinite\"}})])])},[],!1,null,null,null).exports,l=a({name:\"vue-loading\",mixins:[r],props:{active:Boolean,programmatic:Boolean,container:[Object,Function,n],isFullPage:{type:Boolean,default:!0},transition:{type:String,default:\"fade\"},canCancel:Boolean,onCancel:{type:Function,default:function(){}},color:String,backgroundColor:String,opacity:Number,width:Number,height:Number,zIndex:Number,loader:{type:String,default:\"spinner\"}},data:function(){return{isActive:this.active}},components:{Spinner:o,Dots:s,Bars:u},beforeMount:function(){this.programmatic&&(this.container?(this.isFullPage=!1,this.container.appendChild(this.$el)):document.body.appendChild(this.$el))},mounted:function(){this.programmatic&&(this.isActive=!0),document.addEventListener(\"keyup\",this.keyPress)},methods:{cancel:function(){this.canCancel&&this.isActive&&(this.hide(),this.onCancel.apply(null,arguments))},hide:function(){var t=this;this.$emit(\"hide\"),this.$emit(\"update:active\",!1),this.programmatic&&(this.isActive=!1,setTimeout(function(){var e;t.$destroy(),void 0!==(e=t.$el).remove?e.remove():e.parentNode.removeChild(e)},150))},keyPress:function(t){27===t.keyCode&&this.cancel()}},watch:{active:function(t){this.isActive=t}},beforeDestroy:function(){document.removeEventListener(\"keyup\",this.keyPress)}},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i(\"transition\",{attrs:{name:t.transition}},[i(\"div\",{directives:[{name:\"show\",rawName:\"v-show\",value:t.isActive,expression:\"isActive\"}],staticClass:\"vld-overlay is-active\",class:{\"is-full-page\":t.isFullPage},style:{zIndex:this.zIndex},attrs:{tabindex:\"0\",\"aria-busy\":t.isActive,\"aria-label\":\"Loading\"}},[i(\"div\",{staticClass:\"vld-background\",style:{background:this.backgroundColor,opacity:this.opacity},on:{click:function(e){return e.preventDefault(),t.cancel(e)}}}),i(\"div\",{staticClass:\"vld-icon\"},[t._t(\"before\"),t._t(\"default\",[i(t.loader,{tag:\"component\",attrs:{color:t.color,width:t.width,height:t.height}})]),t._t(\"after\")],2)])])},[],!1,null,null,null).exports,c=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return{show:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:e,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:i,a=Object.assign({},e,n,{programmatic:!0}),o=new(t.extend(l))({el:document.createElement(\"div\"),propsData:a}),s=Object.assign({},i,r);return Object.keys(s).map(function(t){o.$slots[t]=s[t]}),o}}};i(0);l.install=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},n=c(t,e,i);t.$loading=n,t.prototype.$loading=n};e.default=l}]).default});\n\n/***/ }),\n\n/***/ \"aFK5\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(\"gAsd\"), __esModule: true };\n\n/***/ }),\n\n/***/ \"d5lM\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar interpretacija = __webpack_require__(\"3r/r\");\n\nmodule.exports = {\n  Interpretation: function Interpretation(test, result, jedinica, dref, gref, site, interp, extend, spec) {\n\n    var rezultat = result.trim();\n\n    switch (interp) {\n      case \"none\":\n        return [test, rezultat, interpretacija.None(rezultat, dref, gref)[0], jedinica, \"/\", interpretacija.None(rezultat, dref, gref)[1], extend];\n        break;\n      case \"A\":\n        return [test, rezultat, interpretacija.Standard(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.Standard(rezultat, dref, gref)[1], extend];\n        break;\n      case \"ogtt\":\n        if (dref == \"0\" && gref == \"0\") {\n          var reference = \"/\";\n          return [test, rezultat, interpretacija.Standard(rezultat, dref, gref)[0], jedinica, reference, interpretacija.Standard(rezultat, dref, gref)[1], extend];\n        } else if (dref == \"0\" && gref != \"0\") {\n          var reference = \"< \" + gref;\n          return [test, rezultat, interpretacija.Less(rezultat, dref, gref)[0], jedinica, reference, interpretacija.Less(rezultat, dref, gref)[1], extend];\n        } else {\n          var reference = dref + \" - \" + gref;\n          return [test, rezultat, interpretacija.Standard(rezultat, dref, gref)[0], jedinica, reference, interpretacija.Standard(rezultat, dref, gref)[1], extend];\n        }\n        break;\n      case \"insul\":\n        if (dref == \"0\" && gref == \"0\") {\n          var reference = \"/\";\n        } else {\n          var reference = dref + \" - \" + gref;\n        }\n        return [test, rezultat, interpretacija.Standard(rezultat, dref, gref)[0], jedinica, reference, interpretacija.Standard(rezultat, dref, gref)[1], extend];\n        break;\n      case \"less\":\n        return [test, rezultat, interpretacija.Less(rezultat, dref, gref)[0], jedinica, \" < \" + gref, interpretacija.Less(rezultat, dref, gref)[1], extend];\n        break;\n      case \"lesseq\":\n        return [test, rezultat, interpretacija.LessEqual(rezultat, dref, gref)[0], jedinica, \" ≤ \" + gref, interpretacija.LessEqual(rezultat, dref, gref)[1], extend];\n        break;\n      case \"lesspl\":\n        return [test, rezultat, interpretacija.LessPlus(rezultat, dref, gref)[0], jedinica, \" < \" + gref + \" x 10^6\", interpretacija.LessPlus(rezultat, dref, gref)[1], extend];\n        break;\n      case \"infekc\":\n        return [test, rezultat, interpretacija.Infekcija(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.Infekcija(rezultat, dref, gref)[1], extend];\n        break;\n      case \"grt\":\n        return [test, rezultat, interpretacija.Greater(rezultat, dref, gref)[0], jedinica, \" > \" + gref, interpretacija.Greater(rezultat, dref, gref)[1], extend];\n        break;\n      case \"grtno\":\n        return [test, rezultat, interpretacija.GreaterNoInterp(rezultat, dref, gref)[0], jedinica, \" > \" + gref, interpretacija.GreaterNoInterp(rezultat, dref, gref)[1], extend];\n        break;\n      case \"grtpl\":\n        return [test, rezultat, interpretacija.Greater(rezultat, dref, gref)[0], jedinica, \" > \" + gref + \" x 10^6\", interpretacija.Greater(rezultat, dref, gref)[1], extend];\n        break;\n      case \"grtepl\":\n        return [test, rezultat, interpretacija.GreaterEqual(rezultat, dref, gref)[0], jedinica, \" ≥ \" + gref + \" x 10^6\", interpretacija.GreaterEqual(rezultat, dref, gref)[1], extend];\n        break;\n      case \"grte\":\n        return [test, rezultat, interpretacija.GreaterEqual(rezultat, dref, gref)[0], jedinica, \" ≥ \" + gref, interpretacija.GreaterEqual(rezultat, dref, gref)[1], extend];\n        break;\n      case \"neg\":\n        return [test, rezultat, interpretacija.Negativan(rezultat, dref, gref)[0], jedinica, \"negativan\", interpretacija.Negativan(rezultat, dref, gref)[1], extend];\n        break;\n      case \"trag\":\n        return [test, rezultat, interpretacija.Trag(rezultat, dref, gref)[0], jedinica, \"trag\", interpretacija.Trag(rezultat, dref, gref)[1], extend];\n        break;\n      case \"reakt\":\n        return [test, rezultat, interpretacija.Reaktivan(rezultat, dref, gref)[0], jedinica, \"negativan\", interpretacija.Reaktivan(rezultat, dref, gref)[1], extend];\n        break;\n      case \"norm\":\n        return [test, rezultat, interpretacija.Normalan(rezultat, dref, gref)[0], jedinica, \"normalna\", interpretacija.Normalan(rezultat, dref, gref)[1], extend];\n        break;\n      case \"norma\":\n        return [test, rezultat, interpretacija.Normalan(rezultat, dref, gref)[0], jedinica, \"normalan\", interpretacija.Normalan(rezultat, dref, gref)[1], extend];\n        break;\n      case \"ured\":\n        return [test, rezultat, interpretacija.Uredan(rezultat, dref, gref)[0], jedinica, \"uredna\", interpretacija.Uredan(rezultat, dref, gref)[1], extend];\n        break;\n      case \"plus\":\n        return [test, rezultat, interpretacija.Plus(rezultat, dref, gref)[0], jedinica, \"+ + +\", interpretacija.Plus(rezultat, dref, gref)[1], extend];\n        break;\n      case \"morf\":\n        return [test, rezultat, interpretacija.Morf(rezultat, dref, gref)[0], jedinica, gref, interpretacija.Morf(rezultat, dref, gref)[1], extend];\n        break;\n      case \"titar\":\n        return [test, rezultat, interpretacija.Titar(rezultat, dref, gref)[0], jedinica, \"< \" + dref + \":\" + gref, interpretacija.Titar(rezultat, dref, gref)[1], extend];\n        break;\n      case \"tsh\":\n        return [test, rezultat, interpretacija.TSH(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.TSH(rezultat, dref, gref)[1], extend];\n        break;\n      case \"trg\":\n        return [test, rezultat, interpretacija.TRG(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.TRG(rezultat, dref, gref)[1], extend];\n        break;\n      case \"hol\":\n        return [test, rezultat, interpretacija.HOL(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.HOL(rezultat, dref, gref)[1], extend];\n        break;\n      case \"hdl\":\n        return [test, rezultat, interpretacija.HDL(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.HDL(rezultat, dref, gref)[1], extend];\n        break;\n      case \"ldl\":\n        return [test, rezultat, interpretacija.LDL(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.LDL(rezultat, dref, gref)[1], extend];\n        break;\n      case \"fpsa\":\n        return [test, rezultat, interpretacija.fPSA(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.fPSA(rezultat, dref, gref)[1], extend];\n        break;\n      case \"sediment\":\n        return [test, rezultat, interpretacija.Sedimentacija(rezultat, dref, gref)[0], jedinica, \"< \" + gref, interpretacija.Sedimentacija(rezultat, dref, gref)[1], extend];\n        break;\n      case \"bistar\":\n        return [test, rezultat, interpretacija.Bistar(rezultat, dref, gref)[0], jedinica, \"bistar\", interpretacija.Bistar(rezultat, dref, gref)[1], extend];\n        break;\n      case \"boja\":\n        return [test, rezultat, interpretacija.Boja(rezultat, dref, gref)[0], jedinica, \"žut\", interpretacija.Boja(rezultat, dref, gref)[1], extend];\n        break;\n      case \"bojasp\":\n        return [test, rezultat, interpretacija.BojaSpermiogram(rezultat, dref, gref)[0], jedinica, \"blijedo žut\", interpretacija.BojaSpermiogram(rezultat, dref, gref)[1], extend];\n        break;\n      case \"nesto\":\n        return [test, rezultat, interpretacija.Nesto(rezultat, dref, gref)[0], jedinica, \"nešto\", interpretacija.Nesto(rezultat, dref, gref)[1], extend];\n        break;\n      case \"exists\":\n        return [test, rezultat, interpretacija.Exists(rezultat, dref, gref)[0], jedinica, \" \", interpretacija.Exists(rezultat, dref, gref)[1], extend];\n        break;\n      case \"prisutno\":\n        return [test, rezultat, interpretacija.Prisutno(rezultat, dref, gref)[0], jedinica, \"0\", interpretacija.Prisutno(rezultat, dref, gref)[1], extend];\n        break;\n      case \"gljivice\":\n        return [test, rezultat, interpretacija.Gljivice(rezultat, dref, gref)[0], jedinica, \"0\", interpretacija.Gljivice(rezultat, dref, gref)[1], extend];\n        break;\n      case \"leuer\":\n        return [test, rezultat, interpretacija.LeuEr(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.LeuEr(rezultat, dref, gref)[1], extend];\n        break;\n      case \"nema\":\n        return [test, rezultat, interpretacija.Nema(rezultat, dref, gref)[0], jedinica, \"nema\", interpretacija.Nema(rezultat, dref, gref)[1], extend];\n        break;\n      case \"blst\":\n        return [test, rezultat, interpretacija.Blasti(rezultat, dref, gref)[0], jedinica, gref, interpretacija.Blasti(rezultat, dref, gref)[1], extend];\n        break;\n      case \"leu\":\n        return [test, rezultat, interpretacija.LeuErc(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.LeuErc(rezultat, dref, gref)[1], extend];\n        break;\n      case \"spec\":\n        return [test, rezultat, interpretacija.Specific(rezultat, dref, gref)[0], jedinica, spec, interpretacija.Specific(rezultat, dref, gref)[1], extend];\n        break;\n\n      case \"da\":\n        return [test, rezultat, interpretacija.Da(rezultat, dref, gref)[0], jedinica, \"da\", interpretacija.Da(rezultat, dref, gref)[1], extend];\n        break;\n      case \"e04\":\n        return [test, rezultat, interpretacija.SpermIzgled(rezultat, dref, gref)[0], jedinica, \"uredan\", interpretacija.SpermIzgled(rezultat, dref, gref)[1], extend];\n        break;\n      case \"e05\":\n        return [test, rezultat, interpretacija.SpermBoja(rezultat, dref, gref)[0], jedinica, \"sivo bijela\", interpretacija.SpermBoja(rezultat, dref, gref)[1], extend];\n        break;\n\n      default:\n        return [test, rezultat, interpretacija.None(rezultat, dref, gref)[0], jedinica, \"/\", interpretacija.None(rezultat, dref, gref)[1], extend];\n        break;\n    }\n  }\n};\n\n/***/ }),\n\n/***/ \"gAsd\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"G5/o\");\nvar $Object = __webpack_require__(\"FeBl\").Object;\nmodule.exports = function getOwnPropertyNames(it) {\n  return $Object.getOwnPropertyNames(it);\n};\n\n\n/***/ }),\n\n/***/ \"hLWQ\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    hex2rgb: function hex2rgb(hex, opacity) {\n        hex = (hex + \"\").trim();\n\n        var rgb = null;\n        var match = hex.match(/^#?(([0-9a-zA-Z]{3}){1,3})$/);\n\n        if (!match) {\n            return null;\n        }\n\n        rgb = {};\n\n        hex = match[1];\n\n        if (hex.length === 6) {\n            rgb.r = parseInt(hex.substring(0, 2), 16);\n            rgb.g = parseInt(hex.substring(2, 4), 16);\n            rgb.b = parseInt(hex.substring(4, 6), 16);\n        } else if (hex.length === 3) {\n            rgb.r = parseInt(hex.substring(0, 1) + hex.substring(0, 1), 16);\n            rgb.g = parseInt(hex.substring(1, 2) + hex.substring(1, 2), 16);\n            rgb.b = parseInt(hex.substring(2, 3) + hex.substring(2, 3), 16);\n        }\n\n        rgb.css = \"rgb\" + (opacity ? \"a\" : \"\") + \"(\";\n        rgb.css += rgb.r + \",\" + rgb.g + \",\" + rgb.b;\n        rgb.css += (opacity ? \",\" + opacity : \"\") + \")\";\n\n        return rgb;\n    }\n});\n\n/***/ }),\n\n/***/ \"iF2Y\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"FZ+f\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \".circle[data-v-1099f53e]{width:.4rem;height:.4rem;border-radius:50%;display:inline-block}\", \"\", {\"version\":3,\"sources\":[\"C:/Users/atom/Desktop/BioLAB/client/src/components/obrada/BadgeColumn.vue\"],\"names\":[],\"mappings\":\"AACA,yBACE,YAAc,AACd,aAAe,AACf,kBAAmB,AACnB,oBAAsB,CACvB\",\"file\":\"BadgeColumn.vue\",\"sourcesContent\":[\"\\n.circle[data-v-1099f53e] {\\n  width: 0.4rem;\\n  height: 0.4rem;\\n  border-radius: 50%;\\n  display: inline-block;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"n0T6\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = __webpack_require__(\"Ibhu\");\nvar hiddenKeys = __webpack_require__(\"xnc9\").concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/17.f39de7bafe9a25a5274d.js","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3f02d9e7\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Obrada.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Obrada.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-3f02d9e7\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Obrada.vue\"\n/* template functional */\n  var __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-3f02d9e7\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/obrada/Obrada.vue\n// module id = 0fl9\n// module chunks = 17","module.exports = {\r\n  None: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\")    \r\n    // (Interpretacija: \"none\")\r\n    return [\" \", \"No Class\"];\r\n  },\r\n\r\n  Standard: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"A\", \"ogtt\", \"insul\")\r\n    if (isNaN(rezultat) || rezultat === \"\" || (dref == \"0\" && gref == \"0\")) {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) < Number(Math.abs(dref))) {\r\n      return [\"L\", \"Red\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (Number(rezultat) === Number(Math.abs(dref)) || Number(rezultat) === Number(Math.abs(gref))) {\r\n      return [\" \", \"Yellow\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Less: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"less\")\r\n    if (rezultat.includes(\"pozitivan\") || rezultat.includes(\"pos\")) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) >= Number(Math.abs(gref))) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (rezultat.includes(\"pozitivan\") || rezultat.includes(\"pos\")) {\r\n      return [\"H\", \"Red\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  LessEqual: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\")   \r\n    // (Interpretacija: \"grte\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"L\", \"Red\"];\r\n    } else if (Number(rezultat) == Number(Math.abs(gref))) {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  LessPlus: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"less\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (isNaN(rezultat)){\r\n      return [\"H\", \"Red\"];\r\n    }else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\r\n      return [\" \", \"Yellow\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Greater: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\")   \r\n    // (Interpretacija: \"grt\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) < Number(Math.abs(gref))) {\r\n      return [\"L\", \"Red\"];\r\n    } else if (Number(rezultat) == Number(Math.abs(gref))) {\r\n      return [\" \", \"Yellow\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  GreaterNoInterp: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\")   \r\n    // (Interpretacija: \"grt\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) < Number(Math.abs(gref))) {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) == Number(Math.abs(gref))) {\r\n      return [\" \", \"No Class\"];\r\n    } else {\r\n      return [\" \", \"No Class\"];\r\n    }\r\n  },\r\n\r\n  GreaterEqual: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\")   \r\n    // (Interpretacija: \"grte\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) < Number(Math.abs(gref))) {\r\n      return [\"L\", \"Red\"];\r\n    } else if (Number(rezultat) == Number(Math.abs(gref))) {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Negativan: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"neg\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat.includes(\"pozitivan\") || rezultat.includes(\"pos\")) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (rezultat.includes(\"negativan\") || rezultat.includes(\"neg\")) {\r\n      return [\" \", \"Green\"];\r\n    } else if (rezultat.includes(\"graničan\")) {\r\n      return [\" \", \"Yellow\"];\r\n    } else {\r\n      return [\" \", \"Red\"];\r\n    }\r\n  },\r\n\r\n  Trag: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"neg\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat.includes(\"pozitivan\") || rezultat.includes(\"pos\")) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (rezultat.includes(\"negativan\") || rezultat.includes(\"neg\") || rezultat.includes(\"trag\")) {\r\n      return [\" \", \"Green\"];\r\n    } else if (rezultat.includes(\"graničan\")) {\r\n      return [\" \", \"Yellow\"];\r\n    } else {\r\n      return [\" \", \"Red\"];\r\n    }\r\n  },\r\n\r\n  Reaktivan: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"reakt\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat.includes(\"reaktivan\")) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (rezultat.includes(\"negativan\")) {\r\n      return [\" \", \"Green\"];\r\n    } else if (rezultat.includes(\"graničan\")) {\r\n      return [\" \", \"Yellow\"];\r\n    } else {\r\n      return [\" \", \"No Class\"];\r\n    }\r\n  },\r\n\r\n  Normalan: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"norm\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat.toLowerCase().includes(\"norm\") && !rezultat.toLowerCase().includes(\"nije\")) {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  Uredan: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"ured\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat.toLowerCase().includes(\"ured\") && !rezultat.toLowerCase().includes(\"nije\")) {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  Plus: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"ured\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat.trim() === \"+++\" || rezultat.trim() === \"+ + +\") {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n  \r\n\r\n\r\n  //\r\n\r\n\r\n\r\n  Da: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"da\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat.trim() === \"da\" || rezultat.trim() === \"Da\") {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  SpermIzgled: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"norm\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat.toLowerCase() === \"uredan\" || rezultat.toLowerCase() === \"uredno\") {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  SpermBoja: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"norm\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat.toLowerCase() === \"sivo bijela\") {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n  \r\n\r\n\r\n  //\r\n\r\n\r\n\r\n  Infekcija: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"infekc\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"pasivna infekcija\", \"Green\"]; // pasivna infekcija\r\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\r\n      return [\"siva zona\", \"Yellow\"]; // siva zona\r\n    } else {\r\n      return [\"svježa infekcija\", \"Red\"]; // svježa infekcija\r\n    }\r\n  },\r\n\r\n  TSH: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"tsh\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"hipotireoza\", \"Red\"];\r\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\r\n      return [\"eutireoza\", \"Green\"];\r\n    } else {\r\n      return [\"hipertireoza\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  TRG: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"trg\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"visoko\", \"Red\"]; // visoko\r\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\r\n      return [\"granično\", \"Yellow\"]; // granično\r\n    } else {\r\n      return [\"idealno\", \"Green\"]; // idealno\r\n    }\r\n  },\r\n\r\n  HOL: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"hol\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"visoko\", \"Red\"]; // visoko\r\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\r\n      return [\"granično\", \"Yellow\"]; // granično\r\n    } else {\r\n      return [\"idealno\", \"Green\"]; // idealno\r\n    }\r\n  },\r\n\r\n  HDL: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"hdl\")    \r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"nema rizika\", \"Green\"]; // nema rizika\r\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\r\n      return [\"rizik\", \"Yellow\"]; // rizik\r\n    } else {\r\n      return [\"visok rizik\", \"Red\"]; // visok rizik\r\n    }\r\n  },\r\n\r\n  LDL: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"ldl\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"visok rizik\", \"Red\"]; // visok rizik\r\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\r\n      return [\"granično\", \"Yellow\"]; // granično\r\n    } else {\r\n      return [\"optimalno\", \"Green\"]; // optimalno\r\n    }\r\n  },\r\n\r\n  fPSA: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\")  \r\n    // (Interpretacija: \"fpsa\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"benigni proces\", \"Green\"]; // benigni proces\r\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\r\n      return [\"siva zona\", \"Yellow\"]; // siva zona\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  Sedimentacija: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"sediment\")\r\n    if (rezultat.includes(\"/\")) {\r\n      var rez1 = rezultat.split(\"/\")[0].trim();\r\n      var rez2 = rezultat.split(\"/\")[1].trim();\r\n    }else{\r\n      var rez1 = rezultat.trim();\r\n      var rez2 = rezultat.trim();\r\n    }\r\n\r\n    if (isNaN(rez1) || rez1 === \"\" || isNaN(rez2) || rez2 === \"\" ) {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rez1) > Number(Math.abs(gref))) { // } else if (Number(rez1) > Number(Math.abs(gref)) || Number(rez2) > Number(Math.abs(gref))) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (Number(rez1) === Number(Math.abs(gref))) { // } else if (Number(rez1) === Number(Math.abs(gref)) || Number(rez2) === Number(Math.abs(gref))) {\r\n      return [\" \", \"Yellow\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Bistar: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"bistar\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat === \"bistar\") {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  Boja: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"boja\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat === \"svjetlo žut\" || rezultat === \"žut\") {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  BojaSpermiogram: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"boja\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat === \"blijedo žut\") {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  Nesto: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"nesto\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat.includes(\"masa\") || rezultat.includes(\"dosta\") || rezultat.includes(\"malo\")) {\r\n      return [\"H\", \"Red\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Exists: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"exists\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else {      \r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  Prisutno: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"prisutno\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(gref)) {\r\n      return [\"H\", \"Red\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Gljivice: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"gljivice\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(gref)) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (isNaN(rezultat)) {\r\n      return [\"H\", \"Red\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  LeuEr: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"leuer\")\r\n    if (rezultat.toUpperCase().includes(\"DOSTA\")) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(gref)) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (Number(rezultat) === Number(gref)) {\r\n      return [\" \", \"Yellow\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Nema: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"exists\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else {      \r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  Blasti: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // DKS: Blasti (Interpretacija: \"blst\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) < Number(Math.abs(dref))) {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (Number(rezultat) === Number(Math.abs(dref)) || Number(rezultat) === Number(Math.abs(gref))) {\r\n      return [\" \", \"No Class\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Morf: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // Spermiogram: Uredne morfološke forme (Interpretacija: \"morf\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) === Number(Math.abs(dref)) || Number(rezultat) === Number(Math.abs(gref))) {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  LeuErc: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // Sediment: Leukociti, Eritrociti (Interpretacija: \"leu\")\r\n    if (rezultat.includes(\"-\")) {\r\n      var rez = rezultat.split(\"-\")[1].trim();      \r\n    }else{\r\n      var rez = rezultat.trim();      \r\n    }\r\n    \r\n    if (rez === \"\") {     \r\n      return [\" \", \"No Class\"];\r\n    } else if (isNaN(rez)) {      \r\n      return [\"H\", \"Red\"];\r\n    } else if (Number(rez) > Number(gref)) {      \r\n      return [\"H\", \"Red\"];\r\n    } else if (Number(rez) === Number(gref)) {      \r\n      return [\" \", \"Yellow\"];\r\n    } else {      \r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Titar: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"titar\")\r\n    if (rezultat.includes(\":\")) {\r\n      var rez1 = rezultat.split(\":\")[0].trim();\r\n      var rez2 = rezultat.split(\":\")[1].trim();\r\n    }else{\r\n      var rez1 = rezultat.trim();\r\n      var rez2 = \"\";\r\n    }\r\n\r\n    if (isNaN(rez1) || rez1 === \"\" || rez1 != \"1\" || isNaN(rez2) || rez2 === \"\" ) {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rez2) > Number(Math.abs(gref))) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (Number(rez2) === Number(Math.abs(gref))) {\r\n      return [\" \", \"Yellow\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Specific: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"spec\")\r\n    return [\" \", \"No Class\"];\r\n  },\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/obrada/functions/interpretacija.js","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3f02d9e7\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Obrada.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"4b41f25e\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/vue-style-loader!./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-3f02d9e7\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/sass-loader/lib/loader.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/obrada/Obrada.vue\n// module id = 4wj/\n// module chunks = 17","let data = {\r\n  test: [\"\", \"test\"]\r\n};\r\n\r\nlet rez = {\r\n  neg: [\"\", \"negativan\", \"graničan\", \"pozitivan\"],\r\n  reakt: [\"\", \"negativan\", \"graničan\", \"reaktivan\"]\r\n};\r\n\r\nexport default {\r\n  data,\r\n  rez\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/obrada/data-izbornik/izbornik.js","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".collapse-page__content[data-v-3f02d9e7]{padding:2rem}.collapse-page__content__title[data-v-3f02d9e7]{font-size:1.375rem;font-weight:700}.icon-bar a[data-v-3f02d9e7]{color:#fff;text-decoration:none}.icon-bar a[data-v-3f02d9e7]:hover{color:#4ae387}i[data-v-3f02d9e7]:hover{color:#4ae387!important}.circle[data-v-3f02d9e7]{width:1rem;opacity:.5;height:1rem;border-radius:50%;display:inline-block}\", \"\", {\"version\":3,\"sources\":[\"C:/Users/atom/Desktop/BioLAB/client/src/components/obrada/Obrada.vue\"],\"names\":[],\"mappings\":\"AACA,yCACE,YAAc,CACf,AACD,gDACI,mBAAoB,AACpB,eAAkB,CACrB,AACD,6BACE,WAAY,AACZ,oBAAsB,CACvB,AACD,mCACE,aAAe,CAChB,AACD,yBACE,uBAA0B,CAC3B,AACD,yBACE,WAAY,AACZ,WAAa,AACb,YAAa,AACb,kBAAmB,AACnB,oBAAsB,CACvB\",\"file\":\"Obrada.vue\",\"sourcesContent\":[\"\\n.collapse-page__content[data-v-3f02d9e7] {\\n  padding: 2rem;\\n}\\n.collapse-page__content__title[data-v-3f02d9e7] {\\n    font-size: 1.375rem;\\n    font-weight: bold;\\n}\\n.icon-bar a[data-v-3f02d9e7] {\\n  color: #fff;\\n  text-decoration: none;\\n}\\n.icon-bar a[data-v-3f02d9e7]:hover {\\n  color: #4ae387;\\n}\\ni[data-v-3f02d9e7]:hover {\\n  color: #4ae387 !important;\\n}\\n.circle[data-v-3f02d9e7] {\\n  width: 1rem;\\n  opacity: 0.5;\\n  height: 1rem;\\n  border-radius: 50%;\\n  display: inline-block;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-3f02d9e7\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/sass-loader/lib/loader.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/obrada/Obrada.vue\n// module id = EiqO\n// module chunks = 17","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1099f53e\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./BadgeColumn.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"3e059dfc\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/vue-style-loader!./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-1099f53e\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/sass-loader/lib/loader.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/obrada/BadgeColumn.vue\n// module id = FrRU\n// module chunks = 17 33 44 66","// 19.1.2.7 Object.getOwnPropertyNames(O)\nrequire('./_object-sap')('getOwnPropertyNames', function () {\n  return require('./_object-gopn-ext').f;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.object.get-own-property-names.js\n// module id = G5/o\n// module chunks = 17","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"collapse-page\"},[(_vm.show)?_c('div',{staticClass:\"flex md12\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.main && _vm.pdf),expression:\"!main && pdf\"}]},[_c('div',{staticClass:\"btn-container\"},[_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.verificiran),expression:\"verificiran\"}],staticClass:\"btn btn-secondary btn-sm\",on:{\"click\":function($event){$event.preventDefault();_vm.Nazad()}}},[_c('span',{staticClass:\"fa fa-step-backward\"}),_vm._v(\"\\n            \"+_vm._s(\" NAZAD\")+\"\\n          \")]),_vm._v(\" \"),_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.verificiran),expression:\"!verificiran\"}],staticClass:\"btn btn-secondary-danger btn-sm\",on:{\"click\":function($event){$event.preventDefault();_vm.Nazad()}}},[_c('span',{staticClass:\"fa fa-step-backward\"}),_vm._v(\"\\n            \"+_vm._s(\" NAZAD\")+\"\\n          \")]),_vm._v(\" \"),_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.email_button && _vm.verificiran),expression:\"email_button && verificiran\"}],staticClass:\"btn btn-secondary btn-sm pull-right\",attrs:{\"disabled\":!_vm.Email(_vm.email)},on:{\"click\":function($event){$event.preventDefault();_vm.MailDialog()}}},[_c('span',{staticClass:\"glyphicon glyphicon-send\"}),_vm._v(\"\\n            \"+_vm._s(\" Pošalji\")+\"\\n          \")]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.email_button && _vm.verificiran),expression:\"email_button && verificiran\"}],staticClass:\"form-group with-icon-left pull-right\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.email),expression:\"email\"}],attrs:{\"size\":\"40\",\"id\":\"input-icon-left\",\"name\":\"input-icon-left\",\"title\":\" \",\"required\":\"\"},domProps:{\"value\":(_vm.email)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.email=$event.target.value}}}),_vm._v(\" \"),_c('i',{staticClass:\"fa fa-envelope-o icon-left input-icon\"}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(\"\\n                \"+_vm._s(\"Email adresa\")+\"\\n              \")]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]),_vm._v(\" \"),_c('hr'),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"pdf-container\"}})]),_vm._v(\" \"),_c('vuestic-widget',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.main),expression:\"main\"}],attrs:{\"headerText\":_vm.header,\"pagination\":_vm.pagination,\"main\":_vm.main,\"data_pid\":Number(_vm.data_pid),\"data_length\":Number(_vm.data_length),\"rezultati_length\":_vm.Results.length,\"spol\":_vm.data_spol,\"data_min\":Number(_vm.data_min),\"datum\":_vm.query_date,\"today\":_vm.today_date,\"forward_disabled\":_vm.forward_disabled,\"backward_disabled\":_vm.backward_disabled}},[_c('vuestic-accordion-obrada',_vm._l((_vm.uzorci),function(uzorak){return _c('vuestic-collapse-obrada',{directives:[{name:\"show\",rawName:\"v-show\",value:(!uzorak.removed),expression:\"!uzorak.removed\"}],key:uzorak.sid,attrs:{\"id\":uzorak.sid,\"sample\":uzorak,\"retest\":_vm.save_retest}},[_c('span',{attrs:{\"slot\":\"header\",\"id\":uzorak.sid},slot:\"header\"},[_vm._v(_vm._s(uzorak.sid))]),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"body\"},slot:\"body\"},[_c('div',{staticStyle:{\"line-height\":\"10px\"}},[_vm._v(\" \")]),_vm._v(\" \"),(uzorak.tip.includes('Mikrobiologija'))?_c('div',{staticClass:\"va-row\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_table),expression:\"show_table\"}],staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN'\n                          )?_c('td'):_vm._e(),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(\"ANALIZA\"))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(\"REZULTAT\"))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(\"JEDINICA\"))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(\"REFERENCE\"))]),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN'\n                          )?_c('td'):_vm._e(),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN' &&\n                            _vm.MicrobiologyScenario != 'MAIBPoR'\n                          )?_c('td',[_vm._v(\"\\n                          \"+_vm._s(\"PONOVI\")+\"\\n                        \")]):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR')?_c('td',{staticStyle:{\"text-transform\":\"none\"}},[_vm._v(\"\\n                          \"+_vm._s(\"Bakterije\")+\"\\n                        \")]):_vm._e(),_vm._v(\" \"),_c('td')])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.rezultati),function(test,index){return _c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(index < 1),expression:\"index < 1\"}],key:test.labassay_id,class:{\n                          'table-danger':\n                            test.rezultat_m.length &&\n                            test.rezultat_m[0].pozitivan,\n                          'table-success':\n                            test.rezultat_m.length &&\n                            test.rezultat_m[0].negativan,\n                          'table-warning': false,\n                        },attrs:{\"align\":\"middle\"}},[(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN'\n                          )?_c('td',[(uzorak.status === 'ZAPRIMLJEN')?_c('button',{staticClass:\"btn btn-secondary-danger btn-micro\",staticStyle:{\"padding\":\"0.4px\",\"padding-left\":\"2px\"},on:{\"click\":function($event){$event.preventDefault();_vm.MicroResultSelect($event)}}},[_c('i',{staticClass:\"fa fa-bug\",on:{\"click\":function($event){$event.preventDefault();_vm.MicroResultSelect($event)}}})]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ZAPRIMLJEN')?_c('button',{staticClass:\"btn btn-secondary-danger btn-micro\",staticStyle:{\"padding\":\"0.6px\",\"padding-right\":\"1px\",\"padding-left\":\"1.2px\"},on:{\"click\":function($event){$event.preventDefault();_vm.ResetSample($event)}}},[_c('i',{staticClass:\"fa fa-backward\",on:{\"click\":function($event){$event.preventDefault();_vm.ResetSample($event)}}})]):_vm._e()]):_vm._e(),_vm._v(\" \"),_c('td',{attrs:{\"title\":test.analit}},[_c('span',[_vm._v(_vm._s(test.ime))])]),_vm._v(\" \"),(test.rezultat_m.length > 0)?_c('td',[_c('button',{staticClass:\"btn btn-primary btn-micro\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();_vm.OpenMicro($event, test)}}},[_c('span',{staticClass:\"glyphicon glyphicon-search\",attrs:{\"id\":test.labassay_id}}),_vm._v(\"\\n                            \"+_vm._s(\"VIŠE\")+\"\\n                          \")])]):_vm._e(),_vm._v(\" \"),(test.rezultat_m.length < 1)?_c('td',[_c('button',{staticClass:\"btn btn-pale btn-micro\",attrs:{\"id\":test.labassay_id}},[_c('span',{staticClass:\"glyphicon glyphicon-ban-circle\",attrs:{\"id\":test.labassay_id}}),_vm._v(\"\\n                            \"+_vm._s(\"VIŠE\")+\"\\n                          \")])]):_vm._e(),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(test.unit))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(\"/\"))]),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN'\n                          )?_c('td',[_c('i',{staticClass:\"glyphicon glyphicon-stats\",staticStyle:{\"font-size\":\"15px\",\"color\":\"#f7cc36\",\"opacity\":\"0\"},attrs:{\"id\":\"reference\",\"title\":\" \"}})]):_vm._e(),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN' &&\n                            _vm.MicrobiologyScenario != 'MAIBPoR'\n                          )?_c('td',[_c('button',{staticClass:\"btn btn-pale btn-micro\"},[_c('span',{staticClass:\"glyphicon glyphicon-ban-circle\"})])]):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR')?_c('td',[_c('button',{staticClass:\"btn btn-primary btn-micro\",on:{\"click\":function($event){$event.preventDefault();_vm.OpenMicroSelect($event, test)}}},[_c('span',{staticClass:\"fa fa-bug\"})])]):_vm._e(),_vm._v(\" \"),_c('td',[_c('i',{class:{\n                              'fa fa-exclamation-triangle icon-right input-icon error-icon': false,\n                            },on:{\"click\":function($event){$event.preventDefault();_vm.Exclamation(test)}}}),_vm._v(\" \"),_c('i',{class:{\n                              'fa fa-check success-icon icon-right input-icon': false,\n                            }})])])}))])])]):_vm._e(),_vm._v(\" \"),(!uzorak.tip.includes('Mikrobiologija'))?_c('div',{staticClass:\"va-row\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_table),expression:\"show_table\"}],staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN'\n                          )?_c('td'):_vm._e(),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(\"ANALIZA\"))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(\"REZULTAT\"))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(\"JEDINICA\"))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(\"REFERENCE\"))]),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN'\n                          )?_c('td'):_vm._e(),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN' &&\n                            _vm.calculated\n                          )?_c('td',[_vm._v(\"\\n                          \"+_vm._s(\"AKCIJA\")+\"\\n                        \")]):_vm._e(),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN'\n                          )?_c('td',[_vm._v(\"\\n                          \"+_vm._s(\"PONOVI\")+\"\\n                        \")]):_vm._e(),_vm._v(\" \"),_c('td')])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.rezultati),function(test){return _c('tr',{key:test.labassay_id,class:{\n                          'table-danger':\n                            _vm.Interpretacija(\n                              test.analit,\n                              test.rezultat,\n                              test.unit,\n                              test.dRef,\n                              test.gRef,\n                              _vm.$store.state.site,\n                              test.interp,\n                              test.extend,\n                              _vm.spec\n                            )[5] === 'Red' && !test.multidata,\n                          'table-success':\n                            _vm.Interpretacija(\n                              test.analit,\n                              test.rezultat,\n                              test.unit,\n                              test.dRef,\n                              test.gRef,\n                              _vm.$store.state.site,\n                              test.interp,\n                              test.extend,\n                              _vm.spec\n                            )[5] === 'Green' && !test.multidata,\n                          'table-warning':\n                            _vm.Interpretacija(\n                              test.analit,\n                              test.rezultat,\n                              test.unit,\n                              test.dRef,\n                              test.gRef,\n                              _vm.$store.state.site,\n                              test.interp,\n                              test.extend,\n                              _vm.spec\n                            )[5] === 'Yellow' && !test.multidata,\n                        },attrs:{\"align\":\"middle\"}},[(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN'\n                          )?_c('td',[(!test.multidata)?_c('i',{staticClass:\"glyphicon glyphicon-object-align-bottom\",staticStyle:{\"color\":\"#4ae387\"},on:{\"click\":function($event){$event.preventDefault();_vm.SelectAnalyser(test)}}}):_vm._e(),_vm._v(\" \"),(test.multidata)?_c('span',{staticClass:\"glyphicon glyphicon-object-align-bottom\",staticStyle:{\"color\":\"#d9d9d9\"}}):_vm._e()]):_vm._e(),_vm._v(\" \"),_c('td',{attrs:{\"title\":test.analit}},[_c('span',{on:{\"contextmenu\":function($event){_vm.LabAssayEval($event, test)},\"click\":function($event){$event.preventDefault();_vm.Evaluation(test)}}},[_vm._v(_vm._s(test.ime))])]),_vm._v(\" \"),(!test.multidata)?_c('td',[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == false),expression:\"test.edit == false\"}],staticStyle:{\"display\":\"inline\",\"font-size\":\"14px\",\"line-height\":\"4.5px\"}},[_c('label',[_c('strong',[_vm._v(_vm._s(test.rezultat))])])]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"}],staticStyle:{\"display\":\"inline\",\"line-height\":\"5px\"}},[(test.select_options != undefined)?_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],staticStyle:{\"width\":\"110px\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(test, \"rezultat\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((test.select_options),function(option){return _c('option',{key:option},[_vm._v(_vm._s(option))])})):_vm._e()]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"}],staticStyle:{\"display\":\"inline\"}},[(test.select_options === undefined)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],staticStyle:{\"width\":\"110px\",\"font-size\":\"12px\",\"line-height\":\"7px\"},domProps:{\"value\":(test.rezultat)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(test, \"rezultat\", $event.target.value)}}}):_vm._e()]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.vise > 2),expression:\"test.vise > 2\"}],on:{\"click\":function($event){$event.preventDefault();_vm.GetResults(test, uzorak.status)}}},[_c('i',{staticClass:\"fa fa-star\",staticStyle:{\"font-size\":\"5px\",\"color\":\"#e34a4a\"},attrs:{\"id\":\"star\",\"title\":\" \"}})]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.vise < 3),expression:\"test.vise < 3\"}]},[_c('i',{staticClass:\"fa fa-star-o\",staticStyle:{\"font-size\":\"5px\",\"opacity\":\"0\"},attrs:{\"id\":\"star\",\"title\":\" \"}})])]):_vm._e(),_vm._v(\" \"),(test.multidata && test.realizovan)?_c('td',[_c('button',{staticClass:\"btn btn-primary btn-micro\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();\n                              _vm.MultiGet(\n                                $event,\n                                test.ime,\n                                test.analit,\n                                test.rezultat,\n                                test.odobren\n                              )\n                            }}},[_c('span',{staticClass:\"glyphicon glyphicon-search\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();\n                                _vm.MultiGet(\n                                  $event,\n                                  test.ime,\n                                  test.analit,\n                                  test.rezultat,\n                                  test.odobren\n                                )\n                              }}}),_vm._v(\"\\n                            \"+_vm._s(\"VIŠE\")+\"\\n                          \")]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.multi_count > 2),expression:\"test.multi_count > 2\"}],on:{\"click\":function($event){$event.preventDefault();\n                              _vm.GetResultsMulti(test, uzorak.status)\n                            }}},[_c('i',{staticClass:\"fa fa-star\",staticStyle:{\"font-size\":\"5px\",\"color\":\"#e34a4a\"},attrs:{\"id\":\"star\",\"title\":\" \"}})]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.multi_count < 3),expression:\"test.multi_count < 3\"}]},[_c('i',{staticClass:\"fa fa-star-o\",staticStyle:{\"font-size\":\"5px\",\"opacity\":\"0\"},attrs:{\"id\":\"star\",\"title\":\" \"}})])]):_vm._e(),_vm._v(\" \"),(test.multidata && !test.realizovan)?_c('td',[_c('button',{staticClass:\"btn btn-warning btn-micro\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();\n                              _vm.MultiGet(\n                                $event,\n                                test.ime,\n                                test.analit,\n                                test.rezultat,\n                                test.odobren\n                              )\n                            }}},[_c('span',{staticClass:\"glyphicon glyphicon-search\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();\n                                _vm.MultiGet(\n                                  $event,\n                                  test.ime,\n                                  test.analit,\n                                  test.rezultat,\n                                  test.odobren\n                                )\n                              }}}),_vm._v(\"\\n                            \"+_vm._s(\"VIŠE\")+\"\\n                          \")]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.multi_count > 2),expression:\"test.multi_count > 2\"}],on:{\"click\":function($event){$event.preventDefault();\n                              _vm.GetResultsMulti(test, uzorak.status)\n                            }}},[_c('i',{staticClass:\"fa fa-star\",staticStyle:{\"font-size\":\"5px\",\"color\":\"#e34a4a\"},attrs:{\"id\":\"star\",\"title\":\" \"}})]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.multi_count < 3),expression:\"test.multi_count < 3\"}]},[_c('i',{staticClass:\"fa fa-star-o\",staticStyle:{\"font-size\":\"5px\",\"opacity\":\"0\"},attrs:{\"id\":\"star\",\"title\":\" \"}})])]):_vm._e(),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(test.unit))]),_vm._v(\" \"),(!test.multidata)?_c('td',[_vm._v(\"\\n                          \"+_vm._s(_vm.Interpretacija(\n                              test.analit,\n                              test.rezultat,\n                              test.unit,\n                              test.dRef,\n                              test.gRef,\n                              _vm.$store.state.site,\n                              test.interp,\n                              test.extend,\n                              _vm.spec\n                            )[4])+\"\\n                        \")]):_vm._e(),_vm._v(\" \"),(test.multidata)?_c('td',[_vm._v(_vm._s(\"/\"))]):_vm._e(),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN'\n                          )?_c('td',[(!test.multidata)?_c('i',{staticClass:\"glyphicon glyphicon-stats\",staticStyle:{\"font-size\":\"15px\",\"color\":\"#f7cc36\"},attrs:{\"id\":\"reference\",\"title\":\" \"},on:{\"click\":function($event){$event.preventDefault();_vm.Reference($event, test)}}}):_vm._e(),_vm._v(\" \"),(test.multidata)?_c('i',{staticClass:\"glyphicon glyphicon-stats\",staticStyle:{\"font-size\":\"15px\",\"color\":\"#f7cc36\",\"opacity\":\"0\"},attrs:{\"id\":\"reference\",\"title\":\" \"}}):_vm._e()]):_vm._e(),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN' &&\n                            _vm.calculated &&\n                            !test.calculated\n                          )?_c('td',[_c('button',{staticClass:\"btn btn-pale btn-micro\"},[_c('span',{staticClass:\"glyphicon glyphicon-ban-circle\"})])]):_vm._e(),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN' &&\n                            _vm.calculated &&\n                            test.calculated\n                          )?_c('td',[_c('button',{staticClass:\"btn btn-primary btn-micro\",attrs:{\"id\":test.test},on:{\"click\":function($event){$event.preventDefault();\n                              _vm.Calculate(\n                                $event,\n                                test.labassay_id,\n                                test.ime,\n                                test.id\n                              )\n                            }}},[_c('span',{staticClass:\"fa fa-calculator\",attrs:{\"id\":test.test}})])]):_vm._e(),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN' &&\n                            (test.rezultat === '' ||\n                              test.manual ||\n                              test.calculated)\n                          )?_c('td',[_c('button',{staticClass:\"btn btn-pale btn-micro\"},[_c('span',{staticClass:\"glyphicon glyphicon-ban-circle\"})])]):_vm._e(),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN' &&\n                            test.rezultat != '' &&\n                            !test.manual &&\n                            !test.calculated\n                          )?_c('td',[(!test.retest)?_c('button',{staticClass:\"btn btn-primary btn-micro\",attrs:{\"id\":test.test},on:{\"click\":function($event){$event.preventDefault();_vm.RetestEnable($event)}}},[_c('span',{staticClass:\"fa fa-refresh\",attrs:{\"id\":test.test}})]):_vm._e(),_vm._v(\" \"),(test.retest)?_c('button',{staticClass:\"btn btn-info btn-micro\",attrs:{\"id\":test.test},on:{\"click\":function($event){$event.preventDefault();_vm.RetestDisable($event)}}},[_c('span',{staticClass:\"glyphicon glyphicon-duplicate\",attrs:{\"id\":test.test}})]):_vm._e()]):_vm._e(),_vm._v(\" \"),_c('td',[_c('i',{class:{\n                              'fa fa-exclamation-triangle icon-right input-icon error-icon':\n                                _vm.Interpretacija(\n                                  test.analit,\n                                  test.rezultat,\n                                  test.unit,\n                                  test.dRef,\n                                  test.gRef,\n                                  _vm.$store.state.site,\n                                  test.interp,\n                                  test.extend,\n                                  _vm.spec\n                                )[5] === 'Red' && !test.multidata,\n                            },on:{\"click\":function($event){$event.preventDefault();_vm.Exclamation(test)}}}),_vm._v(\" \"),_c('i',{class:{\n                              'fa fa-check success-icon icon-right input-icon':\n                                _vm.Interpretacija(\n                                  test.analit,\n                                  test.rezultat,\n                                  test.unit,\n                                  test.dRef,\n                                  test.gRef,\n                                  _vm.$store.state.site,\n                                  test.interp,\n                                  test.extend,\n                                  _vm.spec\n                                )[5] === 'Green' && !test.multidata,\n                            }})])])}))])])]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticStyle:{\"min-height\":\"10px\"}}),_vm._v(\" \"),(_vm.verificiran)?_c('div',{staticClass:\"va-row\"},[_c('div',{staticClass:\"flex md12\"},[_c('vuestic-collapse-nalaz',{attrs:{\"final\":_vm.verificiran,\"final_pdf\":_vm.final_pdf,\"samples\":_vm.samples,\"pdf\":_vm.link,\"pacijent\":_vm.ime + ' ' + _vm.prezime}},[_c('span',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_vm._v(\"Nalaz\")]),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"body\"},slot:\"body\"},[_c('div',{staticClass:\"va-row\"})])])],1)]):_vm._e(),_vm._v(\" \"),_c('div',[_c('hr')]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-3\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"btn-container\"},[_c('button',{staticClass:\"btn btn-secondary btn-sm wizard-back pull-left\",on:{\"click\":function($event){$event.preventDefault();_vm.Povratak()}}},[_c('span',{staticClass:\"fa fa-backward\"}),_vm._v(\"\\n                \"+_vm._s(\" POVRATAK\")+\"\\n              \")]),_vm._v(\" \"),(_vm.partials_condition && !_vm.verificiran)?_c('button',{staticClass:\"btn btn-secondary-warning btn-sm wizard-back pull-right\",staticStyle:{\"text-transform\":\"none\",\"color\":\"#e34a4a\"},on:{\"click\":function($event){$event.preventDefault();_vm.Partials()}}},[_c('span',{staticClass:\"fa fa-file-pdf-o\",staticStyle:{\"color\":\"#e34a4a\"}}),_vm._v(\"\\n                \"+_vm._s(\" Djelimični nalaz\")+\"\\n              \")]):_vm._e()])])])],1),_vm._v(\" \"),_c('vuestic-modal-multi',{ref:\"largeModalMulti\",attrs:{\"show\":_vm.show,\"sample\":_vm.sample,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(_vm._s(_vm.naslov))]),_vm._v(\" \"),_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"10%\"}}),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"ANALIT\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"30%\"}},[_vm._v(_vm._s(\"REZULTAT\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"10%\"}},[_vm._v(_vm._s(\"JEDINICA\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"REFERENCE\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"10%\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.analiti),function(test){return _c('tr',{key:test.labID,class:{\n                  'table-danger':\n                    _vm.Interpretacija(\n                      test.opis,\n                      test.rezultat,\n                      test.jedinica,\n                      test.refd,\n                      test.refg,\n                      _vm.$store.state.site,\n                      test.interp,\n                      test.extend,\n                      _vm.spec\n                    )[5] === 'Red' && !test.rezultat_multiple.length,\n                  'table-success':\n                    _vm.Interpretacija(\n                      test.opis,\n                      test.rezultat,\n                      test.jedinica,\n                      test.refd,\n                      test.refg,\n                      _vm.$store.state.site,\n                      test.interp,\n                      test.extend,\n                      _vm.spec\n                    )[5] === 'Green' && !test.rezultat_multiple.length,\n                  'table-warning':\n                    _vm.Interpretacija(\n                      test.opis,\n                      test.rezultat,\n                      test.jedinica,\n                      test.refd,\n                      test.refg,\n                      _vm.$store.state.site,\n                      test.interp,\n                      test.extend,\n                      _vm.spec\n                    )[5] === 'Yellow' && !test.rezultat_multiple.length,\n                },attrs:{\"align\":\"middle\"}},[(test.flag != '')?_c('td',[_vm._v(_vm._s(test.flag))]):_vm._e(),_vm._v(\" \"),(test.flag === '')?_c('td',[_vm._v(\" \")]):_vm._e(),_vm._v(\" \"),_c('td',{attrs:{\"title\":test.opis}},[_vm._v(_vm._s(test.naziv))]),_vm._v(\" \"),_c('td',{attrs:{\"id\":test.analit}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == false),expression:\"test.edit == false\"}]},[_c('label',[_c('strong',[_vm._v(_vm._s(test.rezultat))])])]),_vm._v(\" \"),(\n                      test.select_options != undefined &&\n                      (test.kod === 's03' ||\n                        test.kod === 's04' ||\n                        test.kod === 's08' ||\n                        test.kod === 's09')\n                    )?_c('select',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"},{name:\"model\",rawName:\"v-model\",value:(test.rezultat_multiple),expression:\"test.rezultat_multiple\"}],staticStyle:{\"min-width\":\"200px\"},attrs:{\"multiple\":\"\",\"size\":test.select_options.length},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(test, \"rezultat_multiple\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((test.select_options),function(option){return _c('option',{key:option},[_vm._v(_vm._s(option))])})):_vm._e(),_vm._v(\" \"),(test.select_options != undefined && (test.kod != 's03' && test.kod != 's04' && test.kod != 's08' && test.kod != 's09'))?_c('select',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"},{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],staticStyle:{\"width\":\"200px\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(test, \"rezultat\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((test.select_options),function(option){return _c('option',{key:option},[_vm._v(_vm._s(option))])})):_vm._e(),_vm._v(\" \"),(test.select_options === undefined)?_c('input',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"},{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],staticStyle:{\"width\":\"200px\"},domProps:{\"value\":(test.rezultat)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(test, \"rezultat\", $event.target.value)}}}):_vm._e()]),_vm._v(\" \"),_c('td',[_vm._v(\"\\n                  \"+_vm._s(_vm.Interpretacija(\n                      test.opis,\n                      test.rezultat,\n                      test.jedinica,\n                      test.refd,\n                      test.refg,\n                      _vm.$store.state.site,\n                      test.interp,\n                      test.extend,\n                      _vm.spec\n                    )[3])+\"\\n                \")]),_vm._v(\" \"),_c('td',[_vm._v(\"\\n                  \"+_vm._s(_vm.Interpretacija(\n                      test.opis,\n                      test.rezultat,\n                      test.jedinica,\n                      test.refd,\n                      test.refg,\n                      _vm.$store.state.site,\n                      test.interp,\n                      test.extend,\n                      _vm.spec\n                    )[4])+\"\\n                \")]),_vm._v(\" \"),_c('td',[_c('i',{class:{\n                      'fa fa-exclamation-triangle icon-right input-icon error-icon':\n                        _vm.Interpretacija(\n                          test.opis,\n                          test.rezultat,\n                          test.jedinica,\n                          test.refd,\n                          test.refg,\n                          _vm.$store.state.site,\n                          test.interp,\n                          test.extend,\n                          _vm.spec\n                        )[5] === 'Red' && !test.rezultat_multiple.length,\n                    },on:{\"click\":function($event){$event.preventDefault();_vm.ExclamationMulti(test)}}}),_vm._v(\" \"),_c('i',{class:{\n                      'fa fa-check success-icon icon-right input-icon':\n                        _vm.Interpretacija(\n                          test.opis,\n                          test.rezultat,\n                          test.jedinica,\n                          test.refd,\n                          test.refg,\n                          _vm.$store.state.site,\n                          test.interp,\n                          test.extend,\n                          _vm.spec\n                        )[5] === 'Green' && !test.rezultat_multiple.length,\n                    }})])])}))])])]),_vm._v(\" \"),_c('vuestic-modal-micro-reset',{ref:\"staticModalResetSample\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s(\"Brisanje rezultata: \"))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.CurrentTest))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s(\"Jeste li sigurni da želite obrisati rezultat?\"))])])]),_vm._v(\" \"),_c('vuestic-modal-micro-bactery',{ref:\"staticModalMicroBacterySelect\",attrs:{\"show\":_vm.show,\"large\":true,\"sample\":_vm.sample,\"select\":true,\"update\":!_vm.ShowAntibiotics &&\n          !_vm.ShowBacteries &&\n          _vm.MicrobiologyScenario === 'MAIBPoR',\"povratak\":_vm.ShowAntibiotics || _vm.ShowBacteries,\"empty\":_vm.TemporaryAntibiotics.length > 0 || _vm.TemporaryBacteriesAdd.length > 0,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[(!_vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s(\"Rezultat analize: \"))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.CurrentTest))])]):_vm._e(),_vm._v(\" \"),(_vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s(\"Antibiotici | \"))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Izbornik\"))])]):_vm._e(),_vm._v(\" \"),(!_vm.ShowAntibiotics && _vm.ShowBacteries)?_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s(\"Bakterije | \"))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Izbornik\"))])]):_vm._e(),_vm._v(\" \"),_c('div',[(_vm.show_table)?_c('div',{staticClass:\"row\"},[(\n                _vm.MicrobiologyScenario === 'MAIBPoR' &&\n                _vm.ShowBacteries &&\n                !_vm.ShowAntibiotics\n              )?_c('div',{staticClass:\"col-md-1\"}):_vm._e(),_vm._v(\" \"),(\n                _vm.MicrobiologyScenario === 'MAIBPoR' &&\n                _vm.ShowBacteries &&\n                !_vm.ShowAntibiotics\n              )?_c('div',{staticClass:\"col-md-10\"},[(_vm.TemporaryBacteries.length)?_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredBacteries(1, 3)),function(bactery){return _c('div',{key:bactery._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bactery.chosen),expression:\"bactery.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bactery._id,\"type\":\"checkbox\",\"disabled\":bactery.disabled},domProps:{\"checked\":Array.isArray(bactery.chosen)?_vm._i(bactery.chosen,null)>-1:(bactery.chosen)},on:{\"click\":function($event){_vm.AddBacteries(bactery)},\"change\":function($event){var $$a=bactery.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bactery.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bactery.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bactery, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":bactery._id}},[(!bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e(),_vm._v(\" \"),(bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredBacteries(2, 3)),function(bactery){return _c('div',{key:bactery._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bactery.chosen),expression:\"bactery.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bactery._id,\"type\":\"checkbox\",\"disabled\":bactery.disabled},domProps:{\"checked\":Array.isArray(bactery.chosen)?_vm._i(bactery.chosen,null)>-1:(bactery.chosen)},on:{\"click\":function($event){_vm.AddBacteries(bactery)},\"change\":function($event){var $$a=bactery.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bactery.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bactery.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bactery, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":bactery._id}},[(!bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e(),_vm._v(\" \"),(bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredBacteries(3, 3)),function(bactery){return _c('div',{key:bactery._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bactery.chosen),expression:\"bactery.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bactery._id,\"type\":\"checkbox\",\"disabled\":bactery.disabled},domProps:{\"checked\":Array.isArray(bactery.chosen)?_vm._i(bactery.chosen,null)>-1:(bactery.chosen)},on:{\"click\":function($event){_vm.AddBacteries(bactery)},\"change\":function($event){var $$a=bactery.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bactery.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bactery.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bactery, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":bactery._id}},[(!bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e(),_vm._v(\" \"),(bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e()])])}))])]):_vm._e()]):_vm._e(),_vm._v(\" \"),(\n                _vm.MicrobiologyScenario === 'MAIBPoR' &&\n                _vm.ShowAntibiotics &&\n                !_vm.ShowBacteries\n              )?_c('div',{staticClass:\"col-md-1\"}):_vm._e(),_vm._v(\" \"),(\n                _vm.MicrobiologyScenario === 'MAIBPoR' &&\n                _vm.ShowAntibiotics &&\n                !_vm.ShowBacteries\n              )?_c('div',{staticClass:\"col-md-10\"},[(_vm.Antibiotics.length)?_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredAntibiotics(1, 3)),function(antibiotik){return _c('div',{key:antibiotik._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(antibiotik.chosen),expression:\"antibiotik.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":antibiotik._id,\"type\":\"checkbox\",\"disabled\":antibiotik.disabled},domProps:{\"checked\":Array.isArray(antibiotik.chosen)?_vm._i(antibiotik.chosen,null)>-1:(antibiotik.chosen)},on:{\"click\":function($event){_vm.AddAntibiotics(antibiotik)},\"change\":function($event){var $$a=antibiotik.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(antibiotik.chosen=$$a.concat([$$v]))}else{$$i>-1&&(antibiotik.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(antibiotik, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":antibiotik._id}},[(!antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e(),_vm._v(\" \"),(antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredAntibiotics(2, 3)),function(antibiotik){return _c('div',{key:antibiotik._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(antibiotik.chosen),expression:\"antibiotik.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":antibiotik._id,\"type\":\"checkbox\",\"disabled\":antibiotik.disabled},domProps:{\"checked\":Array.isArray(antibiotik.chosen)?_vm._i(antibiotik.chosen,null)>-1:(antibiotik.chosen)},on:{\"click\":function($event){_vm.AddAntibiotics(antibiotik)},\"change\":function($event){var $$a=antibiotik.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(antibiotik.chosen=$$a.concat([$$v]))}else{$$i>-1&&(antibiotik.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(antibiotik, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":antibiotik._id}},[(!antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e(),_vm._v(\" \"),(antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredAntibiotics(3, 3)),function(antibiotik){return _c('div',{key:antibiotik._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(antibiotik.chosen),expression:\"antibiotik.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":antibiotik._id,\"type\":\"checkbox\",\"disabled\":antibiotik.disabled},domProps:{\"checked\":Array.isArray(antibiotik.chosen)?_vm._i(antibiotik.chosen,null)>-1:(antibiotik.chosen)},on:{\"click\":function($event){_vm.AddAntibiotics(antibiotik)},\"change\":function($event){var $$a=antibiotik.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(antibiotik.chosen=$$a.concat([$$v]))}else{$$i>-1&&(antibiotik.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(antibiotik, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":antibiotik._id}},[(!antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e(),_vm._v(\" \"),(antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e()])])}))])]):_vm._e()]):_vm._e(),_vm._v(\" \"),(\n                _vm.MicrobiologyScenario === 'MAIBPoR' &&\n                !_vm.ShowAntibiotics &&\n                !_vm.ShowBacteries\n              )?_c('div',{staticClass:\"col-md-1\"}):_vm._e(),_vm._v(\" \"),(\n                _vm.MicrobiologyScenario === 'MAIBPoR' &&\n                !_vm.ShowAntibiotics &&\n                !_vm.ShowBacteries\n              )?_c('div',{staticClass:\"col-md-10\"},[(_vm.SelectedBacteries.length)?_c('vuestic-tabs-bactery',{ref:\"tabs\",attrs:{\"names\":_vm.BacteryTabs,\"tab\":_vm.CurrentTab,\"id\":_vm.CurrentTab,\"prikazi\":_vm.sample.status != 'VERIFICIRAN' && _vm.sample.status != 'ODOBREN'}},_vm._l((_vm.SelectedBacteries),function(test){return _c('div',{key:test._id,attrs:{\"slot\":_vm.CurrentTab},slot:_vm.CurrentTab},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.opis === _vm.CurrentTab),expression:\"test.opis === CurrentTab\"}],staticClass:\"row\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"left\"}},[_c('td',{staticStyle:{\"text-transform\":\"none\"},attrs:{\"width\":\"30%\"}},[_vm._v(\"\\n                              \"+_vm._s(test.antibiogram.opis)+\"\\n                            \")]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"10%\"}},[_vm._v(_vm._s(\"\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"\"))])])]),_vm._v(\" \"),_c('tbody',_vm._l((test.antibiogram.antibiotici),function(abtk){return _c('tr',{key:abtk._id,class:{\n                              'table-danger': false,\n                              'table-success': false,\n                              'table-warning': false,\n                            },attrs:{\"align\":\"left\"}},[_c('td',{attrs:{\"title\":abtk.opis}},[_vm._v(_vm._s(abtk.opis))]),_vm._v(\" \"),_c('td',[_c('bactery-radio-button',{attrs:{\"disabled\":_vm.sample.status === 'ODOBREN' ||\n                                  _vm.sample.status === 'VERIFICIRAN',\"label\":'',\"value\":'',\"id\":'' + test._id + abtk._id,\"name\":test._id + abtk._id},model:{value:(abtk.rezultat),callback:function ($$v) {_vm.$set(abtk, \"rezultat\", $$v)},expression:\"abtk.rezultat\"}})],1),_vm._v(\" \"),_c('td',[_c('postavke-radio-button',{attrs:{\"disabled\":_vm.sample.status === 'ODOBREN' ||\n                                  _vm.sample.status === 'VERIFICIRAN',\"label\":'Senzitivan',\"value\":'S',\"id\":'S' + test._id + abtk._id,\"name\":test._id + abtk._id},model:{value:(abtk.rezultat),callback:function ($$v) {_vm.$set(abtk, \"rezultat\", $$v)},expression:\"abtk.rezultat\"}})],1),_vm._v(\" \"),_c('td',[_c('postavke-radio-button',{attrs:{\"disabled\":_vm.sample.status === 'ODOBREN' ||\n                                  _vm.sample.status === 'VERIFICIRAN',\"label\":'Intermedijaran',\"value\":'I',\"id\":'I' + test._id + abtk._id,\"name\":test._id + abtk._id},model:{value:(abtk.rezultat),callback:function ($$v) {_vm.$set(abtk, \"rezultat\", $$v)},expression:\"abtk.rezultat\"}})],1),_vm._v(\" \"),_c('td',[_c('postavke-radio-button',{attrs:{\"disabled\":_vm.sample.status === 'ODOBREN' ||\n                                  _vm.sample.status === 'VERIFICIRAN',\"label\":'Rezistentan',\"value\":'R',\"id\":'R' + test._id + abtk._id,\"name\":test._id + abtk._id},model:{value:(abtk.rezultat),callback:function ($$v) {_vm.$set(abtk, \"rezultat\", $$v)},expression:\"abtk.rezultat\"}})],1)])}))])])])])})):_vm._e()],1):_vm._e(),_vm._v(\" \"),(\n                _vm.MicrobiologyScenario === 'MANBNeR' ||\n                _vm.MicrobiologyScenario === 'MANBPoR' ||\n                _vm.MicrobiologyScenario === 'MAIBNeR'\n              )?_c('div',{staticClass:\"col-md-12\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_table),expression:\"show_table\"}],staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"left\"}},[_c('td',[_vm._v(_vm._s(\"REZULTAT\"))])])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.rezultati),function(test,index){return _c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(index < 1),expression:\"index < 1\"}],key:test.labassay_id,class:{\n                        'table-danger':\n                          test.rezultat_m.length &&\n                          test.rezultat_m[0].pozitivan,\n                        'table-success':\n                          test.rezultat_m.length &&\n                          test.rezultat_m[0].negativan,\n                        'table-warning': false,\n                      },attrs:{\"align\":\"left\"}},[(\n                          _vm.sample.status != 'ODOBREN' &&\n                          _vm.sample.status != 'VERIFICIRAN'\n                        )?_c('td',[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],attrs:{\"type\":\"text\",\"id\":\"simple-textarea\",\"required\":\"\"},domProps:{\"value\":(test.rezultat)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(test, \"rezultat\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"simple-textarea\"}},[_vm._v(_vm._s(\"\"))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]):_vm._e(),_vm._v(\" \"),(\n                          _vm.sample.status === 'ODOBREN' ||\n                          _vm.sample.status === 'VERIFICIRAN'\n                        )?_c('td',[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"disabled\":\"\"}}),_vm._v(\" \"),(test.rezultat.length)?_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(test.rezultat))]):_vm._e(),_vm._v(\" \"),(!test.rezultat.length)?_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(\"Nema podataka.\"))]):_vm._e(),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]):_vm._e()])}))])])]):_vm._e()]):_vm._e()])]),_vm._v(\" \"),_c('vuestic-modal-micro-bactery',{ref:\"staticModalMicroBactery\",attrs:{\"show\":_vm.show,\"large\":true,\"sample\":_vm.sample,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s(\"Rezultat analize: \"))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.CurrentTest))])]),_vm._v(\" \"),_c('div',[(_vm.show_table)?_c('div',{staticClass:\"row\"},[(true)?_c('div',{staticClass:\"col-md-12\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_table),expression:\"show_table\"}],staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"left\"}},[_c('td',[_vm._v(_vm._s(\"REZULTAT\"))])])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.rezultati),function(test,index){return _c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(index < 1),expression:\"index < 1\"}],key:test.labassay_id,class:{\n                        'table-danger':\n                          test.rezultat_m.length &&\n                          test.rezultat_m[0].pozitivan,\n                        'table-success':\n                          test.rezultat_m.length &&\n                          test.rezultat_m[0].negativan,\n                        'table-warning': false,\n                      },attrs:{\"align\":\"left\"}},[(\n                          _vm.sample.status != 'ODOBREN' &&\n                          _vm.sample.status != 'VERIFICIRAN'\n                        )?_c('td',[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],attrs:{\"type\":\"text\",\"id\":\"simple-textarea\",\"required\":\"\"},domProps:{\"value\":(test.rezultat)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(test, \"rezultat\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"simple-textarea\"}},[_vm._v(_vm._s(\"\"))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]):_vm._e(),_vm._v(\" \"),(\n                          _vm.sample.status === 'ODOBREN' ||\n                          _vm.sample.status === 'VERIFICIRAN'\n                        )?_c('td',[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"disabled\":\"\"}}),_vm._v(\" \"),(test.rezultat.length)?_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(test.rezultat))]):_vm._e(),_vm._v(\" \"),(!test.rezultat.length)?_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(\"Nema podataka.\"))]):_vm._e(),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]):_vm._e()])}))])])]):_vm._e()]):_vm._e()])]),_vm._v(\" \"),_c('vuestic-modal-micro-result',{ref:\"staticModalSelectResult\",attrs:{\"show\":_vm.show,\"sample\":_vm.sample,\"large\":_vm.ShowAllBacteries,\"neg\":_vm.ModalNegative,\"pos\":_vm.ModalPositive,\"selected\":_vm.ModalPositiveCondition,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s(_vm.MicrobiologyModalHeader)+\" |\")]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Izbornik\"))])]),_vm._v(\" \"),(!_vm.ModalNegative && !_vm.ModalPositive)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-3\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('button',{staticClass:\"btn btn-secondary btn-sm wizard-back pull-left\",staticStyle:{\"text-transform\":\"none\",\"border\":\"0px\"},on:{\"click\":function($event){\n                    _vm.ModalNegative = true;\n                    _vm.ModalPositive = false;\n                  }}},[_vm._v(\"\\n                  \"+_vm._s(\"Negativan\")+\"\\n                \")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-3\"})])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-2\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('button',{staticClass:\"btn btn-secondary-danger btn-sm wizard-next pull-right\",staticStyle:{\"text-transform\":\"none\",\"border\":\"0px\"},on:{\"click\":function($event){\n                    _vm.ModalPositive = true;\n                    _vm.ModalNegative = false;\n                  }}},[_vm._v(\"\\n                  \"+_vm._s(\"Pozitivan\")+\"\\n                \")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"})])])]):_vm._e(),_vm._v(\" \"),(_vm.ModalNegative && !_vm.ModalPositive)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-11\"},_vm._l((_vm.MicrobiologyResult.NegativeDescriptions),function(desc,index){return _c('vuestic-radio-button',{key:index,attrs:{\"label\":_vm.MicrobiologyResult.NegativeDescriptions[index],\"id\":_vm.MicrobiologyResult.NegativeDescriptions[index],\"value\":_vm.MicrobiologyResult.NegativeDescriptions[index],\"name\":_vm.MicrobiologyResult.NegativeDescriptions[index],\"disabled\":false},model:{value:(_vm.NegativeResultSelection),callback:function ($$v) {_vm.NegativeResultSelection=$$v},expression:\"NegativeResultSelection\"}})}))]):_vm._e(),_vm._v(\" \"),(\n            !_vm.ModalNegative &&\n            _vm.ModalPositive &&\n            !_vm.MicrobiologyResult.DefaultBacteries.length\n          )?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-11\"},_vm._l((_vm.MicrobiologyResult.PositiveDescriptions),function(desc,index){return _c('vuestic-radio-button',{key:index,attrs:{\"label\":_vm.MicrobiologyResult.PositiveDescriptions[index],\"id\":_vm.MicrobiologyResult.PositiveDescriptions[index],\"value\":_vm.MicrobiologyResult.PositiveDescriptions[index],\"name\":_vm.MicrobiologyResult.PositiveDescriptions[index],\"disabled\":false},model:{value:(_vm.PositiveResultSelection),callback:function ($$v) {_vm.PositiveResultSelection=$$v},expression:\"PositiveResultSelection\"}})}))]):_vm._e(),_vm._v(\" \"),(\n            !_vm.ModalNegative &&\n            _vm.ModalPositive &&\n            _vm.MicrobiologyResult.DefaultBacteries.length\n          )?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-2\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-10\"},_vm._l((_vm.MicrobiologyResult.DefaultBacteries),function(bakt,index){return _c('div',{key:index,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bakt.chosen),expression:\"bakt.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bakt._id,\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(bakt.chosen)?_vm._i(bakt.chosen,null)>-1:(bakt.chosen)},on:{\"click\":function($event){_vm.SelectBactery(bakt, index)},\"change\":function($event){var $$a=bakt.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bakt.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bakt.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bakt, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":bakt._id}},[_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(\"\\n                      \"+_vm._s(bakt.opis)+\"\\n                    \")])])])}))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[(!_vm.ShowAllBacteries)?_c('a',{staticStyle:{\"font-size\":\"16px\",\"color\":\"#4ae387\"},attrs:{\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();_vm.ShowAllBacteries = true}}},[_vm._v(\"Prikaži više\")]):_vm._e()]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-5\"})]),_vm._v(\" \"),(_vm.ShowAllBacteries)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-10\"},_vm._l((_vm.MicrobiologyResult.RemainingBacteries),function(bakt,index){return _c('div',{key:index,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bakt.chosen),expression:\"bakt.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bakt._id,\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(bakt.chosen)?_vm._i(bakt.chosen,null)>-1:(bakt.chosen)},on:{\"click\":function($event){_vm.SelectBactery(bakt, index)},\"change\":function($event){var $$a=bakt.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bakt.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bakt.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bakt, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":bakt._id}},[_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(\"\\n                      \"+_vm._s(bakt.opis)+\"\\n                    \")])])])}))]):_vm._e()])]):_vm._e()]),_vm._v(\" \"),_c('vuestic-modal-delete',{ref:\"staticModalDeleteSample\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s(\"Brisanje uzorka: \"))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.sid))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s(\"Jeste li sigurni da želite obrisati uzorak?\"))])])]),_vm._v(\" \"),_c('vuestic-modal-comment',{ref:\"staticModalComment\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(_vm._s(\"Unos komentara za uzorak: \" + _vm.sid))]),_vm._v(\" \"),_c('div',[_c('h5')])]),_vm._v(\" \"),_c('vuestic-modal-edit',{ref:\"staticModalEditSample\",attrs:{\"show\":_vm.show,\"sample\":_vm.sid,\"action\":\"Edit\",\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(_vm._s(\"Uređivanje uzorka: \" + _vm.sid))]),_vm._v(\" \"),_c('div',[_c('h5')])]),_vm._v(\" \"),_c('vuestic-modal-mail',{ref:\"staticModalSendMail\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s(\"Slanje nalaza na adresu: \")+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(_vm.email))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s(\"Jeste li sigurni da želite poslati nalaz?\"))])])]),_vm._v(\" \"),_c('vuestic-modal-all-results',{ref:\"staticModalAllResults\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s(\"Izbor rezultata: \")+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.labassay))])]),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',[_c('td',[_vm._v(\"analizator\")]),_vm._v(\" \"),_c('td',[_vm._v(\"vrijeme\")]),_vm._v(\" \"),_c('td',[_vm._v(\"rezultat\")]),_vm._v(\" \"),_c('td',[_vm._v(\"jedinica\")]),_vm._v(\" \"),_c('td',[_vm._v(\"reference\")]),_vm._v(\" \"),(\n                      _vm.sample_status != 'ODOBREN' &&\n                      _vm.sample_status != 'VERIFICIRAN'\n                    )?_c('td',[_vm._v(\"\\n                    izbor\\n                  \")]):_vm._e(),_vm._v(\" \"),_c('td',{attrs:{\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.vise.rezultat),function(test){return _c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.rezultat_f != ''),expression:\"test.rezultat_f != ''\"}],key:test._id,class:{\n                    'table-danger':\n                      _vm.Interpretacija(\n                        _vm.vise.labassay.analit,\n                        test.rezultat_f,\n                        test.jedinice_f,\n                        _vm.vise.refd,\n                        _vm.vise.refg,\n                        _vm.$store.state.site,\n                        _vm.vise.interp,\n                        _vm.vise.extend,\n                        _vm.spec\n                      )[5] === 'Red' && !test.multidata,\n                    'table-success':\n                      _vm.Interpretacija(\n                        _vm.vise.labassay.analit,\n                        test.rezultat_f,\n                        test.jedinice_f,\n                        _vm.vise.refd,\n                        _vm.vise.refg,\n                        _vm.$store.state.site,\n                        _vm.vise.interp,\n                        _vm.vise.extend,\n                        _vm.spec\n                      )[5] === 'Green' && !test.multidata,\n                    'table-warning':\n                      _vm.Interpretacija(\n                        _vm.vise.labassay.analit,\n                        test.rezultat_f,\n                        test.jedinice_f,\n                        _vm.vise.refd,\n                        _vm.vise.refg,\n                        _vm.$store.state.site,\n                        _vm.vise.interp,\n                        _vm.vise.extend,\n                        _vm.spec\n                      )[5] === 'Yellow' && !test.multidata,\n                  }},[_c('td',[_vm._v(_vm._s(test.anaassay.aparat.ime))]),_vm._v(\" \"),_c('td',[_vm._v(\"\\n                    \"+_vm._s(JSON.stringify(test.updated_at).slice(9, 11) +\n                      \".\" +\n                      JSON.stringify(test.updated_at).slice(6, 8) +\n                      \".\" +\n                      JSON.stringify(test.updated_at).slice(1, 5) +\n                      \" | \")+\"\\n                    \"),_c('sub',[_vm._v(_vm._s(JSON.stringify(test.updated_at).slice(12, 20)))])]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(test.rezultat_f))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(test.jedinice_f))]),_vm._v(\" \"),_c('td',[_vm._v(\"\\n                    \"+_vm._s(_vm.Interpretacija(\n                        _vm.vise.labassay.analit,\n                        test.rezultat_f,\n                        test.jedinice_f,\n                        _vm.vise.refd,\n                        _vm.vise.refg,\n                        _vm.$store.state.site,\n                        _vm.vise.interp,\n                        _vm.vise.extend,\n                        _vm.spec\n                      )[4])+\"\\n                  \")]),_vm._v(\" \"),(\n                      _vm.sample_status != 'ODOBREN' &&\n                      _vm.sample_status != 'VERIFICIRAN'\n                    )?_c('td',[(!test.izabran)?_c('i',{staticClass:\"glyphicon glyphicon-unchecked\",staticStyle:{\"font-size\":\"18px\",\"color\":\"#e34a4a\"},on:{\"click\":function($event){$event.preventDefault();_vm.IzborTesta(_vm.vise, test)}}}):_vm._e(),_vm._v(\" \"),(test.izabran)?_c('i',{staticClass:\"glyphicon glyphicon-check\",staticStyle:{\"font-size\":\"18px\",\"color\":\"#4ae387\"}}):_vm._e()]):_vm._e(),_vm._v(\" \"),_c('td',[_c('i',{class:{\n                        'fa fa-exclamation-triangle icon-right input-icon error-icon':\n                          _vm.Interpretacija(\n                            _vm.vise.labassay.analit,\n                            test.rezultat_f,\n                            test.jedinice_f,\n                            _vm.vise.refd,\n                            _vm.vise.refg,\n                            _vm.$store.state.site,\n                            _vm.vise.interp,\n                            _vm.vise.extend,\n                            _vm.spec\n                          )[5] === 'Red',\n                      }}),_vm._v(\" \"),_c('i',{class:{\n                        'fa fa-check success-icon icon-right input-icon':\n                          _vm.Interpretacija(\n                            _vm.vise.labassay.analit,\n                            test.rezultat_f,\n                            test.jedinice_f,\n                            _vm.vise.refd,\n                            _vm.vise.refg,\n                            _vm.$store.state.site,\n                            _vm.vise.interp,\n                            _vm.vise.extend,\n                            _vm.spec\n                          )[5] === 'Green',\n                      }})])])}))])])])]),_vm._v(\" \"),_c('vuestic-modal-error',{ref:\"staticModalError\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s(\"\")+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"404: Not Found\"))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s(\"Greška prilikom čitanja nalaza.\"))])])]),_vm._v(\" \"),_c('vuestic-modal-error',{ref:\"staticModalVerifyPrivilege\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s(\"\")+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"401: Not Authorized\"))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s(\"Nemate odgovarajuće privilegije.\"))])])]),_vm._v(\" \"),_c('vuestic-modal-exclamation',{ref:\"staticModalExclamation\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s(\"\")+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.warning.analiza))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s(_vm.warning.control))]),_vm._v(\" \"),_c('p',[_vm._v(_vm._s(_vm.warning.text))])])]),_vm._v(\" \"),_c('vuestic-modal-reference',{ref:\"staticModalReference\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s(\"Referentne vrijednosti: \")+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.reference.naziv)+\" (\"+_vm._s(_vm.reference.opis)+\")\")])]),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-2\"},[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.dref),expression:\"reference.dref\"}],staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"required\":\"\"},domProps:{\"value\":(_vm.reference.dref)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"dref\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(\"\\n                    \"+_vm._s(\"Donja\")+\"\\n                  \")]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-2\"},[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.gref),expression:\"reference.gref\"}],staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"required\":\"\"},domProps:{\"value\":(_vm.reference.gref)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"gref\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(\"\\n                    \"+_vm._s(\"Gornja\")+\"\\n                  \")]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},[(_vm.$store.state.access.level < 1)?_c('vuestic-simple-select',{staticStyle:{\"font-size\":\"14px\"},attrs:{\"label\":\"Interpretacija\",\"title\":\" \",\"options\":_vm.interpretacije},model:{value:(_vm.reference.interp),callback:function ($$v) {_vm.$set(_vm.reference, \"interp\", $$v)},expression:\"reference.interp\"}}):_vm._e(),_vm._v(\" \"),(_vm.$store.state.access.level > 0)?_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.interp),expression:\"reference.interp\"}],attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"required\":\"\",\"disabled\":true},domProps:{\"value\":(_vm.reference.interp)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"interp\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(\"\\n                    \"+_vm._s(_vm.reference.interp)+\"\\n                  \")]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])]):_vm._e()],1),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"})]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-2\"},[_c('vuestic-simple-select',{staticStyle:{\"font-size\":\"14px\"},attrs:{\"label\":\"Jedinica\",\"title\":\" \",\"options\":_vm.jedinice},model:{value:(_vm.reference.jedinica),callback:function ($$v) {_vm.$set(_vm.reference, \"jedinica\", $$v)},expression:\"reference.jedinica\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-7\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.reference.interp != 'spec'),expression:\"reference.interp != 'spec'\"}],staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.extend),expression:\"reference.extend\"}],staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"required\":\"\"},domProps:{\"value\":(_vm.reference.extend)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"extend\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(\"\\n                    \"+_vm._s(\"Proširena referentna vrijednost\")+\"\\n                  \")]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.reference.interp === 'spec'),expression:\"reference.interp === 'spec'\"}],staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.extend),expression:\"reference.extend\"}],staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"type\":\"text\",\"id\":\"simple-textarea\",\"required\":\"\"},domProps:{\"value\":(_vm.reference.extend)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"extend\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"simple-textarea\"}},[_vm._v(\"\\n                    \"+_vm._s(\"Specifična interpretacija rezultata\")+\"\\n                  \")]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"})])])]),_vm._v(\" \"),_c('vuestic-modal-find',{ref:\"staticModalFind\",attrs:{\"show\":_vm.show,\"data_pid\":Number(_vm.data_pid),\"data_length\":Number(_vm.data_length),\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s(\"\")+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Redni broj pacijenta\"))])]),_vm._v(\" \"),_c('div',[_c('h5')])]),_vm._v(\" \"),_c('vuestic-modal-aparati',{ref:\"staticModalAparati\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s(\"Izbor analizatora: \")+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(\"\\n            \"+_vm._s(this.analiza.ime + \" (\" + this.analiza.analit + \")\")+\"\\n          \")])]),_vm._v(\" \"),_c('div',[_c('vuestic-accordion-obrada',_vm._l((_vm.analysers),function(element){return _c('vuestic-collapse-aparati',{key:element._id,attrs:{\"analyser\":element}},[_c('span',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_vm._v(\"\\n                \"+_vm._s(element.ime + \", \" + element.site.naziv)+\"\\n              \")]),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"body\"},slot:\"body\"},[_c('div',{staticClass:\"va-row\"})])])}))],1)]),_vm._v(\" \"),_c('vuestic-modal-results-multi',{ref:\"staticModalResultsMulti\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s(\"Izbor rezultata: \")+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.multi_test))])]),_vm._v(\" \"),_c('div')]),_vm._v(\" \"),_c('patient-evaluation-single',{ref:\"staticModalEvaluationSingle\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',[_vm._v(_vm._s(_vm.ime + \" \" + _vm.prezime))])]),_vm._v(\" \"),(_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped table-sm color-icon-label-table\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"REZULTAT\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"JEDINICA\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"REFERENCE\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"DATUM\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(\"VRIJEME\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"5%\",\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.Procjena),function(element,index){return _c('tr',{key:index,class:{\n                      'table-danger':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Red',\n                      'table-success':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Green',\n                      'table-warning':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Yellow',\n                    },attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.rezultat))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.jedinica))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(\"\\n                      \"+_vm._s(_vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[4])+\"\\n                    \")]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.datum))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(element.vrijeme))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"9%\",\"align\":\"middle\"}},[_c('i',{class:{\n                          'fa fa-exclamation-triangle icon-right input-icon error-icon':\n                            _vm.Interpretacija(\n                              element.analit,\n                              element.rezultat,\n                              element.jedinica,\n                              element.refd,\n                              element.refg,\n                              _vm.$store.state.site,\n                              element.interp,\n                              element.extend,\n                              _vm.spec\n                            )[5] === 'Red',\n                        }}),_vm._v(\" \"),_c('i',{class:{\n                          'fa fa-check success-icon icon-right input-icon':\n                            _vm.Interpretacija(\n                              element.analit,\n                              element.rezultat,\n                              element.jedinica,\n                              element.refd,\n                              element.refg,\n                              _vm.$store.state.site,\n                              element.interp,\n                              element.extend,\n                              _vm.spec\n                            )[5] === 'Green',\n                        }})])])}))]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('span',{staticClass:\"circle badge-info\"}),_vm._v(\"\\n                \"+_vm._s(_vm.table_header)+\"\\n              \")])])])]):_vm._e(),_vm._v(\" \"),(_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('line-chart',{attrs:{\"options\":_vm.optionsLineChart,\"data\":_vm.dataLineChart,\"type\":\"line\"}})],1)]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])])]):_vm._e()]),_vm._v(\" \"),_c('patient-evaluation-single',{ref:\"staticModalLabAssayEvalSingle\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(\"\\n            \"+_vm._s(_vm.analiza_eval.ime + \" (\" + _vm.analiza_eval.analit + \")\")+\"\\n          \")]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(\" - Rezultati analize u zadnjih 14 dana\"))])]),_vm._v(\" \"),(_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped table-sm color-icon-label-table\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"REZULTAT\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"JEDINICA\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"REFERENCE\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"DATUM\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(\"VRIJEME\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"5%\",\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.Procjena),function(element,index){return _c('tr',{key:index,class:{\n                      'table-danger':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Red',\n                      'table-success':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Green',\n                      'table-warning':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Yellow',\n                    },attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.rezultat))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.jedinica))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(\"\\n                      \"+_vm._s(_vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[4])+\"\\n                    \")]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.datum))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(element.vrijeme))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"9%\",\"align\":\"middle\"}},[_c('i',{class:{\n                          'fa fa-exclamation-triangle icon-right input-icon error-icon':\n                            _vm.Interpretacija(\n                              element.analit,\n                              element.rezultat,\n                              element.jedinica,\n                              element.refd,\n                              element.refg,\n                              _vm.$store.state.site,\n                              element.interp,\n                              element.extend,\n                              _vm.spec\n                            )[5] === 'Red',\n                        }}),_vm._v(\" \"),_c('i',{class:{\n                          'fa fa-check success-icon icon-right input-icon':\n                            _vm.Interpretacija(\n                              element.analit,\n                              element.rezultat,\n                              element.jedinica,\n                              element.refd,\n                              element.refg,\n                              _vm.$store.state.site,\n                              element.interp,\n                              element.extend,\n                              _vm.spec\n                            )[5] === 'Green',\n                        }})])])}))]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('span',{staticClass:\"circle badge-info\"}),_vm._v(\"\\n                \"+_vm._s(_vm.table_header)+\"\\n              \")])])])]):_vm._e(),_vm._v(\" \"),(_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('line-chart',{attrs:{\"options\":_vm.optionsLineChart,\"data\":_vm.dataLineChart,\"type\":\"line\"}})],1)]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])])]):_vm._e()]),_vm._v(\" \"),_c('patient-evaluation-multi',{ref:\"staticModalEvaluationMulti\",attrs:{\"show\":_vm.show,\"multiparam_izbor\":_vm.multiparam_izbor,\"multiparam_izbornik\":_vm.multiparam_izbornik,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',[_vm._v(_vm._s(_vm.ime + \" \" + _vm.prezime))])]),_vm._v(\" \"),(_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped table-sm color-icon-label-table\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"REZULTAT\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"JEDINICA\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"REFERENCE\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"DATUM\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(\"VRIJEME\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"5%\",\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.Procjena),function(element,index){return _c('tr',{key:index,class:{\n                      'table-danger':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Red',\n                      'table-success':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Green',\n                      'table-warning':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Yellow',\n                    },attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.rezultat))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.jedinica))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(\"\\n                      \"+_vm._s(_vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[4])+\"\\n                    \")]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.datum))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(element.vrijeme))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"9%\",\"align\":\"middle\"}},[_c('i',{class:{\n                          'fa fa-exclamation-triangle icon-right input-icon error-icon':\n                            _vm.Interpretacija(\n                              element.analit,\n                              element.rezultat,\n                              element.jedinica,\n                              element.refd,\n                              element.refg,\n                              _vm.$store.state.site,\n                              element.interp,\n                              element.extend,\n                              _vm.spec\n                            )[5] === 'Red',\n                        }}),_vm._v(\" \"),_c('i',{class:{\n                          'fa fa-check success-icon icon-right input-icon':\n                            _vm.Interpretacija(\n                              element.analit,\n                              element.rezultat,\n                              element.jedinica,\n                              element.refd,\n                              element.refg,\n                              _vm.$store.state.site,\n                              element.interp,\n                              element.extend,\n                              _vm.spec\n                            )[5] === 'Green',\n                        }})])])}))]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('span',{staticClass:\"circle badge-info\"}),_vm._v(\"\\n                \"+_vm._s(_vm.table_header)+\"\\n              \")])])])]):_vm._e(),_vm._v(\" \"),(!_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])])]):_vm._e(),_vm._v(\" \"),(_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('line-chart',{attrs:{\"options\":_vm.optionsLineChart,\"data\":_vm.dataLineChart,\"type\":\"line\"}})],1)]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[(!_vm.showLineChart && !_vm.spinner)?_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.spinner)?_c('div',{staticClass:\"col-md-12\",staticStyle:{\"min-height\":\"400px\"}},[_c('div',{staticStyle:{\"display\":\"flex\",\"flex-direction\":\"row\",\"justify-content\":\"center\",\"align-items\":\"center\"}},[_c('div',{staticStyle:{\"float\":\"left\"}}),_vm._v(\" \"),_c('span',{staticStyle:{\"vertical-align\":\"middle\"}},[_c('atom-spinner',{staticStyle:{\"opacity\":\"0.25\"},attrs:{\"animation-duration\":1000,\"size\":300,\"color\":'#4ae387'}})],1)])]):_vm._e()]):_vm._e()]),_vm._v(\" \"),_c('patient-evaluation-multi',{ref:\"staticModalLabAssayEvalMulti\",attrs:{\"show\":_vm.show,\"multiparam_izbor\":_vm.multiparam_izbor,\"multiparam_izbornik\":_vm.multiparam_izbornik,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(\"\\n            \"+_vm._s(_vm.analiza_eval.ime + \" (\" + _vm.analiza_eval.analit + \")\")+\"\\n          \")]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(\" - Rezultati analize u zadnjih 14 dana\"))])]),_vm._v(\" \"),(_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped table-sm color-icon-label-table\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"REZULTAT\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"JEDINICA\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"REFERENCE\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"DATUM\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(\"VRIJEME\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"5%\",\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.Procjena),function(element,index){return _c('tr',{key:index,class:{\n                      'table-danger':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Red',\n                      'table-success':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Green',\n                      'table-warning':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Yellow',\n                    },attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.rezultat))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.jedinica))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(\"\\n                      \"+_vm._s(_vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[4])+\"\\n                    \")]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.datum))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(element.vrijeme))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"9%\",\"align\":\"middle\"}},[_c('i',{class:{\n                          'fa fa-exclamation-triangle icon-right input-icon error-icon':\n                            _vm.Interpretacija(\n                              element.analit,\n                              element.rezultat,\n                              element.jedinica,\n                              element.refd,\n                              element.refg,\n                              _vm.$store.state.site,\n                              element.interp,\n                              element.extend,\n                              _vm.spec\n                            )[5] === 'Red',\n                        }}),_vm._v(\" \"),_c('i',{class:{\n                          'fa fa-check success-icon icon-right input-icon':\n                            _vm.Interpretacija(\n                              element.analit,\n                              element.rezultat,\n                              element.jedinica,\n                              element.refd,\n                              element.refg,\n                              _vm.$store.state.site,\n                              element.interp,\n                              element.extend,\n                              _vm.spec\n                            )[5] === 'Green',\n                        }})])])}))]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('span',{staticClass:\"circle badge-info\"}),_vm._v(\"\\n                \"+_vm._s(_vm.table_header)+\"\\n              \")])])])]):_vm._e(),_vm._v(\" \"),(!_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])])]):_vm._e(),_vm._v(\" \"),(_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('line-chart',{attrs:{\"options\":_vm.optionsLineChart,\"data\":_vm.dataLineChart,\"type\":\"line\"}})],1)]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[(!_vm.showLineChart && !_vm.spinner)?_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.spinner)?_c('div',{staticClass:\"col-md-12\",staticStyle:{\"min-height\":\"400px\"}},[_c('div',{staticStyle:{\"display\":\"flex\",\"flex-direction\":\"row\",\"justify-content\":\"center\",\"align-items\":\"center\"}},[_c('div',{staticStyle:{\"float\":\"left\"}}),_vm._v(\" \"),_c('span',{staticStyle:{\"vertical-align\":\"middle\"}},[_c('atom-spinner',{staticStyle:{\"opacity\":\"0.25\"},attrs:{\"animation-duration\":1000,\"size\":300,\"color\":'#4ae387'}})],1)])]):_vm._e()]):_vm._e()])],1):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"col-md-6\"},[_c('loading',{attrs:{\"active\":_vm.isLoading,\"can-cancel\":false,\"on-cancel\":_vm.onCancel,\"color\":\"#4ae387\",\"is-full-page\":_vm.fullPage},on:{\"update:active\":function($event){_vm.isLoading=$event}}})],1),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[(false)?_c('button',{on:{\"click\":function($event){$event.preventDefault();_vm.Test($event)}}},[_vm._v(_vm._s(\"Loading...\"))]):_vm._e()])])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-3f02d9e7\",\"hasScoped\":true,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/obrada/Obrada.vue\n// module id = IEaf\n// module chunks = 17","<template>\r\n  <div class=\"collapse-page\">\r\n    <div v-if=\"show\" class=\"flex md12\">\r\n      <!-- Prikaz nalaza -->\r\n\r\n      <div v-show=\"!main && pdf\">\r\n        <div class=\"btn-container\">\r\n          <button\r\n            v-show=\"verificiran\"\r\n            class=\"btn btn-secondary btn-sm\"\r\n            @click.prevent=\"Nazad()\"\r\n          >\r\n            <span class=\"fa fa-step-backward\"></span>\r\n            {{ \" NAZAD\" }}\r\n          </button>\r\n          <button\r\n            v-show=\"!verificiran\"\r\n            class=\"btn btn-secondary-danger btn-sm\"\r\n            @click.prevent=\"Nazad()\"\r\n          >\r\n            <span class=\"fa fa-step-backward\"></span>\r\n            {{ \" NAZAD\" }}\r\n          </button>\r\n          <button\r\n            v-show=\"email_button && verificiran\"\r\n            class=\"btn btn-secondary btn-sm pull-right\"\r\n            :disabled=\"!Email(email)\"\r\n            @click.prevent=\"MailDialog()\"\r\n          >\r\n            <span class=\"glyphicon glyphicon-send\"></span>\r\n            {{ \" Pošalji\" }}\r\n          </button>\r\n          <div\r\n            v-show=\"email_button && verificiran\"\r\n            class=\"form-group with-icon-left pull-right\"\r\n          >\r\n            <div class=\"input-group\">\r\n              <input\r\n                size=\"40\"\r\n                id=\"input-icon-left\"\r\n                name=\"input-icon-left\"\r\n                v-model=\"email\"\r\n                title=\" \"\r\n                required\r\n              />\r\n              <i class=\"fa fa-envelope-o icon-left input-icon\"></i>\r\n              <label class=\"control-label\" for=\"input-icon-left\">\r\n                {{ \"Email adresa\" }}\r\n              </label>\r\n              <i class=\"bar\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n\r\n        <!-- PDFObject -->\r\n\r\n        <div id=\"pdf-container\"></div>\r\n      </div>\r\n\r\n      <!-- Prikaz rezultata (Main screen) -->\r\n\r\n      <vuestic-widget\r\n        v-show=\"main\"\r\n        :headerText=\"header\"\r\n        :pagination=\"pagination\"\r\n        :main=\"main\"\r\n        :data_pid=\"Number(data_pid)\"\r\n        :data_length=\"Number(data_length)\"\r\n        :rezultati_length=\"Results.length\"\r\n        :spol=\"data_spol\"\r\n        :data_min=\"Number(data_min)\"\r\n        :datum=\"query_date\"\r\n        :today=\"today_date\"\r\n        :forward_disabled=\"forward_disabled\"\r\n        :backward_disabled=\"backward_disabled\"\r\n      >\r\n        <vuestic-accordion-obrada>\r\n          <vuestic-collapse-obrada\r\n            v-for=\"uzorak in uzorci\"\r\n            v-show=\"!uzorak.removed\"\r\n            :id=\"uzorak.sid\"\r\n            :key=\"uzorak.sid\"\r\n            :sample=\"uzorak\"\r\n            :retest=\"save_retest\"\r\n          >\r\n            <span :id=\"uzorak.sid\" slot=\"header\">{{ uzorak.sid }}</span>\r\n            <div slot=\"body\">\r\n              <div style=\"line-height: 10px;\">&nbsp;</div>\r\n\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!-- \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Table\r\n\r\n\r\n\r\n\r\n\r\n              -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n\r\n              <div v-if=\"uzorak.tip.includes('Mikrobiologija')\" class=\"va-row\">\r\n                <div v-show=\"show_table\" class=\"table-responsive\">\r\n                  <table class=\"table table-striped first-td-padding\">\r\n                    <thead>\r\n                      <tr align=\"middle\">\r\n                        <td\r\n                          v-if=\"\r\n                            uzorak.status != 'ODOBREN' &&\r\n                            uzorak.status != 'VERIFICIRAN'\r\n                          \"\r\n                        ></td>\r\n                        <td>{{ \"ANALIZA\" }}</td>\r\n                        <td>{{ \"REZULTAT\" }}</td>\r\n                        <td>{{ \"JEDINICA\" }}</td>\r\n                        <td>{{ \"REFERENCE\" }}</td>\r\n                        <td\r\n                          v-if=\"\r\n                            uzorak.status != 'ODOBREN' &&\r\n                            uzorak.status != 'VERIFICIRAN'\r\n                          \"\r\n                        ></td>\r\n                        <td\r\n                          v-if=\"\r\n                            uzorak.status != 'ODOBREN' &&\r\n                            uzorak.status != 'VERIFICIRAN' &&\r\n                            MicrobiologyScenario != 'MAIBPoR'\r\n                          \"\r\n                        >\r\n                          {{ \"PONOVI\" }}\r\n                        </td>\r\n                        <td\r\n                          v-if=\"MicrobiologyScenario === 'MAIBPoR'\"\r\n                          style=\"text-transform: none;\"\r\n                        >\r\n                          {{ \"Bakterije\" }}\r\n                        </td>\r\n                        <td></td>\r\n                      </tr>\r\n                    </thead>\r\n\r\n                    <!-- Table Body -->\r\n\r\n                    <tbody>\r\n                      <tr\r\n                        align=\"middle\"\r\n                        v-for=\"(test, index) in rezultati\"\r\n                        v-show=\"index < 1\"\r\n                        :key=\"test.labassay_id\"\r\n                        v-bind:class=\"{\r\n                          'table-danger':\r\n                            test.rezultat_m.length &&\r\n                            test.rezultat_m[0].pozitivan,\r\n                          'table-success':\r\n                            test.rezultat_m.length &&\r\n                            test.rezultat_m[0].negativan,\r\n                          'table-warning': false,\r\n                        }\"\r\n                      >\r\n                        <td\r\n                          v-if=\"\r\n                            uzorak.status != 'ODOBREN' &&\r\n                            uzorak.status != 'VERIFICIRAN'\r\n                          \"\r\n                        >\r\n                          <button\r\n                            style=\"padding: 0.4px; padding-left: 2px;\"\r\n                            v-if=\"uzorak.status === 'ZAPRIMLJEN'\"\r\n                            @click.prevent=\"MicroResultSelect($event)\"\r\n                            class=\"btn btn-secondary-danger btn-micro\"\r\n                          >\r\n                            <i\r\n                              class=\"fa fa-bug\"\r\n                              @click.prevent=\"MicroResultSelect($event)\"\r\n                            ></i>\r\n                          </button>\r\n                          <button\r\n                            style=\"\r\n                              padding: 0.6px;\r\n                              padding-right: 1px;\r\n                              padding-left: 1.2px;\r\n                            \"\r\n                            v-if=\"uzorak.status != 'ZAPRIMLJEN'\"\r\n                            @click.prevent=\"ResetSample($event)\"\r\n                            class=\"btn btn-secondary-danger btn-micro\"\r\n                          >\r\n                            <i\r\n                              class=\"fa fa-backward\"\r\n                              @click.prevent=\"ResetSample($event)\"\r\n                            ></i>\r\n                          </button>\r\n                        </td>\r\n\r\n                        <!-- ANALIZA -->\r\n\r\n                        <td :title=\"test.analit\">\r\n                          <span>{{ test.ime }}</span>\r\n                        </td>\r\n\r\n                        <!-- REZULTAT -->\r\n\r\n                        <td v-if=\"test.rezultat_m.length > 0\">\r\n                          <button\r\n                            :id=\"test.labassay_id\"\r\n                            class=\"btn btn-primary btn-micro\"\r\n                            @click.prevent=\"OpenMicro($event, test)\"\r\n                          >\r\n                            <span\r\n                              :id=\"test.labassay_id\"\r\n                              class=\"glyphicon glyphicon-search\"\r\n                            ></span>\r\n                            {{ \"VIŠE\" }}\r\n                          </button>\r\n                        </td>\r\n                        <td v-if=\"test.rezultat_m.length < 1\">\r\n                          <button\r\n                            :id=\"test.labassay_id\"\r\n                            class=\"btn btn-pale btn-micro\"\r\n                          >\r\n                            <span\r\n                              :id=\"test.labassay_id\"\r\n                              class=\"glyphicon glyphicon-ban-circle\"\r\n                            ></span>\r\n                            {{ \"VIŠE\" }}\r\n                          </button>\r\n                        </td>\r\n\r\n                        <!-- JEDINICA -->\r\n\r\n                        <td>{{ test.unit }}</td>\r\n\r\n                        <!-- REFERENCE -->\r\n\r\n                        <td>{{ \"/\" }}</td>\r\n                        <td\r\n                          v-if=\"\r\n                            uzorak.status != 'ODOBREN' &&\r\n                            uzorak.status != 'VERIFICIRAN'\r\n                          \"\r\n                        >\r\n                          <i\r\n                            style=\"font-size: 15px; color: #f7cc36; opacity: 0;\"\r\n                            class=\"glyphicon glyphicon-stats\"\r\n                            id=\"reference\"\r\n                            title=\" \"\r\n                          ></i>\r\n                        </td>\r\n\r\n                        <!-- PONOVI -->\r\n\r\n                        <td\r\n                          v-if=\"\r\n                            uzorak.status != 'ODOBREN' &&\r\n                            uzorak.status != 'VERIFICIRAN' &&\r\n                            MicrobiologyScenario != 'MAIBPoR'\r\n                          \"\r\n                        >\r\n                          <button class=\"btn btn-pale btn-micro\">\r\n                            <span class=\"glyphicon glyphicon-ban-circle\"></span>\r\n                          </button>\r\n                        </td>\r\n\r\n                        <td v-if=\"MicrobiologyScenario === 'MAIBPoR'\">\r\n                          <button\r\n                            @click.prevent=\"OpenMicroSelect($event, test)\"\r\n                            class=\"btn btn-primary btn-micro\"\r\n                          >\r\n                            <span class=\"fa fa-bug\"></span>\r\n                          </button>\r\n                        </td>\r\n\r\n                        <!--  -->\r\n\r\n                        <td>\r\n                          <i\r\n                            @click.prevent=\"Exclamation(test)\"\r\n                            v-bind:class=\"{\r\n                              'fa fa-exclamation-triangle icon-right input-icon error-icon': false,\r\n                            }\"\r\n                          ></i>\r\n                          <i\r\n                            v-bind:class=\"{\r\n                              'fa fa-check success-icon icon-right input-icon': false,\r\n                            }\"\r\n                          ></i>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!-- \r\n\r\n\r\n\r\n\r\n\r\nEND of Microbiology Table |\r\n\r\n\r\n\r\n\r\n\r\n              -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n\r\n              <!-- Uzorci | Default Table -->\r\n\r\n              <div v-if=\"!uzorak.tip.includes('Mikrobiologija')\" class=\"va-row\">\r\n                <div v-show=\"show_table\" class=\"table-responsive\">\r\n                  <table class=\"table table-striped first-td-padding\">\r\n                    <thead>\r\n                      <tr align=\"middle\">\r\n                        <td\r\n                          v-if=\"\r\n                            uzorak.status != 'ODOBREN' &&\r\n                            uzorak.status != 'VERIFICIRAN'\r\n                          \"\r\n                        ></td>\r\n                        <td>{{ \"ANALIZA\" }}</td>\r\n                        <td>{{ \"REZULTAT\" }}</td>\r\n                        <td>{{ \"JEDINICA\" }}</td>\r\n                        <td>{{ \"REFERENCE\" }}</td>\r\n                        <td\r\n                          v-if=\"\r\n                            uzorak.status != 'ODOBREN' &&\r\n                            uzorak.status != 'VERIFICIRAN'\r\n                          \"\r\n                        ></td>\r\n                        <td\r\n                          v-if=\"\r\n                            uzorak.status != 'ODOBREN' &&\r\n                            uzorak.status != 'VERIFICIRAN' &&\r\n                            calculated\r\n                          \"\r\n                        >\r\n                          {{ \"AKCIJA\" }}\r\n                        </td>\r\n                        <td\r\n                          v-if=\"\r\n                            uzorak.status != 'ODOBREN' &&\r\n                            uzorak.status != 'VERIFICIRAN'\r\n                          \"\r\n                        >\r\n                          {{ \"PONOVI\" }}\r\n                        </td>\r\n                        <td></td>\r\n                      </tr>\r\n                    </thead>\r\n\r\n                    <!-- Table Body -->\r\n\r\n                    <tbody>\r\n                      <tr\r\n                        align=\"middle\"\r\n                        v-for=\"test in rezultati\"\r\n                        :key=\"test.labassay_id\"\r\n                        v-bind:class=\"{\r\n                          'table-danger':\r\n                            Interpretacija(\r\n                              test.analit,\r\n                              test.rezultat,\r\n                              test.unit,\r\n                              test.dRef,\r\n                              test.gRef,\r\n                              $store.state.site,\r\n                              test.interp,\r\n                              test.extend,\r\n                              spec\r\n                            )[5] === 'Red' && !test.multidata,\r\n                          'table-success':\r\n                            Interpretacija(\r\n                              test.analit,\r\n                              test.rezultat,\r\n                              test.unit,\r\n                              test.dRef,\r\n                              test.gRef,\r\n                              $store.state.site,\r\n                              test.interp,\r\n                              test.extend,\r\n                              spec\r\n                            )[5] === 'Green' && !test.multidata,\r\n                          'table-warning':\r\n                            Interpretacija(\r\n                              test.analit,\r\n                              test.rezultat,\r\n                              test.unit,\r\n                              test.dRef,\r\n                              test.gRef,\r\n                              $store.state.site,\r\n                              test.interp,\r\n                              test.extend,\r\n                              spec\r\n                            )[5] === 'Yellow' && !test.multidata,\r\n                        }\"\r\n                      >\r\n                        <td\r\n                          v-if=\"\r\n                            uzorak.status != 'ODOBREN' &&\r\n                            uzorak.status != 'VERIFICIRAN'\r\n                          \"\r\n                        >\r\n                          <i\r\n                            v-if=\"!test.multidata\"\r\n                            @click.prevent=\"SelectAnalyser(test)\"\r\n                            style=\"color: #4ae387;\"\r\n                            class=\"glyphicon glyphicon-object-align-bottom\"\r\n                          ></i>\r\n\r\n                          <span\r\n                            v-if=\"test.multidata\"\r\n                            style=\"color: #d9d9d9;\"\r\n                            class=\"glyphicon glyphicon-object-align-bottom\"\r\n                          ></span>\r\n                        </td>\r\n\r\n                        <!-- ANALIZA -->\r\n\r\n                        <td :title=\"test.analit\">\r\n                          <span\r\n                            @contextmenu=\"LabAssayEval($event, test)\"\r\n                            @click.prevent=\"Evaluation(test)\"\r\n                            >{{ test.ime }}</span\r\n                          >\r\n                        </td>\r\n\r\n                        <!-- REZULTAT -->\r\n\r\n                        <td v-if=\"!test.multidata\">\r\n                          <div\r\n                            v-show=\"test.edit == false\"\r\n                            style=\"\r\n                              display: inline;\r\n                              font-size: 14px;\r\n                              line-height: 4.5px;\r\n                            \"\r\n                          >\r\n                            <label>\r\n                              <strong>{{ test.rezultat }}</strong>\r\n                            </label>\r\n                          </div>\r\n                          <div\r\n                            v-show=\"test.edit == true\"\r\n                            style=\"display: inline; line-height: 5px;\"\r\n                          >\r\n                            <select\r\n                              v-if=\"test.select_options != undefined\"\r\n                              style=\"width: 110px;\"\r\n                              v-model=\"test.rezultat\"\r\n                            >\r\n                              <option\r\n                                v-for=\"option in test.select_options\"\r\n                                :key=\"option\"\r\n                                >{{ option }}</option\r\n                              >\r\n                            </select>\r\n                          </div>\r\n                          <div\r\n                            v-show=\"test.edit == true\"\r\n                            style=\"display: inline;\"\r\n                          >\r\n                            <input\r\n                              v-if=\"test.select_options === undefined\"\r\n                              v-model=\"test.rezultat\"\r\n                              style=\"\r\n                                width: 110px;\r\n                                font-size: 12px;\r\n                                line-height: 7px;\r\n                              \"\r\n                            />\r\n                          </div>\r\n                          <sup\r\n                            v-show=\"test.vise > 2\"\r\n                            @click.prevent=\"GetResults(test, uzorak.status)\"\r\n                          >\r\n                            <i\r\n                              style=\"font-size: 5px; color: #e34a4a;\"\r\n                              class=\"fa fa-star\"\r\n                              id=\"star\"\r\n                              title=\" \"\r\n                            ></i>\r\n                          </sup>\r\n                          <sup v-show=\"test.vise < 3\">\r\n                            <i\r\n                              style=\"font-size: 5px; opacity: 0;\"\r\n                              class=\"fa fa-star-o\"\r\n                              id=\"star\"\r\n                              title=\" \"\r\n                            ></i>\r\n                          </sup>\r\n                        </td>\r\n                        <td v-if=\"test.multidata && test.realizovan\">\r\n                          <button\r\n                            :id=\"test.labassay_id\"\r\n                            class=\"btn btn-primary btn-micro\"\r\n                            @click.prevent=\"\r\n                              MultiGet(\r\n                                $event,\r\n                                test.ime,\r\n                                test.analit,\r\n                                test.rezultat,\r\n                                test.odobren\r\n                              )\r\n                            \"\r\n                          >\r\n                            <span\r\n                              :id=\"test.labassay_id\"\r\n                              @click.prevent=\"\r\n                                MultiGet(\r\n                                  $event,\r\n                                  test.ime,\r\n                                  test.analit,\r\n                                  test.rezultat,\r\n                                  test.odobren\r\n                                )\r\n                              \"\r\n                              class=\"glyphicon glyphicon-search\"\r\n                            ></span>\r\n                            {{ \"VIŠE\" }}\r\n                          </button>\r\n                          <sup\r\n                            v-show=\"test.multi_count > 2\"\r\n                            @click.prevent=\"\r\n                              GetResultsMulti(test, uzorak.status)\r\n                            \"\r\n                          >\r\n                            <i\r\n                              style=\"font-size: 5px; color: #e34a4a;\"\r\n                              class=\"fa fa-star\"\r\n                              id=\"star\"\r\n                              title=\" \"\r\n                            ></i>\r\n                          </sup>\r\n                          <sup v-show=\"test.multi_count < 3\">\r\n                            <i\r\n                              style=\"font-size: 5px; opacity: 0;\"\r\n                              class=\"fa fa-star-o\"\r\n                              id=\"star\"\r\n                              title=\" \"\r\n                            ></i>\r\n                          </sup>\r\n                        </td>\r\n                        <td v-if=\"test.multidata && !test.realizovan\">\r\n                          <button\r\n                            :id=\"test.labassay_id\"\r\n                            class=\"btn btn-warning btn-micro\"\r\n                            @click.prevent=\"\r\n                              MultiGet(\r\n                                $event,\r\n                                test.ime,\r\n                                test.analit,\r\n                                test.rezultat,\r\n                                test.odobren\r\n                              )\r\n                            \"\r\n                          >\r\n                            <span\r\n                              :id=\"test.labassay_id\"\r\n                              @click.prevent=\"\r\n                                MultiGet(\r\n                                  $event,\r\n                                  test.ime,\r\n                                  test.analit,\r\n                                  test.rezultat,\r\n                                  test.odobren\r\n                                )\r\n                              \"\r\n                              class=\"glyphicon glyphicon-search\"\r\n                            ></span>\r\n                            {{ \"VIŠE\" }}\r\n                          </button>\r\n                          <sup\r\n                            v-show=\"test.multi_count > 2\"\r\n                            @click.prevent=\"\r\n                              GetResultsMulti(test, uzorak.status)\r\n                            \"\r\n                          >\r\n                            <i\r\n                              style=\"font-size: 5px; color: #e34a4a;\"\r\n                              class=\"fa fa-star\"\r\n                              id=\"star\"\r\n                              title=\" \"\r\n                            ></i>\r\n                          </sup>\r\n                          <sup v-show=\"test.multi_count < 3\">\r\n                            <i\r\n                              style=\"font-size: 5px; opacity: 0;\"\r\n                              class=\"fa fa-star-o\"\r\n                              id=\"star\"\r\n                              title=\" \"\r\n                            ></i>\r\n                          </sup>\r\n                        </td>\r\n\r\n                        <!-- JEDINICA -->\r\n\r\n                        <td>{{ test.unit }}</td>\r\n\r\n                        <!-- REFERENCE -->\r\n\r\n                        <td v-if=\"!test.multidata\">\r\n                          {{\r\n                            Interpretacija(\r\n                              test.analit,\r\n                              test.rezultat,\r\n                              test.unit,\r\n                              test.dRef,\r\n                              test.gRef,\r\n                              $store.state.site,\r\n                              test.interp,\r\n                              test.extend,\r\n                              spec\r\n                            )[4]\r\n                          }}\r\n                        </td>\r\n                        <td v-if=\"test.multidata\">{{ \"/\" }}</td>\r\n                        <td\r\n                          v-if=\"\r\n                            uzorak.status != 'ODOBREN' &&\r\n                            uzorak.status != 'VERIFICIRAN'\r\n                          \"\r\n                        >\r\n                          <i\r\n                            v-if=\"!test.multidata\"\r\n                            @click.prevent=\"Reference($event, test)\"\r\n                            style=\"font-size: 15px; color: #f7cc36;\"\r\n                            class=\"glyphicon glyphicon-stats\"\r\n                            id=\"reference\"\r\n                            title=\" \"\r\n                          ></i>\r\n                          <i\r\n                            v-if=\"test.multidata\"\r\n                            style=\"font-size: 15px; color: #f7cc36; opacity: 0;\"\r\n                            class=\"glyphicon glyphicon-stats\"\r\n                            id=\"reference\"\r\n                            title=\" \"\r\n                          ></i>\r\n                        </td>\r\n\r\n                        <!-- AKCIJA -->\r\n\r\n                        <td\r\n                          v-if=\"\r\n                            uzorak.status != 'ODOBREN' &&\r\n                            uzorak.status != 'VERIFICIRAN' &&\r\n                            calculated &&\r\n                            !test.calculated\r\n                          \"\r\n                        >\r\n                          <button class=\"btn btn-pale btn-micro\">\r\n                            <span class=\"glyphicon glyphicon-ban-circle\"></span>\r\n                          </button>\r\n                        </td>\r\n                        <td\r\n                          v-if=\"\r\n                            uzorak.status != 'ODOBREN' &&\r\n                            uzorak.status != 'VERIFICIRAN' &&\r\n                            calculated &&\r\n                            test.calculated\r\n                          \"\r\n                        >\r\n                          <button\r\n                            @click.prevent=\"\r\n                              Calculate(\r\n                                $event,\r\n                                test.labassay_id,\r\n                                test.ime,\r\n                                test.id\r\n                              )\r\n                            \"\r\n                            :id=\"test.test\"\r\n                            class=\"btn btn-primary btn-micro\"\r\n                          >\r\n                            <span\r\n                              :id=\"test.test\"\r\n                              class=\"fa fa-calculator\"\r\n                            ></span>\r\n                          </button>\r\n                        </td>\r\n\r\n                        <!-- PONOVI -->\r\n\r\n                        <td\r\n                          v-if=\"\r\n                            uzorak.status != 'ODOBREN' &&\r\n                            uzorak.status != 'VERIFICIRAN' &&\r\n                            (test.rezultat === '' ||\r\n                              test.manual ||\r\n                              test.calculated)\r\n                          \"\r\n                        >\r\n                          <button class=\"btn btn-pale btn-micro\">\r\n                            <span class=\"glyphicon glyphicon-ban-circle\"></span>\r\n                          </button>\r\n                        </td>\r\n                        <td\r\n                          v-if=\"\r\n                            uzorak.status != 'ODOBREN' &&\r\n                            uzorak.status != 'VERIFICIRAN' &&\r\n                            test.rezultat != '' &&\r\n                            !test.manual &&\r\n                            !test.calculated\r\n                          \"\r\n                        >\r\n                          <button\r\n                            v-if=\"!test.retest\"\r\n                            :id=\"test.test\"\r\n                            class=\"btn btn-primary btn-micro\"\r\n                            @click.prevent=\"RetestEnable($event)\"\r\n                          >\r\n                            <span :id=\"test.test\" class=\"fa fa-refresh\"></span>\r\n                          </button>\r\n                          <button\r\n                            v-if=\"test.retest\"\r\n                            :id=\"test.test\"\r\n                            class=\"btn btn-info btn-micro\"\r\n                            @click.prevent=\"RetestDisable($event)\"\r\n                          >\r\n                            <span\r\n                              :id=\"test.test\"\r\n                              class=\"glyphicon glyphicon-duplicate\"\r\n                            ></span>\r\n                          </button>\r\n                        </td>\r\n\r\n                        <!--  -->\r\n\r\n                        <td>\r\n                          <i\r\n                            @click.prevent=\"Exclamation(test)\"\r\n                            v-bind:class=\"{\r\n                              'fa fa-exclamation-triangle icon-right input-icon error-icon':\r\n                                Interpretacija(\r\n                                  test.analit,\r\n                                  test.rezultat,\r\n                                  test.unit,\r\n                                  test.dRef,\r\n                                  test.gRef,\r\n                                  $store.state.site,\r\n                                  test.interp,\r\n                                  test.extend,\r\n                                  spec\r\n                                )[5] === 'Red' && !test.multidata,\r\n                            }\"\r\n                          ></i>\r\n                          <i\r\n                            v-bind:class=\"{\r\n                              'fa fa-check success-icon icon-right input-icon':\r\n                                Interpretacija(\r\n                                  test.analit,\r\n                                  test.rezultat,\r\n                                  test.unit,\r\n                                  test.dRef,\r\n                                  test.gRef,\r\n                                  $store.state.site,\r\n                                  test.interp,\r\n                                  test.extend,\r\n                                  spec\r\n                                )[5] === 'Green' && !test.multidata,\r\n                            }\"\r\n                          ></i>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- END of Uzorci | Default Table -->\r\n            </div>\r\n          </vuestic-collapse-obrada>\r\n        </vuestic-accordion-obrada>\r\n\r\n        <div style=\"min-height: 10px;\"></div>\r\n\r\n        <!-- Nalaz -->\r\n\r\n        <div v-if=\"verificiran\" class=\"va-row\">\r\n          <div class=\"flex md12\">\r\n            <vuestic-collapse-nalaz\r\n              :final=\"verificiran\"\r\n              :final_pdf=\"final_pdf\"\r\n              :samples=\"samples\"\r\n              :pdf=\"link\"\r\n              :pacijent=\"ime + ' ' + prezime\"\r\n            >\r\n              <span slot=\"header\">Nalaz</span>\r\n              <div slot=\"body\">\r\n                <div class=\"va-row\"></div>\r\n              </div>\r\n            </vuestic-collapse-nalaz>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <hr />\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-md-3\"></div>\r\n          <div class=\"col-md-6\">\r\n            <div class=\"btn-container\">\r\n              <button\r\n                class=\"btn btn-secondary btn-sm wizard-back pull-left\"\r\n                @click.prevent=\"Povratak()\"\r\n              >\r\n                <span class=\"fa fa-backward\"></span>\r\n                {{ \" POVRATAK\" }}\r\n              </button>\r\n              <button\r\n                style=\"text-transform: none; color: #e34a4a;\"\r\n                v-if=\"partials_condition && !verificiran\"\r\n                class=\"btn btn-secondary-warning btn-sm wizard-back pull-right\"\r\n                @click.prevent=\"Partials()\"\r\n              >\r\n                <span style=\"color: #e34a4a;\" class=\"fa fa-file-pdf-o\"></span>\r\n                {{ \" Djelimični nalaz\" }}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </vuestic-widget>\r\n\r\n      <!-- Modals -->\r\n\r\n      <!-- Prikaz Analita za Multi Testove -->\r\n\r\n      <vuestic-modal-multi\r\n        :show.sync=\"show\"\r\n        :sample=\"sample\"\r\n        ref=\"largeModalMulti\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">{{ naslov }}</div>\r\n        <div class=\"table-responsive\">\r\n          <table class=\"table table-striped first-td-padding\">\r\n            <thead>\r\n              <tr align=\"middle\">\r\n                <td width=\"10%\"></td>\r\n                <td width=\"20%\">{{ \"ANALIT\" }}</td>\r\n                <td width=\"30%\">{{ \"REZULTAT\" }}</td>\r\n                <td width=\"10%\">{{ \"JEDINICA\" }}</td>\r\n                <td width=\"20%\">{{ \"REFERENCE\" }}</td>\r\n                <td width=\"10%\"></td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr\r\n                align=\"middle\"\r\n                v-for=\"test in analiti\"\r\n                :key=\"test.labID\"\r\n                v-bind:class=\"{\r\n                  'table-danger':\r\n                    Interpretacija(\r\n                      test.opis,\r\n                      test.rezultat,\r\n                      test.jedinica,\r\n                      test.refd,\r\n                      test.refg,\r\n                      $store.state.site,\r\n                      test.interp,\r\n                      test.extend,\r\n                      spec\r\n                    )[5] === 'Red' && !test.rezultat_multiple.length,\r\n                  'table-success':\r\n                    Interpretacija(\r\n                      test.opis,\r\n                      test.rezultat,\r\n                      test.jedinica,\r\n                      test.refd,\r\n                      test.refg,\r\n                      $store.state.site,\r\n                      test.interp,\r\n                      test.extend,\r\n                      spec\r\n                    )[5] === 'Green' && !test.rezultat_multiple.length,\r\n                  'table-warning':\r\n                    Interpretacija(\r\n                      test.opis,\r\n                      test.rezultat,\r\n                      test.jedinica,\r\n                      test.refd,\r\n                      test.refg,\r\n                      $store.state.site,\r\n                      test.interp,\r\n                      test.extend,\r\n                      spec\r\n                    )[5] === 'Yellow' && !test.rezultat_multiple.length,\r\n                }\"\r\n              >\r\n                <td v-if=\"test.flag != ''\">{{ test.flag }}</td>\r\n                <td v-if=\"test.flag === ''\">&nbsp;</td>\r\n                <td :title=\"test.opis\">{{ test.naziv }}</td>\r\n                <td :id=\"test.analit\">\r\n                  <div v-show=\"test.edit == false\">\r\n                    <label>\r\n                      <strong>{{ test.rezultat }}</strong>\r\n                    </label>\r\n                  </div>\r\n                  <select\r\n                    multiple\r\n                    :size=\"test.select_options.length\"\r\n                    v-if=\"\r\n                      test.select_options != undefined &&\r\n                      (test.kod === 's03' ||\r\n                        test.kod === 's04' ||\r\n                        test.kod === 's08' ||\r\n                        test.kod === 's09')\r\n                    \"\r\n                    style=\"min-width: 200px;\"\r\n                    v-show=\"test.edit == true\"\r\n                    v-model=\"test.rezultat_multiple\"\r\n                  >\r\n                    <option\r\n                      v-for=\"option in test.select_options\"\r\n                      :key=\"option\"\r\n                      >{{ option }}</option\r\n                    >\r\n                  </select>\r\n                  <select\r\n                    v-if=\"test.select_options != undefined && (test.kod != 's03' && test.kod != 's04' && test.kod != 's08' && test.kod != 's09')\"\r\n                    style=\"width: 200px;\"\r\n                    v-show=\"test.edit == true\"\r\n                    v-model=\"test.rezultat\"\r\n                  >\r\n                    <option\r\n                      v-for=\"option in test.select_options\"\r\n                      :key=\"option\"\r\n                      >{{ option }}</option\r\n                    >\r\n                  </select>\r\n                  <input\r\n                    v-if=\"test.select_options === undefined\"\r\n                    style=\"width: 200px;\"\r\n                    v-show=\"test.edit == true\"\r\n                    v-model=\"test.rezultat\"\r\n                  />\r\n                </td>\r\n                <td>\r\n                  {{\r\n                    Interpretacija(\r\n                      test.opis,\r\n                      test.rezultat,\r\n                      test.jedinica,\r\n                      test.refd,\r\n                      test.refg,\r\n                      $store.state.site,\r\n                      test.interp,\r\n                      test.extend,\r\n                      spec\r\n                    )[3]\r\n                  }}\r\n                </td>\r\n                <td>\r\n                  {{\r\n                    Interpretacija(\r\n                      test.opis,\r\n                      test.rezultat,\r\n                      test.jedinica,\r\n                      test.refd,\r\n                      test.refg,\r\n                      $store.state.site,\r\n                      test.interp,\r\n                      test.extend,\r\n                      spec\r\n                    )[4]\r\n                  }}\r\n                </td>\r\n                <td>\r\n                  <i\r\n                    @click.prevent=\"ExclamationMulti(test)\"\r\n                    v-bind:class=\"{\r\n                      'fa fa-exclamation-triangle icon-right input-icon error-icon':\r\n                        Interpretacija(\r\n                          test.opis,\r\n                          test.rezultat,\r\n                          test.jedinica,\r\n                          test.refd,\r\n                          test.refg,\r\n                          $store.state.site,\r\n                          test.interp,\r\n                          test.extend,\r\n                          spec\r\n                        )[5] === 'Red' && !test.rezultat_multiple.length,\r\n                    }\"\r\n                  ></i>\r\n                  <i\r\n                    v-bind:class=\"{\r\n                      'fa fa-check success-icon icon-right input-icon':\r\n                        Interpretacija(\r\n                          test.opis,\r\n                          test.rezultat,\r\n                          test.jedinica,\r\n                          test.refd,\r\n                          test.refg,\r\n                          $store.state.site,\r\n                          test.interp,\r\n                          test.extend,\r\n                          spec\r\n                        )[5] === 'Green' && !test.rezultat_multiple.length,\r\n                    }\"\r\n                  ></i>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </vuestic-modal-multi>\r\n\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!-- \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Modal\r\n\r\n\r\n\r\n\r\n\r\n      -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n\r\n      <vuestic-modal-micro-reset\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalResetSample\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          <span style=\"color: #acb5be;\">{{ \"Brisanje rezultata: \" }}</span>\r\n          <span style=\"color: #e34a4a;\">{{ CurrentTest }}</span>\r\n        </div>\r\n        <div>\r\n          <h5>{{ \"Jeste li sigurni da želite obrisati rezultat?\" }}</h5>\r\n        </div>\r\n      </vuestic-modal-micro-reset>\r\n\r\n      <vuestic-modal-micro-bactery\r\n        :show.sync=\"show\"\r\n        :large=\"true\"\r\n        :sample=\"sample\"\r\n        :select=\"true\"\r\n        :update=\"\r\n          !ShowAntibiotics &&\r\n          !ShowBacteries &&\r\n          MicrobiologyScenario === 'MAIBPoR'\r\n        \"\r\n        :povratak=\"ShowAntibiotics || ShowBacteries\"\r\n        :empty=\"\r\n          TemporaryAntibiotics.length > 0 || TemporaryBacteriesAdd.length > 0\r\n        \"\r\n        ref=\"staticModalMicroBacterySelect\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\" v-if=\"!ShowAntibiotics && !ShowBacteries\">\r\n          <span style=\"color: #acb5be;\">{{ \"Rezultat analize: \" }}</span>\r\n          <span style=\"color: #e34a4a;\">{{ CurrentTest }}</span>\r\n        </div>\r\n        <div slot=\"title\" v-if=\"ShowAntibiotics && !ShowBacteries\">\r\n          <span style=\"color: #acb5be;\">{{ \"Antibiotici | \" }}</span>\r\n          <span style=\"color: #e34a4a;\">{{ \"Izbornik\" }}</span>\r\n        </div>\r\n        <div slot=\"title\" v-if=\"!ShowAntibiotics && ShowBacteries\">\r\n          <span style=\"color: #acb5be;\">{{ \"Bakterije | \" }}</span>\r\n          <span style=\"color: #e34a4a;\">{{ \"Izbornik\" }}</span>\r\n        </div>\r\n        <div>\r\n          <!--  -->\r\n\r\n          <div class=\"row\" v-if=\"show_table\">\r\n            <div\r\n              class=\"col-md-1\"\r\n              v-if=\"\r\n                MicrobiologyScenario === 'MAIBPoR' &&\r\n                ShowBacteries &&\r\n                !ShowAntibiotics\r\n              \"\r\n            ></div>\r\n            <div\r\n              class=\"col-md-10\"\r\n              v-if=\"\r\n                MicrobiologyScenario === 'MAIBPoR' &&\r\n                ShowBacteries &&\r\n                !ShowAntibiotics\r\n              \"\r\n            >\r\n              <div class=\"col-md-12\" v-if=\"TemporaryBacteries.length\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-4\">\r\n                    <div\r\n                      class=\"form-check abc-checkbox abc-checkbox-primary\"\r\n                      v-for=\"bactery in filteredBacteries(1, 3)\"\r\n                      :key=\"bactery._id\"\r\n                    >\r\n                      <input\r\n                        class=\"form-check-input\"\r\n                        :id=\"bactery._id\"\r\n                        type=\"checkbox\"\r\n                        v-model=\"bactery.chosen\"\r\n                        @click=\"AddBacteries(bactery)\"\r\n                        :disabled=\"bactery.disabled\"\r\n                      />\r\n                      <label class=\"form-check-label\" :for=\"bactery._id\">\r\n                        <span\r\n                          v-if=\"!bactery.chosen\"\r\n                          style=\"color: #e34a4a;\"\r\n                          class=\"abc-label-text\"\r\n                          >{{ bactery.opis }}</span\r\n                        >\r\n                        <span\r\n                          v-if=\"bactery.chosen\"\r\n                          style=\"color: #4ae387;\"\r\n                          class=\"abc-label-text\"\r\n                          >{{ bactery.opis }}</span\r\n                        >\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div\r\n                      class=\"form-check abc-checkbox abc-checkbox-primary\"\r\n                      v-for=\"bactery in filteredBacteries(2, 3)\"\r\n                      :key=\"bactery._id\"\r\n                    >\r\n                      <input\r\n                        class=\"form-check-input\"\r\n                        :id=\"bactery._id\"\r\n                        type=\"checkbox\"\r\n                        v-model=\"bactery.chosen\"\r\n                        @click=\"AddBacteries(bactery)\"\r\n                        :disabled=\"bactery.disabled\"\r\n                      />\r\n                      <label class=\"form-check-label\" :for=\"bactery._id\">\r\n                        <span\r\n                          v-if=\"!bactery.chosen\"\r\n                          style=\"color: #e34a4a;\"\r\n                          class=\"abc-label-text\"\r\n                          >{{ bactery.opis }}</span\r\n                        >\r\n                        <span\r\n                          v-if=\"bactery.chosen\"\r\n                          style=\"color: #4ae387;\"\r\n                          class=\"abc-label-text\"\r\n                          >{{ bactery.opis }}</span\r\n                        >\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div\r\n                      class=\"form-check abc-checkbox abc-checkbox-primary\"\r\n                      v-for=\"bactery in filteredBacteries(3, 3)\"\r\n                      :key=\"bactery._id\"\r\n                    >\r\n                      <input\r\n                        class=\"form-check-input\"\r\n                        :id=\"bactery._id\"\r\n                        type=\"checkbox\"\r\n                        v-model=\"bactery.chosen\"\r\n                        @click=\"AddBacteries(bactery)\"\r\n                        :disabled=\"bactery.disabled\"\r\n                      />\r\n                      <label class=\"form-check-label\" :for=\"bactery._id\">\r\n                        <span\r\n                          v-if=\"!bactery.chosen\"\r\n                          style=\"color: #e34a4a;\"\r\n                          class=\"abc-label-text\"\r\n                          >{{ bactery.opis }}</span\r\n                        >\r\n                        <span\r\n                          v-if=\"bactery.chosen\"\r\n                          style=\"color: #4ae387;\"\r\n                          class=\"abc-label-text\"\r\n                          >{{ bactery.opis }}</span\r\n                        >\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              class=\"col-md-1\"\r\n              v-if=\"\r\n                MicrobiologyScenario === 'MAIBPoR' &&\r\n                ShowAntibiotics &&\r\n                !ShowBacteries\r\n              \"\r\n            ></div>\r\n            <div\r\n              class=\"col-md-10\"\r\n              v-if=\"\r\n                MicrobiologyScenario === 'MAIBPoR' &&\r\n                ShowAntibiotics &&\r\n                !ShowBacteries\r\n              \"\r\n            >\r\n              <div class=\"col-md-12\" v-if=\"Antibiotics.length\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-4\">\r\n                    <div\r\n                      class=\"form-check abc-checkbox abc-checkbox-primary\"\r\n                      v-for=\"antibiotik in filteredAntibiotics(1, 3)\"\r\n                      :key=\"antibiotik._id\"\r\n                    >\r\n                      <input\r\n                        class=\"form-check-input\"\r\n                        :id=\"antibiotik._id\"\r\n                        type=\"checkbox\"\r\n                        v-model=\"antibiotik.chosen\"\r\n                        @click=\"AddAntibiotics(antibiotik)\"\r\n                        :disabled=\"antibiotik.disabled\"\r\n                      />\r\n                      <label class=\"form-check-label\" :for=\"antibiotik._id\">\r\n                        <span\r\n                          v-if=\"!antibiotik.chosen\"\r\n                          style=\"color: #e34a4a;\"\r\n                          class=\"abc-label-text\"\r\n                          >{{ antibiotik.opis }}</span\r\n                        >\r\n                        <span\r\n                          v-if=\"antibiotik.chosen\"\r\n                          style=\"color: #4ae387;\"\r\n                          class=\"abc-label-text\"\r\n                          >{{ antibiotik.opis }}</span\r\n                        >\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div\r\n                      class=\"form-check abc-checkbox abc-checkbox-primary\"\r\n                      v-for=\"antibiotik in filteredAntibiotics(2, 3)\"\r\n                      :key=\"antibiotik._id\"\r\n                    >\r\n                      <input\r\n                        class=\"form-check-input\"\r\n                        :id=\"antibiotik._id\"\r\n                        type=\"checkbox\"\r\n                        v-model=\"antibiotik.chosen\"\r\n                        @click=\"AddAntibiotics(antibiotik)\"\r\n                        :disabled=\"antibiotik.disabled\"\r\n                      />\r\n                      <label class=\"form-check-label\" :for=\"antibiotik._id\">\r\n                        <span\r\n                          v-if=\"!antibiotik.chosen\"\r\n                          style=\"color: #e34a4a;\"\r\n                          class=\"abc-label-text\"\r\n                          >{{ antibiotik.opis }}</span\r\n                        >\r\n                        <span\r\n                          v-if=\"antibiotik.chosen\"\r\n                          style=\"color: #4ae387;\"\r\n                          class=\"abc-label-text\"\r\n                          >{{ antibiotik.opis }}</span\r\n                        >\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div\r\n                      class=\"form-check abc-checkbox abc-checkbox-primary\"\r\n                      v-for=\"antibiotik in filteredAntibiotics(3, 3)\"\r\n                      :key=\"antibiotik._id\"\r\n                    >\r\n                      <input\r\n                        class=\"form-check-input\"\r\n                        :id=\"antibiotik._id\"\r\n                        type=\"checkbox\"\r\n                        v-model=\"antibiotik.chosen\"\r\n                        @click=\"AddAntibiotics(antibiotik)\"\r\n                        :disabled=\"antibiotik.disabled\"\r\n                      />\r\n                      <label class=\"form-check-label\" :for=\"antibiotik._id\">\r\n                        <span\r\n                          v-if=\"!antibiotik.chosen\"\r\n                          style=\"color: #e34a4a;\"\r\n                          class=\"abc-label-text\"\r\n                          >{{ antibiotik.opis }}</span\r\n                        >\r\n                        <span\r\n                          v-if=\"antibiotik.chosen\"\r\n                          style=\"color: #4ae387;\"\r\n                          class=\"abc-label-text\"\r\n                          >{{ antibiotik.opis }}</span\r\n                        >\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              class=\"col-md-1\"\r\n              v-if=\"\r\n                MicrobiologyScenario === 'MAIBPoR' &&\r\n                !ShowAntibiotics &&\r\n                !ShowBacteries\r\n              \"\r\n            ></div>\r\n            <div\r\n              class=\"col-md-10\"\r\n              v-if=\"\r\n                MicrobiologyScenario === 'MAIBPoR' &&\r\n                !ShowAntibiotics &&\r\n                !ShowBacteries\r\n              \"\r\n            >\r\n              <vuestic-tabs-bactery\r\n                v-if=\"SelectedBacteries.length\"\r\n                :names=\"BacteryTabs\"\r\n                :tab=\"CurrentTab\"\r\n                :id=\"CurrentTab\"\r\n                :prikazi=\"\r\n                  sample.status != 'VERIFICIRAN' && sample.status != 'ODOBREN'\r\n                \"\r\n                ref=\"tabs\"\r\n              >\r\n                <div\r\n                  :slot=\"CurrentTab\"\r\n                  v-for=\"test in SelectedBacteries\"\r\n                  :key=\"test._id\"\r\n                >\r\n                  <div class=\"row\" v-show=\"test.opis === CurrentTab\">\r\n                    <!-- Antibiogram -->\r\n\r\n                    <div class=\"table-responsive\">\r\n                      <table class=\"table table-striped first-td-padding\">\r\n                        <thead>\r\n                          <tr align=\"left\">\r\n                            <td style=\"text-transform: none;\" width=\"30%\">\r\n                              {{ test.antibiogram.opis }}\r\n                            </td>\r\n                            <td width=\"10%\">{{ \"\" }}</td>\r\n                            <td width=\"20%\">{{ \"\" }}</td>\r\n                            <td width=\"20%\">{{ \"\" }}</td>\r\n                            <td width=\"20%\">{{ \"\" }}</td>\r\n                          </tr>\r\n                        </thead>\r\n\r\n                        <!-- Table Body -->\r\n\r\n                        <tbody>\r\n                          <tr\r\n                            align=\"left\"\r\n                            v-for=\"abtk in test.antibiogram.antibiotici\"\r\n                            :key=\"abtk._id\"\r\n                            v-bind:class=\"{\r\n                              'table-danger': false,\r\n                              'table-success': false,\r\n                              'table-warning': false,\r\n                            }\"\r\n                          >\r\n                            <!-- ANALIZA -->\r\n\r\n                            <td :title=\"abtk.opis\">{{ abtk.opis }}</td>\r\n                            <td>\r\n                              <bactery-radio-button\r\n                                :disabled=\"\r\n                                  sample.status === 'ODOBREN' ||\r\n                                  sample.status === 'VERIFICIRAN'\r\n                                \"\r\n                                :label=\"''\"\r\n                                :value=\"''\"\r\n                                :id=\"'' + test._id + abtk._id\"\r\n                                :name=\"test._id + abtk._id\"\r\n                                v-model=\"abtk.rezultat\"\r\n                              />\r\n                            </td>\r\n                            <td>\r\n                              <postavke-radio-button\r\n                                :disabled=\"\r\n                                  sample.status === 'ODOBREN' ||\r\n                                  sample.status === 'VERIFICIRAN'\r\n                                \"\r\n                                :label=\"'Senzitivan'\"\r\n                                :value=\"'S'\"\r\n                                :id=\"'S' + test._id + abtk._id\"\r\n                                :name=\"test._id + abtk._id\"\r\n                                v-model=\"abtk.rezultat\"\r\n                              />\r\n                            </td>\r\n                            <td>\r\n                              <postavke-radio-button\r\n                                :disabled=\"\r\n                                  sample.status === 'ODOBREN' ||\r\n                                  sample.status === 'VERIFICIRAN'\r\n                                \"\r\n                                :label=\"'Intermedijaran'\"\r\n                                :value=\"'I'\"\r\n                                :id=\"'I' + test._id + abtk._id\"\r\n                                :name=\"test._id + abtk._id\"\r\n                                v-model=\"abtk.rezultat\"\r\n                              />\r\n                            </td>\r\n                            <td>\r\n                              <postavke-radio-button\r\n                                :disabled=\"\r\n                                  sample.status === 'ODOBREN' ||\r\n                                  sample.status === 'VERIFICIRAN'\r\n                                \"\r\n                                :label=\"'Rezistentan'\"\r\n                                :value=\"'R'\"\r\n                                :id=\"'R' + test._id + abtk._id\"\r\n                                :name=\"test._id + abtk._id\"\r\n                                v-model=\"abtk.rezultat\"\r\n                              />\r\n                            </td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n\r\n                    <!-- END of Antibiogram -->\r\n                  </div>\r\n                </div>\r\n              </vuestic-tabs-bactery>\r\n            </div>\r\n\r\n            <div\r\n              class=\"col-md-12\"\r\n              v-if=\"\r\n                MicrobiologyScenario === 'MANBNeR' ||\r\n                MicrobiologyScenario === 'MANBPoR' ||\r\n                MicrobiologyScenario === 'MAIBNeR'\r\n              \"\r\n            >\r\n              <div v-show=\"show_table\" class=\"table-responsive\">\r\n                <table class=\"table table-striped first-td-padding\">\r\n                  <thead>\r\n                    <tr align=\"left\">\r\n                      <td>{{ \"REZULTAT\" }}</td>\r\n                    </tr>\r\n                  </thead>\r\n\r\n                  <!-- Table Body -->\r\n\r\n                  <tbody>\r\n                    <tr\r\n                      align=\"left\"\r\n                      v-for=\"(test, index) in rezultati\"\r\n                      v-show=\"index < 1\"\r\n                      :key=\"test.labassay_id\"\r\n                      v-bind:class=\"{\r\n                        'table-danger':\r\n                          test.rezultat_m.length &&\r\n                          test.rezultat_m[0].pozitivan,\r\n                        'table-success':\r\n                          test.rezultat_m.length &&\r\n                          test.rezultat_m[0].negativan,\r\n                        'table-warning': false,\r\n                      }\"\r\n                    >\r\n                      <td\r\n                        v-if=\"\r\n                          sample.status != 'ODOBREN' &&\r\n                          sample.status != 'VERIFICIRAN'\r\n                        \"\r\n                      >\r\n                        <div class=\"form-group\">\r\n                          <div class=\"input-group\">\r\n                            <textarea\r\n                              type=\"text\"\r\n                              id=\"simple-textarea\"\r\n                              v-model=\"test.rezultat\"\r\n                              required\r\n                            ></textarea>\r\n                            <label\r\n                              class=\"control-label\"\r\n                              for=\"simple-textarea\"\r\n                              >{{ \"\" }}</label\r\n                            >\r\n                            <i class=\"bar\"></i>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td\r\n                        v-if=\"\r\n                          sample.status === 'ODOBREN' ||\r\n                          sample.status === 'VERIFICIRAN'\r\n                        \"\r\n                      >\r\n                        <div class=\"form-group\">\r\n                          <div class=\"input-group\">\r\n                            <input\r\n                              id=\"input-icon-left\"\r\n                              title=\" \"\r\n                              name=\"input-icon-left\"\r\n                              disabled\r\n                            />\r\n                            <label\r\n                              v-if=\"test.rezultat.length\"\r\n                              class=\"control-label\"\r\n                              for=\"input-icon-left\"\r\n                              >{{ test.rezultat }}</label\r\n                            >\r\n                            <label\r\n                              v-if=\"!test.rezultat.length\"\r\n                              class=\"control-label\"\r\n                              for=\"input-icon-left\"\r\n                              >{{ \"Nema podataka.\" }}</label\r\n                            >\r\n                            <i class=\"bar\"></i>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </vuestic-modal-micro-bactery>\r\n\r\n      <vuestic-modal-micro-bactery\r\n        :show.sync=\"show\"\r\n        :large=\"true\"\r\n        :sample=\"sample\"\r\n        ref=\"staticModalMicroBactery\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          <span style=\"color: #acb5be;\">{{ \"Rezultat analize: \" }}</span>\r\n          <span style=\"color: #e34a4a;\">{{ CurrentTest }}</span>\r\n        </div>\r\n\r\n        <div>\r\n          <!--  -->\r\n\r\n          <div class=\"row\" v-if=\"show_table\">\r\n            <div class=\"col-md-12\" v-if=\"true\">\r\n              <div v-show=\"show_table\" class=\"table-responsive\">\r\n                <table class=\"table table-striped first-td-padding\">\r\n                  <thead>\r\n                    <tr align=\"left\">\r\n                      <td>{{ \"REZULTAT\" }}</td>\r\n                    </tr>\r\n                  </thead>\r\n\r\n                  <!-- Table Body -->\r\n\r\n                  <tbody>\r\n                    <tr\r\n                      align=\"left\"\r\n                      v-for=\"(test, index) in rezultati\"\r\n                      v-show=\"index < 1\"\r\n                      :key=\"test.labassay_id\"\r\n                      v-bind:class=\"{\r\n                        'table-danger':\r\n                          test.rezultat_m.length &&\r\n                          test.rezultat_m[0].pozitivan,\r\n                        'table-success':\r\n                          test.rezultat_m.length &&\r\n                          test.rezultat_m[0].negativan,\r\n                        'table-warning': false,\r\n                      }\"\r\n                    >\r\n                      <td\r\n                        v-if=\"\r\n                          sample.status != 'ODOBREN' &&\r\n                          sample.status != 'VERIFICIRAN'\r\n                        \"\r\n                      >\r\n                        <div class=\"form-group\">\r\n                          <div class=\"input-group\">\r\n                            <textarea\r\n                              type=\"text\"\r\n                              id=\"simple-textarea\"\r\n                              v-model=\"test.rezultat\"\r\n                              required\r\n                            ></textarea>\r\n                            <label\r\n                              class=\"control-label\"\r\n                              for=\"simple-textarea\"\r\n                              >{{ \"\" }}</label\r\n                            >\r\n                            <i class=\"bar\"></i>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td\r\n                        v-if=\"\r\n                          sample.status === 'ODOBREN' ||\r\n                          sample.status === 'VERIFICIRAN'\r\n                        \"\r\n                      >\r\n                        <div class=\"form-group\">\r\n                          <div class=\"input-group\">\r\n                            <input\r\n                              id=\"input-icon-left\"\r\n                              title=\" \"\r\n                              name=\"input-icon-left\"\r\n                              disabled\r\n                            />\r\n                            <label\r\n                              v-if=\"test.rezultat.length\"\r\n                              class=\"control-label\"\r\n                              for=\"input-icon-left\"\r\n                              >{{ test.rezultat }}</label\r\n                            >\r\n                            <label\r\n                              v-if=\"!test.rezultat.length\"\r\n                              class=\"control-label\"\r\n                              for=\"input-icon-left\"\r\n                              >{{ \"Nema podataka.\" }}</label\r\n                            >\r\n                            <i class=\"bar\"></i>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </vuestic-modal-micro-bactery>\r\n\r\n      <vuestic-modal-micro-result\r\n        :show.sync=\"show\"\r\n        :sample=\"sample\"\r\n        :large=\"ShowAllBacteries\"\r\n        :neg=\"ModalNegative\"\r\n        :pos=\"ModalPositive\"\r\n        :selected=\"ModalPositiveCondition\"\r\n        ref=\"staticModalSelectResult\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          <span style=\"color: #acb5be;\">{{ MicrobiologyModalHeader }} |</span>\r\n          <span style=\"color: #e34a4a;\">{{ \"Izbornik\" }}</span>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"!ModalNegative && !ModalPositive\">\r\n          <div class=\"col-md-6\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-3\"></div>\r\n              <div class=\"col-md-6\">\r\n                <button\r\n                  style=\"text-transform: none; border: 0px;\"\r\n                  class=\"btn btn-secondary btn-sm wizard-back pull-left\"\r\n                  @click=\"\r\n                    ModalNegative = true;\r\n                    ModalPositive = false;\r\n                  \"\r\n                >\r\n                  {{ \"Negativan\" }}\r\n                </button>\r\n              </div>\r\n              <div class=\"col-md-3\"></div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-2\"></div>\r\n              <div class=\"col-md-6\">\r\n                <button\r\n                  style=\"text-transform: none; border: 0px;\"\r\n                  class=\"btn btn-secondary-danger btn-sm wizard-next pull-right\"\r\n                  @click=\"\r\n                    ModalPositive = true;\r\n                    ModalNegative = false;\r\n                  \"\r\n                >\r\n                  {{ \"Pozitivan\" }}\r\n                </button>\r\n              </div>\r\n              <div class=\"col-md-4\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"ModalNegative && !ModalPositive\">\r\n          <div class=\"col-md-1\"></div>\r\n          <div class=\"col-md-11\">\r\n            <vuestic-radio-button\r\n              v-for=\"(desc, index) in MicrobiologyResult.NegativeDescriptions\"\r\n              :key=\"index\"\r\n              :label=\"MicrobiologyResult.NegativeDescriptions[index]\"\r\n              :id=\"MicrobiologyResult.NegativeDescriptions[index]\"\r\n              :value=\"MicrobiologyResult.NegativeDescriptions[index]\"\r\n              :name=\"MicrobiologyResult.NegativeDescriptions[index]\"\r\n              :disabled=\"false\"\r\n              v-model=\"NegativeResultSelection\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          class=\"row\"\r\n          v-if=\"\r\n            !ModalNegative &&\r\n            ModalPositive &&\r\n            !MicrobiologyResult.DefaultBacteries.length\r\n          \"\r\n        >\r\n          <div class=\"col-md-1\"></div>\r\n          <div class=\"col-md-11\">\r\n            <vuestic-radio-button\r\n              v-for=\"(desc, index) in MicrobiologyResult.PositiveDescriptions\"\r\n              :key=\"index\"\r\n              :label=\"MicrobiologyResult.PositiveDescriptions[index]\"\r\n              :id=\"MicrobiologyResult.PositiveDescriptions[index]\"\r\n              :value=\"MicrobiologyResult.PositiveDescriptions[index]\"\r\n              :name=\"MicrobiologyResult.PositiveDescriptions[index]\"\r\n              :disabled=\"false\"\r\n              v-model=\"PositiveResultSelection\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          class=\"row\"\r\n          v-if=\"\r\n            !ModalNegative &&\r\n            ModalPositive &&\r\n            MicrobiologyResult.DefaultBacteries.length\r\n          \"\r\n        >\r\n          <div class=\"col-md-6\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-2\"></div>\r\n              <div class=\"col-md-10\">\r\n                <div\r\n                  class=\"form-check abc-checkbox abc-checkbox-primary\"\r\n                  v-for=\"(bakt, index) in MicrobiologyResult.DefaultBacteries\"\r\n                  :key=\"index\"\r\n                >\r\n                  <input\r\n                    class=\"form-check-input\"\r\n                    :id=\"bakt._id\"\r\n                    type=\"checkbox\"\r\n                    v-model=\"bakt.chosen\"\r\n                    @click=\"SelectBactery(bakt, index)\"\r\n                  />\r\n                  <label class=\"form-check-label\" :for=\"bakt._id\">\r\n                    <span style=\"color: #e34a4a;\" class=\"abc-label-text\">\r\n                      {{ bakt.opis }}\r\n                    </span>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-md-6\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-1\"></div>\r\n              <div class=\"col-md-6\">\r\n                <a\r\n                  v-if=\"!ShowAllBacteries\"\r\n                  href=\"#\"\r\n                  @click.prevent=\"ShowAllBacteries = true\"\r\n                  style=\"font-size: 16px; color: #4ae387;\"\r\n                  >Prikaži više</a\r\n                >\r\n              </div>\r\n              <div class=\"col-md-5\"></div>\r\n            </div>\r\n\r\n            <div class=\"row\" v-if=\"ShowAllBacteries\">\r\n              <div class=\"col-md-1\"></div>\r\n              <div class=\"col-md-10\">\r\n                <div\r\n                  class=\"form-check abc-checkbox abc-checkbox-primary\"\r\n                  v-for=\"(bakt, index) in MicrobiologyResult.RemainingBacteries\"\r\n                  :key=\"index\"\r\n                >\r\n                  <input\r\n                    class=\"form-check-input\"\r\n                    :id=\"bakt._id\"\r\n                    type=\"checkbox\"\r\n                    v-model=\"bakt.chosen\"\r\n                    @click=\"SelectBactery(bakt, index)\"\r\n                  />\r\n                  <label class=\"form-check-label\" :for=\"bakt._id\">\r\n                    <span style=\"color: #e34a4a;\" class=\"abc-label-text\">\r\n                      {{ bakt.opis }}\r\n                    </span>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </vuestic-modal-micro-result>\r\n\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!-- \r\n\r\n\r\n\r\n\r\n\r\nEnd of Microbiology Modal |\r\n\r\n\r\n\r\n\r\n\r\n      -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n\r\n      <!-- Brisanje uzorka -->\r\n\r\n      <vuestic-modal-delete\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalDeleteSample\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          <span style=\"color: #acb5be;\">{{ \"Brisanje uzorka: \" }}</span>\r\n          <span style=\"color: #e34a4a;\">{{ sid }}</span>\r\n        </div>\r\n        <div>\r\n          <h5>{{ \"Jeste li sigurni da želite obrisati uzorak?\" }}</h5>\r\n        </div>\r\n      </vuestic-modal-delete>\r\n\r\n      <!-- Unos komentara -->\r\n\r\n      <vuestic-modal-comment\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalComment\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">{{ \"Unos komentara za uzorak: \" + sid }}</div>\r\n        <div>\r\n          <h5></h5>\r\n        </div>\r\n      </vuestic-modal-comment>\r\n\r\n      <!-- Uređivanje uzorka -->\r\n\r\n      <vuestic-modal-edit\r\n        :show.sync=\"show\"\r\n        :sample=\"sid\"\r\n        action=\"Edit\"\r\n        ref=\"staticModalEditSample\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">{{ \"Uređivanje uzorka: \" + sid }}</div>\r\n        <div>\r\n          <h5></h5>\r\n        </div>\r\n      </vuestic-modal-edit>\r\n\r\n      <!-- Email Send -->\r\n\r\n      <vuestic-modal-mail\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalSendMail\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{ \"Slanje nalaza na adresu: \" }}\r\n          <span style=\"color: #4ae387;\">{{ email }}</span>\r\n        </div>\r\n        <div>\r\n          <h5>{{ \"Jeste li sigurni da želite poslati nalaz?\" }}</h5>\r\n        </div>\r\n      </vuestic-modal-mail>\r\n\r\n      <!--  -->\r\n\r\n      <vuestic-modal-all-results\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalAllResults\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{ \"Izbor rezultata: \" }}\r\n          <span style=\"color: #e34a4a;\">{{ labassay }}</span>\r\n        </div>\r\n        <div>\r\n          <div class=\"table-responsive\">\r\n            <table class=\"table table-striped first-td-padding\">\r\n              <thead>\r\n                <tr>\r\n                  <!-- <td width=\"20%\"></td> -->\r\n\r\n                  <td>analizator</td>\r\n                  <td>vrijeme</td>\r\n                  <td>rezultat</td>\r\n                  <td>jedinica</td>\r\n                  <td>reference</td>\r\n                  <td\r\n                    v-if=\"\r\n                      sample_status != 'ODOBREN' &&\r\n                      sample_status != 'VERIFICIRAN'\r\n                    \"\r\n                  >\r\n                    izbor\r\n                  </td>\r\n                  <td align=\"middle\"></td>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr\r\n                  v-for=\"test in vise.rezultat\"\r\n                  v-show=\"test.rezultat_f != ''\"\r\n                  :key=\"test._id\"\r\n                  v-bind:class=\"{\r\n                    'table-danger':\r\n                      Interpretacija(\r\n                        vise.labassay.analit,\r\n                        test.rezultat_f,\r\n                        test.jedinice_f,\r\n                        vise.refd,\r\n                        vise.refg,\r\n                        $store.state.site,\r\n                        vise.interp,\r\n                        vise.extend,\r\n                        spec\r\n                      )[5] === 'Red' && !test.multidata,\r\n                    'table-success':\r\n                      Interpretacija(\r\n                        vise.labassay.analit,\r\n                        test.rezultat_f,\r\n                        test.jedinice_f,\r\n                        vise.refd,\r\n                        vise.refg,\r\n                        $store.state.site,\r\n                        vise.interp,\r\n                        vise.extend,\r\n                        spec\r\n                      )[5] === 'Green' && !test.multidata,\r\n                    'table-warning':\r\n                      Interpretacija(\r\n                        vise.labassay.analit,\r\n                        test.rezultat_f,\r\n                        test.jedinice_f,\r\n                        vise.refd,\r\n                        vise.refg,\r\n                        $store.state.site,\r\n                        vise.interp,\r\n                        vise.extend,\r\n                        spec\r\n                      )[5] === 'Yellow' && !test.multidata,\r\n                  }\"\r\n                >\r\n                  <td>{{ test.anaassay.aparat.ime }}</td>\r\n\r\n                  <td>\r\n                    {{\r\n                      JSON.stringify(test.updated_at).slice(9, 11) +\r\n                      \".\" +\r\n                      JSON.stringify(test.updated_at).slice(6, 8) +\r\n                      \".\" +\r\n                      JSON.stringify(test.updated_at).slice(1, 5) +\r\n                      \" | \"\r\n                    }}\r\n                    <sub>{{\r\n                      JSON.stringify(test.updated_at).slice(12, 20)\r\n                    }}</sub>\r\n                  </td>\r\n                  <td>{{ test.rezultat_f }}</td>\r\n                  <td>{{ test.jedinice_f }}</td>\r\n                  <td>\r\n                    {{\r\n                      Interpretacija(\r\n                        vise.labassay.analit,\r\n                        test.rezultat_f,\r\n                        test.jedinice_f,\r\n                        vise.refd,\r\n                        vise.refg,\r\n                        $store.state.site,\r\n                        vise.interp,\r\n                        vise.extend,\r\n                        spec\r\n                      )[4]\r\n                    }}\r\n                  </td>\r\n                  <td\r\n                    v-if=\"\r\n                      sample_status != 'ODOBREN' &&\r\n                      sample_status != 'VERIFICIRAN'\r\n                    \"\r\n                  >\r\n                    <i\r\n                      v-if=\"!test.izabran\"\r\n                      @click.prevent=\"IzborTesta(vise, test)\"\r\n                      style=\"font-size: 18px; color: #e34a4a;\"\r\n                      class=\"glyphicon glyphicon-unchecked\"\r\n                    ></i>\r\n\r\n                    <i\r\n                      v-if=\"test.izabran\"\r\n                      style=\"font-size: 18px; color: #4ae387;\"\r\n                      class=\"glyphicon glyphicon-check\"\r\n                    ></i>\r\n                  </td>\r\n                  <td>\r\n                    <i\r\n                      v-bind:class=\"{\r\n                        'fa fa-exclamation-triangle icon-right input-icon error-icon':\r\n                          Interpretacija(\r\n                            vise.labassay.analit,\r\n                            test.rezultat_f,\r\n                            test.jedinice_f,\r\n                            vise.refd,\r\n                            vise.refg,\r\n                            $store.state.site,\r\n                            vise.interp,\r\n                            vise.extend,\r\n                            spec\r\n                          )[5] === 'Red',\r\n                      }\"\r\n                    ></i>\r\n                    <i\r\n                      v-bind:class=\"{\r\n                        'fa fa-check success-icon icon-right input-icon':\r\n                          Interpretacija(\r\n                            vise.labassay.analit,\r\n                            test.rezultat_f,\r\n                            test.jedinice_f,\r\n                            vise.refd,\r\n                            vise.refg,\r\n                            $store.state.site,\r\n                            vise.interp,\r\n                            vise.extend,\r\n                            spec\r\n                          )[5] === 'Green',\r\n                      }\"\r\n                    ></i>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n\r\n            <!-- END OF DRUGA TABELA -->\r\n          </div>\r\n        </div>\r\n      </vuestic-modal-all-results>\r\n\r\n      <vuestic-modal-error\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalError\"\r\n        cancelText=\"ZATVORI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{ \"\" }}\r\n          <span style=\"color: #e34a4a;\">{{ \"404: Not Found\" }}</span>\r\n        </div>\r\n        <div>\r\n          <h5>{{ \"Greška prilikom čitanja nalaza.\" }}</h5>\r\n        </div>\r\n      </vuestic-modal-error>\r\n\r\n      <vuestic-modal-error\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalVerifyPrivilege\"\r\n        cancelText=\"ZATVORI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{ \"\" }}\r\n          <span style=\"color: #e34a4a;\">{{ \"401: Not Authorized\" }}</span>\r\n        </div>\r\n        <div>\r\n          <h5>{{ \"Nemate odgovarajuće privilegije.\" }}</h5>\r\n        </div>\r\n      </vuestic-modal-error>\r\n\r\n      <vuestic-modal-exclamation\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalExclamation\"\r\n        cancelText=\"ZATVORI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{ \"\" }}\r\n          <span style=\"color: #e34a4a;\">{{ warning.analiza }}</span>\r\n        </div>\r\n        <div>\r\n          <h5>{{ warning.control }}</h5>\r\n          <p>{{ warning.text }}</p>\r\n        </div>\r\n\r\n        <!-- <div v-if=\"warning.napomena !=''\">\r\n          <h5>{{\"Napomena\"}}</h5>\r\n          <p>{{warning.napomena}}</p>\r\n        </div>-->\r\n      </vuestic-modal-exclamation>\r\n\r\n      <vuestic-modal-reference\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalReference\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{ \"Referentne vrijednosti: \" }}\r\n          <span style=\"color: #e34a4a;\"\r\n            >{{ reference.naziv }} ({{ reference.opis }})</span\r\n          >\r\n        </div>\r\n        <div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-1\"></div>\r\n            <div class=\"col-md-2\">\r\n              <div class=\"form-group\">\r\n                <div class=\"input-group\">\r\n                  <input\r\n                    style=\"color: #e34a4a;\"\r\n                    id=\"input-icon-left\"\r\n                    title=\" \"\r\n                    v-model=\"reference.dref\"\r\n                    name=\"input-icon-left\"\r\n                    required\r\n                  />\r\n\r\n                  <!-- <i class=\"glyphicon glyphicon-pencil icon-left input-icon\"></i> -->\r\n\r\n                  <label class=\"control-label\" for=\"input-icon-left\">\r\n                    {{ \"Donja\" }}\r\n                  </label>\r\n                  <i class=\"bar\"></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-1\"></div>\r\n            <div class=\"col-md-2\">\r\n              <div class=\"form-group\">\r\n                <div class=\"input-group\">\r\n                  <input\r\n                    style=\"color: #e34a4a;\"\r\n                    id=\"input-icon-left\"\r\n                    title=\" \"\r\n                    v-model=\"reference.gref\"\r\n                    name=\"input-icon-left\"\r\n                    required\r\n                  />\r\n\r\n                  <!-- <i class=\"glyphicon glyphicon-pencil icon-left input-icon\"></i> -->\r\n\r\n                  <label class=\"control-label\" for=\"input-icon-left\">\r\n                    {{ \"Gornja\" }}\r\n                  </label>\r\n                  <i class=\"bar\"></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-1\"></div>\r\n            <div class=\"col-md-4\">\r\n              <vuestic-simple-select\r\n                v-if=\"$store.state.access.level < 1\"\r\n                style=\"font-size: 14px;\"\r\n                label=\"Interpretacija\"\r\n                v-model=\"reference.interp\"\r\n                title=\" \"\r\n                v-bind:options=\"interpretacije\"\r\n              ></vuestic-simple-select>\r\n\r\n              <div v-if=\"$store.state.access.level > 0\" class=\"form-group\">\r\n                <div class=\"input-group\">\r\n                  <input\r\n                    id=\"input-icon-left\"\r\n                    title=\" \"\r\n                    v-model=\"reference.interp\"\r\n                    name=\"input-icon-left\"\r\n                    required\r\n                    :disabled=\"true\"\r\n                  />\r\n\r\n                  <!-- <i class=\"glyphicon glyphicon-pencil icon-left input-icon\"></i> -->\r\n\r\n                  <label class=\"control-label\" for=\"input-icon-left\">\r\n                    {{ reference.interp }}\r\n                  </label>\r\n                  <i class=\"bar\"></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-1\"></div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-1\"></div>\r\n            <div class=\"col-md-2\">\r\n              <vuestic-simple-select\r\n                style=\"font-size: 14px;\"\r\n                label=\"Jedinica\"\r\n                v-model=\"reference.jedinica\"\r\n                title=\" \"\r\n                v-bind:options=\"jedinice\"\r\n              ></vuestic-simple-select>\r\n            </div>\r\n            <div class=\"col-md-1\"></div>\r\n\r\n            <div class=\"col-md-7\">\r\n              <div class=\"form-group\" v-show=\"reference.interp != 'spec'\">\r\n                <div class=\"input-group\">\r\n                  <input\r\n                    style=\"color: #e34a4a;\"\r\n                    id=\"input-icon-left\"\r\n                    title=\" \"\r\n                    v-model=\"reference.extend\"\r\n                    name=\"input-icon-left\"\r\n                    required\r\n                  />\r\n\r\n                  <label class=\"control-label\" for=\"input-icon-left\">\r\n                    {{ \"Proširena referentna vrijednost\" }}\r\n                  </label>\r\n                  <i class=\"bar\"></i>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group\" v-show=\"reference.interp === 'spec'\">\r\n                <div class=\"input-group\">\r\n                  <textarea\r\n                    v-model=\"reference.extend\"\r\n                    type=\"text\"\r\n                    style=\"color: #e34a4a;\"\r\n                    id=\"simple-textarea\"\r\n                    required\r\n                  ></textarea>\r\n\r\n                  <label class=\"control-label\" for=\"simple-textarea\">\r\n                    {{ \"Specifična interpretacija rezultata\" }}\r\n                  </label>\r\n                  <i class=\"bar\"></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-1\"></div>\r\n          </div>\r\n        </div>\r\n      </vuestic-modal-reference>\r\n\r\n      <vuestic-modal-find\r\n        :show.sync=\"show\"\r\n        :data_pid=\"Number(data_pid)\"\r\n        :data_length=\"Number(data_length)\"\r\n        ref=\"staticModalFind\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{ \"\" }}\r\n          <span style=\"color: #e34a4a;\">{{ \"Redni broj pacijenta\" }}</span>\r\n        </div>\r\n        <div>\r\n          <h5></h5>\r\n        </div>\r\n      </vuestic-modal-find>\r\n\r\n      <vuestic-modal-aparati\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalAparati\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{ \"Izbor analizatora: \" }}\r\n          <span style=\"color: #e34a4a;\">\r\n            {{ this.analiza.ime + \" (\" + this.analiza.analit + \")\" }}\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <vuestic-accordion-obrada>\r\n            <vuestic-collapse-aparati\r\n              v-for=\"element in analysers\"\r\n              :key=\"element._id\"\r\n              :analyser=\"element\"\r\n            >\r\n              <span slot=\"header\">\r\n                {{ element.ime + \", \" + element.site.naziv }}\r\n              </span>\r\n              <div slot=\"body\">\r\n                <div class=\"va-row\"></div>\r\n              </div>\r\n            </vuestic-collapse-aparati>\r\n          </vuestic-accordion-obrada>\r\n        </div>\r\n      </vuestic-modal-aparati>\r\n\r\n      <!--  -->\r\n\r\n      <vuestic-modal-results-multi\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalResultsMulti\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{ \"Izbor rezultata: \" }}\r\n          <span style=\"color: #e34a4a;\">{{ multi_test }}</span>\r\n        </div>\r\n        <div></div>\r\n      </vuestic-modal-results-multi>\r\n\r\n      <!-- Patient evaluation, Single -->\r\n\r\n      <patient-evaluation-single\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalEvaluationSingle\"\r\n        cancelText=\"ZATVORI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          <span>{{ ime + \" \" + prezime }}</span>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"Procjena.length && !graph\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"table-responsive\">\r\n              <table\r\n                class=\"table table-striped table-sm color-icon-label-table\"\r\n              >\r\n                <thead>\r\n                  <tr align=\"middle\">\r\n                    <td width=\"20%\">{{ \"REZULTAT\" }}</td>\r\n                    <td width=\"20%\">{{ \"JEDINICA\" }}</td>\r\n                    <td width=\"20%\">{{ \"REFERENCE\" }}</td>\r\n                    <td width=\"20%\">{{ \"DATUM\" }}</td>\r\n                    <td width=\"15%\">{{ \"VRIJEME\" }}</td>\r\n                    <td width=\"5%\" align=\"middle\"></td>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <!--  -->\r\n\r\n                  <tr\r\n                    align=\"middle\"\r\n                    v-for=\"(element, index) in Procjena\"\r\n                    :key=\"index\"\r\n                    v-bind:class=\"{\r\n                      'table-danger':\r\n                        Interpretacija(\r\n                          element.analit,\r\n                          element.rezultat,\r\n                          element.jedinica,\r\n                          element.refd,\r\n                          element.refg,\r\n                          $store.state.site,\r\n                          element.interp,\r\n                          element.extend,\r\n                          spec\r\n                        )[5] === 'Red',\r\n                      'table-success':\r\n                        Interpretacija(\r\n                          element.analit,\r\n                          element.rezultat,\r\n                          element.jedinica,\r\n                          element.refd,\r\n                          element.refg,\r\n                          $store.state.site,\r\n                          element.interp,\r\n                          element.extend,\r\n                          spec\r\n                        )[5] === 'Green',\r\n                      'table-warning':\r\n                        Interpretacija(\r\n                          element.analit,\r\n                          element.rezultat,\r\n                          element.jedinica,\r\n                          element.refd,\r\n                          element.refg,\r\n                          $store.state.site,\r\n                          element.interp,\r\n                          element.extend,\r\n                          spec\r\n                        )[5] === 'Yellow',\r\n                    }\"\r\n                  >\r\n                    <td width=\"19%\">{{ element.rezultat }}</td>\r\n                    <td width=\"19%\">{{ element.jedinica }}</td>\r\n                    <td width=\"19%\">\r\n                      {{\r\n                        Interpretacija(\r\n                          element.analit,\r\n                          element.rezultat,\r\n                          element.jedinica,\r\n                          element.refd,\r\n                          element.refg,\r\n                          $store.state.site,\r\n                          element.interp,\r\n                          element.extend,\r\n                          spec\r\n                        )[4]\r\n                      }}\r\n                    </td>\r\n                    <td width=\"19%\">{{ element.datum }}</td>\r\n                    <td width=\"15%\">{{ element.vrijeme }}</td>\r\n                    <td width=\"9%\" align=\"middle\">\r\n                      <i\r\n                        v-bind:class=\"{\r\n                          'fa fa-exclamation-triangle icon-right input-icon error-icon':\r\n                            Interpretacija(\r\n                              element.analit,\r\n                              element.rezultat,\r\n                              element.jedinica,\r\n                              element.refd,\r\n                              element.refg,\r\n                              $store.state.site,\r\n                              element.interp,\r\n                              element.extend,\r\n                              spec\r\n                            )[5] === 'Red',\r\n                        }\"\r\n                      ></i>\r\n                      <i\r\n                        v-bind:class=\"{\r\n                          'fa fa-check success-icon icon-right input-icon':\r\n                            Interpretacija(\r\n                              element.analit,\r\n                              element.rezultat,\r\n                              element.jedinica,\r\n                              element.refd,\r\n                              element.refg,\r\n                              $store.state.site,\r\n                              element.interp,\r\n                              element.extend,\r\n                              spec\r\n                            )[5] === 'Green',\r\n                        }\"\r\n                      ></i>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <div style=\"text-align: center;\">\r\n                <span class=\"circle badge-info\"></span>\r\n                {{ table_header }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!--  <div class=\"row\" v-if=\"showLineChart\">\r\n          <div class=\"col-md-12\">\r\n            <hr>\r\n          </div>\r\n        </div>-->\r\n\r\n        <div class=\"row\" v-if=\"showLineChart && graph\">\r\n          <div class=\"col-md-12\">\r\n            <line-chart\r\n              :options=\"optionsLineChart\"\r\n              :data=\"dataLineChart\"\r\n              type=\"line\"\r\n            ></line-chart>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\" v-if=\"!showLineChart && graph\">\r\n          <div class=\"col-md-12\">\r\n            <!-- <div style=\"text-align:center;\"> -->\r\n\r\n            <div>\r\n              <span style=\"color: #e34a4a;\">{{ \"Nema podataka.\" }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </patient-evaluation-single>\r\n\r\n      <!-- LabAssay evaluation, Single -->\r\n\r\n      <patient-evaluation-single\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalLabAssayEvalSingle\"\r\n        cancelText=\"ZATVORI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          <span style=\"color: #4ae387;\">\r\n            {{ analiza_eval.ime + \" (\" + analiza_eval.analit + \")\" }}\r\n          </span>\r\n          <span>{{ \" - Rezultati analize u zadnjih 14 dana\" }}</span>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"Procjena.length && !graph\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"table-responsive\">\r\n              <table\r\n                class=\"table table-striped table-sm color-icon-label-table\"\r\n              >\r\n                <thead>\r\n                  <tr align=\"middle\">\r\n                    <td width=\"20%\">{{ \"REZULTAT\" }}</td>\r\n                    <td width=\"20%\">{{ \"JEDINICA\" }}</td>\r\n                    <td width=\"20%\">{{ \"REFERENCE\" }}</td>\r\n                    <td width=\"20%\">{{ \"DATUM\" }}</td>\r\n                    <td width=\"15%\">{{ \"VRIJEME\" }}</td>\r\n                    <td width=\"5%\" align=\"middle\"></td>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <!--  -->\r\n\r\n                  <tr\r\n                    align=\"middle\"\r\n                    v-for=\"(element, index) in Procjena\"\r\n                    :key=\"index\"\r\n                    v-bind:class=\"{\r\n                      'table-danger':\r\n                        Interpretacija(\r\n                          element.analit,\r\n                          element.rezultat,\r\n                          element.jedinica,\r\n                          element.refd,\r\n                          element.refg,\r\n                          $store.state.site,\r\n                          element.interp,\r\n                          element.extend,\r\n                          spec\r\n                        )[5] === 'Red',\r\n                      'table-success':\r\n                        Interpretacija(\r\n                          element.analit,\r\n                          element.rezultat,\r\n                          element.jedinica,\r\n                          element.refd,\r\n                          element.refg,\r\n                          $store.state.site,\r\n                          element.interp,\r\n                          element.extend,\r\n                          spec\r\n                        )[5] === 'Green',\r\n                      'table-warning':\r\n                        Interpretacija(\r\n                          element.analit,\r\n                          element.rezultat,\r\n                          element.jedinica,\r\n                          element.refd,\r\n                          element.refg,\r\n                          $store.state.site,\r\n                          element.interp,\r\n                          element.extend,\r\n                          spec\r\n                        )[5] === 'Yellow',\r\n                    }\"\r\n                  >\r\n                    <td width=\"19%\">{{ element.rezultat }}</td>\r\n                    <td width=\"19%\">{{ element.jedinica }}</td>\r\n                    <td width=\"19%\">\r\n                      {{\r\n                        Interpretacija(\r\n                          element.analit,\r\n                          element.rezultat,\r\n                          element.jedinica,\r\n                          element.refd,\r\n                          element.refg,\r\n                          $store.state.site,\r\n                          element.interp,\r\n                          element.extend,\r\n                          spec\r\n                        )[4]\r\n                      }}\r\n                    </td>\r\n                    <td width=\"19%\">{{ element.datum }}</td>\r\n                    <td width=\"15%\">{{ element.vrijeme }}</td>\r\n                    <td width=\"9%\" align=\"middle\">\r\n                      <i\r\n                        v-bind:class=\"{\r\n                          'fa fa-exclamation-triangle icon-right input-icon error-icon':\r\n                            Interpretacija(\r\n                              element.analit,\r\n                              element.rezultat,\r\n                              element.jedinica,\r\n                              element.refd,\r\n                              element.refg,\r\n                              $store.state.site,\r\n                              element.interp,\r\n                              element.extend,\r\n                              spec\r\n                            )[5] === 'Red',\r\n                        }\"\r\n                      ></i>\r\n                      <i\r\n                        v-bind:class=\"{\r\n                          'fa fa-check success-icon icon-right input-icon':\r\n                            Interpretacija(\r\n                              element.analit,\r\n                              element.rezultat,\r\n                              element.jedinica,\r\n                              element.refd,\r\n                              element.refg,\r\n                              $store.state.site,\r\n                              element.interp,\r\n                              element.extend,\r\n                              spec\r\n                            )[5] === 'Green',\r\n                        }\"\r\n                      ></i>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <div style=\"text-align: center;\">\r\n                <span class=\"circle badge-info\"></span>\r\n                {{ table_header }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!--  <div class=\"row\" v-if=\"showLineChart\">\r\n          <div class=\"col-md-12\">\r\n            <hr>\r\n          </div>\r\n        </div>-->\r\n\r\n        <div class=\"row\" v-if=\"showLineChart && graph\">\r\n          <div class=\"col-md-12\">\r\n            <line-chart\r\n              :options=\"optionsLineChart\"\r\n              :data=\"dataLineChart\"\r\n              type=\"line\"\r\n            ></line-chart>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\" v-if=\"!showLineChart && graph\">\r\n          <div class=\"col-md-12\">\r\n            <!-- <div style=\"text-align:center;\"> -->\r\n            <div>\r\n              <span style=\"color: #e34a4a;\">{{ \"Nema podataka.\" }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </patient-evaluation-single>\r\n\r\n      <!-- Patient evaluation, Multi -->\r\n\r\n      <patient-evaluation-multi\r\n        :show.sync=\"show\"\r\n        :multiparam_izbor=\"multiparam_izbor\"\r\n        :multiparam_izbornik=\"multiparam_izbornik\"\r\n        ref=\"staticModalEvaluationMulti\"\r\n        cancelText=\"ZATVORI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          <span>{{ ime + \" \" + prezime }}</span>\r\n        </div>\r\n\r\n        <!--  -->\r\n\r\n        <div class=\"row\" v-if=\"Procjena.length && !graph\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"table-responsive\">\r\n              <table\r\n                class=\"table table-striped table-sm color-icon-label-table\"\r\n              >\r\n                <thead>\r\n                  <tr align=\"middle\">\r\n                    <td width=\"20%\">{{ \"REZULTAT\" }}</td>\r\n                    <td width=\"20%\">{{ \"JEDINICA\" }}</td>\r\n                    <td width=\"20%\">{{ \"REFERENCE\" }}</td>\r\n                    <td width=\"20%\">{{ \"DATUM\" }}</td>\r\n                    <td width=\"15%\">{{ \"VRIJEME\" }}</td>\r\n                    <td width=\"5%\" align=\"middle\"></td>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr\r\n                    align=\"middle\"\r\n                    v-for=\"(element, index) in Procjena\"\r\n                    :key=\"index\"\r\n                    v-bind:class=\"{\r\n                      'table-danger':\r\n                        Interpretacija(\r\n                          element.analit,\r\n                          element.rezultat,\r\n                          element.jedinica,\r\n                          element.refd,\r\n                          element.refg,\r\n                          $store.state.site,\r\n                          element.interp,\r\n                          element.extend,\r\n                          spec\r\n                        )[5] === 'Red',\r\n                      'table-success':\r\n                        Interpretacija(\r\n                          element.analit,\r\n                          element.rezultat,\r\n                          element.jedinica,\r\n                          element.refd,\r\n                          element.refg,\r\n                          $store.state.site,\r\n                          element.interp,\r\n                          element.extend,\r\n                          spec\r\n                        )[5] === 'Green',\r\n                      'table-warning':\r\n                        Interpretacija(\r\n                          element.analit,\r\n                          element.rezultat,\r\n                          element.jedinica,\r\n                          element.refd,\r\n                          element.refg,\r\n                          $store.state.site,\r\n                          element.interp,\r\n                          element.extend,\r\n                          spec\r\n                        )[5] === 'Yellow',\r\n                    }\"\r\n                  >\r\n                    <td width=\"19%\">{{ element.rezultat }}</td>\r\n                    <td width=\"19%\">{{ element.jedinica }}</td>\r\n                    <td width=\"19%\">\r\n                      {{\r\n                        Interpretacija(\r\n                          element.analit,\r\n                          element.rezultat,\r\n                          element.jedinica,\r\n                          element.refd,\r\n                          element.refg,\r\n                          $store.state.site,\r\n                          element.interp,\r\n                          element.extend,\r\n                          spec\r\n                        )[4]\r\n                      }}\r\n                    </td>\r\n                    <td width=\"19%\">{{ element.datum }}</td>\r\n                    <td width=\"15%\">{{ element.vrijeme }}</td>\r\n                    <td width=\"9%\" align=\"middle\">\r\n                      <i\r\n                        v-bind:class=\"{\r\n                          'fa fa-exclamation-triangle icon-right input-icon error-icon':\r\n                            Interpretacija(\r\n                              element.analit,\r\n                              element.rezultat,\r\n                              element.jedinica,\r\n                              element.refd,\r\n                              element.refg,\r\n                              $store.state.site,\r\n                              element.interp,\r\n                              element.extend,\r\n                              spec\r\n                            )[5] === 'Red',\r\n                        }\"\r\n                      ></i>\r\n                      <i\r\n                        v-bind:class=\"{\r\n                          'fa fa-check success-icon icon-right input-icon':\r\n                            Interpretacija(\r\n                              element.analit,\r\n                              element.rezultat,\r\n                              element.jedinica,\r\n                              element.refd,\r\n                              element.refg,\r\n                              $store.state.site,\r\n                              element.interp,\r\n                              element.extend,\r\n                              spec\r\n                            )[5] === 'Green',\r\n                        }\"\r\n                      ></i>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <div style=\"text-align: center;\">\r\n                <span class=\"circle badge-info\"></span>\r\n                {{ table_header }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"!Procjena.length && !graph\">\r\n          <div class=\"col-md-12\">\r\n            <div>\r\n              <span style=\"color: #e34a4a;\">{{ \"Nema podataka.\" }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"showLineChart && graph\">\r\n          <div class=\"col-md-12\">\r\n            <line-chart\r\n              :options=\"optionsLineChart\"\r\n              :data=\"dataLineChart\"\r\n              type=\"line\"\r\n            ></line-chart>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\" v-if=\"!showLineChart && graph\">\r\n          <div v-if=\"!showLineChart && !spinner\" class=\"col-md-12\">\r\n            <div>\r\n              <span style=\"color: #e34a4a;\">{{ \"Nema podataka.\" }}</span>\r\n            </div>\r\n          </div>\r\n          <div\r\n            style=\"min-height: 400px;\"\r\n            v-if=\"!showLineChart && spinner\"\r\n            class=\"col-md-12\"\r\n          >\r\n            <div\r\n              style=\"\r\n                display: flex;\r\n                flex-direction: row;\r\n                justify-content: center;\r\n                align-items: center;\r\n              \"\r\n            >\r\n              <div style=\"float: left;\"></div>\r\n              <span style=\"vertical-align: middle;\">\r\n                <atom-spinner\r\n                  style=\"opacity: 0.25;\"\r\n                  :animation-duration=\"1000\"\r\n                  :size=\"300\"\r\n                  :color=\"'#4ae387'\"\r\n                />\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </patient-evaluation-multi>\r\n\r\n      <!-- LabAssay evaluation, Multi -->\r\n\r\n      <patient-evaluation-multi\r\n        :show.sync=\"show\"\r\n        :multiparam_izbor=\"multiparam_izbor\"\r\n        :multiparam_izbornik=\"multiparam_izbornik\"\r\n        ref=\"staticModalLabAssayEvalMulti\"\r\n        cancelText=\"ZATVORI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          <span style=\"color: #4ae387;\">\r\n            {{ analiza_eval.ime + \" (\" + analiza_eval.analit + \")\" }}\r\n          </span>\r\n          <span>{{ \" - Rezultati analize u zadnjih 14 dana\" }}</span>\r\n        </div>\r\n\r\n        <!--  -->\r\n\r\n        <div class=\"row\" v-if=\"Procjena.length && !graph\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"table-responsive\">\r\n              <table\r\n                class=\"table table-striped table-sm color-icon-label-table\"\r\n              >\r\n                <thead>\r\n                  <tr align=\"middle\">\r\n                    <td width=\"20%\">{{ \"REZULTAT\" }}</td>\r\n                    <td width=\"20%\">{{ \"JEDINICA\" }}</td>\r\n                    <td width=\"20%\">{{ \"REFERENCE\" }}</td>\r\n                    <td width=\"20%\">{{ \"DATUM\" }}</td>\r\n                    <td width=\"15%\">{{ \"VRIJEME\" }}</td>\r\n                    <td width=\"5%\" align=\"middle\"></td>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr\r\n                    align=\"middle\"\r\n                    v-for=\"(element, index) in Procjena\"\r\n                    :key=\"index\"\r\n                    v-bind:class=\"{\r\n                      'table-danger':\r\n                        Interpretacija(\r\n                          element.analit,\r\n                          element.rezultat,\r\n                          element.jedinica,\r\n                          element.refd,\r\n                          element.refg,\r\n                          $store.state.site,\r\n                          element.interp,\r\n                          element.extend,\r\n                          spec\r\n                        )[5] === 'Red',\r\n                      'table-success':\r\n                        Interpretacija(\r\n                          element.analit,\r\n                          element.rezultat,\r\n                          element.jedinica,\r\n                          element.refd,\r\n                          element.refg,\r\n                          $store.state.site,\r\n                          element.interp,\r\n                          element.extend,\r\n                          spec\r\n                        )[5] === 'Green',\r\n                      'table-warning':\r\n                        Interpretacija(\r\n                          element.analit,\r\n                          element.rezultat,\r\n                          element.jedinica,\r\n                          element.refd,\r\n                          element.refg,\r\n                          $store.state.site,\r\n                          element.interp,\r\n                          element.extend,\r\n                          spec\r\n                        )[5] === 'Yellow',\r\n                    }\"\r\n                  >\r\n                    <td width=\"19%\">{{ element.rezultat }}</td>\r\n                    <td width=\"19%\">{{ element.jedinica }}</td>\r\n                    <td width=\"19%\">\r\n                      {{\r\n                        Interpretacija(\r\n                          element.analit,\r\n                          element.rezultat,\r\n                          element.jedinica,\r\n                          element.refd,\r\n                          element.refg,\r\n                          $store.state.site,\r\n                          element.interp,\r\n                          element.extend,\r\n                          spec\r\n                        )[4]\r\n                      }}\r\n                    </td>\r\n                    <td width=\"19%\">{{ element.datum }}</td>\r\n                    <td width=\"15%\">{{ element.vrijeme }}</td>\r\n                    <td width=\"9%\" align=\"middle\">\r\n                      <i\r\n                        v-bind:class=\"{\r\n                          'fa fa-exclamation-triangle icon-right input-icon error-icon':\r\n                            Interpretacija(\r\n                              element.analit,\r\n                              element.rezultat,\r\n                              element.jedinica,\r\n                              element.refd,\r\n                              element.refg,\r\n                              $store.state.site,\r\n                              element.interp,\r\n                              element.extend,\r\n                              spec\r\n                            )[5] === 'Red',\r\n                        }\"\r\n                      ></i>\r\n                      <i\r\n                        v-bind:class=\"{\r\n                          'fa fa-check success-icon icon-right input-icon':\r\n                            Interpretacija(\r\n                              element.analit,\r\n                              element.rezultat,\r\n                              element.jedinica,\r\n                              element.refd,\r\n                              element.refg,\r\n                              $store.state.site,\r\n                              element.interp,\r\n                              element.extend,\r\n                              spec\r\n                            )[5] === 'Green',\r\n                        }\"\r\n                      ></i>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <div style=\"text-align: center;\">\r\n                <span class=\"circle badge-info\"></span>\r\n                {{ table_header }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"!Procjena.length && !graph\">\r\n          <div class=\"col-md-12\">\r\n            <div>\r\n              <span style=\"color: #e34a4a;\">{{ \"Nema podataka.\" }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"showLineChart && graph\">\r\n          <div class=\"col-md-12\">\r\n            <line-chart\r\n              :options=\"optionsLineChart\"\r\n              :data=\"dataLineChart\"\r\n              type=\"line\"\r\n            ></line-chart>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\" v-if=\"!showLineChart && graph\">\r\n          <div v-if=\"!showLineChart && !spinner\" class=\"col-md-12\">\r\n            <div>\r\n              <span style=\"color: #e34a4a;\">{{ \"Nema podataka.\" }}</span>\r\n            </div>\r\n          </div>\r\n          <div\r\n            style=\"min-height: 400px;\"\r\n            v-if=\"!showLineChart && spinner\"\r\n            class=\"col-md-12\"\r\n          >\r\n            <div\r\n              style=\"\r\n                display: flex;\r\n                flex-direction: row;\r\n                justify-content: center;\r\n                align-items: center;\r\n              \"\r\n            >\r\n              <div style=\"float: left;\"></div>\r\n              <span style=\"vertical-align: middle;\">\r\n                <atom-spinner\r\n                  style=\"opacity: 0.25;\"\r\n                  :animation-duration=\"1000\"\r\n                  :size=\"300\"\r\n                  :color=\"'#4ae387'\"\r\n                />\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </patient-evaluation-multi>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"col-md-6\">\r\n          <loading\r\n            :active.sync=\"isLoading\"\r\n            :can-cancel=\"false\"\r\n            :on-cancel=\"onCancel\"\r\n            color=\"#4ae387\"\r\n            :is-full-page=\"fullPage\"\r\n          ></loading>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n          <button v-if=\"false\" @click.prevent=\"Test\">{{ \"Loading...\" }}</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Vue from \"vue\";\r\nimport router from \"../../router\";\r\nimport store from \"vuex-store\";\r\nimport utils from \"services/utils\";\r\nimport { http } from \"../../../config/config.js\";\r\nimport { barcode } from \"../../../config/config.js\";\r\nimport BadgeColumn from \"./BadgeColumn.vue\";\r\nimport { bus } from \"../../main\";\r\nimport { server } from \"../../../config/config.js\";\r\nimport { Interpretation } from \"./functions/reference.js\";\r\nimport izbornik from \"./data-izbornik/izbornik\";\r\n\r\nimport Loading from \"vue-loading-overlay\";\r\nimport \"vue-loading-overlay/dist/vue-loading.css\";\r\n\r\nimport LineChart from \"../vuestic-components/vuestic-chart/chart-types/LineChart\";\r\nimport { AtomSpinner } from \"epic-spinners\";\r\nimport PDFObject from \"pdfobject\";\r\n\r\nVue.component(\"line-chart\", LineChart);\r\nVue.component(\"badge-column\", BadgeColumn);\r\n\r\nexport default {\r\n  name: \"collapse-obrada\",\r\n\r\n  data() {\r\n    return {\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Data\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n\r\n      AllowGetSample: true,\r\n      MicrobiologyOrder: false,\r\n      MicrobiologySample: false,\r\n      ModalNegative: false,\r\n      ModalPositive: false,\r\n      ModalPositiveCondition: false,\r\n      ShowAllBacteries: false,\r\n      ShowAntibiotics: false,\r\n      ShowBacteries: false,\r\n      BacteryTabs: [\"\"],\r\n      CurrentTab: \"\",\r\n      CurrentTest: \"\",\r\n      MicrobiologyModalHeader: \"Predefinisani rezultati\",\r\n      SelectedBacteries: [],\r\n      NegativeResultSelection: \"\",\r\n      PositiveResultSelection: \"\",\r\n      MicrobiologyScenario: \"Unknown\",\r\n      Antibiotics: [],\r\n      TemporaryAntibiotics: [],\r\n      TemporaryBacteries: [],\r\n      TemporaryBacteriesAdd: [],\r\n      Antibiograms: [],\r\n      Bacteries: [],\r\n\r\n      MicrobiologyResult: {\r\n        negative: null,\r\n        positive: null,\r\n        BUG: null,\r\n        F_RESULT: \"\",\r\n        M_RESULT: [],\r\n        DefaultBacteries: [],\r\n        RemainingBacteries: [],\r\n        NegativeDescriptions: [],\r\n        PositiveDescriptions: [],\r\n      },\r\n\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* \r\n\r\n\r\n\r\n\r\n\r\nEnd of Microbiology Data |\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n\r\n      // Patient evaluation, Multi\r\n\r\n      save_retest: false,\r\n      multiparam_izbor: \"\",\r\n      klijent: null,\r\n      multiparam_id: \"\",\r\n      analit: {},\r\n      multiparams: [],\r\n      Response: {},\r\n      spinner: false,\r\n      multiparam_izbornik: [],\r\n      warning: { analiza: \"\", text: \"\", control: \"\" },\r\n      main: false,\r\n      show: true,\r\n      pdf: false,\r\n      header: \"\",\r\n      lokacija: {},\r\n      timestamp: \"\",\r\n      pacijent: \"\",\r\n      ime: \"\",\r\n      prezime: \"\",\r\n      jmbg: \"\",\r\n      pid: \"\",\r\n      sid: \"\",\r\n      email: \"\",\r\n      email_tmp: \"\",\r\n      verificiran: false,\r\n      email_button: false,\r\n      final_pdf: false,\r\n      odobren: false,\r\n      approved: 0,\r\n      verified: 0,\r\n      partials: [],\r\n      partials_condition: false,\r\n      count: 0,\r\n      nalaz: {},\r\n      report: {},\r\n      path: \"\",\r\n      url: \"\",\r\n      uzorci: [],\r\n      vise: [],\r\n      samples: [],\r\n      sample_status: \"\",\r\n      labassay: \"\",\r\n      multi_test: \"\",\r\n      multi_rezultati: [],\r\n      check: \"\",\r\n      link: \"\",\r\n      spec: \"*\",\r\n      testovi: [],\r\n      rezultati: [],\r\n      analysers: [],\r\n      analyser: {},\r\n      analiza: {},\r\n      analyser_selected: {},\r\n      analyser_patient: {},\r\n      analitiprikaz: [],\r\n      analiti: [],\r\n      naslov: \"\",\r\n      calculated: false,\r\n      show_table: false,\r\n      sample: {},\r\n      resdata: {},\r\n      email_changed: false,\r\n      Previous: { pid: null },\r\n      Next: { pid: null },\r\n      Results: [],\r\n      Datum: { today: null, query: null, next: null, previous: null },\r\n      pagination: false,\r\n      forward_disabled: false,\r\n      backward_disabled: false,\r\n      data_length: 0,\r\n      data_min: 1,\r\n      data_pid: 0,\r\n      data_spol: \"\",\r\n      query_date: \"\",\r\n      today_date: \"\",\r\n      starost: \"\",\r\n      reference: {},\r\n      interpretacije: [\r\n        \"none\",\r\n        \"A\",\r\n        \"ogtt\",\r\n        \"insul\",\r\n        \"less\",\r\n        \"lesseq\",\r\n        \"lesspl\",\r\n        \"infekc\",\r\n        \"grt\",\r\n        \"grtpl\",\r\n        \"grtepl\",\r\n        \"grtno\",\r\n        \"grte\",\r\n        \"neg\",\r\n        \"nema\",\r\n        \"urbl\",\r\n        \"reakt\",\r\n        \"da\",\r\n        \"e04\",\r\n        \"e05\",\r\n        \"norm\",\r\n        \"norma\",\r\n        \"ured\",\r\n        \"plus\",\r\n        \"prisutno\",\r\n        \"gljivice\",\r\n        \"leuer\",\r\n        \"morf\",\r\n        \"titar\",\r\n        \"tsh\",\r\n        \"trag\",\r\n        \"trg\",\r\n        \"hol\",\r\n        \"hdl\",\r\n        \"ldl\",\r\n        \"fpsa\",\r\n        \"sediment\",\r\n        \"bistar\",\r\n        \"boja\",\r\n        \"bojasp\",\r\n        \"nesto\",\r\n        \"exists\",\r\n        \"blst\",\r\n        \"leu\",\r\n        \"spec\",\r\n      ],\r\n\r\n      // Toasts\r\n\r\n      toastText: \"\",\r\n      toastIcon: \"\",\r\n      toastPosition: \"\",\r\n      toastDuration: 2500,\r\n      isToastFullWidth: false,\r\n      className: \"\",\r\n\r\n      isLoading: false,\r\n      fullPage: true,\r\n\r\n      // Evaluation\r\n\r\n      analiza_eval: {},\r\n      showLineChart: false,\r\n      optionsLineChart: {},\r\n      dataLineChart: {},\r\n      Procjena: [],\r\n\r\n      // Settings\r\n\r\n      jedinica: \"\",\r\n      jedinice: [],\r\n      graph: false,\r\n      table_header: \"\",\r\n    };\r\n  },\r\n  components: {\r\n    Loading,\r\n    AtomSpinner,\r\n  },\r\n\r\n  watch: {\r\n    email: function () {\r\n      if (this.email.trim() != this.email_tmp.trim()) {\r\n        this.email_changed = true;\r\n      }\r\n    },\r\n\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Watch\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n\r\n    ModalNegative: function () {\r\n      if (this.ModalNegative) {\r\n        console.log(\"Izbor: negativan\");\r\n\r\n        this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\r\n        if (this.MicrobiologyScenario.includes(\"MANB\")) {\r\n          this.ModalPositiveCondition = true;\r\n        } else {\r\n          this.ModalPositiveCondition = false;\r\n        }\r\n      }\r\n    },\r\n\r\n    ModalPositive: function () {\r\n      if (this.ModalPositive) {\r\n        console.log(\"Izbor: pozitivan\");\r\n\r\n        if (this.MicrobiologyScenario === \"MAIBNoR\") {\r\n          this.MicrobiologyModalHeader = \"Bakterije\";\r\n        } else {\r\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\r\n        }\r\n\r\n        if (this.MicrobiologyScenario.includes(\"MANB\")) {\r\n          this.ModalPositiveCondition = true;\r\n        } else {\r\n          this.ModalPositiveCondition = false;\r\n        }\r\n      }\r\n    },\r\n\r\n    MicrobiologyScenario: function () {\r\n      switch (this.MicrobiologyScenario) {\r\n        case \"MAIBNoR\":\r\n          // Ima definisan skup bakterija - Nema Rezultat\r\n          this.ModalNegative = false;\r\n          this.ModalPositive = false;\r\n          this.ModalPositiveCondition = false;\r\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\r\n          this.NegativeResultSelection = \"\";\r\n          this.PositiveResultSelection = \"\";\r\n          this.SelectedBacteries = [];\r\n          this.ShowAllBacteries = false;\r\n\r\n          break;\r\n\r\n        case \"MAIBNeR\":\r\n          // Ima definisan skup bakterija - Negativan Rezultat\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        case \"MAIBPoR\":\r\n          // Ima definisan skup bakterija - Pozitivan Rezultat\r\n          break;\r\n\r\n        case \"MANBNoR\":\r\n          // Nema definisan skup bakterija - Nema Rezultat\r\n          this.ModalNegative = false;\r\n          this.ModalPositive = false;\r\n          this.ModalPositiveCondition = false;\r\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\r\n          this.NegativeResultSelection = \"\";\r\n          this.PositiveResultSelection = \"\";\r\n          this.SelectedBacteries = [];\r\n          this.ShowAllBacteries = false;\r\n\r\n          break;\r\n\r\n        case \"MANBNeR\":\r\n          // Nema definisan skup bakterija - Negativan Rezultat\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        case \"MANBPoR\":\r\n          // Nema definisan skup bakterija - Pozitivan Rezultat\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        default:\r\n          // console.warn(\"Nije Mikrobiološka analiza.\");\r\n          break;\r\n      }\r\n    },\r\n\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* \r\n\r\n\r\n\r\n\r\n\r\nEnd of Microbiology Watch |\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n  },\r\n  beforeCreate() {\r\n    http\r\n      .get(\r\n        \"postavke/jedinice/mount/list?token=\" +\r\n          this.$store.state.token +\r\n          \"&site=\" +\r\n          this.$store.state.site,\r\n        {}\r\n      )\r\n      .then((res) => {\r\n        this.jedinice = res.data.jedinica;\r\n      });\r\n  },\r\n  mounted() {\r\n    bus.$on(\"Parametar\", (data) => {\r\n      // bus.$emit(\"Switch\");\r\n\r\n      this.spinner = true;\r\n\r\n      this.analit = {};\r\n\r\n      this.multiparams.forEach((element) => {\r\n        if (element.opis === data) {\r\n          this.analit = element;\r\n          this.multiparam_id = element._id;\r\n          this.multiparam_izbor = data;\r\n        }\r\n      });\r\n\r\n      if (_.isEmpty(this.analit)) {\r\n        // console.warn(\"Empty object.\");\r\n      } else {\r\n        if (!_.isEmpty(this.Response)) {\r\n          this.showLineChart = false;\r\n          let palette = store.getters.palette;\r\n\r\n          this.Procjena = [];\r\n\r\n          var obj = {};\r\n          var count = 0;\r\n\r\n          this.Response.Multi.forEach((element) => {\r\n            count++;\r\n            element.multi.forEach((param) => {\r\n              if (\r\n                this.multiparam_id == param.labassay &&\r\n                param.rezultat[0].rezultat_f.trim() != \"\"\r\n              ) {\r\n                obj.rezultat = param.rezultat[0].rezultat_f;\r\n                obj.jedinica = param.rezultat[0].jedinice_f;\r\n                obj.analit = \"Nema podataka\";\r\n                obj.interp = param.interp;\r\n                obj.extend = param.extend;\r\n                obj.refd = param.refd;\r\n                obj.refg = param.refg;\r\n                obj.sid = \"Nema podataka\";\r\n                obj.updated_at = new Date(param.rezultat[0].updated_at);\r\n\r\n                var datum =\r\n                  JSON.stringify(new Date(param.rezultat[0].updated_at)).slice(\r\n                    9,\r\n                    11\r\n                  ) +\r\n                  \".\" +\r\n                  JSON.stringify(new Date(param.rezultat[0].updated_at)).slice(\r\n                    6,\r\n                    8\r\n                  ) +\r\n                  \".\" +\r\n                  JSON.stringify(new Date(param.rezultat[0].updated_at)).slice(\r\n                    1,\r\n                    5\r\n                  );\r\n                var time = JSON.stringify(\r\n                  new Date(\r\n                    new Date(param.rezultat[0].updated_at).getTime() -\r\n                      new Date(\r\n                        param.rezultat[0].updated_at\r\n                      ).getTimezoneOffset() *\r\n                        60000\r\n                  ).toISOString()\r\n                ).substring(12, 17);\r\n                obj.datum = datum;\r\n                obj.vrijeme = time;\r\n                obj.kontrola = this.Interpretacija(\r\n                  \"\",\r\n                  obj.rezultat,\r\n                  obj.jedinica,\r\n                  obj.refd,\r\n                  obj.refg,\r\n                  this.$store.state.site,\r\n                  obj.interp,\r\n                  obj.extend,\r\n                  this.spec\r\n                )[5];\r\n\r\n                this.Procjena.push(obj);\r\n                obj = {};\r\n              }\r\n            });\r\n\r\n            if (count == this.Response.Multi.length) {\r\n              this.Procjena.sort(function (a, b) {\r\n                return Date.parse(a.updated_at) == Date.parse(b.updated_at)\r\n                  ? 0\r\n                  : +(Date.parse(a.updated_at) < Date.parse(b.updated_at)) ||\r\n                      -1;\r\n              });\r\n\r\n              // Line Chart\r\n\r\n              var data = [];\r\n\r\n              if (this.Procjena.length) {\r\n                this.optionsLineChart = {\r\n                  responsive: true,\r\n                  maintainAspectRatio: false,\r\n                  title: {\r\n                    display: true,\r\n                    text: \"\",\r\n                  },\r\n                  scales: {\r\n                    xAxes: [\r\n                      {\r\n                        display: true,\r\n                        gridLines: {\r\n                          display: true,\r\n                          color: \"#eee\",\r\n                        },\r\n                      },\r\n                    ],\r\n                    yAxes: [\r\n                      {\r\n                        display: true,\r\n                        gridLines: {\r\n                          display: true,\r\n                          color: \"#eee\",\r\n                        },\r\n                      },\r\n                    ],\r\n                  },\r\n                };\r\n\r\n                var labels = [];\r\n                var kontrola = [];\r\n                var temp = \"\";\r\n\r\n                this.Procjena.forEach((element) => {\r\n                  if (!isNaN(element.rezultat.trim())) {\r\n                    switch (element.kontrola) {\r\n                      case \"Red\":\r\n                        kontrola.push(palette.danger);\r\n                        break;\r\n                      case \"Green\":\r\n                        kontrola.push(palette.primary);\r\n                        break;\r\n                      case \"Yellow\":\r\n                        kontrola.push(palette.warning);\r\n                        break;\r\n\r\n                      default:\r\n                        kontrola.push(palette.info);\r\n                        break;\r\n                    }\r\n\r\n                    labels.push(element.datum);\r\n                    data.push(element.rezultat);\r\n                  }\r\n                });\r\n\r\n                this.dataLineChart = {\r\n                  labels: labels,\r\n                  datasets: [\r\n                    {\r\n                      label: this.table_header,\r\n                      backgroundColor: utils.hex2rgb(palette.info, 0.5).css,\r\n                      pointBorderColor: kontrola,\r\n                      pointBackgroundColor: kontrola,\r\n                      borderColor: palette.transparent,\r\n                      data: data,\r\n                    },\r\n                  ],\r\n                };\r\n\r\n                if (data.length) {\r\n                  setTimeout(() => {\r\n                    this.showLineChart = true;\r\n                  }, 500);\r\n                }\r\n              } else {\r\n                // console.warn(\"No data.\");\r\n\r\n                this.spinner = false;\r\n              }\r\n            }\r\n          });\r\n        } else {\r\n          // console.warn(\"Response not loaded.\");\r\n        }\r\n      }\r\n    });\r\n\r\n    bus.$on(\"graph\", () => {\r\n      this.Procjena.sort(function (a, b) {\r\n        return Date.parse(a.updated_at) == Date.parse(b.updated_at)\r\n          ? 0\r\n          : +(Date.parse(a.updated_at) < Date.parse(b.updated_at)) || -1;\r\n      });\r\n\r\n      var data = [];\r\n\r\n      if (this.Procjena.length) {\r\n        let palette = store.getters.palette;\r\n        this.optionsLineChart = {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          title: {\r\n            display: true,\r\n            text: \"\",\r\n          },\r\n          scales: {\r\n            xAxes: [\r\n              {\r\n                display: true,\r\n                gridLines: {\r\n                  display: true,\r\n                  color: \"#eee\",\r\n                },\r\n              },\r\n            ],\r\n            yAxes: [\r\n              {\r\n                display: true,\r\n                gridLines: {\r\n                  display: true,\r\n                  color: \"#eee\",\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        };\r\n\r\n        var labels = [];\r\n        var kontrola = [];\r\n        var temp = \"\";\r\n\r\n        this.Procjena.forEach((element) => {\r\n          if (!isNaN(element.rezultat.trim())) {\r\n            switch (element.kontrola) {\r\n              case \"Red\":\r\n                kontrola.push(palette.danger);\r\n                break;\r\n              case \"Green\":\r\n                kontrola.push(palette.primary);\r\n                break;\r\n              case \"Yellow\":\r\n                kontrola.push(palette.warning);\r\n                break;\r\n\r\n              default:\r\n                kontrola.push(palette.info);\r\n                break;\r\n            }\r\n\r\n            labels.push(element.datum);\r\n            data.push(element.rezultat);\r\n          }\r\n        });\r\n\r\n        this.dataLineChart = {\r\n          labels: labels,\r\n          datasets: [\r\n            {\r\n              label: this.analiza_eval.ime + \" | \" + this.analiza_eval.analit,\r\n              backgroundColor: utils.hex2rgb(palette.info, 0.5).css,\r\n              pointBorderColor: kontrola,\r\n              pointBackgroundColor: kontrola,\r\n              borderColor: palette.transparent,\r\n              data: data,\r\n            },\r\n          ],\r\n        };\r\n\r\n        if (data.length) {\r\n          this.showLineChart = true;\r\n        }\r\n      } else {\r\n        // console.warn(\"No data.\");\r\n      }\r\n      this.graph = false;\r\n    });\r\n\r\n    bus.$on(\"table\", () => {\r\n      this.Procjena.sort(function (a, b) {\r\n        return Date.parse(a.updated_at) == Date.parse(b.updated_at)\r\n          ? 0\r\n          : +(Date.parse(a.updated_at) > Date.parse(b.updated_at)) || -1;\r\n      });\r\n\r\n      var data = [];\r\n\r\n      if (this.Procjena.length) {\r\n        let palette = store.getters.palette;\r\n        this.optionsLineChart = {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          title: {\r\n            display: true,\r\n            text: \"\",\r\n          },\r\n          scales: {\r\n            xAxes: [\r\n              {\r\n                display: true,\r\n                gridLines: {\r\n                  display: true,\r\n                  color: \"#eee\",\r\n                },\r\n              },\r\n            ],\r\n            yAxes: [\r\n              {\r\n                display: true,\r\n                gridLines: {\r\n                  display: true,\r\n                  color: \"#eee\",\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        };\r\n\r\n        var labels = [];\r\n        var kontrola = [];\r\n        var temp = \"\";\r\n\r\n        this.Procjena.forEach((element) => {\r\n          if (!isNaN(element.rezultat.trim())) {\r\n            switch (element.kontrola) {\r\n              case \"Red\":\r\n                kontrola.push(palette.danger);\r\n                break;\r\n              case \"Green\":\r\n                kontrola.push(palette.primary);\r\n                break;\r\n              case \"Yellow\":\r\n                kontrola.push(palette.warning);\r\n                break;\r\n\r\n              default:\r\n                kontrola.push(palette.info);\r\n                break;\r\n            }\r\n\r\n            labels.push(element.datum);\r\n            data.push(element.rezultat);\r\n          }\r\n        });\r\n\r\n        this.dataLineChart = {\r\n          labels: labels,\r\n          datasets: [\r\n            {\r\n              label: this.analiza_eval.ime + \" | \" + this.analiza_eval.analit,\r\n              backgroundColor: utils.hex2rgb(palette.info, 0.5).css,\r\n              pointBorderColor: kontrola,\r\n              pointBackgroundColor: kontrola,\r\n              borderColor: palette.transparent,\r\n              data: data,\r\n            },\r\n          ],\r\n        };\r\n\r\n        if (data.length) {\r\n          this.showLineChart = true;\r\n        }\r\n      } else {\r\n        // console.warn(\"No data.\");\r\n      }\r\n      this.graph = true;\r\n    });\r\n\r\n    bus.$on(\"trash\", (data) => {\r\n      this.sid = data.sid;\r\n      this.$refs.staticModalDeleteSample.open();\r\n    });\r\n\r\n    bus.$on(\"edit\", (data) => {\r\n      this.sid = data.sid;\r\n      this.$refs.staticModalEditSample.open();\r\n    });\r\n\r\n    bus.$on(\"comment\", (data) => {\r\n      this.sid = data.sid;\r\n      this.$refs.staticModalComment.open();\r\n    });\r\n\r\n    bus.$on(\"barcode\", (data) => {\r\n      this.BarcodePrint(data);\r\n    });\r\n\r\n    bus.$on(\"save\", (data) => {\r\n      this.SaveResults(this.rezultati, \"save\");\r\n    });\r\n\r\n    bus.$on(\"check\", (data) => {\r\n      this.Approve(this.rezultati);\r\n    });\r\n\r\n    bus.$on(\"verify\", (data) => {\r\n      this.Verify(data, \"verify\");\r\n    });\r\n\r\n    bus.$on(\"undo\", (data) => {\r\n      this.Disapprove(this.rezultati, \"undo\");\r\n    });\r\n\r\n    bus.$on(\"unlock\", (data) => {\r\n      this.UnVerify(data, \"unlock\");\r\n    });\r\n\r\n    bus.$on(\"Nalaz\", (data) => {\r\n      if (!data.final_pdf) {\r\n        this.$refs.staticModalError.open();\r\n      } else {\r\n        this.path = this.timestamp + \".pdf\";\r\n\r\n        this.url = server + \"nalazi/\" + this.path;\r\n\r\n        var options = {\r\n          width: \"100%\",\r\n          height: \"800px\",\r\n        };\r\n        PDFObject.embed(this.url, \"#pdf-container\", options);\r\n\r\n        this.email_button = true;\r\n        this.main = false;\r\n        this.pdf = true;\r\n      }\r\n    });\r\n\r\n    bus.$on(\"pdf\", (data) => {\r\n      if (!data.pdf_exists) {\r\n        this.$refs.staticModalError.open();\r\n      } else {\r\n        this.path = \"samples/\" + data.sid + \".pdf\";\r\n\r\n        this.url = server + \"nalazi/samples/\" + data.sid + \".pdf\";\r\n\r\n        var options = {\r\n          width: \"100%\",\r\n          height: \"800px\",\r\n        };\r\n        PDFObject.embed(this.url, \"#pdf-container\", options);\r\n\r\n        this.main = false;\r\n        this.pdf = true;\r\n      }\r\n    });\r\n\r\n    bus.$on(\"Sample\", (data) => {\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Get Sample Check\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n\r\n      if (data.tip.includes(\"Mikrobiologija\")) {\r\n        this.MicrobiologySample = true;\r\n      } else {\r\n        this.MicrobiologySample = false;\r\n      }\r\n\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* \r\n\r\n\r\n\r\n\r\n\r\nEnd of Microbiology Get Sample Check |\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      this.$store.dispatch(\"SetSample\", data.sid);\r\n      this.GetSingleSample(data);\r\n    });\r\n\r\n    bus.$on(\"Deleted\", (data) => {\r\n      this.DeletedSample(data);\r\n    });\r\n\r\n    bus.$on(\"Edited\", (data) => {\r\n      this.EditSample(data);\r\n    });\r\n\r\n    bus.$on(\"SaveMulti\", (data) => {\r\n      this.SaveMultiResults(this.analiti, data);\r\n    });\r\n\r\n    bus.$on(\"Mail\", () => {\r\n      this.SendMail(this.email);\r\n    });\r\n\r\n    bus.$on(\"Error\", () => {\r\n      // Generate new Report\r\n      console.warn(\"Greška prilikom čitanja nalaza.\");\r\n    });\r\n\r\n    bus.$on(\"Analyser\", (data) => {\r\n      this.AnalyserSelected(data);\r\n    });\r\n\r\n    bus.$on(\"Sljedeci\", () => {\r\n      this.Sljedeci();\r\n    });\r\n\r\n    bus.$on(\"Prethodni\", () => {\r\n      this.Prethodni();\r\n    });\r\n\r\n    bus.$on(\"Search\", () => {\r\n      this.$refs.staticModalFind.open();\r\n    });\r\n\r\n    bus.$on(\"Push\", (data) => {\r\n      if (this.$route.params.id != data) {\r\n        this.Results.forEach((element) => {\r\n          if (element.pid == data) {\r\n            router.push(\r\n              \"/obrada/rezultati/\" +\r\n                element.patient +\r\n                \"/\" +\r\n                element.pid +\r\n                \"?date=\" +\r\n                element.date\r\n            );\r\n          }\r\n        });\r\n      } else {\r\n        // console.warn(\"No change required.\");\r\n      }\r\n    });\r\n\r\n    bus.$on(\"Reference\", () => {\r\n      this.reference.dref = Math.abs(\r\n        this.reference.dref.replace(/,/g, \".\").trim()\r\n      );\r\n      this.reference.gref = Math.abs(\r\n        this.reference.gref.replace(/,/g, \".\").trim()\r\n      );\r\n\r\n      if (this.reference.interp != \"spec\") {\r\n        this.reference.extend = this.reference.extend.replace(\r\n          /(\\r\\n|\\n|\\r)/gm,\r\n          \" \"\r\n        );\r\n      }\r\n\r\n      if (\r\n        isNaN(this.reference.dref) ||\r\n        isNaN(this.reference.gref) ||\r\n        this.reference.dref === \"\" ||\r\n        this.reference.gref === \"\" ||\r\n        this.reference.dref > this.reference.gref\r\n      ) {\r\n        // console.warn(\"Invalid value.\");\r\n      } else {\r\n        document.getElementById(this.$store.state.sid).click();\r\n\r\n        http\r\n          .post(\"/rezultati/odobravanje/reference/\", {\r\n            email: this.$store.state.userId,\r\n            token: this.$store.state.token,\r\n            site: this.$store.state.site,\r\n            reference: this.reference,\r\n          })\r\n          .then((res) => {\r\n            setTimeout(() => {\r\n              document.getElementById(this.$store.state.sid).click();\r\n            }, 500);\r\n          });\r\n      }\r\n    });\r\n\r\n    bus.$on(\"retest\", (data) => {\r\n      this.RetestSave(data);\r\n    });\r\n\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Bus from Modal\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n\r\n    bus.$on(\"Antibiotik\", (data) => {\r\n      // console.log(\"Prikaz izbornika antibiotika.\");\r\n      if (\r\n        this.sample.status != \"ODOBREN\" &&\r\n        this.sample.status != \"VERIFICIRAN\"\r\n      ) {\r\n        this.TemporaryAntibiotics = [];\r\n        this.TemporaryBacteries = [];\r\n        this.TemporaryBacteriesAdd = [];\r\n\r\n        this.Antibiotics.forEach((element) => {\r\n          element.chosen = false;\r\n          element.disabled = false;\r\n        });\r\n\r\n        this.SelectedBacteries.forEach((selected) => {\r\n          // Bacteria name must be Unique.\r\n          if (selected.opis == data) {\r\n            selected.antibiogram.antibiotici.forEach((ant) => {\r\n              this.Antibiotics.forEach((antibiotik) => {\r\n                if (antibiotik._id == ant._id) {\r\n                  antibiotik.disabled = true;\r\n                  antibiotik.chosen = true;\r\n                  antibiotik.rezultat = ant.rezultat;\r\n                }\r\n              });\r\n            });\r\n          }\r\n        });\r\n\r\n        this.ShowAntibiotics = true;\r\n      }\r\n    });\r\n\r\n    bus.$on(\"tabChanged\", (data) => {\r\n      // console.log(\"Tab changed.\");\r\n      this.CurrentTab = data;\r\n      // console.log(\"Active tab: \" + this.CurrentTab)\r\n    });\r\n\r\n    bus.$on(\"AllowClick\", (data) => {\r\n      if (this.MicrobiologySample) {\r\n        if (data) {\r\n          this.AllowGetSample = false;\r\n          // console.log(\"Close sample.\")\r\n        } else {\r\n          this.AllowGetSample = true;\r\n          // console.log(\"Open sample.\");\r\n        }\r\n      }\r\n    });\r\n\r\n    bus.$on(\"MicroReset\", () => {\r\n      console.log(\"Reset: \" + this.$store.state.sid);\r\n      var Scenario = this.MicrobiologyScenario;\r\n\r\n      this.rezultati[0].rezultat = \"\";\r\n      this.rezultati[0].rezultat_m = [];\r\n      this.rezultati[0].realizovan = false;\r\n\r\n      this.MicrobiologyResult.DefaultBacteries.forEach((element) => {\r\n        element.chosen = false;\r\n      });\r\n\r\n      this.MicrobiologyResult.RemainingBacteries.forEach((element) => {\r\n        element.chosen = false;\r\n      });\r\n\r\n      this.SelectedBacteries = [];\r\n      this.ShowAllBacteries = false;\r\n\r\n      if (this.MicrobiologyScenario.includes(\"MAIB\")) {\r\n        this.main = false;\r\n        // console.log(this.rezultati)\r\n\r\n        http\r\n          .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n            email: this.$store.state.userId,\r\n            token: this.$store.state.token,\r\n            site: this.$store.state.site,\r\n            rezultati: this.rezultati,\r\n          })\r\n          .then((res) => {\r\n            http\r\n              .get(\r\n                \"rezultati/odobravanje/samples/\" +\r\n                  this.$route.params.patient +\r\n                  \"/\" +\r\n                  this.$route.params.id +\r\n                  \"?token=\" +\r\n                  this.$store.state.token +\r\n                  \"&site=\" +\r\n                  this.$store.state.site +\r\n                  \"&date=\" +\r\n                  this.$route.query.date,\r\n                {}\r\n              )\r\n              .then((res) => {\r\n                // console.log(res.data)\r\n                this.uzorci = [];\r\n\r\n                res.data.results.forEach((element) => {\r\n                  if (this.$store.state.sid === element.id) {\r\n                    console.log(element.rezultati[0].rezultat[0]);\r\n                  }\r\n\r\n                  var check = 0;\r\n                  var zaprimljen = 0;\r\n                  var realizovan = 0;\r\n\r\n                  if (element.verificiran) {\r\n                    var status_uzorka = \"VERIFICIRAN\";\r\n                  } else {\r\n                    var status_uzorka = element.status;\r\n                  }\r\n\r\n                  element.rezultati.forEach((test) => {\r\n                    check++;\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                    ) {\r\n                      zaprimljen++;\r\n                    }\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                    ) {\r\n                      realizovan++;\r\n                    }\r\n\r\n                    if (check === element.rezultati.length) {\r\n                      // console.log(\"Provjera: Reset sample\")\r\n\r\n                      if (status_uzorka === \"VERIFICIRAN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"VERIFICIRAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      } else if (status_uzorka === \"ODOBREN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"ODOBREN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      } else if (zaprimljen < 1) {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"REALIZOVAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      } else if (realizovan < 1) {\r\n                        var stat = \"ZAPRIMLJEN\";\r\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                          if (\r\n                            element.rezultati[0].rezultat[0].rezultat_m.length\r\n                          ) {\r\n                            stat = \"REALIZOVAN\";\r\n                          }\r\n                        }\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: stat,\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      } else {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"U OBRADI\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      }\r\n                    }\r\n                  });\r\n                });\r\n\r\n                this.uzorci = this.uzorci.sort(function (a, b) {\r\n                  return a.sid.localeCompare(b.sid, undefined, {\r\n                    numeric: true,\r\n                    sensitivity: \"base\",\r\n                  });\r\n                });\r\n              })\r\n              .then((res) => {\r\n                this.MicrobiologyScenario = \"MAIBNoR\";\r\n                console.log(\r\n                  \"Scenario: \" + Scenario + \" - > \" + this.MicrobiologyScenario\r\n                );\r\n                this.main = true;\r\n                bus.$emit(\"CloseMicroReset\");\r\n              });\r\n          });\r\n      } else if (this.MicrobiologyScenario.includes(\"MANB\")) {\r\n        this.main = false;\r\n\r\n        http\r\n          .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n            email: this.$store.state.userId,\r\n            token: this.$store.state.token,\r\n            site: this.$store.state.site,\r\n            rezultati: this.rezultati,\r\n          })\r\n          .then((res) => {\r\n            http\r\n              .get(\r\n                \"rezultati/odobravanje/samples/\" +\r\n                  this.$route.params.patient +\r\n                  \"/\" +\r\n                  this.$route.params.id +\r\n                  \"?token=\" +\r\n                  this.$store.state.token +\r\n                  \"&site=\" +\r\n                  this.$store.state.site +\r\n                  \"&date=\" +\r\n                  this.$route.query.date,\r\n                {}\r\n              )\r\n              .then((res) => {\r\n                // console.log(res.data)\r\n                this.uzorci = [];\r\n\r\n                res.data.results.forEach((element) => {\r\n                  if (this.$store.state.sid === element.id) {\r\n                    console.log(element.rezultati[0].rezultat[0]);\r\n                  }\r\n\r\n                  var check = 0;\r\n                  var zaprimljen = 0;\r\n                  var realizovan = 0;\r\n\r\n                  if (element.verificiran) {\r\n                    var status_uzorka = \"VERIFICIRAN\";\r\n                  } else {\r\n                    var status_uzorka = element.status;\r\n                  }\r\n\r\n                  element.rezultati.forEach((test) => {\r\n                    check++;\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                    ) {\r\n                      zaprimljen++;\r\n                    }\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                    ) {\r\n                      realizovan++;\r\n                    }\r\n\r\n                    if (check === element.rezultati.length) {\r\n                      if (status_uzorka === \"VERIFICIRAN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"VERIFICIRAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      } else if (status_uzorka === \"ODOBREN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"ODOBREN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      } else if (zaprimljen < 1) {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"REALIZOVAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      } else if (realizovan < 1) {\r\n                        var stat = \"ZAPRIMLJEN\";\r\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                          if (\r\n                            element.rezultati[0].rezultat[0].rezultat_m.length\r\n                          ) {\r\n                            stat = \"REALIZOVAN\";\r\n                          }\r\n                        }\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: stat,\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      } else {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"U OBRADI\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      }\r\n                    }\r\n                  });\r\n                });\r\n\r\n                this.uzorci = this.uzorci.sort(function (a, b) {\r\n                  return a.sid.localeCompare(b.sid, undefined, {\r\n                    numeric: true,\r\n                    sensitivity: \"base\",\r\n                  });\r\n                });\r\n              })\r\n              .then((res) => {\r\n                this.MicrobiologyScenario = \"MANBNoR\";\r\n                console.log(\r\n                  \"Scenario: \" + Scenario + \" - > \" + this.MicrobiologyScenario\r\n                );\r\n                this.main = true;\r\n                bus.$emit(\"CloseMicroReset\");\r\n              });\r\n          });\r\n      } else {\r\n        // Error\r\n      }\r\n    });\r\n\r\n    bus.$on(\"MicroResult\", () => {\r\n      console.log(\"Defining result...\");\r\n\r\n      var Scenario = this.MicrobiologyScenario;\r\n\r\n      switch (this.MicrobiologyScenario) {\r\n        case \"MAIBNoR\":\r\n          // Ima definisan skup bakterija\r\n          this.rezultati[0].rezultat_m = [];\r\n          this.rezultati[0].rezultat_m.push({\r\n            bakterija: false,\r\n            negativan: this.ModalNegative,\r\n            pozitivan: this.ModalPositive,\r\n            _id: null,\r\n            naziv: null,\r\n            opis: null,\r\n            antibiogram: {\r\n              _id: null,\r\n              naziv: null,\r\n              opis: null,\r\n              antibiotici: [\r\n                {\r\n                  _id: null,\r\n                  rbr_a: null,\r\n                  naziv: null,\r\n                  opis: null,\r\n                  rezultat: null,\r\n                },\r\n              ],\r\n            },\r\n          });\r\n\r\n          if (this.ModalNegative) {\r\n            this.rezultati[0].rezultat = this.NegativeResultSelection;\r\n            this.isLoading = true;\r\n            this.main = false;\r\n\r\n            http\r\n              .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n                email: this.$store.state.userId,\r\n                token: this.$store.state.token,\r\n                site: this.$store.state.site,\r\n                rezultati: this.rezultati,\r\n              })\r\n              .then((res) => {\r\n                http\r\n                  .get(\r\n                    \"rezultati/odobravanje/samples/\" +\r\n                      this.$route.params.patient +\r\n                      \"/\" +\r\n                      this.$route.params.id +\r\n                      \"?token=\" +\r\n                      this.$store.state.token +\r\n                      \"&site=\" +\r\n                      this.$store.state.site +\r\n                      \"&date=\" +\r\n                      this.$route.query.date,\r\n                    {}\r\n                  )\r\n                  .then((res) => {\r\n                    this.uzorci = [];\r\n\r\n                    res.data.results.forEach((element) => {\r\n                      if (this.$store.state.sid === element.id) {\r\n                        console.log(element.rezultati[0].rezultat[0]);\r\n                      }\r\n\r\n                      var check = 0;\r\n                      var zaprimljen = 0;\r\n                      var realizovan = 0;\r\n\r\n                      if (element.verificiran) {\r\n                        var status_uzorka = \"VERIFICIRAN\";\r\n                      } else {\r\n                        var status_uzorka = element.status;\r\n                      }\r\n\r\n                      element.rezultati.forEach((test) => {\r\n                        check++;\r\n\r\n                        if (\r\n                          test.rezultat[test.rezultat.length - 1].rezultat_f ===\r\n                          \"\"\r\n                        ) {\r\n                          zaprimljen++;\r\n                        }\r\n\r\n                        if (\r\n                          test.rezultat[test.rezultat.length - 1].rezultat_f !=\r\n                          \"\"\r\n                        ) {\r\n                          realizovan++;\r\n                        }\r\n\r\n                        if (check === element.rezultati.length) {\r\n                          if (status_uzorka === \"VERIFICIRAN\") {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"VERIFICIRAN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false,\r\n                            });\r\n                          } else if (status_uzorka === \"ODOBREN\") {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"ODOBREN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false,\r\n                            });\r\n                          } else if (zaprimljen < 1) {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"REALIZOVAN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false,\r\n                            });\r\n                          } else if (realizovan < 1) {\r\n                            var stat = \"ZAPRIMLJEN\";\r\n                            if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                              if (\r\n                                element.rezultati[0].rezultat[0].rezultat_m\r\n                                  .length\r\n                              ) {\r\n                                stat = \"REALIZOVAN\";\r\n                              }\r\n                            }\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: stat,\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false,\r\n                            });\r\n                          } else {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"U OBRADI\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false,\r\n                            });\r\n                          }\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    this.uzorci = this.uzorci.sort(function (a, b) {\r\n                      return a.sid.localeCompare(b.sid, undefined, {\r\n                        numeric: true,\r\n                        sensitivity: \"base\",\r\n                      });\r\n                    });\r\n                  })\r\n                  .then((res) => {\r\n                    bus.$emit(\"CloseMicroResult\");\r\n                    this.rezultati[0].realizovan = true;\r\n                    this.MicrobiologyScenario = \"MAIBNeR\";\r\n                    console.log(\r\n                      \"Scenario: \" +\r\n                        Scenario +\r\n                        \" - > \" +\r\n                        this.MicrobiologyScenario\r\n                    );\r\n                    this.main = true;\r\n                    this.isLoading = false;\r\n                  });\r\n              });\r\n          } else {\r\n            this.PositiveResultSelection = \"\";\r\n            this.SelectedBacteries.forEach((element) => {\r\n              this.PositiveResultSelection =\r\n                this.PositiveResultSelection + element.opis + \"\\n\";\r\n              var Antibiotici = [];\r\n              var antibiotik = {};\r\n\r\n              this.Antibiotics.forEach((antibiotik) => {\r\n                element.antibiogram.antibiotici.forEach((ant) => {\r\n                  if (antibiotik._id == ant) {\r\n                    antibiotik = {\r\n                      _id: antibiotik._id,\r\n                      rbr_a: antibiotik.rbr_a,\r\n                      naziv: antibiotik.naziv,\r\n                      opis: antibiotik.opis,\r\n                      disabled: false,\r\n                      rezultat: \"\",\r\n                    };\r\n                    Antibiotici.push(antibiotik);\r\n                    antibiotik = {};\r\n                  }\r\n                });\r\n              });\r\n\r\n              this.rezultati[0].rezultat_m.push({\r\n                bakterija: true,\r\n                negativan: this.largeModalneg,\r\n                pozitivan: this.largeModalpos,\r\n                _id: element._id,\r\n                naziv: element.naziv,\r\n                opis: element.opis,\r\n                antibiogram: {\r\n                  _id: element.antibiogram._id,\r\n                  naziv: element.antibiogram.naziv,\r\n                  opis: element.antibiogram.opis,\r\n                  antibiotici: [...Antibiotici],\r\n                },\r\n              });\r\n            });\r\n\r\n            this.rezultati[0].rezultat = this.PositiveResultSelection.trim();\r\n            this.isLoading = true;\r\n            this.main = false;\r\n\r\n            http\r\n              .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n                email: this.$store.state.userId,\r\n                token: this.$store.state.token,\r\n                site: this.$store.state.site,\r\n                rezultati: this.rezultati,\r\n              })\r\n              .then((res) => {\r\n                http\r\n                  .get(\r\n                    \"rezultati/odobravanje/samples/\" +\r\n                      this.$route.params.patient +\r\n                      \"/\" +\r\n                      this.$route.params.id +\r\n                      \"?token=\" +\r\n                      this.$store.state.token +\r\n                      \"&site=\" +\r\n                      this.$store.state.site +\r\n                      \"&date=\" +\r\n                      this.$route.query.date,\r\n                    {}\r\n                  )\r\n                  .then((res) => {\r\n                    this.uzorci = [];\r\n\r\n                    res.data.results.forEach((element) => {\r\n                      if (this.$store.state.sid === element.id) {\r\n                        console.log(element.rezultati[0].rezultat[0]);\r\n                      }\r\n\r\n                      var check = 0;\r\n                      var zaprimljen = 0;\r\n                      var realizovan = 0;\r\n\r\n                      if (element.verificiran) {\r\n                        var status_uzorka = \"VERIFICIRAN\";\r\n                      } else {\r\n                        var status_uzorka = element.status;\r\n                      }\r\n\r\n                      element.rezultati.forEach((test) => {\r\n                        check++;\r\n\r\n                        if (\r\n                          test.rezultat[test.rezultat.length - 1].rezultat_f ===\r\n                          \"\"\r\n                        ) {\r\n                          zaprimljen++;\r\n                        }\r\n\r\n                        if (\r\n                          test.rezultat[test.rezultat.length - 1].rezultat_f !=\r\n                          \"\"\r\n                        ) {\r\n                          realizovan++;\r\n                        }\r\n\r\n                        if (check === element.rezultati.length) {\r\n                          if (status_uzorka === \"VERIFICIRAN\") {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"VERIFICIRAN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false,\r\n                            });\r\n                          } else if (status_uzorka === \"ODOBREN\") {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"ODOBREN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false,\r\n                            });\r\n                          } else if (zaprimljen < 1) {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"REALIZOVAN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false,\r\n                            });\r\n                          } else if (realizovan < 1) {\r\n                            var stat = \"ZAPRIMLJEN\";\r\n                            if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                              if (\r\n                                element.rezultati[0].rezultat[0].rezultat_m\r\n                                  .length\r\n                              ) {\r\n                                stat = \"REALIZOVAN\";\r\n                              }\r\n                            }\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: stat,\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false,\r\n                            });\r\n                          } else {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"U OBRADI\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false,\r\n                            });\r\n                          }\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    this.uzorci = this.uzorci.sort(function (a, b) {\r\n                      return a.sid.localeCompare(b.sid, undefined, {\r\n                        numeric: true,\r\n                        sensitivity: \"base\",\r\n                      });\r\n                    });\r\n                  })\r\n                  .then((res) => {\r\n                    bus.$emit(\"CloseMicroResult\");\r\n                    this.rezultati[0].realizovan = true;\r\n                    this.MicrobiologyScenario = \"MAIBPoR\";\r\n                    console.log(\r\n                      \"Scenario: \" +\r\n                        Scenario +\r\n                        \" - > \" +\r\n                        this.MicrobiologyScenario\r\n                    );\r\n                    this.main = true;\r\n                    this.isLoading = false;\r\n                  });\r\n              });\r\n          }\r\n\r\n          break;\r\n\r\n        case \"MANBNoR\":\r\n          // Nema definisan skup bakterija\r\n          this.rezultati[0].rezultat_m = [\r\n            {\r\n              bakterija: false,\r\n              negativan: this.ModalNegative,\r\n              pozitivan: this.ModalPositive,\r\n              _id: null,\r\n              naziv: null,\r\n              opis: null,\r\n              antibiogram: {\r\n                _id: null,\r\n                naziv: null,\r\n                opis: null,\r\n                antibiotici: [\r\n                  {\r\n                    _id: null,\r\n                    rbr_a: null,\r\n                    naziv: null,\r\n                    opis: null,\r\n                    rezultat: null,\r\n                  },\r\n                ],\r\n              },\r\n            },\r\n          ];\r\n\r\n          if (this.ModalNegative) {\r\n            this.rezultati[0].rezultat = this.NegativeResultSelection;\r\n            this.isLoading = true;\r\n            this.main = false;\r\n\r\n            http\r\n              .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n                email: this.$store.state.userId,\r\n                token: this.$store.state.token,\r\n                site: this.$store.state.site,\r\n                rezultati: this.rezultati,\r\n              })\r\n              .then((res) => {\r\n                http\r\n                  .get(\r\n                    \"rezultati/odobravanje/samples/\" +\r\n                      this.$route.params.patient +\r\n                      \"/\" +\r\n                      this.$route.params.id +\r\n                      \"?token=\" +\r\n                      this.$store.state.token +\r\n                      \"&site=\" +\r\n                      this.$store.state.site +\r\n                      \"&date=\" +\r\n                      this.$route.query.date,\r\n                    {}\r\n                  )\r\n                  .then((res) => {\r\n                    this.uzorci = [];\r\n\r\n                    res.data.results.forEach((element) => {\r\n                      if (this.$store.state.sid === element.id) {\r\n                        console.log(element.rezultati[0].rezultat[0]);\r\n                      }\r\n\r\n                      var check = 0;\r\n                      var zaprimljen = 0;\r\n                      var realizovan = 0;\r\n\r\n                      if (element.verificiran) {\r\n                        var status_uzorka = \"VERIFICIRAN\";\r\n                      } else {\r\n                        var status_uzorka = element.status;\r\n                      }\r\n\r\n                      element.rezultati.forEach((test) => {\r\n                        check++;\r\n\r\n                        if (\r\n                          test.rezultat[test.rezultat.length - 1].rezultat_f ===\r\n                          \"\"\r\n                        ) {\r\n                          zaprimljen++;\r\n                        }\r\n\r\n                        if (\r\n                          test.rezultat[test.rezultat.length - 1].rezultat_f !=\r\n                          \"\"\r\n                        ) {\r\n                          realizovan++;\r\n                        }\r\n\r\n                        if (check === element.rezultati.length) {\r\n                          if (status_uzorka === \"VERIFICIRAN\") {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"VERIFICIRAN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false,\r\n                            });\r\n                          } else if (status_uzorka === \"ODOBREN\") {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"ODOBREN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false,\r\n                            });\r\n                          } else if (zaprimljen < 1) {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"REALIZOVAN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false,\r\n                            });\r\n                          } else if (realizovan < 1) {\r\n                            var stat = \"ZAPRIMLJEN\";\r\n                            if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                              if (\r\n                                element.rezultati[0].rezultat[0].rezultat_m\r\n                                  .length\r\n                              ) {\r\n                                stat = \"REALIZOVAN\";\r\n                              }\r\n                            }\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: stat,\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false,\r\n                            });\r\n                          } else {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"U OBRADI\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false,\r\n                            });\r\n                          }\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    this.uzorci = this.uzorci.sort(function (a, b) {\r\n                      return a.sid.localeCompare(b.sid, undefined, {\r\n                        numeric: true,\r\n                        sensitivity: \"base\",\r\n                      });\r\n                    });\r\n                  })\r\n                  .then((res) => {\r\n                    bus.$emit(\"CloseMicroResult\");\r\n                    this.rezultati[0].realizovan = true;\r\n                    this.MicrobiologyScenario = \"MANBNeR\";\r\n                    console.log(\r\n                      \"Scenario: \" +\r\n                        Scenario +\r\n                        \" - > \" +\r\n                        this.MicrobiologyScenario\r\n                    );\r\n                    this.main = true;\r\n                    this.isLoading = false;\r\n                  });\r\n              });\r\n          } else {\r\n            this.rezultati[0].rezultat = this.PositiveResultSelection;\r\n            this.isLoading = true;\r\n            this.main = false;\r\n\r\n            http\r\n              .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n                email: this.$store.state.userId,\r\n                token: this.$store.state.token,\r\n                site: this.$store.state.site,\r\n                rezultati: this.rezultati,\r\n              })\r\n              .then((res) => {\r\n                http\r\n                  .get(\r\n                    \"rezultati/odobravanje/samples/\" +\r\n                      this.$route.params.patient +\r\n                      \"/\" +\r\n                      this.$route.params.id +\r\n                      \"?token=\" +\r\n                      this.$store.state.token +\r\n                      \"&site=\" +\r\n                      this.$store.state.site +\r\n                      \"&date=\" +\r\n                      this.$route.query.date,\r\n                    {}\r\n                  )\r\n                  .then((res) => {\r\n                    this.uzorci = [];\r\n\r\n                    res.data.results.forEach((element) => {\r\n                      if (this.$store.state.sid === element.id) {\r\n                        console.log(element.rezultati[0].rezultat[0]);\r\n                      }\r\n\r\n                      var check = 0;\r\n                      var zaprimljen = 0;\r\n                      var realizovan = 0;\r\n\r\n                      if (element.verificiran) {\r\n                        var status_uzorka = \"VERIFICIRAN\";\r\n                      } else {\r\n                        var status_uzorka = element.status;\r\n                      }\r\n\r\n                      element.rezultati.forEach((test) => {\r\n                        check++;\r\n\r\n                        if (\r\n                          test.rezultat[test.rezultat.length - 1].rezultat_f ===\r\n                          \"\"\r\n                        ) {\r\n                          zaprimljen++;\r\n                        }\r\n\r\n                        if (\r\n                          test.rezultat[test.rezultat.length - 1].rezultat_f !=\r\n                          \"\"\r\n                        ) {\r\n                          realizovan++;\r\n                        }\r\n\r\n                        if (check === element.rezultati.length) {\r\n                          if (status_uzorka === \"VERIFICIRAN\") {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"VERIFICIRAN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false,\r\n                            });\r\n                          } else if (status_uzorka === \"ODOBREN\") {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"ODOBREN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false,\r\n                            });\r\n                          } else if (zaprimljen < 1) {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"REALIZOVAN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false,\r\n                            });\r\n                          } else if (realizovan < 1) {\r\n                            var stat = \"ZAPRIMLJEN\";\r\n                            if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                              if (\r\n                                element.rezultati[0].rezultat[0].rezultat_m\r\n                                  .length\r\n                              ) {\r\n                                stat = \"REALIZOVAN\";\r\n                              }\r\n                            }\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: stat,\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false,\r\n                            });\r\n                          } else {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"U OBRADI\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false,\r\n                            });\r\n                          }\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    this.uzorci = this.uzorci.sort(function (a, b) {\r\n                      return a.sid.localeCompare(b.sid, undefined, {\r\n                        numeric: true,\r\n                        sensitivity: \"base\",\r\n                      });\r\n                    });\r\n                  })\r\n                  .then((res) => {\r\n                    bus.$emit(\"CloseMicroResult\");\r\n                    this.rezultati[0].realizovan = true;\r\n                    this.MicrobiologyScenario = \"MANBPoR\";\r\n                    console.log(\r\n                      \"Scenario: \" +\r\n                        Scenario +\r\n                        \" - > \" +\r\n                        this.MicrobiologyScenario\r\n                    );\r\n                    this.main = true;\r\n                    this.isLoading = false;\r\n                  });\r\n              });\r\n          }\r\n\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n\r\n    bus.$on(\"ResetResultSelection\", () => {\r\n      // console.log('Clearing...');\r\n      switch (this.MicrobiologyScenario) {\r\n        case \"MAIBNoR\":\r\n          this.ModalNegative = false;\r\n          this.ModalPositive = false;\r\n          this.ModalPositiveCondition = false;\r\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\r\n          this.NegativeResultSelection = \"\";\r\n          this.PositiveResultSelection = \"\";\r\n          this.SelectedBacteries = [];\r\n          this.ShowAllBacteries = false;\r\n\r\n          break;\r\n\r\n        case \"MAIBNeR\":\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        case \"MAIBPoR\":\r\n          break;\r\n\r\n        case \"MANBNoR\":\r\n          this.ModalNegative = false;\r\n          this.ModalPositive = false;\r\n          this.ModalPositiveCondition = false;\r\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\r\n          this.NegativeResultSelection = \"\";\r\n          this.PositiveResultSelection = \"\";\r\n          this.SelectedBacteries = [];\r\n          this.ShowAllBacteries = false;\r\n\r\n          break;\r\n\r\n        case \"MANBNeR\":\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        case \"MANBPoR\":\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n\r\n      this.MicrobiologyResult.DefaultBacteries.forEach((element) => {\r\n        element.chosen = false;\r\n      });\r\n\r\n      this.MicrobiologyResult.RemainingBacteries.forEach((element) => {\r\n        element.chosen = false;\r\n      });\r\n\r\n      this.SelectedBacteries = [];\r\n      this.ShowAllBacteries = false;\r\n    });\r\n\r\n    bus.$on(\"CancelMicroResult\", () => {\r\n      switch (this.MicrobiologyScenario) {\r\n        case \"MAIBNoR\":\r\n          this.ModalNegative = false;\r\n          this.ModalPositive = false;\r\n          this.ModalPositiveCondition = false;\r\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\r\n          this.NegativeResultSelection = \"\";\r\n          this.PositiveResultSelection = \"\";\r\n          this.SelectedBacteries = [];\r\n          this.ShowAllBacteries = false;\r\n\r\n          break;\r\n\r\n        case \"MAIBNeR\":\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        case \"MAIBPoR\":\r\n          break;\r\n\r\n        case \"MANBNoR\":\r\n          this.ModalNegative = false;\r\n          this.ModalPositive = false;\r\n          this.ModalPositiveCondition = false;\r\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\r\n          this.NegativeResultSelection = \"\";\r\n          this.PositiveResultSelection = \"\";\r\n          this.SelectedBacteries = [];\r\n          this.ShowAllBacteries = false;\r\n\r\n          break;\r\n\r\n        case \"MANBNeR\":\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        case \"MANBPoR\":\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n\r\n      this.MicrobiologyResult.DefaultBacteries.forEach((element) => {\r\n        element.chosen = false;\r\n      });\r\n\r\n      this.MicrobiologyResult.RemainingBacteries.forEach((element) => {\r\n        element.chosen = false;\r\n      });\r\n\r\n      this.SelectedBacteries = [];\r\n      this.ShowAllBacteries = false;\r\n    });\r\n\r\n    bus.$on(\"MicroBactery\", () => {\r\n      console.log(\"Saving main result...\");\r\n\r\n      this.isLoading = true;\r\n      this.main = false;\r\n\r\n      http\r\n        .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n          email: this.$store.state.userId,\r\n          token: this.$store.state.token,\r\n          site: this.$store.state.site,\r\n          rezultati: this.rezultati,\r\n        })\r\n        .then((res) => {\r\n          http\r\n            .get(\r\n              \"rezultati/odobravanje/samples/\" +\r\n                this.$route.params.patient +\r\n                \"/\" +\r\n                this.$route.params.id +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&date=\" +\r\n                this.$route.query.date,\r\n              {}\r\n            )\r\n            .then((res) => {\r\n              this.uzorci = [];\r\n\r\n              res.data.results.forEach((element) => {\r\n                if (this.$store.state.sid === element.id) {\r\n                  console.log(element.rezultati[0].rezultat[0]);\r\n                }\r\n\r\n                var check = 0;\r\n                var zaprimljen = 0;\r\n                var realizovan = 0;\r\n\r\n                if (element.verificiran) {\r\n                  var status_uzorka = \"VERIFICIRAN\";\r\n                } else {\r\n                  var status_uzorka = element.status;\r\n                }\r\n\r\n                element.rezultati.forEach((test) => {\r\n                  check++;\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                  ) {\r\n                    zaprimljen++;\r\n                  }\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                  ) {\r\n                    realizovan++;\r\n                  }\r\n\r\n                  if (check === element.rezultati.length) {\r\n                    if (status_uzorka === \"VERIFICIRAN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"VERIFICIRAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else if (status_uzorka === \"ODOBREN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"ODOBREN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else if (zaprimljen < 1) {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"REALIZOVAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else if (realizovan < 1) {\r\n                      var stat = \"ZAPRIMLJEN\";\r\n                      if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                        if (\r\n                          element.rezultati[0].rezultat[0].rezultat_m.length\r\n                        ) {\r\n                          stat = \"REALIZOVAN\";\r\n                        }\r\n                      }\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: stat,\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"U OBRADI\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    }\r\n                  }\r\n                });\r\n              });\r\n\r\n              this.uzorci = this.uzorci.sort(function (a, b) {\r\n                return a.sid.localeCompare(b.sid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\",\r\n                });\r\n              });\r\n            })\r\n            .then((res) => {\r\n              this.main = true;\r\n              this.isLoading = false;\r\n              bus.$emit(\"CloseMicroBactery\");\r\n            });\r\n        });\r\n    });\r\n\r\n    bus.$on(\"CancelMicroBactery\", () => {});\r\n\r\n    bus.$on(\"PovratakMicroBactery\", () => {\r\n      this.ShowAntibiotics = false;\r\n      this.ShowBacteries = false;\r\n    });\r\n\r\n    bus.$on(\"SpasiMicroBactery\", () => {\r\n      if (this.TemporaryBacteriesAdd.length) {\r\n        console.log(\"Dodavanje bakterija...\");\r\n        var bakterija = {};\r\n        var antibiogram = {};\r\n        var antibiotik = {};\r\n\r\n        this.TemporaryBacteriesAdd.forEach((element) => {\r\n          this.Antibiograms.forEach((antibgr) => {\r\n            if (\r\n              JSON.stringify(element.antibiogram._id) ===\r\n              JSON.stringify(antibgr._id)\r\n            ) {\r\n              antibiogram = antibgr;\r\n            }\r\n          });\r\n\r\n          antibiogram.antibiotici.forEach((antbtk) => {\r\n            antbtk.disabled = false;\r\n            antbtk.rezultat = \"\";\r\n          });\r\n\r\n          bakterija.bakterija = true;\r\n          bakterija._id = element._id;\r\n          bakterija.naziv = element.naziv;\r\n          bakterija.opis = element.opis;\r\n          bakterija.antibiogram = antibiogram;\r\n\r\n          console.log(bakterija);\r\n\r\n          this.SelectedBacteries.push(bakterija);\r\n          this.BacteryTabs.push(bakterija.opis);\r\n          this.rezultati[0].rezultat_m.push(bakterija);\r\n          this.rezultati[0].rezultat =\r\n            this.rezultati[0].rezultat + \"\\n\" + bakterija.opis;\r\n          bakterija = {};\r\n          antibiogram = {};\r\n        });\r\n\r\n        /* var element = {\r\n          chosen: true,\r\n          disabled: false,\r\n          _id: \"5d95cfe793a77e0fec61aa6a\",\r\n          naziv: \"Bakterija 3\",\r\n          opis: \"Bakterija 3\",\r\n          antibiogram: {\r\n            antibiotici: [\r\n              \"5d90ae5e89d972109c76c1b1\",\r\n              \"5d90aed589d972109c76c1b3\",\r\n              \"5d90af2389d972109c76c1b4\",\r\n              \"5d90ae8289d972109c76c1b2\",\r\n              \"5d90afe089d972109c76c1b8\",\r\n              \"5d90b00f89d972109c76c1b9\",\r\n              \"5d90b02289d972109c76c1ba\"\r\n            ],\r\n            _id: \"5d94750593a77e0fec61a8e9\",\r\n            naziv: \"Antibiogram 2\",\r\n            opis: \"Antibiogram 2\",\r\n            __v: 0\r\n          },\r\n          __v: 0\r\n        }; */\r\n\r\n        /* var bakterija = {\r\n          bakterija: true,\r\n          _id: \"5d94751193a77e0fec61a8ea\",\r\n          naziv: \"Bakterija 1\",\r\n          opis: \"Bakterija 1\",\r\n          antibiogram: {\r\n            _id: \"5d9474f893a77e0fec61a8e8\",\r\n            naziv: \"Antibiogram 1\",\r\n            opis: \"Antibiogram 1\",\r\n            antibiotici: [\r\n              {\r\n                _id: \"5d90ae3489d972109c76c1b0\",\r\n                rbr_a: \"0\",\r\n                naziv: \"FOX\",\r\n                opis: \"Cefoxitin\",\r\n                disabled: false,\r\n                rezultat: \"S\"\r\n              },\r\n              {\r\n                _id: \"5d90ae8289d972109c76c1b2\",\r\n                rbr_a: \"0\",\r\n                naziv: \"Cd\",\r\n                opis: \"Clindamycin\",\r\n                disabled: false,\r\n                rezultat: \"\"\r\n              },\r\n              {\r\n                _id: \"5d90af2389d972109c76c1b4\",\r\n                rbr_a: \"0\",\r\n                naziv: \"C\",\r\n                opis: \"Chloramphenicol \",\r\n                disabled: false,\r\n                rezultat: \"\"\r\n              },\r\n              {\r\n                _id: \"5d90af6e89d972109c76c1b6\",\r\n                rbr_a: \"0\",\r\n                naziv: \"TE\",\r\n                opis: \"Tetracycline\",\r\n                disabled: false,\r\n                rezultat: \"\"\r\n              }\r\n            ]\r\n          }\r\n        }; */\r\n      } else {\r\n        console.log(\"Dodavanje antibiotika...\");\r\n      }\r\n\r\n      if (\r\n        this.TemporaryAntibiotics.length ||\r\n        this.TemporaryBacteriesAdd.length\r\n      ) {\r\n        this.TemporaryAntibiotics.forEach((element) => {\r\n          this.rezultati[0].rezultat_m.forEach((selected) => {\r\n            if (selected.opis == this.CurrentTab) {\r\n              selected.antibiogram.antibiotici.push(element);\r\n            }\r\n          });\r\n        });\r\n\r\n        // this.show_table = false;\r\n        this.isLoading = true;\r\n        this.main = false;\r\n\r\n        http\r\n          .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n            email: this.$store.state.userId,\r\n            token: this.$store.state.token,\r\n            site: this.$store.state.site,\r\n            rezultati: this.rezultati,\r\n          })\r\n          .then((res) => {\r\n            http\r\n              .get(\r\n                \"rezultati/odobravanje/samples/\" +\r\n                  this.$route.params.patient +\r\n                  \"/\" +\r\n                  this.$route.params.id +\r\n                  \"?token=\" +\r\n                  this.$store.state.token +\r\n                  \"&site=\" +\r\n                  this.$store.state.site +\r\n                  \"&date=\" +\r\n                  this.$route.query.date,\r\n                {}\r\n              )\r\n              .then((res) => {\r\n                this.uzorci = [];\r\n\r\n                res.data.results.forEach((element) => {\r\n                  if (this.$store.state.sid === element.id) {\r\n                    console.log(element.rezultati[0].rezultat[0]);\r\n                  }\r\n\r\n                  var check = 0;\r\n                  var zaprimljen = 0;\r\n                  var realizovan = 0;\r\n\r\n                  if (element.verificiran) {\r\n                    var status_uzorka = \"VERIFICIRAN\";\r\n                  } else {\r\n                    var status_uzorka = element.status;\r\n                  }\r\n\r\n                  element.rezultati.forEach((test) => {\r\n                    check++;\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                    ) {\r\n                      zaprimljen++;\r\n                    }\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                    ) {\r\n                      realizovan++;\r\n                    }\r\n\r\n                    if (check === element.rezultati.length) {\r\n                      if (status_uzorka === \"VERIFICIRAN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"VERIFICIRAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      } else if (status_uzorka === \"ODOBREN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"ODOBREN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      } else if (zaprimljen < 1) {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"REALIZOVAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      } else if (realizovan < 1) {\r\n                        var stat = \"ZAPRIMLJEN\";\r\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                          if (\r\n                            element.rezultati[0].rezultat[0].rezultat_m.length\r\n                          ) {\r\n                            stat = \"REALIZOVAN\";\r\n                          }\r\n                        }\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: stat,\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      } else {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"U OBRADI\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      }\r\n                    }\r\n                  });\r\n                });\r\n\r\n                this.uzorci = this.uzorci.sort(function (a, b) {\r\n                  return a.sid.localeCompare(b.sid, undefined, {\r\n                    numeric: true,\r\n                    sensitivity: \"base\",\r\n                  });\r\n                });\r\n              })\r\n              .then((res) => {\r\n                this.MicrobiologyScenario = \"MAIBPoR\";\r\n                this.ShowAntibiotics = false;\r\n                this.ShowBacteries = false;\r\n                // this.show_table = true;\r\n                this.main = true;\r\n                this.isLoading = false;\r\n\r\n                if (this.TemporaryBacteriesAdd.length) {\r\n                  this.CurrentTab = this.BacteryTabs[\r\n                    this.BacteryTabs.length - 1\r\n                  ];\r\n                }\r\n              });\r\n          });\r\n      } else {\r\n        this.MicrobiologyScenario = \"MAIBPoR\";\r\n        this.ShowAntibiotics = false;\r\n        this.ShowBacteries = false;\r\n      }\r\n    });\r\n\r\n    bus.$on(\"UpdateMicroBactery\", (data) => {\r\n      if (\r\n        !this.ShowAntibiotics &&\r\n        !this.ShowBacteries &&\r\n        this.MicrobiologyScenario === \"MAIBPoR\"\r\n      ) {\r\n        if (\r\n          this.sample.status != \"ODOBREN\" &&\r\n          this.sample.status != \"VERIFICIRAN\"\r\n        ) {\r\n          this.TemporaryAntibiotics = [];\r\n          this.TemporaryBacteries = [];\r\n          this.TemporaryBacteriesAdd = [];\r\n          var obj = {};\r\n\r\n          this.Bacteries.forEach((element) => {\r\n            obj.chosen = false;\r\n            obj.disabled = false;\r\n            obj._id = element._id;\r\n            obj.naziv = element.naziv;\r\n            obj.opis = element.opis;\r\n            obj.antibiogram = element.antibiogram;\r\n            obj.__v = element.__v;\r\n            obj.chosen = element.chosen;\r\n            this.TemporaryBacteries.push(obj);\r\n            obj = {};\r\n          });\r\n\r\n          this.TemporaryBacteries.forEach((element) => {\r\n            this.SelectedBacteries.forEach((selected) => {\r\n              if (selected._id == element._id) {\r\n                element.chosen = true;\r\n                element.disabled = true;\r\n              }\r\n            });\r\n          });\r\n\r\n          this.ShowBacteries = true;\r\n        }\r\n      }\r\n    });\r\n\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* \r\n\r\n\r\n\r\n\r\n\r\nEnd of | Microbiology Bus from Modal\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n  },\r\n\r\n  beforeDestroy() {\r\n    bus.$off(\"Parametar\");\r\n    bus.$off(\"trash\");\r\n    bus.$off(\"edit\");\r\n    bus.$off(\"comment\");\r\n    bus.$off(\"barcode\");\r\n    bus.$off(\"save\");\r\n    bus.$off(\"check\");\r\n    bus.$off(\"verify\");\r\n    bus.$off(\"undo\");\r\n    bus.$off(\"unlock\");\r\n    bus.$off(\"Nalaz\");\r\n    bus.$off(\"pdf\");\r\n    bus.$off(\"Sample\");\r\n    bus.$off(\"Deleted\");\r\n    bus.$off(\"Edited\");\r\n    bus.$off(\"SaveMulti\");\r\n    bus.$off(\"Mail\");\r\n    bus.$off(\"Error\");\r\n    bus.$off(\"Analyser\");\r\n    bus.$off(\"Sljedeci\");\r\n    bus.$off(\"Prethodni\");\r\n    bus.$off(\"Search\");\r\n    bus.$off(\"Push\");\r\n    bus.$off(\"Reference\");\r\n    bus.$off(\"graph\");\r\n    bus.$off(\"table\");\r\n    bus.$off(\"retest\");\r\n\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Bus Off\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n\r\n    // VuesticTabsBactery\r\n    bus.$off(\"tabChanged\");\r\n    bus.$off(\"Antibiotik\");\r\n\r\n    // VuesticModalMicroResult, bus.$emit(\"CloseMicroResult\")\r\n    bus.$off(\"MicroResult\");\r\n    bus.$off(\"ResetResultSelection\");\r\n    bus.$off(\"CancelMicroResult\");\r\n\r\n    // VuesticModalMicroReset\r\n    bus.$off(\"MicroReset\");\r\n\r\n    // VuesticCollapseObrada\r\n    bus.$off(\"AllowClick\");\r\n\r\n    // VuesticModalMicroBactery, bus.$emit(\"CloseMicroBactery\")\r\n    bus.$off(\"MicroBactery\");\r\n    bus.$off(\"CancelMicroBactery\");\r\n    bus.$off(\"PovratakMicroBactery\");\r\n    bus.$off(\"SpasiMicroBactery\");\r\n    bus.$off(\"UpdateMicroBactery\");\r\n\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* \r\n\r\n\r\n\r\n\r\n\r\nEnd of Microbiology Bus Off |\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n  },\r\n\r\n  destroyed() {\r\n    // console.log(\"Component is being destroyed...\");\r\n    // this.$destroy();\r\n  },\r\n\r\n  created() {\r\n    this.Created();\r\n\r\n    this.Previous.pid = Number(this.$route.params.id) - 1;\r\n    this.Next.pid = Number(this.$route.params.id) + 1;\r\n    this.query_date =\r\n      this.$route.query.date.substring(8, 10) +\r\n      \".\" +\r\n      this.$route.query.date.substring(5, 7) +\r\n      \".\" +\r\n      this.$route.query.date.substring(0, 4);\r\n\r\n    this.Datum.today = new Date(\r\n      JSON.stringify(\r\n        new Date(new Date().setDate(new Date().getDate()))\r\n      ).substring(1, 11) + \"T00:00:00\"\r\n    );\r\n\r\n    this.today_date =\r\n      JSON.stringify(new Date(new Date().setDate(new Date().getDate())))\r\n        .substring(1, 11)\r\n        .substring(8, 10) +\r\n      \".\" +\r\n      JSON.stringify(new Date(new Date().setDate(new Date().getDate())))\r\n        .substring(1, 11)\r\n        .substring(5, 7) +\r\n      \".\" +\r\n      JSON.stringify(new Date(new Date().setDate(new Date().getDate())))\r\n        .substring(1, 11)\r\n        .substring(0, 4);\r\n\r\n    this.Datum.query = new Date(\r\n      this.$route.query.date.substring(0, 10) + \"T00:00:00\"\r\n    );\r\n\r\n    this.Datum.next = new Date(\r\n      new Date(this.$route.query.date.substring(0, 10) + \"T00:00:00\").setDate(\r\n        this.Datum.query.getDate() + 1\r\n      )\r\n    );\r\n\r\n    this.Datum.previous = new Date(\r\n      new Date(this.$route.query.date.substring(0, 10) + \"T00:00:00\").setDate(\r\n        this.Datum.query.getDate() - 1\r\n      )\r\n    );\r\n\r\n    if (new Date(this.Datum.today) > new Date(this.Datum.query)) {\r\n      this.pagination = false;\r\n    } else if (new Date(this.Datum.today) < new Date(this.Datum.query)) {\r\n      this.pagination = false;\r\n    } else {\r\n      this.pagination = true;\r\n    }\r\n\r\n    this.interpretacije = this.interpretacije.sort(function (a, b) {\r\n      return a.localeCompare(b, undefined, {\r\n        numeric: true,\r\n        sensitivity: \"base\",\r\n      });\r\n    });\r\n  },\r\n\r\n  methods: {\r\n    RetestSave(data) {\r\n      this.isLoading = true;\r\n\r\n      // console.log(this.rezultati)\r\n\r\n      http\r\n        .post(\"rezultati/odobravanje/retest/save/\", {\r\n          sid: this.$store.state.sid,\r\n          rezultati: this.rezultati,\r\n          site: this.$store.state.site,\r\n          token: this.$store.state.token,\r\n        })\r\n        .then((res) => {\r\n          if (res.data.success) {\r\n            this.isLoading = false;\r\n            this.save_retest = false;\r\n          } else {\r\n          }\r\n        });\r\n    },\r\n\r\n    ExclamationMulti(test) {\r\n      this.warning = { analiza: \"\", text: \"\", napomena: \"\", control: \"\" };\r\n      var rezultat = test.rezultat\r\n        .replace(/,/g, \".\")\r\n        .replace(/</g, \"\")\r\n        .replace(/>/g, \"\");\r\n\r\n      var m_interp = {};\r\n      var m_opis = \"\";\r\n\r\n      // console.log(test.analit)\r\n\r\n      this.analitiprikaz.forEach((element) => {\r\n        element.labassay.multiparam.forEach((param) => {\r\n          if (JSON.stringify(param._id) == JSON.stringify(test.analit)) {\r\n            // console.log(element)\r\n            // console.log(param)\r\n\r\n            m_interp = param.interpretacija;\r\n            m_opis = param.opis;\r\n          }\r\n        });\r\n      });\r\n\r\n      switch (\r\n        this.Interpretacija(\r\n          test.opis,\r\n          rezultat,\r\n          test.jedinica,\r\n          test.refd,\r\n          test.refg,\r\n          this.$store.state.site,\r\n          test.interp,\r\n          \"\",\r\n          this.spec\r\n        )[2]\r\n      ) {\r\n        case \"L\":\r\n          this.warning = {\r\n            analiza: m_opis,\r\n            text: m_interp.snizeno.text.trim(),\r\n            napomena: m_interp.napomena.trim(),\r\n            control: \"Sniženo\",\r\n          };\r\n          break;\r\n\r\n        case \"H\":\r\n          switch (test.interp) {\r\n            case \"neg\":\r\n              this.warning = {\r\n                analiza: m_opis,\r\n                text: m_interp.poviseno.text.trim(),\r\n                napomena: m_interp.napomena.trim(),\r\n                control: \"Pozitivan\",\r\n              };\r\n              break;\r\n\r\n            default:\r\n              this.warning = {\r\n                analiza: m_opis,\r\n                text: m_interp.poviseno.text.trim(),\r\n                napomena: m_interp.napomena.trim(),\r\n                control: \"Povišeno\",\r\n              };\r\n              break;\r\n          }\r\n\r\n          break;\r\n\r\n        default:\r\n          this.warning = { analiza: \"\", text: \"\", napomena: \"\", control: \"\" };\r\n          break;\r\n      }\r\n\r\n      if (this.warning.text && this.warning.text != \"\") {\r\n        // console.log(this.warning.analiza + \" | \" + this.warning.control + \" - \" + this.warning.text);\r\n        // this.$refs.staticModalExclamation.open();\r\n      }\r\n    },\r\n\r\n    Exclamation(test) {\r\n      this.warning = { analiza: \"\", text: \"\", napomena: \"\", control: \"\" };\r\n      var rezultat = test.rezultat\r\n        .replace(/,/g, \".\")\r\n        .replace(/</g, \"\")\r\n        .replace(/>/g, \"\");\r\n\r\n      switch (\r\n        this.Interpretacija(\r\n          test.opis,\r\n          rezultat,\r\n          test.jedinica,\r\n          test.dRef,\r\n          test.gRef,\r\n          this.$store.state.site,\r\n          test.interp,\r\n          test.extend,\r\n          this.spec\r\n        )[2]\r\n      ) {\r\n        case \"L\":\r\n          this.warning = {\r\n            analiza: test.analit,\r\n            text: test.interpretacija.snizeno.text.trim(),\r\n            napomena: test.interpretacija.napomena.trim(),\r\n            control: \"Sniženo\",\r\n          };\r\n          break;\r\n\r\n        case \"H\":\r\n          switch (test.interp) {\r\n            case \"neg\":\r\n              this.warning = {\r\n                analiza: test.analit,\r\n                text: test.interpretacija.poviseno.text.trim(),\r\n                napomena: test.interpretacija.napomena.trim(),\r\n                control: \"Pozitivan\",\r\n              };\r\n              break;\r\n\r\n            default:\r\n              this.warning = {\r\n                analiza: test.analit,\r\n                text: test.interpretacija.poviseno.text.trim(),\r\n                napomena: test.interpretacija.napomena.trim(),\r\n                control: \"Povišeno\",\r\n              };\r\n              break;\r\n          }\r\n\r\n          break;\r\n\r\n        default:\r\n          this.warning = { analiza: \"\", text: \"\", napomena: \"\", control: \"\" };\r\n          break;\r\n      }\r\n\r\n      if (this.warning.text && this.warning.text != \"\") {\r\n        this.$refs.staticModalExclamation.open();\r\n      }\r\n    },\r\n\r\n    LabAssayEval(e, test) {\r\n      this.analiza_eval = test;\r\n      e.preventDefault();\r\n      this.spinner = false;\r\n      this.showLineChart = false;\r\n      let palette = store.getters.palette;\r\n      this.table_header = test.ime + \" | \" + test.analit;\r\n      if (!test.multidata) {\r\n        this.isLoading = true;\r\n        this.Procjena = [];\r\n\r\n        http\r\n          .get(\r\n            \"/labassay/evaluation/single\" +\r\n              \"?token=\" +\r\n              this.$store.state.token +\r\n              \"&site=\" +\r\n              this.$store.state.site +\r\n              \"&range=\" +\r\n              \"14\",\r\n            {}\r\n          )\r\n          .then((response) => {\r\n            if (response.data.Results.length) {\r\n              var obj = {};\r\n              var count = 0;\r\n\r\n              response.data.Results.forEach((element) => {\r\n                count++;\r\n                element.rezultati.forEach((rez) => {\r\n                  if (\r\n                    rez.labassay === test.labassay_id &&\r\n                    element.verificiran &&\r\n                    rez.rezultat[rez.rezultat.length - 1].rezultat_f.trim() !=\r\n                      \"\"\r\n                  ) {\r\n                    obj.rezultat =\r\n                      rez.rezultat[rez.rezultat.length - 1].rezultat_f;\r\n                    obj.jedinica =\r\n                      rez.rezultat[rez.rezultat.length - 1].jedinice_f;\r\n                    obj.analit = \"\";\r\n                    obj.interp = rez.interp;\r\n                    obj.extend = rez.extend;\r\n                    obj.refd = rez.refd;\r\n                    obj.refg = rez.refg;\r\n                    obj.sid = element.id;\r\n                    obj.updated_at =\r\n                      rez.rezultat[rez.rezultat.length - 1].updated_at;\r\n\r\n                    var datum =\r\n                      JSON.stringify(\r\n                        rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                      ).slice(9, 11) +\r\n                      \".\" +\r\n                      JSON.stringify(\r\n                        rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                      ).slice(6, 8) +\r\n                      \".\" +\r\n                      JSON.stringify(\r\n                        rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                      ).slice(1, 5);\r\n                    var time = JSON.stringify(\r\n                      new Date(\r\n                        new Date(\r\n                          rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                        ).getTime() -\r\n                          new Date(\r\n                            rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                          ).getTimezoneOffset() *\r\n                            60000\r\n                      ).toISOString()\r\n                    ).substring(12, 17);\r\n\r\n                    obj.datum = datum;\r\n                    obj.vrijeme = time;\r\n                    obj.kontrola = this.Interpretacija(\r\n                      \"\",\r\n                      obj.rezultat,\r\n                      obj.jedinica,\r\n                      obj.refd,\r\n                      obj.refg,\r\n                      this.$store.state.site,\r\n                      obj.interp,\r\n                      obj.extend,\r\n                      this.spec\r\n                    )[5];\r\n\r\n                    this.Procjena.push(obj);\r\n                    obj = {};\r\n                  }\r\n                });\r\n\r\n                if (count == response.data.Results.length) {\r\n                  this.Procjena.sort(function (a, b) {\r\n                    return Date.parse(a.updated_at) == Date.parse(b.updated_at)\r\n                      ? 0\r\n                      : +(\r\n                          Date.parse(a.updated_at) < Date.parse(b.updated_at)\r\n                        ) || -1;\r\n                  });\r\n\r\n                  // Line Chart\r\n\r\n                  var data = [];\r\n\r\n                  if (this.Procjena.length) {\r\n                    this.optionsLineChart = {\r\n                      responsive: true,\r\n                      maintainAspectRatio: false,\r\n                      title: {\r\n                        display: true,\r\n                        text: \"\",\r\n                      },\r\n                      scales: {\r\n                        xAxes: [\r\n                          {\r\n                            display: true,\r\n                            gridLines: {\r\n                              display: true,\r\n                              color: \"#eee\",\r\n                            },\r\n                          },\r\n                        ],\r\n                        yAxes: [\r\n                          {\r\n                            display: true,\r\n                            gridLines: {\r\n                              display: true,\r\n                              color: \"#eee\",\r\n                            },\r\n                          },\r\n                        ],\r\n                      },\r\n                    };\r\n\r\n                    var labels = [];\r\n                    var kontrola = [];\r\n                    var temp = \"\";\r\n\r\n                    this.Procjena.forEach((element) => {\r\n                      if (!isNaN(element.rezultat.trim())) {\r\n                        switch (element.kontrola) {\r\n                          case \"Red\":\r\n                            kontrola.push(palette.danger);\r\n                            break;\r\n                          case \"Green\":\r\n                            kontrola.push(palette.primary);\r\n                            break;\r\n                          case \"Yellow\":\r\n                            kontrola.push(palette.warning);\r\n                            break;\r\n\r\n                          default:\r\n                            kontrola.push(palette.info);\r\n                            break;\r\n                        }\r\n\r\n                        labels.push(element.datum);\r\n                        data.push(element.rezultat);\r\n                      }\r\n                    });\r\n\r\n                    this.dataLineChart = {\r\n                      labels: labels,\r\n                      datasets: [\r\n                        {\r\n                          label: test.ime + \" | \" + test.analit,\r\n                          backgroundColor: utils.hex2rgb(palette.info, 0.5).css,\r\n                          pointBorderColor: kontrola,\r\n                          pointBackgroundColor: kontrola,\r\n                          borderColor: palette.transparent,\r\n                          data: data,\r\n                        },\r\n                      ],\r\n                    };\r\n\r\n                    if (data.length) {\r\n                      this.showLineChart = true;\r\n                    }\r\n\r\n                    // console.warn(\"Zadnjih 14 dana.\");\r\n\r\n                    this.$refs.staticModalLabAssayEvalSingle.open();\r\n                  } else {\r\n                    // console.warn(\"No data.\");\r\n                  }\r\n                }\r\n              });\r\n            } else {\r\n              // console.warn(\"No data.\");\r\n            }\r\n            this.isLoading = false;\r\n          });\r\n      } else {\r\n        // console.warn(test.ime + \" | \" + test.analit);\r\n\r\n        this.multiparam_izbor = test.multiparam[0].opis;\r\n        this.multiparam_id = test.multiparam[0]._id;\r\n\r\n        this.multiparams = [];\r\n\r\n        this.multiparam_izbornik = [];\r\n\r\n        test.multiparam.forEach((element) => {\r\n          this.multiparam_izbornik.push(element.opis);\r\n          this.multiparams.push(element);\r\n        });\r\n\r\n        this.isLoading = true;\r\n        this.Procjena = [];\r\n\r\n        http\r\n          .get(\r\n            \"/labassay/evaluation/multi\" +\r\n              \"?token=\" +\r\n              this.$store.state.token +\r\n              \"&site=\" +\r\n              this.$store.state.site +\r\n              \"&labassay=\" +\r\n              test.labassay_id +\r\n              \"&range=\" +\r\n              \"14\",\r\n            {}\r\n          )\r\n          .then((response) => {\r\n            if (response.data.Multi.length) {\r\n              this.Response = response.data;\r\n\r\n              var obj = {};\r\n              var count = 0;\r\n\r\n              response.data.Multi.forEach((element) => {\r\n                count++;\r\n                element.multi.forEach((param) => {\r\n                  if (\r\n                    this.multiparam_id == param.labassay &&\r\n                    param.rezultat[0].rezultat_f.trim() != \"\"\r\n                  ) {\r\n                    obj.rezultat = param.rezultat[0].rezultat_f;\r\n                    obj.jedinica = param.rezultat[0].jedinice_f;\r\n                    obj.analit = \"Nema podataka\";\r\n                    obj.interp = param.interp;\r\n                    obj.extend = param.extend;\r\n                    obj.refd = param.refd;\r\n                    obj.refg = param.refg;\r\n                    obj.sid = \"Nema podataka\";\r\n                    obj.updated_at = new Date(param.rezultat[0].updated_at);\r\n\r\n                    var datum =\r\n                      JSON.stringify(\r\n                        new Date(param.rezultat[0].updated_at)\r\n                      ).slice(9, 11) +\r\n                      \".\" +\r\n                      JSON.stringify(\r\n                        new Date(param.rezultat[0].updated_at)\r\n                      ).slice(6, 8) +\r\n                      \".\" +\r\n                      JSON.stringify(\r\n                        new Date(param.rezultat[0].updated_at)\r\n                      ).slice(1, 5);\r\n                    var time = JSON.stringify(\r\n                      new Date(\r\n                        new Date(param.rezultat[0].updated_at).getTime() -\r\n                          new Date(\r\n                            param.rezultat[0].updated_at\r\n                          ).getTimezoneOffset() *\r\n                            60000\r\n                      ).toISOString()\r\n                    ).substring(12, 17);\r\n                    obj.datum = datum;\r\n                    obj.vrijeme = time;\r\n                    obj.kontrola = this.Interpretacija(\r\n                      \"\",\r\n                      obj.rezultat,\r\n                      obj.jedinica,\r\n                      obj.refd,\r\n                      obj.refg,\r\n                      this.$store.state.site,\r\n                      obj.interp,\r\n                      obj.extend,\r\n                      this.spec\r\n                    )[5];\r\n\r\n                    this.Procjena.push(obj);\r\n                    obj = {};\r\n                  }\r\n                });\r\n\r\n                if (count == response.data.Multi.length) {\r\n                  this.Procjena.sort(function (a, b) {\r\n                    return Date.parse(a.updated_at) == Date.parse(b.updated_at)\r\n                      ? 0\r\n                      : +(\r\n                          Date.parse(a.updated_at) < Date.parse(b.updated_at)\r\n                        ) || -1;\r\n                  });\r\n\r\n                  // Line Chart\r\n\r\n                  var data = [];\r\n\r\n                  if (this.Procjena.length) {\r\n                    this.optionsLineChart = {\r\n                      responsive: true,\r\n                      maintainAspectRatio: false,\r\n                      title: {\r\n                        display: true,\r\n                        text: \"\",\r\n                      },\r\n                      scales: {\r\n                        xAxes: [\r\n                          {\r\n                            display: true,\r\n                            gridLines: {\r\n                              display: true,\r\n                              color: \"#eee\",\r\n                            },\r\n                          },\r\n                        ],\r\n                        yAxes: [\r\n                          {\r\n                            display: true,\r\n                            gridLines: {\r\n                              display: true,\r\n                              color: \"#eee\",\r\n                            },\r\n                          },\r\n                        ],\r\n                      },\r\n                    };\r\n\r\n                    var labels = [];\r\n                    var kontrola = [];\r\n                    var temp = \"\";\r\n\r\n                    this.Procjena.forEach((element) => {\r\n                      if (!isNaN(element.rezultat.trim())) {\r\n                        switch (element.kontrola) {\r\n                          case \"Red\":\r\n                            kontrola.push(palette.danger);\r\n                            break;\r\n                          case \"Green\":\r\n                            kontrola.push(palette.primary);\r\n                            break;\r\n                          case \"Yellow\":\r\n                            kontrola.push(palette.warning);\r\n                            break;\r\n\r\n                          default:\r\n                            kontrola.push(palette.info);\r\n                            break;\r\n                        }\r\n\r\n                        labels.push(element.datum);\r\n                        data.push(element.rezultat);\r\n                      }\r\n                    });\r\n\r\n                    this.dataLineChart = {\r\n                      labels: labels,\r\n                      datasets: [\r\n                        {\r\n                          label: test.ime + \" | \" + test.analit,\r\n                          backgroundColor: utils.hex2rgb(palette.info, 0.5).css,\r\n                          pointBorderColor: kontrola,\r\n                          pointBackgroundColor: kontrola,\r\n                          borderColor: palette.transparent,\r\n                          data: data,\r\n                        },\r\n                      ],\r\n                    };\r\n\r\n                    if (data.length) {\r\n                      this.showLineChart = true;\r\n                    }\r\n\r\n                    this.$refs.staticModalLabAssayEvalMulti.open();\r\n                  } else {\r\n                    // console.warn(\"No data.\");\r\n                  }\r\n                }\r\n              });\r\n            } else {\r\n              // console.warn(\"No data.\");\r\n            }\r\n            this.isLoading = false;\r\n          });\r\n      }\r\n    },\r\n\r\n    Evaluation(test) {\r\n      this.analiza_eval = test;\r\n      this.spinner = false;\r\n      if (true) {\r\n        this.showLineChart = false;\r\n        let palette = store.getters.palette;\r\n        this.table_header = test.ime + \" | \" + test.analit;\r\n\r\n        if (test.multidata) {\r\n          this.multiparam_izbor = test.multiparam[0].opis;\r\n          this.multiparam_id = test.multiparam[0]._id;\r\n\r\n          this.multiparams = [];\r\n\r\n          this.multiparam_izbornik = [];\r\n\r\n          test.multiparam.forEach((element) => {\r\n            this.multiparam_izbornik.push(element.opis);\r\n            this.multiparams.push(element);\r\n          });\r\n\r\n          this.isLoading = true;\r\n          this.Procjena = [];\r\n\r\n          http\r\n            .get(\r\n              \"/patient/evaluation/multi\" +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&patient=\" +\r\n                this.pacijent +\r\n                \"&labassay=\" +\r\n                test.labassay_id,\r\n              {}\r\n            )\r\n            .then((response) => {\r\n              if (response.data.Multi.length) {\r\n                this.Response = response.data;\r\n\r\n                var obj = {};\r\n                var count = 0;\r\n\r\n                response.data.Multi.forEach((element) => {\r\n                  count++;\r\n                  element.multi.forEach((param) => {\r\n                    if (\r\n                      this.multiparam_id == param.labassay &&\r\n                      param.rezultat[0].rezultat_f.trim() != \"\"\r\n                    ) {\r\n                      obj.rezultat = param.rezultat[0].rezultat_f;\r\n                      obj.jedinica = param.rezultat[0].jedinice_f;\r\n                      obj.analit = \"Nema podataka\";\r\n                      obj.interp = param.interp;\r\n                      obj.extend = param.extend;\r\n                      obj.refd = param.refd;\r\n                      obj.refg = param.refg;\r\n                      obj.sid = \"Nema podataka\";\r\n                      obj.updated_at = new Date(param.rezultat[0].updated_at);\r\n\r\n                      var datum =\r\n                        JSON.stringify(\r\n                          new Date(param.rezultat[0].updated_at)\r\n                        ).slice(9, 11) +\r\n                        \".\" +\r\n                        JSON.stringify(\r\n                          new Date(param.rezultat[0].updated_at)\r\n                        ).slice(6, 8) +\r\n                        \".\" +\r\n                        JSON.stringify(\r\n                          new Date(param.rezultat[0].updated_at)\r\n                        ).slice(1, 5);\r\n                      var time = JSON.stringify(\r\n                        new Date(\r\n                          new Date(param.rezultat[0].updated_at).getTime() -\r\n                            new Date(\r\n                              param.rezultat[0].updated_at\r\n                            ).getTimezoneOffset() *\r\n                              60000\r\n                        ).toISOString()\r\n                      ).substring(12, 17);\r\n                      obj.datum = datum;\r\n                      obj.vrijeme = time;\r\n                      obj.kontrola = this.Interpretacija(\r\n                        \"\",\r\n                        obj.rezultat,\r\n                        obj.jedinica,\r\n                        obj.refd,\r\n                        obj.refg,\r\n                        this.$store.state.site,\r\n                        obj.interp,\r\n                        obj.extend,\r\n                        this.spec\r\n                      )[5];\r\n\r\n                      this.Procjena.push(obj);\r\n                      obj = {};\r\n                    }\r\n                  });\r\n\r\n                  if (count == response.data.Multi.length) {\r\n                    this.Procjena.sort(function (a, b) {\r\n                      return Date.parse(a.updated_at) ==\r\n                        Date.parse(b.updated_at)\r\n                        ? 0\r\n                        : +(\r\n                            Date.parse(a.updated_at) < Date.parse(b.updated_at)\r\n                          ) || -1;\r\n                    });\r\n\r\n                    // Line Chart\r\n\r\n                    var data = [];\r\n\r\n                    if (this.Procjena.length) {\r\n                      this.optionsLineChart = {\r\n                        responsive: true,\r\n                        maintainAspectRatio: false,\r\n                        title: {\r\n                          display: true,\r\n                          text: \"\",\r\n                        },\r\n                        scales: {\r\n                          xAxes: [\r\n                            {\r\n                              display: true,\r\n                              gridLines: {\r\n                                display: true,\r\n                                color: \"#eee\",\r\n                              },\r\n                            },\r\n                          ],\r\n                          yAxes: [\r\n                            {\r\n                              display: true,\r\n                              gridLines: {\r\n                                display: true,\r\n                                color: \"#eee\",\r\n                              },\r\n                            },\r\n                          ],\r\n                        },\r\n                      };\r\n\r\n                      var labels = [];\r\n                      var kontrola = [];\r\n                      var temp = \"\";\r\n\r\n                      this.Procjena.forEach((element) => {\r\n                        if (!isNaN(element.rezultat.trim())) {\r\n                          switch (element.kontrola) {\r\n                            case \"Red\":\r\n                              kontrola.push(palette.danger);\r\n                              break;\r\n                            case \"Green\":\r\n                              kontrola.push(palette.primary);\r\n                              break;\r\n                            case \"Yellow\":\r\n                              kontrola.push(palette.warning);\r\n                              break;\r\n\r\n                            default:\r\n                              kontrola.push(palette.info);\r\n                              break;\r\n                          }\r\n\r\n                          labels.push(element.datum);\r\n                          data.push(element.rezultat);\r\n                        }\r\n                      });\r\n\r\n                      this.dataLineChart = {\r\n                        labels: labels,\r\n                        datasets: [\r\n                          {\r\n                            label: test.ime + \" | \" + test.analit,\r\n                            backgroundColor: utils.hex2rgb(palette.info, 0.5)\r\n                              .css,\r\n                            pointBorderColor: kontrola,\r\n                            pointBackgroundColor: kontrola,\r\n                            borderColor: palette.transparent,\r\n                            data: data,\r\n                          },\r\n                        ],\r\n                      };\r\n\r\n                      if (data.length) {\r\n                        this.showLineChart = true;\r\n                      }\r\n\r\n                      this.$refs.staticModalEvaluationMulti.open();\r\n                    } else {\r\n                      // console.warn(\"No data.\");\r\n                    }\r\n                  }\r\n                });\r\n              } else {\r\n                // console.warn(\"No data.\");\r\n              }\r\n              this.isLoading = false;\r\n            });\r\n        } else {\r\n          this.isLoading = true;\r\n          this.Procjena = [];\r\n\r\n          http\r\n            .get(\r\n              \"/patient/evaluation/single\" +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&patient=\" +\r\n                this.pacijent,\r\n              {}\r\n            )\r\n            .then((response) => {\r\n              if (response.data.Results.length) {\r\n                var obj = {};\r\n                var count = 0;\r\n\r\n                response.data.Results.forEach((element) => {\r\n                  count++;\r\n                  element.rezultati.forEach((rez) => {\r\n                    if (\r\n                      rez.labassay === test.labassay_id &&\r\n                      element.verificiran &&\r\n                      rez.rezultat[rez.rezultat.length - 1].rezultat_f.trim() !=\r\n                        \"\"\r\n                    ) {\r\n                      obj.rezultat =\r\n                        rez.rezultat[rez.rezultat.length - 1].rezultat_f;\r\n                      obj.jedinica =\r\n                        rez.rezultat[rez.rezultat.length - 1].jedinice_f;\r\n                      obj.analit = \"\";\r\n                      obj.interp = rez.interp;\r\n                      obj.extend = rez.extend;\r\n                      obj.refd = rez.refd;\r\n                      obj.refg = rez.refg;\r\n                      obj.sid = element.id;\r\n                      obj.updated_at =\r\n                        rez.rezultat[rez.rezultat.length - 1].updated_at;\r\n\r\n                      var datum =\r\n                        JSON.stringify(\r\n                          rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                        ).slice(9, 11) +\r\n                        \".\" +\r\n                        JSON.stringify(\r\n                          rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                        ).slice(6, 8) +\r\n                        \".\" +\r\n                        JSON.stringify(\r\n                          rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                        ).slice(1, 5);\r\n                      var time = JSON.stringify(\r\n                        new Date(\r\n                          new Date(\r\n                            rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                          ).getTime() -\r\n                            new Date(\r\n                              rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                            ).getTimezoneOffset() *\r\n                              60000\r\n                        ).toISOString()\r\n                      ).substring(12, 17);\r\n\r\n                      obj.datum = datum;\r\n                      obj.vrijeme = time;\r\n                      obj.kontrola = this.Interpretacija(\r\n                        \"\",\r\n                        obj.rezultat,\r\n                        obj.jedinica,\r\n                        obj.refd,\r\n                        obj.refg,\r\n                        this.$store.state.site,\r\n                        obj.interp,\r\n                        obj.extend,\r\n                        this.spec\r\n                      )[5];\r\n\r\n                      this.Procjena.push(obj);\r\n                      obj = {};\r\n                    }\r\n                  });\r\n\r\n                  if (count == response.data.Results.length) {\r\n                    this.Procjena.sort(function (a, b) {\r\n                      return Date.parse(a.updated_at) ==\r\n                        Date.parse(b.updated_at)\r\n                        ? 0\r\n                        : +(\r\n                            Date.parse(a.updated_at) < Date.parse(b.updated_at)\r\n                          ) || -1;\r\n                    });\r\n\r\n                    // Line Chart\r\n\r\n                    var data = [];\r\n\r\n                    if (this.Procjena.length) {\r\n                      this.optionsLineChart = {\r\n                        responsive: true,\r\n                        maintainAspectRatio: false,\r\n                        title: {\r\n                          display: true,\r\n                          text: \"\",\r\n                        },\r\n                        scales: {\r\n                          xAxes: [\r\n                            {\r\n                              display: true,\r\n                              gridLines: {\r\n                                display: true,\r\n                                color: \"#eee\",\r\n                              },\r\n                            },\r\n                          ],\r\n                          yAxes: [\r\n                            {\r\n                              display: true,\r\n                              gridLines: {\r\n                                display: true,\r\n                                color: \"#eee\",\r\n                              },\r\n                            },\r\n                          ],\r\n                        },\r\n                      };\r\n\r\n                      var labels = [];\r\n                      var kontrola = [];\r\n                      var temp = \"\";\r\n\r\n                      this.Procjena.forEach((element) => {\r\n                        if (!isNaN(element.rezultat.trim())) {\r\n                          switch (element.kontrola) {\r\n                            case \"Red\":\r\n                              kontrola.push(palette.danger);\r\n                              break;\r\n                            case \"Green\":\r\n                              kontrola.push(palette.primary);\r\n                              break;\r\n                            case \"Yellow\":\r\n                              kontrola.push(palette.warning);\r\n                              break;\r\n\r\n                            default:\r\n                              kontrola.push(palette.info);\r\n                              break;\r\n                          }\r\n\r\n                          labels.push(element.datum);\r\n                          data.push(element.rezultat);\r\n                        }\r\n                      });\r\n\r\n                      this.dataLineChart = {\r\n                        labels: labels,\r\n                        datasets: [\r\n                          {\r\n                            label: test.ime + \" | \" + test.analit,\r\n                            backgroundColor: utils.hex2rgb(palette.info, 0.5)\r\n                              .css,\r\n                            pointBorderColor: kontrola,\r\n                            pointBackgroundColor: kontrola,\r\n                            borderColor: palette.transparent,\r\n                            data: data,\r\n                          },\r\n                        ],\r\n                      };\r\n\r\n                      if (data.length) {\r\n                        this.showLineChart = true;\r\n                      }\r\n\r\n                      this.$refs.staticModalEvaluationSingle.open();\r\n                    } else {\r\n                      // console.warn(\"No data.\");\r\n                    }\r\n                  }\r\n                });\r\n              } else {\r\n                // console.warn(\"No data.\");\r\n              }\r\n              this.isLoading = false;\r\n            });\r\n        }\r\n      }\r\n    },\r\n\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Methods\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n\r\n    filteredAntibiotics(column, columns) {\r\n      return this.Antibiotics.filter(\r\n        (item) => this.Antibiotics.indexOf(item) % columns === column - 1\r\n      );\r\n    },\r\n\r\n    filteredBacteries(column, columns) {\r\n      return this.TemporaryBacteries.filter(\r\n        (item) => this.TemporaryBacteries.indexOf(item) % columns === column - 1\r\n      );\r\n    },\r\n\r\n    AddAntibiotics(data) {\r\n      var obj = {};\r\n\r\n      if (!data.chosen) {\r\n        (obj._id = data._id),\r\n          (obj.rbr_a = data.rbr_a),\r\n          (obj.naziv = data.naziv),\r\n          (obj.opis = data.opis),\r\n          (obj.rezultat = \"\");\r\n        this.TemporaryAntibiotics.push(obj);\r\n      } else {\r\n        for (var i = 0; i < this.TemporaryAntibiotics.length; i++) {\r\n          if (this.TemporaryAntibiotics[i]._id === data._id) {\r\n            this.TemporaryAntibiotics.splice(i, 1);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    AddBacteries(data) {\r\n      if (!data.chosen) {\r\n        this.TemporaryBacteriesAdd.push(data);\r\n      } else {\r\n        for (var i = 0; i < this.TemporaryBacteriesAdd.length; i++) {\r\n          if (this.TemporaryBacteriesAdd[i]._id === data._id) {\r\n            this.TemporaryBacteriesAdd.splice(i, 1);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    OpenMicroSelect($event, test) {\r\n      console.log(\"Select Modal opening...\");\r\n\r\n      this.CurrentTab = \"\";\r\n      this.testovi = [];\r\n      this.rezultati = [];\r\n      this.analitiprikaz = [];\r\n      this.calculated = false;\r\n      this.show_table = false;\r\n      this.main = false;\r\n\r\n      var topcije = null;\r\n      topcije = izbornik.rez;\r\n\r\n      http\r\n        .get(\r\n          \"rezultati/showsingle/\" +\r\n            this.$store.state.sid +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site,\r\n          {}\r\n        )\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          var test = {};\r\n\r\n          if (res.data.data.length) {\r\n            res.data.data.sort(function (a, b) {\r\n              return a.testovi.labassay.grupa + a.testovi.labassay.grouporder ==\r\n                b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                ? 0\r\n                : +(\r\n                    a.testovi.labassay.grupa + a.testovi.labassay.grouporder >\r\n                    b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                  ) || -1;\r\n            });\r\n\r\n            this.testovi = res.data.data;\r\n            this.analitiprikaz = res.data.multidata;\r\n\r\n            res.data.data.forEach((element) => {\r\n              test = {};\r\n              test.realizovan = false;\r\n\r\n              test.ime = element.testovi.labassay.naziv;\r\n              test.test = element.testovi.labassay.sifra;\r\n              test.analit = element.testovi.labassay.analit;\r\n              test.IDE = element.testovi._id;\r\n              test.labassay_id = element.testovi.labassay._id;\r\n\r\n              test.multi_count = 0;\r\n              test.multi_rezultati = [];\r\n\r\n              res.data.multidata.forEach((multi) => {\r\n                if (multi.labassay._id === element.testovi.labassay._id) {\r\n                  test.multi_rezultati = multi.rezultat;\r\n                  test.multi_count = multi.rezultat[0].rezultat.length;\r\n                }\r\n              });\r\n\r\n              test.kategorija = element.testovi.labassay.kategorija;\r\n              test.analyser = element.testovi.labassay.analyser;\r\n              test.multiparam = element.testovi.labassay.multiparam;\r\n              test.vise = element.testovi.rezultat.length;\r\n              test.calculated = element.testovi.labassay.calculated;\r\n              test.manual = element.testovi.labassay.manual;\r\n\r\n              test.select_options = eval(\r\n                \"topcije.\" +\r\n                  element.testovi.interp\r\n                    .replace(\"%\", \"_\")\r\n                    .replace(\"/\", \"_\")\r\n                    .replace(\" \", \"_\")\r\n                    .replace(/-/g, \"_\")\r\n                    .replace(\"#\", \"_\")\r\n                    .replace(/^\\d+/, \"\")\r\n              );\r\n\r\n              element.testovi.rezultat.forEach((rezultat) => {\r\n                test.sekcija = rezultat.anaassay.sekcija;\r\n                test.rezultat = rezultat.rezultat_f;\r\n                test.result = rezultat;\r\n                test.anaassay = rezultat.anaassay;\r\n\r\n                if (rezultat.rezultat_f != \"\") {\r\n                  test.realizovan = true;\r\n                }\r\n\r\n                test.unit = rezultat.jedinice_f;\r\n\r\n                if (res.data.verificiran || res.data.status === \"ODOBREN\") {\r\n                  test.odobren = \"ODOBREN\";\r\n                  test.edit = false;\r\n                } else {\r\n                  test.odobren != \"ODOBREN\";\r\n                  test.edit = true;\r\n                }\r\n\r\n                test.jedinica = rezultat.jedinice_f;\r\n                test.id = rezultat._id;\r\n                test.multidata = element.testovi.labassay.multi;\r\n                test.rezultat_m = rezultat.rezultat_m;\r\n                test.bakterije = element.testovi.labassay.bakterije;\r\n                test.neg_description = element.testovi.labassay.neg_description;\r\n                test.pos_description = element.testovi.labassay.pos_description;\r\n                test.refSet = element.testovi.grupa;\r\n                test.dRef = element.testovi.refd;\r\n                test.gRef = element.testovi.refg;\r\n                test.interp = element.testovi.interp;\r\n                test.extend = element.testovi.extend;\r\n                test.retest = element.testovi.retest;\r\n                test.interpretacija = element.testovi.labassay.interpretacija;\r\n              });\r\n\r\n              if (\r\n                test.select_options != undefined &&\r\n                !test.select_options.includes(test.rezultat)\r\n              ) {\r\n                test.select_options.unshift(test.rezultat);\r\n              }\r\n              this.rezultati.push(test);\r\n            });\r\n\r\n            if (this.MicrobiologySample && this.AllowGetSample) {\r\n              // On open Modal\r\n              // console.log(\"Microbiology sample check.\");\r\n              var bakterioloski = false;\r\n              var negativan = false;\r\n              var pozitivan = false;\r\n              var bakterijed = [];\r\n              var bakterijei = [];\r\n              var neg_rezultati = [];\r\n              var poz_rezultati = [];\r\n\r\n              this.CurrentTest = this.rezultati[0].analit;\r\n\r\n              neg_rezultati = [...this.rezultati[0].neg_description];\r\n              poz_rezultati = [...this.rezultati[0].pos_description];\r\n\r\n              if (this.rezultati[0].bakterije.length) {\r\n                bakterioloski = true;\r\n\r\n                var counter = 0;\r\n                var ima = false;\r\n\r\n                this.Bacteries.forEach((element) => {\r\n                  element.chosen = false;\r\n                  counter = 0;\r\n                  ima = false;\r\n                  this.rezultati[0].bakterije.forEach((bakt) => {\r\n                    counter++;\r\n                    if (element._id == bakt) {\r\n                      ima = true;\r\n                    }\r\n\r\n                    if (\r\n                      counter === this.rezultati[0].bakterije.length &&\r\n                      !ima\r\n                    ) {\r\n                      bakterijed.push(element);\r\n                    }\r\n\r\n                    if (counter === this.rezultati[0].bakterije.length && ima) {\r\n                      bakterijei.push(element);\r\n                    }\r\n                  });\r\n                });\r\n\r\n                switch (this.rezultati[0].rezultat_m.length) {\r\n                  case 0:\r\n                    this.MicrobiologyScenario = \"MAIBNoR\";\r\n                    this.SelectedBacteries = [];\r\n                    break;\r\n                  case 1:\r\n                    this.MicrobiologyScenario = \"MAIBNeR\";\r\n                    this.SelectedBacteries = [];\r\n\r\n                    negativan = true;\r\n\r\n                    if (\r\n                      !neg_rezultati.includes(this.rezultati[0].rezultat.trim())\r\n                    ) {\r\n                      neg_rezultati.unshift(this.rezultati[0].rezultat.trim());\r\n                    }\r\n\r\n                    break;\r\n\r\n                  default:\r\n                    this.MicrobiologyScenario = \"MAIBPoR\";\r\n                    this.SelectedBacteries = [];\r\n                    this.BacteryTabs = [];\r\n\r\n                    this.rezultati[0].rezultat_m.forEach((element) => {\r\n                      // console.log(element)\r\n                      if (element.bakterija) {\r\n                        this.SelectedBacteries.push(element);\r\n                        this.BacteryTabs.push(element.opis);\r\n                      }\r\n                    });\r\n\r\n                    console.log(\"Izabrane bakterije:\");\r\n                    console.log(this.SelectedBacteries);\r\n\r\n                    let maxVal = this.SelectedBacteries.reduce((max, val) =>\r\n                      max.antibiogram.antibiotici.length >\r\n                      val.antibiogram.antibiotici.length\r\n                        ? max\r\n                        : val\r\n                    );\r\n\r\n                    if (this.CurrentTab == \"\") {\r\n                      // this.CurrentTab = maxVal.opis;\r\n                    }\r\n                    this.CurrentTab = this.SelectedBacteries[0].opis;\r\n\r\n                    bakterijed.forEach((element) => {\r\n                      this.SelectedBacteries.forEach((bact) => {\r\n                        if (element._id == bact._id) {\r\n                          element.chosen = true;\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    bakterijei.forEach((element) => {\r\n                      this.SelectedBacteries.forEach((bact) => {\r\n                        if (element._id == bact._id) {\r\n                          element.chosen = true;\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    pozitivan = true;\r\n                    if (\r\n                      !poz_rezultati.includes(this.rezultati[0].rezultat.trim())\r\n                    ) {\r\n                      poz_rezultati.unshift(this.rezultati[0].rezultat.trim());\r\n                    }\r\n\r\n                    break;\r\n                }\r\n              } else {\r\n                bakterioloski = false;\r\n                this.SelectedBacteries = [];\r\n\r\n                switch (this.rezultati[0].rezultat_m.length) {\r\n                  case 0:\r\n                    this.MicrobiologyScenario = \"MANBNoR\";\r\n                    neg_rezultati = this.rezultati[0].neg_description;\r\n                    poz_rezultati = this.rezultati[0].pos_description;\r\n\r\n                    break;\r\n\r\n                  case 1:\r\n                    if (this.rezultati[0].rezultat_m[0].negativan === true) {\r\n                      this.MicrobiologyScenario = \"MANBNeR\";\r\n\r\n                      negativan = true;\r\n\r\n                      if (\r\n                        !neg_rezultati.includes(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        )\r\n                      ) {\r\n                        neg_rezultati.unshift(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        );\r\n                      }\r\n                    } else {\r\n                      this.MicrobiologyScenario = \"MANBPoR\";\r\n\r\n                      pozitivan = true;\r\n\r\n                      if (\r\n                        !poz_rezultati.includes(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        )\r\n                      ) {\r\n                        poz_rezultati.unshift(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        );\r\n                      }\r\n                    }\r\n\r\n                    break;\r\n\r\n                  default:\r\n                    this.MicrobiologyScenario = \"Unknown\";\r\n\r\n                    break;\r\n                }\r\n              }\r\n\r\n              this.MicrobiologyResult = {\r\n                negative: negativan,\r\n                positive: pozitivan,\r\n                BUG: bakterioloski,\r\n                F_RESULT: this.rezultati[0].rezultat,\r\n                M_RESULT: [...this.rezultati[0].rezultat_m],\r\n                DefaultBacteries: [...bakterijei],\r\n                RemainingBacteries: [...bakterijed],\r\n                NegativeDescriptions: [...neg_rezultati],\r\n                PositiveDescriptions: [...poz_rezultati],\r\n              };\r\n            } else {\r\n              this.MicrobiologyScenario = \"Unknown\";\r\n\r\n              this.MicrobiologyResult = {\r\n                negative: null,\r\n                positive: null,\r\n                BUG: null,\r\n                F_RESULT: \"\",\r\n                M_RESULT: [],\r\n                DefaultBacteries: [],\r\n                RemainingBacteries: [],\r\n                NegativeDescriptions: [],\r\n                PositiveDescriptions: [],\r\n              };\r\n            }\r\n\r\n            this.rezultati.forEach((element) => {\r\n              if (element.calculated) {\r\n                this.calculated = true;\r\n              }\r\n            });\r\n          }\r\n        })\r\n        .then(() => {\r\n          this.ShowAntibiotics = false;\r\n          this.ShowBacteries = false;\r\n          this.show_table = true;\r\n          this.main = true;\r\n          this.$refs.staticModalMicroBacterySelect.open();\r\n        });\r\n    },\r\n\r\n    OpenMicro($event, test) {\r\n      console.log(\"Result Modal opening...\");\r\n      this.CurrentTab = \"\";\r\n      this.testovi = [];\r\n      this.rezultati = [];\r\n      this.analitiprikaz = [];\r\n      this.calculated = false;\r\n      this.show_table = false;\r\n      this.main = false;\r\n\r\n      var topcije = null;\r\n      topcije = izbornik.rez;\r\n\r\n      http\r\n        .get(\r\n          \"rezultati/showsingle/\" +\r\n            this.$store.state.sid +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site,\r\n          {}\r\n        )\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          var test = {};\r\n\r\n          if (res.data.data.length) {\r\n            res.data.data.sort(function (a, b) {\r\n              return a.testovi.labassay.grupa + a.testovi.labassay.grouporder ==\r\n                b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                ? 0\r\n                : +(\r\n                    a.testovi.labassay.grupa + a.testovi.labassay.grouporder >\r\n                    b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                  ) || -1;\r\n            });\r\n\r\n            this.testovi = res.data.data;\r\n            this.analitiprikaz = res.data.multidata;\r\n\r\n            res.data.data.forEach((element) => {\r\n              test = {};\r\n              test.realizovan = false;\r\n\r\n              test.ime = element.testovi.labassay.naziv;\r\n              test.test = element.testovi.labassay.sifra;\r\n              test.analit = element.testovi.labassay.analit;\r\n              test.IDE = element.testovi._id;\r\n              test.labassay_id = element.testovi.labassay._id;\r\n\r\n              test.multi_count = 0;\r\n              test.multi_rezultati = [];\r\n\r\n              res.data.multidata.forEach((multi) => {\r\n                if (multi.labassay._id === element.testovi.labassay._id) {\r\n                  test.multi_rezultati = multi.rezultat;\r\n                  test.multi_count = multi.rezultat[0].rezultat.length;\r\n                }\r\n              });\r\n\r\n              test.kategorija = element.testovi.labassay.kategorija;\r\n              test.analyser = element.testovi.labassay.analyser;\r\n              test.multiparam = element.testovi.labassay.multiparam;\r\n              test.vise = element.testovi.rezultat.length;\r\n              test.calculated = element.testovi.labassay.calculated;\r\n              test.manual = element.testovi.labassay.manual;\r\n\r\n              test.select_options = eval(\r\n                \"topcije.\" +\r\n                  element.testovi.interp\r\n                    .replace(\"%\", \"_\")\r\n                    .replace(\"/\", \"_\")\r\n                    .replace(\" \", \"_\")\r\n                    .replace(/-/g, \"_\")\r\n                    .replace(\"#\", \"_\")\r\n                    .replace(/^\\d+/, \"\")\r\n              );\r\n\r\n              element.testovi.rezultat.forEach((rezultat) => {\r\n                test.sekcija = rezultat.anaassay.sekcija;\r\n                test.rezultat = rezultat.rezultat_f;\r\n                test.result = rezultat;\r\n                test.anaassay = rezultat.anaassay;\r\n\r\n                if (rezultat.rezultat_f != \"\") {\r\n                  test.realizovan = true;\r\n                }\r\n\r\n                test.unit = rezultat.jedinice_f;\r\n\r\n                if (res.data.verificiran || res.data.status === \"ODOBREN\") {\r\n                  test.odobren = \"ODOBREN\";\r\n                  test.edit = false;\r\n                } else {\r\n                  test.odobren != \"ODOBREN\";\r\n                  test.edit = true;\r\n                }\r\n\r\n                test.jedinica = rezultat.jedinice_f;\r\n                test.id = rezultat._id;\r\n                test.multidata = element.testovi.labassay.multi;\r\n                test.rezultat_m = rezultat.rezultat_m;\r\n                test.bakterije = element.testovi.labassay.bakterije;\r\n                test.neg_description = element.testovi.labassay.neg_description;\r\n                test.pos_description = element.testovi.labassay.pos_description;\r\n                test.refSet = element.testovi.grupa;\r\n                test.dRef = element.testovi.refd;\r\n                test.gRef = element.testovi.refg;\r\n                test.interp = element.testovi.interp;\r\n                test.extend = element.testovi.extend;\r\n                test.retest = element.testovi.retest;\r\n                test.interpretacija = element.testovi.labassay.interpretacija;\r\n              });\r\n\r\n              if (\r\n                test.select_options != undefined &&\r\n                !test.select_options.includes(test.rezultat)\r\n              ) {\r\n                test.select_options.unshift(test.rezultat);\r\n              }\r\n              this.rezultati.push(test);\r\n            });\r\n\r\n            if (this.MicrobiologySample && this.AllowGetSample) {\r\n              // On open Modal\r\n              // console.log(\"Microbiology sample check.\");\r\n              var bakterioloski = false;\r\n              var negativan = false;\r\n              var pozitivan = false;\r\n              var bakterijed = [];\r\n              var bakterijei = [];\r\n              var neg_rezultati = [];\r\n              var poz_rezultati = [];\r\n\r\n              this.CurrentTest = this.rezultati[0].analit;\r\n\r\n              neg_rezultati = [...this.rezultati[0].neg_description];\r\n              poz_rezultati = [...this.rezultati[0].pos_description];\r\n\r\n              if (this.rezultati[0].bakterije.length) {\r\n                bakterioloski = true;\r\n\r\n                var counter = 0;\r\n                var ima = false;\r\n\r\n                this.Bacteries.forEach((element) => {\r\n                  element.chosen = false;\r\n                  counter = 0;\r\n                  ima = false;\r\n                  this.rezultati[0].bakterije.forEach((bakt) => {\r\n                    counter++;\r\n                    if (element._id == bakt) {\r\n                      ima = true;\r\n                    }\r\n\r\n                    if (\r\n                      counter === this.rezultati[0].bakterije.length &&\r\n                      !ima\r\n                    ) {\r\n                      bakterijed.push(element);\r\n                    }\r\n\r\n                    if (counter === this.rezultati[0].bakterije.length && ima) {\r\n                      bakterijei.push(element);\r\n                    }\r\n                  });\r\n                });\r\n\r\n                switch (this.rezultati[0].rezultat_m.length) {\r\n                  case 0:\r\n                    this.MicrobiologyScenario = \"MAIBNoR\";\r\n                    this.SelectedBacteries = [];\r\n                    break;\r\n                  case 1:\r\n                    this.MicrobiologyScenario = \"MAIBNeR\";\r\n                    this.SelectedBacteries = [];\r\n\r\n                    negativan = true;\r\n\r\n                    if (\r\n                      !neg_rezultati.includes(this.rezultati[0].rezultat.trim())\r\n                    ) {\r\n                      neg_rezultati.unshift(this.rezultati[0].rezultat.trim());\r\n                    }\r\n\r\n                    break;\r\n\r\n                  default:\r\n                    this.MicrobiologyScenario = \"MAIBPoR\";\r\n                    this.SelectedBacteries = [];\r\n                    this.BacteryTabs = [];\r\n\r\n                    this.rezultati[0].rezultat_m.forEach((element) => {\r\n                      // console.log(element)\r\n                      if (element.bakterija) {\r\n                        this.SelectedBacteries.push(element);\r\n                        this.BacteryTabs.push(element.opis);\r\n                      }\r\n                    });\r\n\r\n                    console.log(\"Izabrane bakterije:\");\r\n                    console.log(this.SelectedBacteries);\r\n\r\n                    let maxVal = this.SelectedBacteries.reduce((max, val) =>\r\n                      max.antibiogram.antibiotici.length >\r\n                      val.antibiogram.antibiotici.length\r\n                        ? max\r\n                        : val\r\n                    );\r\n\r\n                    if (this.CurrentTab == \"\") {\r\n                      // this.CurrentTab = maxVal.opis;\r\n                    }\r\n                    this.CurrentTab = this.SelectedBacteries[0].opis;\r\n\r\n                    bakterijed.forEach((element) => {\r\n                      this.SelectedBacteries.forEach((bact) => {\r\n                        if (element._id == bact._id) {\r\n                          element.chosen = true;\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    bakterijei.forEach((element) => {\r\n                      this.SelectedBacteries.forEach((bact) => {\r\n                        if (element._id == bact._id) {\r\n                          element.chosen = true;\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    pozitivan = true;\r\n                    if (\r\n                      !poz_rezultati.includes(this.rezultati[0].rezultat.trim())\r\n                    ) {\r\n                      poz_rezultati.unshift(this.rezultati[0].rezultat.trim());\r\n                    }\r\n\r\n                    break;\r\n                }\r\n              } else {\r\n                bakterioloski = false;\r\n                this.SelectedBacteries = [];\r\n\r\n                switch (this.rezultati[0].rezultat_m.length) {\r\n                  case 0:\r\n                    this.MicrobiologyScenario = \"MANBNoR\";\r\n                    neg_rezultati = this.rezultati[0].neg_description;\r\n                    poz_rezultati = this.rezultati[0].pos_description;\r\n\r\n                    break;\r\n\r\n                  case 1:\r\n                    if (this.rezultati[0].rezultat_m[0].negativan === true) {\r\n                      this.MicrobiologyScenario = \"MANBNeR\";\r\n\r\n                      negativan = true;\r\n\r\n                      if (\r\n                        !neg_rezultati.includes(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        )\r\n                      ) {\r\n                        neg_rezultati.unshift(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        );\r\n                      }\r\n                    } else {\r\n                      this.MicrobiologyScenario = \"MANBPoR\";\r\n\r\n                      pozitivan = true;\r\n\r\n                      if (\r\n                        !poz_rezultati.includes(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        )\r\n                      ) {\r\n                        poz_rezultati.unshift(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        );\r\n                      }\r\n                    }\r\n\r\n                    break;\r\n\r\n                  default:\r\n                    this.MicrobiologyScenario = \"Unknown\";\r\n\r\n                    break;\r\n                }\r\n              }\r\n\r\n              this.MicrobiologyResult = {\r\n                negative: negativan,\r\n                positive: pozitivan,\r\n                BUG: bakterioloski,\r\n                F_RESULT: this.rezultati[0].rezultat,\r\n                M_RESULT: [...this.rezultati[0].rezultat_m],\r\n                DefaultBacteries: [...bakterijei],\r\n                RemainingBacteries: [...bakterijed],\r\n                NegativeDescriptions: [...neg_rezultati],\r\n                PositiveDescriptions: [...poz_rezultati],\r\n              };\r\n            } else {\r\n              this.MicrobiologyScenario = \"Unknown\";\r\n\r\n              this.MicrobiologyResult = {\r\n                negative: null,\r\n                positive: null,\r\n                BUG: null,\r\n                F_RESULT: \"\",\r\n                M_RESULT: [],\r\n                DefaultBacteries: [],\r\n                RemainingBacteries: [],\r\n                NegativeDescriptions: [],\r\n                PositiveDescriptions: [],\r\n              };\r\n            }\r\n\r\n            this.rezultati.forEach((element) => {\r\n              if (element.calculated) {\r\n                this.calculated = true;\r\n              }\r\n            });\r\n          }\r\n        })\r\n        .then(() => {\r\n          this.ShowAntibiotics = false;\r\n          this.ShowBacteries = false;\r\n          this.show_table = true;\r\n          this.main = true;\r\n          this.$refs.staticModalMicroBactery.open();\r\n        });\r\n    },\r\n\r\n    SelectBactery(data) {\r\n      if (!data.chosen) {\r\n        this.SelectedBacteries.push(data);\r\n      } else {\r\n        for (var i = this.SelectedBacteries.length - 1; i >= 0; i--) {\r\n          if (this.SelectedBacteries[i]._id === data._id) {\r\n            this.SelectedBacteries.splice(i, 1);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (this.SelectedBacteries.length > 0) {\r\n        this.ModalPositiveCondition = true;\r\n      } else {\r\n        this.ModalPositiveCondition = false;\r\n      }\r\n    },\r\n\r\n    MicroResultSelect(event) {\r\n      this.uzorci.forEach((element) => {\r\n        if (element.sid === this.$store.state.sid) {\r\n          this.sample.status = \"ZAPRIMLJEN\";\r\n        }\r\n      });\r\n      this.$refs.staticModalSelectResult.open();\r\n    },\r\n\r\n    ResetSample(event) {\r\n      this.$refs.staticModalResetSample.open();\r\n    },\r\n\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* \r\n\r\n\r\n\r\n\r\n\r\nEnd of Microbiology Methods |\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n\r\n    onCancel() {},\r\n\r\n    Prethodni() {\r\n      this.pagination = false;\r\n\r\n      var check = 0;\r\n      var found = false;\r\n      this.Results.forEach((element) => {\r\n        check++;\r\n        if (element.pid == this.Previous.pid) {\r\n          found = true;\r\n          router.push(\r\n            \"/obrada/rezultati/\" +\r\n              element.patient +\r\n              \"/\" +\r\n              element.pid +\r\n              \"?date=\" +\r\n              element.date\r\n          );\r\n        }\r\n      });\r\n\r\n      if (check === this.Results.length) {\r\n        if (found) {\r\n          http\r\n            .get(\r\n              \"/rezultati/pagination\" +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&pid=\" +\r\n                this.Previous.pid.toString() +\r\n                \"&date=\" +\r\n                this.$route.query.date,\r\n              {}\r\n            )\r\n            .then((res) => {\r\n              res.data.rezultati = res.data.rezultati.sort(function (a, b) {\r\n                return a.pid.localeCompare(b.pid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\",\r\n                });\r\n              });\r\n\r\n              this.data_length =\r\n                res.data.rezultati[res.data.rezultati.length - 1].pid;\r\n              this.data_min = res.data.rezultati[0].pid;\r\n              if (Object.getOwnPropertyNames(res.data).length === 0) {\r\n                // console.warn(\"No data.\");\r\n\r\n                this.pagination = true;\r\n                this.backward_disabled = true;\r\n              } else {\r\n                this.data_pid = res.data.data.pid;\r\n                this.Results = res.data.rezultati;\r\n\r\n                router.push(\r\n                  \"/obrada/rezultati/\" +\r\n                    res.data.data.patient +\r\n                    \"/\" +\r\n                    res.data.data.pid +\r\n                    \"?date=\" +\r\n                    res.data.data.date\r\n                );\r\n              }\r\n            });\r\n        } else {\r\n          this.Previous.pid = this.Previous.pid - 1;\r\n          if (this.Previous.pid > 0) {\r\n            this.Prethodni();\r\n          } else {\r\n          }\r\n        }\r\n      } else {\r\n      }\r\n    },\r\n\r\n    Sljedeci() {\r\n      this.pagination = false;\r\n\r\n      var check = 0;\r\n      var found = false;\r\n      this.Results.forEach((element) => {\r\n        check++;\r\n        if (element.pid == this.Next.pid) {\r\n          found = true;\r\n          router.push(\r\n            \"/obrada/rezultati/\" +\r\n              element.patient +\r\n              \"/\" +\r\n              element.pid +\r\n              \"?date=\" +\r\n              element.date\r\n          );\r\n        }\r\n      });\r\n\r\n      if (check === this.Results.length) {\r\n        if (found) {\r\n          http\r\n            .get(\r\n              \"/rezultati/pagination\" +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&pid=\" +\r\n                this.Next.pid.toString() +\r\n                \"&date=\" +\r\n                this.$route.query.date,\r\n              {}\r\n            )\r\n            .then((res) => {\r\n              res.data.rezultati = res.data.rezultati.sort(function (a, b) {\r\n                return a.pid.localeCompare(b.pid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\",\r\n                });\r\n              });\r\n\r\n              this.data_length =\r\n                res.data.rezultati[res.data.rezultati.length - 1].pid;\r\n              this.data_min = res.data.rezultati[0].pid;\r\n              if (Object.getOwnPropertyNames(res.data).length === 0) {\r\n                // console.warn(\"No data.\");\r\n\r\n                this.pagination = true;\r\n                this.forward_disabled = true;\r\n              } else {\r\n                this.data_pid = res.data.data.pid;\r\n                this.Results = res.data.rezultati;\r\n\r\n                router.push(\r\n                  \"/obrada/rezultati/\" +\r\n                    res.data.data.patient +\r\n                    \"/\" +\r\n                    res.data.data.pid +\r\n                    \"?date=\" +\r\n                    res.data.data.date\r\n                );\r\n              }\r\n            });\r\n        } else {\r\n          this.Next.pid = this.Next.pid + 1;\r\n          this.Sljedeci();\r\n        }\r\n      } else {\r\n      }\r\n    },\r\n\r\n    Created() {\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Provjera\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n\r\n      this.MicrobiologyOrder = false;\r\n\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* \r\n\r\n\r\n\r\n\r\n\r\nEnd of Microbiology Provjera |\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n\r\n      http\r\n        .get(\r\n          \"rezultati/odobravanje/samples/\" +\r\n            this.$route.params.patient +\r\n            \"/\" +\r\n            this.$route.params.id +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site +\r\n            \"&date=\" +\r\n            this.$route.query.date,\r\n          {}\r\n        )\r\n        .then((res) => {\r\n          this.header =\r\n            // \"Obrada rezultata za pacijenta: \" +\r\n            res.data.results[0].patient.ime +\r\n            \" \" +\r\n            res.data.results[0].patient.prezime;\r\n          this.lokacija = res.data.lokacija;\r\n          this.klijent = res.data.results[0].customer;\r\n          console.log(this.klijent);\r\n          this.final_pdf = res.data.final_pdf;\r\n\r\n          this.analyser_patient = res.data.results[0].patient;\r\n\r\n          this.timestamp = res.data.results[0].timestamp;\r\n\r\n          this.pacijent = res.data.results[0].patient._id;\r\n          this.ime = res.data.results[0].patient.ime;\r\n          this.prezime = res.data.results[0].patient.prezime;\r\n          this.data_spol = res.data.results[0].patient.spol;\r\n          this.jmbg = res.data.results[0].patient.jmbg;\r\n          this.pid = res.data.results[0].sample.pid;\r\n\r\n          this.email = res.data.results[0].patient.email.trim();\r\n          this.email_tmp = res.data.results[0].patient.email.trim();\r\n\r\n          // Starost\r\n\r\n          var str = \"\";\r\n          var tmp = \"\";\r\n          var jmbgDan = this.jmbg.slice(0, 2);\r\n          var jmbgMjesec = this.jmbg.slice(2, 4);\r\n          var jmbgGodina = this.jmbg.slice(4, 7);\r\n\r\n          if (jmbgGodina[0] === \"9\") {\r\n            str = \"1\";\r\n            tmp = jmbgGodina;\r\n            jmbgGodina = str.concat(tmp);\r\n          } else if (jmbgGodina[0] === \"0\") {\r\n            str = \"2\";\r\n            tmp = jmbgGodina;\r\n            jmbgGodina = str.concat(tmp);\r\n          } else {\r\n            console.warn(\"Invalid year...\");\r\n          }\r\n\r\n          var date = jmbgGodina + \"-\" + jmbgMjesec + \"-\" + jmbgDan;\r\n          var jmbgObj = this.parse_date(date);\r\n          var zGodina = jmbgObj.years + 1;\r\n          this.starost = zGodina;\r\n\r\n          //\r\n\r\n          if (!this.Email(this.email)) {\r\n            this.email = \"\";\r\n            this.email_tmp = \"\";\r\n          }\r\n\r\n          this.count = res.data.results.length;\r\n          this.approved = 0;\r\n          this.verified = 0;\r\n\r\n          this.odobren = true;\r\n          this.verificiran = true;\r\n          this.partials = [];\r\n          this.partials_condition = false;\r\n\r\n          res.data.results.forEach((element) => {\r\n            if (element.verificiran) {\r\n              this.verified++;\r\n              this.partials.push(element._id);\r\n            }\r\n            if (\r\n              element.status === \"ODOBREN\" ||\r\n              element.status === \"VERIFICIRAN\"\r\n            ) {\r\n              this.approved++;\r\n            }\r\n            if (\r\n              element.status != \"ODOBREN\" &&\r\n              element.status != \"VERIFICIRAN\"\r\n            ) {\r\n              this.odobren = false;\r\n            }\r\n            if (!element.verificiran) {\r\n              this.verificiran = false;\r\n            }\r\n          });\r\n\r\n          if (this.count > this.verified && this.verified > 1) {\r\n            this.partials_condition = true;\r\n          }\r\n\r\n          this.uzorci = [];\r\n\r\n          this.nalaz.patient = res.data.results[0].patient._id;\r\n          this.nalaz.samples = [];\r\n\r\n          res.data.results.forEach((element) => {\r\n            var check = 0;\r\n            var zaprimljen = 0;\r\n            var realizovan = 0;\r\n\r\n            if (element.verificiran) {\r\n              var status_uzorka = \"VERIFICIRAN\";\r\n            } else {\r\n              var status_uzorka = element.status;\r\n            }\r\n\r\n            this.nalaz.samples.push(element._id);\r\n\r\n            element.rezultati.forEach((test) => {\r\n              check++;\r\n\r\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\r\n                zaprimljen++;\r\n              }\r\n\r\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\r\n                realizovan++;\r\n              }\r\n\r\n              if (check === element.rezultati.length) {\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n                /* \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Provjera\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n\r\n                if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                  this.MicrobiologyOrder = true;\r\n                }\r\n\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n                /* \r\n\r\n\r\n\r\n\r\n\r\nEnd of Microbiology Provjera |\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n\r\n                // console.log(\"Provjera: Created\")\r\n\r\n                if (status_uzorka === \"VERIFICIRAN\") {\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: \"VERIFICIRAN\",\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false,\r\n                  });\r\n                } else if (status_uzorka === \"ODOBREN\") {\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: \"ODOBREN\",\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false,\r\n                  });\r\n                } else if (zaprimljen < 1) {\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: \"REALIZOVAN\",\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false,\r\n                  });\r\n                } else if (realizovan < 1) {\r\n                  var stat = \"ZAPRIMLJEN\";\r\n                  if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                    if (element.rezultati[0].rezultat[0].rezultat_m.length) {\r\n                      stat = \"REALIZOVAN\";\r\n                    }\r\n                  }\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: stat,\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false,\r\n                  });\r\n                } else {\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: \"U OBRADI\",\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false,\r\n                  });\r\n                }\r\n              }\r\n            });\r\n          });\r\n\r\n          this.uzorci = this.uzorci.sort(function (a, b) {\r\n            return a.sid.localeCompare(b.sid, undefined, {\r\n              numeric: true,\r\n              sensitivity: \"base\",\r\n            });\r\n          });\r\n          this.main = true;\r\n\r\n          this.pagination = true;\r\n\r\n          http\r\n            .get(\r\n              \"/rezultati/pagination\" +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&pid=\" +\r\n                this.$route.params.id +\r\n                \"&date=\" +\r\n                this.$route.query.date,\r\n              {}\r\n            )\r\n            .then((res) => {\r\n              res.data.rezultati = res.data.rezultati.sort(function (a, b) {\r\n                return a.pid.localeCompare(b.pid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\",\r\n                });\r\n              });\r\n\r\n              this.data_length =\r\n                res.data.rezultati[res.data.rezultati.length - 1].pid;\r\n              this.data_min = res.data.rezultati[0].pid;\r\n              if (Object.getOwnPropertyNames(res.data).length === 0) {\r\n                // console.warn(\"No data.\");\r\n\r\n                this.pagination = true;\r\n              } else {\r\n                this.data_pid = res.data.data.pid;\r\n                this.Results = res.data.rezultati;\r\n              }\r\n\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n              /* \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Get Bakterije, Antibiograme i Antibiotike\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n\r\n              if (this.MicrobiologyOrder) {\r\n                http\r\n                  .get(\r\n                    \"mikrobiologija/bakterije/get?token=\" +\r\n                      this.$store.state.token +\r\n                      \"&site=\" +\r\n                      this.$store.state.site,\r\n                    {}\r\n                  )\r\n                  .then((res) => {\r\n                    this.Bacteries = res.data.bakterije;\r\n                    http\r\n                      .get(\r\n                        \"mikrobiologija/antibiogrami/get?token=\" +\r\n                          this.$store.state.token +\r\n                          \"&site=\" +\r\n                          this.$store.state.site,\r\n                        {}\r\n                      )\r\n                      .then((res) => {\r\n                        this.Antibiograms = res.data.antibiogrami;\r\n\r\n                        this.Antibiograms.sort(function (a, b) {\r\n                          return a.naziv.localeCompare(b.naziv, undefined, {\r\n                            numeric: true,\r\n                            sensitivity: \"base\",\r\n                          });\r\n                        });\r\n\r\n                        http\r\n                          .get(\r\n                            \"mikrobiologija/antibiotici/get?token=\" +\r\n                              this.$store.state.token +\r\n                              \"&site=\" +\r\n                              this.$store.state.site,\r\n                            {}\r\n                          )\r\n                          .then((res) => {\r\n                            res.data.antibiotici.sort(function (a, b) {\r\n                              return a.rbr_a.localeCompare(b.rbr_a, undefined, {\r\n                                numeric: true,\r\n                                sensitivity: \"base\",\r\n                              });\r\n                            });\r\n\r\n                            this.Antibiotics = [];\r\n\r\n                            res.data.antibiotici.forEach((element) => {\r\n                              element.chosen = false;\r\n                              element.disabled = false;\r\n                              this.Antibiotics.push(element);\r\n                            });\r\n                          });\r\n                      });\r\n                  });\r\n              }\r\n\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n              /* \r\n\r\n\r\n\r\n\r\n\r\nEnd of Microbiology Get Bakterije, Antibiograme i Antibiotike |\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n            });\r\n        });\r\n    },\r\n\r\n    Povratak() {\r\n      router.push(\"/obrada/pregled/\" + \"?sekcija=\" + \"SVE\");\r\n    },\r\n\r\n    Nazad() {\r\n      this.email_button = false;\r\n      this.main = true;\r\n      this.pdf = false;\r\n    },\r\n\r\n    Email: function (email) {\r\n      if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n\r\n    parse_date: function (date) {\r\n      // Takes one string parameter -- date in YYYY-MM-DD\r\n      date = date.split(\"-\");\r\n      var today = new Date();\r\n      var year = today.getFullYear();\r\n      var month = today.getMonth() + 1;\r\n      var day = today.getDate();\r\n      var yy = parseInt(date[0]);\r\n      var mm = parseInt(date[1]);\r\n      var dd = parseInt(date[2]);\r\n      var years, months, days;\r\n      // months\r\n      months = month - mm;\r\n      if (day < dd) {\r\n        months = months - 1;\r\n      }\r\n      // years\r\n      years = year - yy;\r\n      if (month * 100 + day < mm * 100 + dd) {\r\n        years = years - 1;\r\n        months = months + 12;\r\n      }\r\n      // days\r\n      days = Math.floor(\r\n        (today.getTime() -\r\n          new Date(yy + years, mm + months - 1, dd).getTime()) /\r\n          (24 * 60 * 60 * 1000)\r\n      );\r\n      //\r\n      return { years: years, months: months, days: days };\r\n    },\r\n\r\n    GetSingleSample(data) {\r\n      // \"_id\" : ObjectId(\"5f1877edb34ecd0c70fb0adc\"), AnaAssays (Starost)\r\n\r\n      this.testovi = [];\r\n      this.rezultati = [];\r\n      this.analitiprikaz = [];\r\n      this.calculated = false;\r\n\r\n      var topcije = null;\r\n      topcije = izbornik.rez;\r\n\r\n      this.show_table = false;\r\n\r\n      http\r\n        .get(\r\n          \"rezultati/showsingle/\" +\r\n            data.sid +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site,\r\n          {}\r\n        )\r\n        .then((res) => {\r\n          var test = {};\r\n\r\n          if (res.data.data.length) {\r\n            res.data.data.sort(function (a, b) {\r\n              return a.testovi.labassay.grupa + a.testovi.labassay.grouporder ==\r\n                b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                ? 0\r\n                : +(\r\n                    a.testovi.labassay.grupa + a.testovi.labassay.grouporder >\r\n                    b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                  ) || -1;\r\n            });\r\n\r\n            this.testovi = res.data.data;\r\n            this.analitiprikaz = res.data.multidata;\r\n\r\n            // console.log(this.analitiprikaz);\r\n\r\n            res.data.data.forEach((element) => {\r\n              test = {};\r\n              test.realizovan = false;\r\n\r\n              test.ime = element.testovi.labassay.naziv;\r\n              test.test = element.testovi.labassay.sifra;\r\n              test.analit = element.testovi.labassay.analit;\r\n              test.IDE = element.testovi._id;\r\n              test.labassay_id = element.testovi.labassay._id;\r\n\r\n              test.multi_count = 0;\r\n              test.multi_rezultati = [];\r\n\r\n              res.data.multidata.forEach((multi) => {\r\n                if (multi.labassay._id === element.testovi.labassay._id) {\r\n                  test.multi_rezultati = multi.rezultat;\r\n                  test.multi_count = multi.rezultat[0].rezultat.length;\r\n                }\r\n              });\r\n\r\n              test.kategorija = element.testovi.labassay.kategorija;\r\n              test.analyser = element.testovi.labassay.analyser;\r\n              test.multiparam = element.testovi.labassay.multiparam;\r\n              test.vise = element.testovi.rezultat.length;\r\n              test.calculated = element.testovi.labassay.calculated;\r\n              test.manual = element.testovi.labassay.manual;\r\n\r\n              test.select_options = eval(\r\n                \"topcije.\" +\r\n                  element.testovi.interp\r\n                    .replace(\"%\", \"_\")\r\n                    .replace(\"/\", \"_\")\r\n                    .replace(\" \", \"_\")\r\n                    .replace(/-/g, \"_\")\r\n                    .replace(\"#\", \"_\")\r\n                    // .replace(/[0-9]/g, \"_\")\r\n                    .replace(/^\\d+/, \"\")\r\n              );\r\n\r\n              element.testovi.rezultat.forEach((rezultat) => {\r\n                test.sekcija = rezultat.anaassay.sekcija;\r\n\r\n                if (\r\n                  rezultat.anaassay._id === \"5f1877edb34ecd0c70fb0adc\" &&\r\n                  rezultat.rezultat_f.trim() == \"\"\r\n                ) {\r\n                  console.log(\"Starost pacijenta: \" + this.starost);\r\n                  test.rezultat = JSON.stringify(this.starost);\r\n                } else {\r\n                  test.rezultat = rezultat.rezultat_f;\r\n                }\r\n\r\n                test.result = rezultat;\r\n                test.anaassay = rezultat.anaassay;\r\n\r\n                if (rezultat.rezultat_f != \"\") {\r\n                  test.realizovan = true;\r\n                }\r\n\r\n                test.unit = rezultat.jedinice_f;\r\n\r\n                if (res.data.verificiran || res.data.status === \"ODOBREN\") {\r\n                  test.odobren = \"ODOBREN\";\r\n                  test.edit = false;\r\n                } else {\r\n                  test.odobren != \"ODOBREN\";\r\n                  test.edit = true;\r\n                }\r\n\r\n                test.jedinica = rezultat.jedinice_f;\r\n                test.id = rezultat._id;\r\n                test.multidata = element.testovi.labassay.multi;\r\n                test.rezultat_m = rezultat.rezultat_m;\r\n                test.bakterije = element.testovi.labassay.bakterije;\r\n                test.neg_description = element.testovi.labassay.neg_description;\r\n                test.pos_description = element.testovi.labassay.pos_description;\r\n                test.refSet = element.testovi.grupa;\r\n                test.dRef = element.testovi.refd;\r\n                test.gRef = element.testovi.refg;\r\n                test.interp = element.testovi.interp;\r\n                test.extend = element.testovi.extend;\r\n                test.retest = element.testovi.retest;\r\n                test.interpretacija = element.testovi.labassay.interpretacija;\r\n              });\r\n\r\n              if (\r\n                test.select_options != undefined &&\r\n                !test.select_options.includes(test.rezultat)\r\n              ) {\r\n                test.select_options.unshift(test.rezultat);\r\n              }\r\n              this.rezultati.push(test);\r\n            });\r\n\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n            /* \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Sample Check\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n\r\n            // if (this.MicrobiologySample && this.AllowGetSample) {\r\n            if (this.MicrobiologySample) {\r\n              // On first Click\r\n              // console.warn(\"Microbiology sample check.\");\r\n\r\n              var bakterioloski = false;\r\n              var negativan = false;\r\n              var pozitivan = false;\r\n              var bakterijed = [];\r\n              var bakterijei = [];\r\n              var neg_rezultati = [];\r\n              var poz_rezultati = [];\r\n\r\n              this.CurrentTest = this.rezultati[0].analit;\r\n\r\n              neg_rezultati = [...this.rezultati[0].neg_description];\r\n              poz_rezultati = [...this.rezultati[0].pos_description];\r\n\r\n              if (this.rezultati[0].bakterije.length) {\r\n                console.log(\"Ima bakterije.\");\r\n\r\n                bakterioloski = true;\r\n\r\n                var counter = 0;\r\n                var ima = false;\r\n\r\n                this.Bacteries.forEach((element) => {\r\n                  element.chosen = false;\r\n                  counter = 0;\r\n                  ima = false;\r\n                  this.rezultati[0].bakterije.forEach((bakt) => {\r\n                    counter++;\r\n                    if (element._id == bakt) {\r\n                      ima = true;\r\n                    }\r\n\r\n                    if (\r\n                      counter === this.rezultati[0].bakterije.length &&\r\n                      !ima\r\n                    ) {\r\n                      bakterijed.push(element);\r\n                    }\r\n\r\n                    if (counter === this.rezultati[0].bakterije.length && ima) {\r\n                      bakterijei.push(element);\r\n                    }\r\n                  });\r\n                });\r\n\r\n                switch (this.rezultati[0].rezultat_m.length) {\r\n                  case 0:\r\n                    // Ima definisan skup bakterija - Nema Rezultat\r\n                    this.MicrobiologyScenario = \"MAIBNoR\";\r\n                    this.SelectedBacteries = [];\r\n                    break;\r\n                  case 1:\r\n                    // Ima definisan skup bakterija - Negativan Rezultat\r\n                    this.MicrobiologyScenario = \"MAIBNeR\";\r\n                    this.SelectedBacteries = [];\r\n\r\n                    negativan = true;\r\n\r\n                    if (\r\n                      !neg_rezultati.includes(this.rezultati[0].rezultat.trim())\r\n                    ) {\r\n                      neg_rezultati.unshift(this.rezultati[0].rezultat.trim());\r\n                    }\r\n\r\n                    break;\r\n\r\n                  default:\r\n                    // Ima definisan skup bakterija - Pozitivan Rezultat\r\n                    this.MicrobiologyScenario = \"MAIBPoR\";\r\n                    this.SelectedBacteries = [];\r\n                    this.BacteryTabs = [];\r\n\r\n                    this.rezultati[0].rezultat_m.forEach((element) => {\r\n                      // console.log(element)\r\n                      if (element.bakterija) {\r\n                        this.SelectedBacteries.push(element);\r\n                        this.BacteryTabs.push(element.opis);\r\n                      }\r\n                    });\r\n\r\n                    console.log(\"Izabrane bakterije:\");\r\n                    console.log(this.SelectedBacteries);\r\n\r\n                    let maxVal = this.SelectedBacteries.reduce((max, val) =>\r\n                      max.antibiogram.antibiotici.length >\r\n                      val.antibiogram.antibiotici.length\r\n                        ? max\r\n                        : val\r\n                    );\r\n\r\n                    if (this.CurrentTab == \"\") {\r\n                      // this.CurrentTab = maxVal.opis;\r\n                    }\r\n                    this.CurrentTab = this.SelectedBacteries[0].opis;\r\n\r\n                    bakterijed.forEach((element) => {\r\n                      this.SelectedBacteries.forEach((bact) => {\r\n                        if (element._id == bact._id) {\r\n                          element.chosen = true;\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    bakterijei.forEach((element) => {\r\n                      this.SelectedBacteries.forEach((bact) => {\r\n                        if (element._id == bact._id) {\r\n                          element.chosen = true;\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    pozitivan = true;\r\n                    if (\r\n                      !poz_rezultati.includes(this.rezultati[0].rezultat.trim())\r\n                    ) {\r\n                      poz_rezultati.unshift(this.rezultati[0].rezultat.trim());\r\n                    }\r\n\r\n                    break;\r\n                }\r\n              } else {\r\n                bakterioloski = false;\r\n\r\n                console.log(\"Nema bakterije.\");\r\n\r\n                this.SelectedBacteries = [];\r\n\r\n                switch (this.rezultati[0].rezultat_m.length) {\r\n                  case 0:\r\n                    // Nema definisan skup bakterija - Nema Rezultat\r\n                    this.MicrobiologyScenario = \"MANBNoR\";\r\n                    neg_rezultati = this.rezultati[0].neg_description;\r\n                    poz_rezultati = this.rezultati[0].pos_description;\r\n\r\n                    break;\r\n\r\n                  case 1:\r\n                    if (this.rezultati[0].rezultat_m[0].negativan === true) {\r\n                      // Nema definisan skup bakterija - Negativan Rezultat\r\n                      this.MicrobiologyScenario = \"MANBNeR\";\r\n\r\n                      negativan = true;\r\n\r\n                      if (\r\n                        !neg_rezultati.includes(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        )\r\n                      ) {\r\n                        neg_rezultati.unshift(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        );\r\n                      }\r\n                    } else {\r\n                      // Nema definisan skup bakterija - Pozitivan Rezultat\r\n                      this.MicrobiologyScenario = \"MANBPoR\";\r\n\r\n                      pozitivan = true;\r\n\r\n                      if (\r\n                        !poz_rezultati.includes(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        )\r\n                      ) {\r\n                        poz_rezultati.unshift(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        );\r\n                      }\r\n                    }\r\n\r\n                    break;\r\n\r\n                  default:\r\n                    // Error\r\n                    this.MicrobiologyScenario = \"Unknown\";\r\n\r\n                    break;\r\n                }\r\n              }\r\n\r\n              this.MicrobiologyResult = {\r\n                negative: negativan,\r\n                positive: pozitivan,\r\n                BUG: bakterioloski,\r\n                F_RESULT: this.rezultati[0].rezultat,\r\n                M_RESULT: [...this.rezultati[0].rezultat_m],\r\n                DefaultBacteries: [...bakterijei],\r\n                RemainingBacteries: [...bakterijed],\r\n                NegativeDescriptions: [...neg_rezultati],\r\n                PositiveDescriptions: [...poz_rezultati],\r\n              };\r\n              // console.log(this.MicrobiologyResult)\r\n            } else {\r\n              // console.log(\"Uzorak nije mikrobiološki || Sample closed\");\r\n\r\n              this.MicrobiologyScenario = \"Unknown\";\r\n\r\n              this.MicrobiologyResult = {\r\n                negative: null,\r\n                positive: null,\r\n                BUG: null,\r\n                F_RESULT: \"\",\r\n                M_RESULT: [],\r\n                DefaultBacteries: [],\r\n                RemainingBacteries: [],\r\n                NegativeDescriptions: [],\r\n                PositiveDescriptions: [],\r\n              };\r\n            }\r\n\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n            /* \r\n\r\n\r\n\r\n\r\n\r\nEnd of Microbiology Sample Check |\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n\r\n            this.rezultati.forEach((element) => {\r\n              if (element.calculated) {\r\n                this.calculated = true;\r\n              }\r\n            });\r\n\r\n            this.sample = data;\r\n            this.show_table = true;\r\n          }\r\n        })\r\n        .then(() => {\r\n          bus.$emit(\"SetClientHeight\", data.sid);\r\n        });\r\n    },\r\n\r\n    /* GetAnalysers() {\r\n      http\r\n        .get(\r\n          \"postavke/aparat/listall?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site,\r\n          {}\r\n        )\r\n        .then(res => {\r\n          if (res.data.success === false) {\r\n          } else {\r\n            res.data.aparati.forEach(element => {\r\n              if (element.tip === \"IMUNOHEMIJSKI\") {\r\n                element.selected = false;\r\n                this.analysers.push(element);\r\n              }\r\n            });\r\n          }\r\n        });\r\n    }, */\r\n\r\n    SelectAnalyser(test) {\r\n      http\r\n        .get(\r\n          \"rezultati/odobravanje/analysers\" +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site +\r\n            \"&test=\" +\r\n            test.labassay_id,\r\n          {}\r\n        )\r\n        .then((res) => {\r\n          this.analysers = [];\r\n\r\n          res.data.anaassays.forEach((element) => {\r\n            element.aparat.site = element.site;\r\n            this.analysers.push(element.aparat);\r\n          });\r\n\r\n          this.analysers.forEach((analyser) => {\r\n            analyser.selected = false;\r\n          });\r\n\r\n          this.analiza = test;\r\n\r\n          this.rezultati.forEach((element) => {\r\n            this.analysers.forEach((analyser) => {\r\n              if (\r\n                element.ime === this.analiza.ime &&\r\n                element.anaassay.aparat === analyser._id\r\n              ) {\r\n                analyser.selected = true;\r\n                this.analyser_selected = analyser;\r\n              }\r\n            });\r\n          });\r\n          this.$refs.staticModalAparati.open();\r\n        });\r\n    },\r\n\r\n    AnalyserSelected(analyser) {\r\n      this.analyser = analyser;\r\n\r\n      if (this.analyser_selected._id === analyser._id) {\r\n        this.$refs.staticModalAparati.close();\r\n\r\n        // console.warn(\"No change required.\");\r\n      } else {\r\n        http\r\n          .post(\"rezultati/odobravanje/references\", {\r\n            token: this.$store.state.token,\r\n            site: this.$store.state.site,\r\n            id: this.sample.sid,\r\n            pacijent: this.analyser_patient,\r\n            analiza: this.analiza,\r\n            analyser: this.analyser,\r\n          })\r\n          .then((res) => {\r\n            if (res.data.success) {\r\n              var data = {};\r\n\r\n              this.uzorci.forEach((element) => {\r\n                if (element.sid === this.$store.state.sid) {\r\n                  data = element;\r\n                }\r\n              });\r\n\r\n              this.testovi = [];\r\n              this.rezultati = [];\r\n              this.analitiprikaz = [];\r\n              this.calculated = false;\r\n\r\n              var topcije = null;\r\n              topcije = izbornik.rez;\r\n\r\n              this.show_table = false;\r\n\r\n              http\r\n                .get(\r\n                  \"rezultati/showsingle/\" +\r\n                    data.sid +\r\n                    \"?token=\" +\r\n                    this.$store.state.token +\r\n                    \"&site=\" +\r\n                    this.$store.state.site,\r\n                  {}\r\n                )\r\n                .then((res) => {\r\n                  var test = {};\r\n\r\n                  if (res.data.data.length) {\r\n                    res.data.data.sort(function (a, b) {\r\n                      return a.testovi.labassay.grupa +\r\n                        a.testovi.labassay.grouporder ==\r\n                        b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                        ? 0\r\n                        : +(\r\n                            a.testovi.labassay.grupa +\r\n                              a.testovi.labassay.grouporder >\r\n                            b.testovi.labassay.grupa +\r\n                              b.testovi.labassay.grouporder\r\n                          ) || -1;\r\n                    });\r\n\r\n                    this.testovi = res.data.data;\r\n                    this.analitiprikaz = res.data.multidata;\r\n\r\n                    res.data.data.forEach((element) => {\r\n                      test = {};\r\n                      test.realizovan = false;\r\n\r\n                      test.ime = element.testovi.labassay.naziv;\r\n                      test.test = element.testovi.labassay.sifra;\r\n                      test.analit = element.testovi.labassay.analit;\r\n                      test.IDE = element.testovi._id;\r\n                      test.labassay_id = element.testovi.labassay._id;\r\n\r\n                      test.multi_count = 0;\r\n                      test.multi_rezultati = [];\r\n\r\n                      res.data.multidata.forEach((multi) => {\r\n                        if (\r\n                          multi.labassay._id === element.testovi.labassay._id\r\n                        ) {\r\n                          test.multi_rezultati = multi.rezultat;\r\n                          test.multi_count = multi.rezultat[0].rezultat.length;\r\n                        }\r\n                      });\r\n\r\n                      test.kategorija = element.testovi.labassay.kategorija;\r\n                      test.analyser = element.testovi.labassay.analyser;\r\n                      test.multiparam = element.testovi.labassay.multiparam;\r\n                      test.vise = element.testovi.rezultat.length;\r\n                      test.calculated = element.testovi.labassay.calculated;\r\n                      test.manual = element.testovi.labassay.manual;\r\n\r\n                      test.select_options = eval(\r\n                        \"topcije.\" +\r\n                          element.testovi.interp\r\n                            .replace(\"%\", \"_\")\r\n                            .replace(\"/\", \"_\")\r\n                            .replace(\" \", \"_\")\r\n                            .replace(/-/g, \"_\")\r\n                            .replace(\"#\", \"_\")\r\n                            // .replace(/[0-9]/g, \"_\")\r\n                            .replace(/^\\d+/, \"\")\r\n                      );\r\n\r\n                      element.testovi.rezultat.forEach((rezultat) => {\r\n                        test.sekcija = rezultat.anaassay.sekcija;\r\n                        test.rezultat = rezultat.rezultat_f;\r\n                        test.result = rezultat;\r\n                        test.anaassay = rezultat.anaassay;\r\n\r\n                        if (rezultat.rezultat_f != \"\") {\r\n                          test.realizovan = true;\r\n                        }\r\n\r\n                        test.unit = rezultat.jedinice_f;\r\n\r\n                        if (\r\n                          res.data.verificiran ||\r\n                          res.data.status === \"ODOBREN\"\r\n                        ) {\r\n                          test.odobren = \"ODOBREN\";\r\n                          test.edit = false;\r\n                        } else {\r\n                          test.odobren != \"ODOBREN\";\r\n                          test.edit = true;\r\n                        }\r\n\r\n                        test.jedinica = rezultat.jedinice_f;\r\n                        test.id = rezultat._id;\r\n                        test.multidata = element.testovi.labassay.multi;\r\n                        test.rezultat_m = rezultat.rezultat_m;\r\n                        test.bakterije = element.testovi.labassay.bakterije;\r\n                        test.neg_description =\r\n                          element.testovi.labassay.neg_description;\r\n                        test.pos_description =\r\n                          element.testovi.labassay.pos_description;\r\n                        test.refSet = element.testovi.grupa;\r\n                        test.dRef = element.testovi.refd;\r\n                        test.gRef = element.testovi.refg;\r\n                        test.interp = element.testovi.interp;\r\n                        test.extend = element.testovi.extend;\r\n                        test.retest = element.testovi.retest;\r\n                        test.interpretacija =\r\n                          element.testovi.labassay.interpretacija;\r\n                      });\r\n\r\n                      if (\r\n                        test.select_options != undefined &&\r\n                        !test.select_options.includes(test.rezultat)\r\n                      ) {\r\n                        test.select_options.unshift(test.rezultat);\r\n                      }\r\n                      this.rezultati.push(test);\r\n                    });\r\n\r\n                    this.rezultati.forEach((element) => {\r\n                      if (element.calculated) {\r\n                        this.calculated = true;\r\n                      }\r\n                    });\r\n\r\n                    this.sample = data;\r\n                    this.show_table = true;\r\n                  }\r\n                });\r\n              this.$refs.staticModalAparati.close();\r\n            } else {\r\n              // console.warn(res.data.message);\r\n              // this.$refs.staticModalAparati.close();\r\n            }\r\n          });\r\n      }\r\n    },\r\n\r\n    Reference(event, test) {\r\n      this.reference = {\r\n        sample: this.$store.state.sid,\r\n        labassay: test.labassay_id,\r\n        naziv: test.ime,\r\n        opis: test.analit,\r\n        dref: test.dRef,\r\n        gref: test.gRef,\r\n        interp: test.interp,\r\n        extend: test.extend,\r\n        jedinica: test.jedinica,\r\n      };\r\n      this.$refs.staticModalReference.open();\r\n    },\r\n\r\n    BarcodePrint(data) {\r\n      var link = barcode + data.sid + \".png\";\r\n\r\n      http\r\n        .get(\r\n          \"uzorci/barcode/\" +\r\n            data.sid +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site,\r\n          {}\r\n        )\r\n        .then((res) => {\r\n          printEPL(\r\n            res.data.name + \" \" + res.data.surname,\r\n            this.sid,\r\n            res.data.pacijentRBr,\r\n            res.data.godiste,\r\n            res.data.datum,\r\n            link,\r\n            res.data.code,\r\n            this.$store.state.site,\r\n            undefined,\r\n            undefined\r\n          );\r\n        });\r\n    },\r\n\r\n    SaveResults(rezultati, from) {\r\n      // Vue Loading Overlay Component\r\n      this.isLoading = true;\r\n\r\n      if (!this.MicrobiologySample) {\r\n        rezultati.forEach((element) => {\r\n          element.rezultat = element.rezultat.replace(/,/g, \".\");\r\n        });\r\n\r\n        rezultati[0].rezultat_m = [];\r\n      }\r\n\r\n      http\r\n        .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n          email: this.$store.state.userId,\r\n          token: this.$store.state.token,\r\n          site: this.$store.state.site,\r\n          rezultati: rezultati,\r\n        })\r\n        .then((res) => {\r\n          http\r\n            .get(\r\n              \"rezultati/odobravanje/samples/\" +\r\n                this.$route.params.patient +\r\n                \"/\" +\r\n                this.$route.params.id +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&date=\" +\r\n                this.$route.query.date,\r\n              {}\r\n            )\r\n            .then((res) => {\r\n              this.uzorci = [];\r\n\r\n              res.data.results.forEach((element) => {\r\n                var check = 0;\r\n                var zaprimljen = 0;\r\n                var realizovan = 0;\r\n\r\n                if (element.verificiran) {\r\n                  var status_uzorka = \"VERIFICIRAN\";\r\n                } else {\r\n                  var status_uzorka = element.status;\r\n                }\r\n\r\n                element.rezultati.forEach((test) => {\r\n                  check++;\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                  ) {\r\n                    zaprimljen++;\r\n                  }\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                  ) {\r\n                    realizovan++;\r\n                  }\r\n\r\n                  if (check === element.rezultati.length) {\r\n                    // console.log(\"Provjera: Save (single)\")\r\n\r\n                    if (status_uzorka === \"VERIFICIRAN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"VERIFICIRAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else if (status_uzorka === \"ODOBREN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"ODOBREN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else if (zaprimljen < 1) {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"REALIZOVAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else if (realizovan < 1) {\r\n                      var stat = \"ZAPRIMLJEN\";\r\n                      if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                        if (\r\n                          element.rezultati[0].rezultat[0].rezultat_m.length\r\n                        ) {\r\n                          stat = \"REALIZOVAN\";\r\n                        }\r\n                      }\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: stat,\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"U OBRADI\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    }\r\n                  }\r\n                });\r\n              });\r\n\r\n              this.uzorci = this.uzorci.sort(function (a, b) {\r\n                return a.sid.localeCompare(b.sid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\",\r\n                });\r\n              });\r\n\r\n              // Vue Loading Overlay Component\r\n              this.isLoading = false;\r\n            });\r\n        });\r\n    },\r\n\r\n    DeletedSample(data) {\r\n      this.uzorci.forEach((element) => {\r\n        if (element.sid === data) {\r\n          element.removed = false;\r\n        }\r\n      });\r\n\r\n      for (var i = 0; i < this.uzorci.length; i++) {\r\n        if (this.uzorci[i].sid === data) {\r\n          this.uzorci.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (this.uzorci.length) {\r\n        this.show = false;\r\n        this.main = false;\r\n        http\r\n          .get(\r\n            \"rezultati/odobravanje/samples/\" +\r\n              this.$route.params.patient +\r\n              \"/\" +\r\n              this.$route.params.id +\r\n              \"?token=\" +\r\n              this.$store.state.token +\r\n              \"&site=\" +\r\n              this.$store.state.site +\r\n              \"&date=\" +\r\n              this.$route.query.date,\r\n            {}\r\n          )\r\n          .then((res) => {\r\n            this.count = res.data.results.length;\r\n            this.approved = 0;\r\n\r\n            this.odobren = true;\r\n            this.verificiran = true;\r\n\r\n            this.resdata = {};\r\n\r\n            this.resdata = res.data.results;\r\n\r\n            res.data.results.forEach((element) => {\r\n              if (\r\n                element.status === \"ODOBREN\" ||\r\n                element.status === \"VERIFICIRAN\"\r\n              ) {\r\n                this.approved++;\r\n              }\r\n              if (\r\n                element.status != \"ODOBREN\" &&\r\n                element.status != \"VERIFICIRAN\"\r\n              ) {\r\n                this.odobren = false;\r\n              }\r\n              if (!element.verificiran) {\r\n                this.verificiran = false;\r\n              }\r\n            });\r\n\r\n            if (this.count == this.approved) {\r\n              var report = [];\r\n\r\n              this.uzorci.forEach((element) => {\r\n                report.push(element._id);\r\n              });\r\n\r\n              http\r\n                .post(\"nalazi/create\", {\r\n                  token: this.$store.state.token,\r\n                  site: this.$store.state.site,\r\n                  type: \"multi\",\r\n                  uzorci: this.uzorci,\r\n                  samples: report,\r\n                  timestamp: this.timestamp,\r\n                  napomena: \"\",\r\n                  status: false,\r\n                  idNalaza: \"\",\r\n                  location: \"/\",\r\n                  klijent: this.klijent,\r\n                  naziv: this.timestamp,\r\n                })\r\n                .then((res) => {\r\n                  if (res.data.success) {\r\n                    http\r\n                      .post(\"nalazi/memo\", {\r\n                        token: this.$store.state.token,\r\n                        site: this.$store.state.site,\r\n                        timestamp: this.timestamp,\r\n                        height: res.data.memo,\r\n                        location: \"/\",\r\n                        naziv: this.timestamp,\r\n                      })\r\n                      .then((res) => {\r\n                        this.final_pdf = true;\r\n\r\n                        this.uzorci = [];\r\n\r\n                        this.resdata.forEach((element) => {\r\n                          var check = 0;\r\n                          var zaprimljen = 0;\r\n                          var realizovan = 0;\r\n\r\n                          if (element.verificiran) {\r\n                            var status_uzorka = \"VERIFICIRAN\";\r\n                          } else {\r\n                            var status_uzorka = element.status;\r\n                          }\r\n\r\n                          element.rezultati.forEach((test) => {\r\n                            check++;\r\n\r\n                            if (\r\n                              test.rezultat[test.rezultat.length - 1]\r\n                                .rezultat_f === \"\"\r\n                            ) {\r\n                              zaprimljen++;\r\n                            }\r\n\r\n                            if (\r\n                              test.rezultat[test.rezultat.length - 1]\r\n                                .rezultat_f != \"\"\r\n                            ) {\r\n                              realizovan++;\r\n                            }\r\n\r\n                            if (check === element.rezultati.length) {\r\n                              // console.log(\"Provjera: Sample Delete\")\r\n\r\n                              if (status_uzorka === \"VERIFICIRAN\") {\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: \"VERIFICIRAN\",\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false,\r\n                                });\r\n                              } else if (status_uzorka === \"ODOBREN\") {\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: \"ODOBREN\",\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false,\r\n                                });\r\n                              } else if (zaprimljen < 1) {\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: \"REALIZOVAN\",\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false,\r\n                                });\r\n                              } else if (realizovan < 1) {\r\n                                var stat = \"ZAPRIMLJEN\";\r\n                                if (\r\n                                  element.sample.tip.includes(\"Mikrobiologija\")\r\n                                ) {\r\n                                  if (\r\n                                    element.rezultati[0].rezultat[0].rezultat_m\r\n                                      .length\r\n                                  ) {\r\n                                    stat = \"REALIZOVAN\";\r\n                                  }\r\n                                }\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: stat,\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false,\r\n                                });\r\n                              } else {\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: \"U OBRADI\",\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false,\r\n                                });\r\n                              }\r\n                            }\r\n                          });\r\n                        });\r\n\r\n                        this.uzorci = this.uzorci.sort(function (a, b) {\r\n                          return a.sid.localeCompare(b.sid, undefined, {\r\n                            numeric: true,\r\n                            sensitivity: \"base\",\r\n                          });\r\n                        });\r\n\r\n                        this.main = true;\r\n                        this.show = true;\r\n                      });\r\n                  }\r\n                });\r\n            } else {\r\n              this.uzorci = [];\r\n\r\n              res.data.results.forEach((element) => {\r\n                var check = 0;\r\n                var zaprimljen = 0;\r\n                var realizovan = 0;\r\n\r\n                if (element.verificiran) {\r\n                  var status_uzorka = \"VERIFICIRAN\";\r\n                } else {\r\n                  var status_uzorka = element.status;\r\n                }\r\n\r\n                element.rezultati.forEach((test) => {\r\n                  check++;\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                  ) {\r\n                    zaprimljen++;\r\n                  }\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                  ) {\r\n                    realizovan++;\r\n                  }\r\n\r\n                  if (check === element.rezultati.length) {\r\n                    // console.log(\"Provjera: Sample Delete\")\r\n\r\n                    if (status_uzorka === \"VERIFICIRAN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"VERIFICIRAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else if (status_uzorka === \"ODOBREN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"ODOBREN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else if (zaprimljen < 1) {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"REALIZOVAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else if (realizovan < 1) {\r\n                      var stat = \"ZAPRIMLJEN\";\r\n                      if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                        if (\r\n                          element.rezultati[0].rezultat[0].rezultat_m.length\r\n                        ) {\r\n                          stat = \"REALIZOVAN\";\r\n                        }\r\n                      }\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: stat,\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"U OBRADI\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    }\r\n                  }\r\n                });\r\n              });\r\n\r\n              this.uzorci = this.uzorci.sort(function (a, b) {\r\n                return a.sid.localeCompare(b.sid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\",\r\n                });\r\n              });\r\n\r\n              this.main = true;\r\n              this.show = true;\r\n            }\r\n          });\r\n      } else {\r\n        router.push(\"/obrada/pregled\");\r\n      }\r\n    },\r\n\r\n    EditSample(data) {\r\n      document.getElementById(data).click();\r\n\r\n      http\r\n        .get(\r\n          \"rezultati/odobravanje/samples/\" +\r\n            this.$route.params.patient +\r\n            \"/\" +\r\n            this.$route.params.id +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site +\r\n            \"&date=\" +\r\n            this.$route.query.date,\r\n          {}\r\n        )\r\n        .then((res) => {\r\n          this.uzorci = [];\r\n\r\n          res.data.results.forEach((element) => {\r\n            var check = 0;\r\n            var zaprimljen = 0;\r\n            var realizovan = 0;\r\n\r\n            if (element.verificiran) {\r\n              var status_uzorka = \"VERIFICIRAN\";\r\n            } else {\r\n              var status_uzorka = element.status;\r\n            }\r\n\r\n            element.rezultati.forEach((test) => {\r\n              check++;\r\n\r\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\r\n                zaprimljen++;\r\n              }\r\n\r\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\r\n                realizovan++;\r\n              }\r\n\r\n              if (check === element.rezultati.length) {\r\n                // console.log(\"Provjera: Edit\")\r\n\r\n                if (status_uzorka === \"VERIFICIRAN\") {\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: \"VERIFICIRAN\",\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false,\r\n                  });\r\n                } else if (status_uzorka === \"ODOBREN\") {\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: \"ODOBREN\",\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false,\r\n                  });\r\n                } else if (zaprimljen < 1) {\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: \"REALIZOVAN\",\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false,\r\n                  });\r\n                } else if (realizovan < 1) {\r\n                  var stat = \"ZAPRIMLJEN\";\r\n                  if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                    if (element.rezultati[0].rezultat[0].rezultat_m.length) {\r\n                      stat = \"REALIZOVAN\";\r\n                    }\r\n                  }\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: stat,\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false,\r\n                  });\r\n                } else {\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: \"U OBRADI\",\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false,\r\n                  });\r\n                }\r\n              }\r\n            });\r\n          });\r\n\r\n          this.uzorci = this.uzorci.sort(function (a, b) {\r\n            return a.sid.localeCompare(b.sid, undefined, {\r\n              numeric: true,\r\n              sensitivity: \"base\",\r\n            });\r\n          });\r\n        })\r\n        .then(() => {\r\n          setTimeout(() => {\r\n            document.getElementById(this.$store.state.sid).click();\r\n          }, 500);\r\n        });\r\n    },\r\n\r\n    RetestEnable: function (event) {\r\n      this.rezultati.forEach((element) => {\r\n        if (element.test === event.target.id) {\r\n          element.retest = true;\r\n        }\r\n      });\r\n\r\n      this.save_retest = true;\r\n\r\n      http\r\n        .post(\"rezultati/odobravanje/retest/da/\", {\r\n          id_u: this.$store.state.sid,\r\n          id_t: event.target.id,\r\n          site: this.$store.state.site,\r\n          token: this.$store.state.token,\r\n        })\r\n        .then((res) => {\r\n          if (res.data.success) {\r\n            this.rezultati.forEach((element) => {\r\n              if (element.test === event.target.id) {\r\n                element.retest = true;\r\n              }\r\n            });\r\n          }\r\n        });\r\n    },\r\n\r\n    RetestDisable: function (event) {\r\n      this.rezultati.forEach((element) => {\r\n        if (element.test === event.target.id) {\r\n          element.retest = false;\r\n        }\r\n      });\r\n\r\n      this.save_retest = true;\r\n\r\n      http\r\n        .post(\"rezultati/odobravanje/retest/ne/\", {\r\n          id_u: this.$store.state.sid,\r\n          id_t: event.target.id,\r\n          site: this.$store.state.site,\r\n          token: this.$store.state.token,\r\n        })\r\n        .then((res) => {\r\n          if (res.data.success) {\r\n            this.rezultati.forEach((element) => {\r\n              if (element.test === event.target.id) {\r\n                element.retest = false;\r\n              }\r\n            });\r\n          }\r\n        });\r\n    },\r\n\r\n    MultiGet: function (event, naziv, ana, rezultat, odobren) {\r\n      // Sediment urina\r\n      // console.log(event.target.id)\r\n\r\n      this.naslov = \"Rezultati testa: \" + naziv + \" (\" + ana + \")\";\r\n      this.analiti = [];\r\n      var single = {};\r\n      var i = 0;\r\n      var kontrola = false;\r\n\r\n      this.uzorci.forEach((element) => {\r\n        if (element.sid === this.$store.state.sid) {\r\n          this.check = element.status;\r\n        }\r\n      });\r\n\r\n      this.analitiprikaz.forEach((element) => {\r\n        i++;\r\n        single = {};\r\n\r\n        var opcije = null;\r\n        opcije = izbornik.data;\r\n\r\n        var noResult = true;\r\n\r\n        if (event.target.id === element.labassay._id) {\r\n          console.log(element.labassay)\r\n          element.rezultat.forEach((analit) => {\r\n            if (analit.rezultat[0].rezultat_f.trim() != \"\") {\r\n              noResult = false;\r\n            }\r\n          });\r\n          console.log(noResult)\r\n        }\r\n\r\n        if (event.target.id === element.labassay._id) {\r\n          element.rezultat.forEach((analit) => {\r\n            single.kod = analit.rezultat[0].module_sn;\r\n\r\n            element.labassay.multiparam.forEach((mparam) => {\r\n              if (mparam.kod === single.kod) {\r\n                if (mparam.izbornik.length) {\r\n                  // console.log(mparam.kod);\r\n                  // console.log(mparam.izbornik);\r\n                  single.select_options = mparam.izbornik;\r\n                } else {\r\n                  single.select_options = undefined;\r\n                }\r\n              }\r\n            });\r\n\r\n            /* single.select_options = eval(\r\n              \"opcije.\" +\r\n                analit.rezultat[0].module_sn\r\n                  .replace(\"%\", \"_\")\r\n                  .replace(\"/\", \"_\")\r\n                  .replace(\" \", \"_\")\r\n                  .replace(/-/g, \"_\")\r\n                  .replace(\"#\", \"_\")\r\n                  // .replace(/[0-9]/g, \"_\")\r\n                  .replace(/^\\d+/, \"\")\r\n            ); */\r\n\r\n            var tmpOptionsAna = [];\r\n            if (single.select_options != undefined) {\r\n              tmpOptionsAna = single.select_options.slice();\r\n              single.select_options = tmpOptionsAna.slice();\r\n            }\r\n\r\n            if (\r\n              analit.rezultat[0].rezultat_f.trim() != \"\" &&\r\n              single.select_options != undefined &&\r\n              !single.select_options.includes(analit.rezultat[0].rezultat_f)\r\n            ) {\r\n              // Sediment urina (Epitelne ćelije, Kristali i Soli)\r\n              if (\r\n                single.kod != \"s03\" &&\r\n                single.kod != \"s04\" &&\r\n                single.kod != \"s08\" &&\r\n                single.kod != \"s09\"\r\n              ) {\r\n                single.select_options.unshift(analit.rezultat[0].rezultat_f);\r\n              }\r\n            }\r\n\r\n            single.refd = analit.refd;\r\n            single.labID = event.target.id;\r\n            single.refg = analit.refg;\r\n            single.interp = analit.interp;\r\n            single.interpretacija = null;\r\n            single.nazivTesta = naziv;\r\n            single.grupa = analit.grupa;\r\n            single.naziv = analit.rezultat[0].sn;\r\n            single.opis = analit.rezultat[0].dilucija;\r\n            single.jedinica = analit.rezultat[0].jedinice_f;\r\n            single.rezultat = analit.rezultat[0].rezultat_f;\r\n            single.flag = analit.rezultat[0].rezultat_i;\r\n            single.manual = element.labassay.manual;\r\n            single.odobren = odobren;\r\n\r\n            if (\r\n              single.select_options != undefined &&\r\n              (single.kod === \"s03\" ||\r\n                single.kod === \"s04\" ||\r\n                single.kod === \"s08\" ||\r\n                single.kod === \"s09\")\r\n            ) {\r\n              // Sediment urina (Epitelne ćelije, Kristali i Soli)\r\n              single.rezultat_multiple = single.rezultat.split(\";\");\r\n              for (var i = single.rezultat_multiple.length - 1; i >= 0; i--) {\r\n                single.rezultat_multiple[i] = single.rezultat_multiple[\r\n                  i\r\n                ].trim();\r\n                if (single.rezultat_multiple[i] === \"\") {\r\n                  single.rezultat_multiple.splice(i, 1);\r\n                }\r\n              }\r\n            } else {\r\n              single.rezultat_multiple = [];\r\n            }\r\n\r\n            if (this.check === \"ODOBREN\" || this.check === \"VERIFICIRAN\") {\r\n              single.edit = false;\r\n            } else {\r\n              single.edit = true;\r\n            }\r\n\r\n            if (\r\n              ana === \"Opšti pregled urina\" &&\r\n              this.check != \"ODOBREN\" &&\r\n              this.check != \"VERIFICIRAN\"\r\n            ) {\r\n              if (\r\n                analit.rezultat[0].rezultat_f === \"\" &&\r\n                single.select_options != undefined\r\n              ) {\r\n                if (noResult) {\r\n                  single.rezultat = single.select_options[1];\r\n                }\r\n              }\r\n            }\r\n\r\n            single.analit = analit.rezultat[0].anaassay;\r\n            single.izbor = ana;\r\n\r\n            // Opšti pregled urina (Urobilinogen)\r\n            if (single.kod === \"o12\" && single.rezultat.trim() === \"\") {\r\n              if (noResult) {\r\n                  single.rezultat = \"16\";\r\n                }\r\n              \r\n            }\r\n\r\n            this.analiti.push(single);\r\n\r\n            single = {};\r\n          });\r\n        }\r\n\r\n        if (i === this.analitiprikaz.length) {\r\n          kontrola = true;\r\n        }\r\n      });\r\n\r\n      if (kontrola) {\r\n        this.$refs.largeModalMulti.open();\r\n      }\r\n    },\r\n\r\n    Interpretacija: function (\r\n      test,\r\n      rezultat,\r\n      jedinica,\r\n      refd,\r\n      refg,\r\n      site,\r\n      interp,\r\n      extend,\r\n      spec\r\n    ) {\r\n      return Interpretation(\r\n        test,\r\n        rezultat,\r\n        jedinica,\r\n        refd,\r\n        refg,\r\n        site,\r\n        interp,\r\n        extend,\r\n        spec\r\n      );\r\n    },\r\n\r\n    MailDialog() {\r\n      this.$refs.staticModalSendMail.open();\r\n    },\r\n\r\n    SendMail(email) {\r\n      // Vue Loading Overlay Component\r\n      this.isLoading = true;\r\n\r\n      http\r\n        .post(\"nalazi/mail\", {\r\n          token: this.$store.state.token,\r\n          site: this.$store.state.site,\r\n          email: email,\r\n          timestamp: this.timestamp,\r\n          location: \"/\",\r\n          naziv: this.timestamp,\r\n        })\r\n        .then((res) => {\r\n          // Vue Loading Overlay Component\r\n          this.isLoading = false;\r\n\r\n          if (res.data.success) {\r\n            this.toastText = \"Nalaz uspješno poslan.\";\r\n            this.toastIcon = \"fa-check\";\r\n            this.toastPosition = \"top-right\";\r\n            this.className = \"vuestic-toast-primary\";\r\n\r\n            this.showToast(this.toastText, {\r\n              icon: this.toastIcon,\r\n              position: this.toastPosition,\r\n              duration: 2500,\r\n              fullWidth: this.false,\r\n              className: this.className,\r\n            });\r\n\r\n            if (this.email_changed) {\r\n              http\r\n                .post(\"pacijenti/detalji/update/\" + this.pacijent, {\r\n                  email: email.trim(),\r\n                  token: this.$store.state.token,\r\n                  site: this.$store.state.site,\r\n                })\r\n                .then((res) => {});\r\n            }\r\n          } else {\r\n            this.toastText = \"Greška prilikom slanja nalaza!\";\r\n            this.toastIcon = \"fa-remove\";\r\n            this.toastPosition = \"top-right\";\r\n            this.className = \"vuestic-toast-danger\";\r\n\r\n            this.showToast(this.toastText, {\r\n              icon: this.toastIcon,\r\n              position: this.toastPosition,\r\n              duration: 2500,\r\n              fullWidth: this.false,\r\n              className: this.className,\r\n            });\r\n          }\r\n        });\r\n    },\r\n\r\n    SaveMultiResults(analiti, data) {\r\n      analiti.forEach((analit) => {\r\n        analit.rezultat = analit.rezultat.replace(/,/g, \".\");\r\n\r\n        if (analit.rezultat_multiple.length) {\r\n          analit.rezultat = \"\";\r\n\r\n          analit.rezultat_multiple.forEach((element) => {\r\n            if (element === \"\") {\r\n            } else {\r\n              analit.rezultat = analit.rezultat + element + \";\";\r\n            }\r\n          });\r\n\r\n          analit.rezultat = analit.rezultat\r\n            .trim()\r\n            .slice(0, analit.rezultat.length - 1);\r\n        }\r\n      });\r\n\r\n      // Vue Loading Overlay Component\r\n      this.isLoading = true;\r\n\r\n      http\r\n        .post(\"/rezultati/odobravanje/analiti/\" + this.$store.state.sid, {\r\n          analiti: analiti,\r\n          site: this.$store.state.site,\r\n          token: this.$store.state.token,\r\n        })\r\n        .then((res) => {\r\n          http\r\n            .get(\r\n              \"rezultati/odobravanje/samples/\" +\r\n                this.$route.params.patient +\r\n                \"/\" +\r\n                this.$route.params.id +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&date=\" +\r\n                this.$route.query.date,\r\n              {}\r\n            )\r\n            .then((res) => {\r\n              this.uzorci = [];\r\n\r\n              res.data.results.forEach((element) => {\r\n                var check = 0;\r\n                var zaprimljen = 0;\r\n                var realizovan = 0;\r\n\r\n                if (element.verificiran) {\r\n                  var status_uzorka = \"VERIFICIRAN\";\r\n                } else {\r\n                  var status_uzorka = element.status;\r\n                }\r\n\r\n                element.rezultati.forEach((test) => {\r\n                  check++;\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                  ) {\r\n                    zaprimljen++;\r\n                  }\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                  ) {\r\n                    realizovan++;\r\n                  }\r\n\r\n                  if (check === element.rezultati.length) {\r\n                    // console.log(\"Provjera: Save (multi)\")\r\n\r\n                    if (status_uzorka === \"VERIFICIRAN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"VERIFICIRAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else if (status_uzorka === \"ODOBREN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"ODOBREN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else if (zaprimljen < 1) {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"REALIZOVAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else if (realizovan < 1) {\r\n                      var stat = \"ZAPRIMLJEN\";\r\n                      if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                        if (\r\n                          element.rezultati[0].rezultat[0].rezultat_m.length\r\n                        ) {\r\n                          stat = \"REALIZOVAN\";\r\n                        }\r\n                      }\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: stat,\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"U OBRADI\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    }\r\n                  }\r\n                });\r\n              });\r\n\r\n              this.uzorci = this.uzorci.sort(function (a, b) {\r\n                return a.sid.localeCompare(b.sid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\",\r\n                });\r\n              });\r\n\r\n              // Vue Loading Overlay Component\r\n              this.isLoading = false;\r\n            });\r\n        })\r\n        .then((res) => {\r\n          var data = {};\r\n\r\n          this.uzorci.forEach((element) => {\r\n            if (element.sid === this.$store.state.sid) {\r\n              data = element;\r\n            }\r\n          });\r\n\r\n          this.testovi = [];\r\n          this.rezultati = [];\r\n          this.analitiprikaz = [];\r\n          this.calculated = false;\r\n\r\n          var topcije = null;\r\n          topcije = izbornik.rez;\r\n\r\n          this.show_table = false;\r\n\r\n          http\r\n            .get(\r\n              \"rezultati/showsingle/\" +\r\n                data.sid +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site,\r\n              {}\r\n            )\r\n            .then((res) => {\r\n              var test = {};\r\n\r\n              if (res.data.data.length) {\r\n                res.data.data.sort(function (a, b) {\r\n                  return a.testovi.labassay.grupa +\r\n                    a.testovi.labassay.grouporder ==\r\n                    b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                    ? 0\r\n                    : +(\r\n                        a.testovi.labassay.grupa +\r\n                          a.testovi.labassay.grouporder >\r\n                        b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                      ) || -1;\r\n                });\r\n\r\n                this.testovi = res.data.data;\r\n                this.analitiprikaz = res.data.multidata;\r\n\r\n                res.data.data.forEach((element) => {\r\n                  test = {};\r\n                  test.realizovan = false;\r\n\r\n                  test.ime = element.testovi.labassay.naziv;\r\n                  test.test = element.testovi.labassay.sifra;\r\n                  test.analit = element.testovi.labassay.analit;\r\n                  test.IDE = element.testovi._id;\r\n                  test.labassay_id = element.testovi.labassay._id;\r\n\r\n                  test.multi_count = 0;\r\n                  test.multi_rezultati = [];\r\n\r\n                  res.data.multidata.forEach((multi) => {\r\n                    if (multi.labassay._id === element.testovi.labassay._id) {\r\n                      test.multi_rezultati = multi.rezultat;\r\n                      test.multi_count = multi.rezultat[0].rezultat.length;\r\n                    }\r\n                  });\r\n\r\n                  test.kategorija = element.testovi.labassay.kategorija;\r\n                  test.analyser = element.testovi.labassay.analyser;\r\n                  test.multiparam = element.testovi.labassay.multiparam;\r\n                  test.vise = element.testovi.rezultat.length;\r\n                  test.calculated = element.testovi.labassay.calculated;\r\n                  test.manual = element.testovi.labassay.manual;\r\n\r\n                  test.select_options = eval(\r\n                    \"topcije.\" +\r\n                      element.testovi.interp\r\n                        .replace(\"%\", \"_\")\r\n                        .replace(\"/\", \"_\")\r\n                        .replace(\" \", \"_\")\r\n                        .replace(/-/g, \"_\")\r\n                        .replace(\"#\", \"_\")\r\n                        // .replace(/[0-9]/g, \"_\")\r\n                        .replace(/^\\d+/, \"\")\r\n                  );\r\n\r\n                  element.testovi.rezultat.forEach((rezultat) => {\r\n                    test.sekcija = rezultat.anaassay.sekcija;\r\n                    test.rezultat = rezultat.rezultat_f;\r\n                    test.result = rezultat;\r\n                    test.anaassay = rezultat.anaassay;\r\n\r\n                    if (rezultat.rezultat_f != \"\") {\r\n                      test.realizovan = true;\r\n                    }\r\n\r\n                    test.unit = rezultat.jedinice_f;\r\n\r\n                    if (res.data.verificiran || res.data.status === \"ODOBREN\") {\r\n                      test.odobren = \"ODOBREN\";\r\n                      test.edit = false;\r\n                    } else {\r\n                      test.odobren != \"ODOBREN\";\r\n                      test.edit = true;\r\n                    }\r\n\r\n                    test.jedinica = rezultat.jedinice_f;\r\n                    test.id = rezultat._id;\r\n                    test.multidata = element.testovi.labassay.multi;\r\n                    test.rezultat_m = rezultat.rezultat_m;\r\n                    test.bakterije = element.testovi.labassay.bakterije;\r\n                    test.neg_description =\r\n                      element.testovi.labassay.neg_description;\r\n                    test.pos_description =\r\n                      element.testovi.labassay.pos_description;\r\n                    test.refSet = element.testovi.grupa;\r\n                    test.dRef = element.testovi.refd;\r\n                    test.gRef = element.testovi.refg;\r\n                    test.interp = element.testovi.interp;\r\n                    test.extend = element.testovi.extend;\r\n                    test.retest = element.testovi.retest;\r\n                    test.interpretacija =\r\n                      element.testovi.labassay.interpretacija;\r\n                  });\r\n\r\n                  if (\r\n                    test.select_options != undefined &&\r\n                    !test.select_options.includes(test.rezultat)\r\n                  ) {\r\n                    test.select_options.unshift(test.rezultat);\r\n                  }\r\n                  this.rezultati.push(test);\r\n                });\r\n\r\n                this.rezultati.forEach((element) => {\r\n                  if (element.calculated) {\r\n                    this.calculated = true;\r\n                  }\r\n                });\r\n\r\n                this.sample = data;\r\n                this.show_table = true;\r\n              }\r\n            });\r\n        });\r\n    },\r\n\r\n    Calculate: function (event, id, ime, edited) {\r\n      http\r\n        .post(\"/rezultati/odobravanje/calculate/\" + this.$store.state.sid, {\r\n          _id: id,\r\n          token: this.$store.state.token,\r\n          site: this.$store.state.site,\r\n          ime: ime,\r\n          pid: this.pid,\r\n        })\r\n        .then((res) => {\r\n          http\r\n            .get(\r\n              \"rezultati/odobravanje/samples/\" +\r\n                this.$route.params.patient +\r\n                \"/\" +\r\n                this.$route.params.id +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&date=\" +\r\n                this.$route.query.date,\r\n              {}\r\n            )\r\n            .then((res) => {\r\n              this.uzorci = [];\r\n\r\n              res.data.results.forEach((element) => {\r\n                var check = 0;\r\n                var zaprimljen = 0;\r\n                var realizovan = 0;\r\n\r\n                if (element.verificiran) {\r\n                  var status_uzorka = \"VERIFICIRAN\";\r\n                } else {\r\n                  var status_uzorka = element.status;\r\n                }\r\n\r\n                element.rezultati.forEach((test) => {\r\n                  check++;\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                  ) {\r\n                    zaprimljen++;\r\n                  }\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                  ) {\r\n                    realizovan++;\r\n                  }\r\n\r\n                  if (check === element.rezultati.length) {\r\n                    // console.log(\"Provjera: Calculate\")\r\n\r\n                    if (status_uzorka === \"VERIFICIRAN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"VERIFICIRAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else if (status_uzorka === \"ODOBREN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"ODOBREN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else if (zaprimljen < 1) {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"REALIZOVAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else if (realizovan < 1) {\r\n                      var stat = \"ZAPRIMLJEN\";\r\n                      if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                        if (\r\n                          element.rezultati[0].rezultat[0].rezultat_m.length\r\n                        ) {\r\n                          stat = \"REALIZOVAN\";\r\n                        }\r\n                      }\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: stat,\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"U OBRADI\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    }\r\n                  }\r\n                });\r\n              });\r\n\r\n              this.uzorci = this.uzorci.sort(function (a, b) {\r\n                return a.sid.localeCompare(b.sid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\",\r\n                });\r\n              });\r\n            });\r\n        })\r\n        .then((res) => {\r\n          var data = {};\r\n\r\n          this.uzorci.forEach((element) => {\r\n            if (element.sid === this.$store.state.sid) {\r\n              data = element;\r\n            }\r\n          });\r\n\r\n          this.testovi = [];\r\n          this.rezultati = [];\r\n          this.analitiprikaz = [];\r\n          this.calculated = false;\r\n\r\n          var topcije = null;\r\n          topcije = izbornik.rez;\r\n\r\n          http\r\n            .get(\r\n              \"rezultati/showsingle/\" +\r\n                data.sid +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site,\r\n              {}\r\n            )\r\n            .then((res) => {\r\n              var test = {};\r\n\r\n              if (res.data.data.length) {\r\n                res.data.data.sort(function (a, b) {\r\n                  return a.testovi.labassay.grupa +\r\n                    a.testovi.labassay.grouporder ==\r\n                    b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                    ? 0\r\n                    : +(\r\n                        a.testovi.labassay.grupa +\r\n                          a.testovi.labassay.grouporder >\r\n                        b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                      ) || -1;\r\n                });\r\n\r\n                this.testovi = res.data.data;\r\n                this.analitiprikaz = res.data.multidata;\r\n\r\n                res.data.data.forEach((element) => {\r\n                  test = {};\r\n                  test.realizovan = false;\r\n\r\n                  test.ime = element.testovi.labassay.naziv;\r\n                  test.test = element.testovi.labassay.sifra;\r\n                  test.analit = element.testovi.labassay.analit;\r\n                  test.IDE = element.testovi._id;\r\n                  test.labassay_id = element.testovi.labassay._id;\r\n\r\n                  test.multi_count = 0;\r\n                  test.multi_rezultati = [];\r\n\r\n                  res.data.multidata.forEach((multi) => {\r\n                    if (multi.labassay._id === element.testovi.labassay._id) {\r\n                      test.multi_rezultati = multi.rezultat;\r\n                      test.multi_count = multi.rezultat[0].rezultat.length;\r\n                    }\r\n                  });\r\n\r\n                  test.kategorija = element.testovi.labassay.kategorija;\r\n                  test.analyser = element.testovi.labassay.analyser;\r\n                  test.multiparam = element.testovi.labassay.multiparam;\r\n                  test.vise = element.testovi.rezultat.length;\r\n                  test.calculated = element.testovi.labassay.calculated;\r\n                  test.manual = element.testovi.labassay.manual;\r\n\r\n                  test.select_options = eval(\r\n                    \"topcije.\" +\r\n                      element.testovi.interp\r\n                        .replace(\"%\", \"_\")\r\n                        .replace(\"/\", \"_\")\r\n                        .replace(\" \", \"_\")\r\n                        .replace(/-/g, \"_\")\r\n                        .replace(\"#\", \"_\")\r\n                        // .replace(/[0-9]/g, \"_\")\r\n                        .replace(/^\\d+/, \"\")\r\n                  );\r\n\r\n                  element.testovi.rezultat.forEach((rezultat) => {\r\n                    test.sekcija = rezultat.anaassay.sekcija;\r\n                    test.rezultat = rezultat.rezultat_f;\r\n                    test.result = rezultat;\r\n                    test.anaassay = rezultat.anaassay;\r\n\r\n                    if (rezultat.rezultat_f != \"\") {\r\n                      test.realizovan = true;\r\n                    }\r\n\r\n                    test.unit = rezultat.jedinice_f;\r\n\r\n                    if (res.data.verificiran || res.data.status === \"ODOBREN\") {\r\n                      test.odobren = \"ODOBREN\";\r\n                      test.edit = false;\r\n                    } else {\r\n                      test.odobren != \"ODOBREN\";\r\n                      test.edit = true;\r\n                    }\r\n\r\n                    test.jedinica = rezultat.jedinice_f;\r\n                    test.id = rezultat._id;\r\n                    test.multidata = element.testovi.labassay.multi;\r\n                    test.rezultat_m = rezultat.rezultat_m;\r\n                    test.bakterije = element.testovi.labassay.bakterije;\r\n                    test.neg_description =\r\n                      element.testovi.labassay.neg_description;\r\n                    test.pos_description =\r\n                      element.testovi.labassay.pos_description;\r\n                    test.refSet = element.testovi.grupa;\r\n                    test.dRef = element.testovi.refd;\r\n                    test.gRef = element.testovi.refg;\r\n                    test.interp = element.testovi.interp;\r\n                    test.extend = element.testovi.extend;\r\n                    test.retest = element.testovi.retest;\r\n                    test.interpretacija =\r\n                      element.testovi.labassay.interpretacija;\r\n                  });\r\n\r\n                  if (\r\n                    test.select_options != undefined &&\r\n                    !test.select_options.includes(test.rezultat)\r\n                  ) {\r\n                    test.select_options.unshift(test.rezultat);\r\n                  }\r\n                  this.rezultati.push(test);\r\n                });\r\n\r\n                this.rezultati.forEach((element) => {\r\n                  if (element.calculated) {\r\n                    this.calculated = true;\r\n                  }\r\n                });\r\n\r\n                this.sample = data;\r\n              }\r\n            });\r\n        });\r\n    },\r\n\r\n    Approve(rezultati) {\r\n      this.rezultati.forEach((element) => {\r\n        element.edit = false;\r\n      });\r\n\r\n      this.calculated = false;\r\n\r\n      if (!this.MicrobiologySample) {\r\n        rezultati.forEach((element) => {\r\n          element.rezultat = element.rezultat.replace(/,/g, \".\");\r\n        });\r\n\r\n        rezultati[0].rezultat_m = [];\r\n      }\r\n\r\n      http\r\n        .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n          email: this.$store.state.userId,\r\n          token: this.$store.state.token,\r\n          site: this.$store.state.site,\r\n          rezultati: rezultati,\r\n        })\r\n        .then((res) => {\r\n          // Vue Loading Overlay Component\r\n          this.isLoading = true;\r\n\r\n          http\r\n            .post(\"/rezultati/odobravanje/odobri/\" + this.$store.state.sid, {\r\n              testovi: rezultati,\r\n              site: this.$store.state.site,\r\n              token: this.$store.state.token,\r\n            })\r\n            .then((res) => {\r\n              this.sample.status = \"ODOBREN\";\r\n\r\n              this.report = {};\r\n\r\n              this.uzorci.forEach((element) => {\r\n                if (element.sid === this.$store.state.sid) {\r\n                  this.report = element;\r\n                }\r\n              });\r\n\r\n              var sample = [];\r\n              sample.push(this.report._id);\r\n\r\n              http\r\n                .post(\"nalazi/create\", {\r\n                  token: this.$store.state.token,\r\n                  site: this.$store.state.site,\r\n                  type: \"single\",\r\n                  uzorci: this.uzorci,\r\n                  samples: sample,\r\n                  timestamp: this.timestamp,\r\n                  napomena: \"\",\r\n                  status: false,\r\n                  idNalaza: \"\",\r\n                  location: \"/samples\",\r\n                  klijent: this.klijent,\r\n                  naziv: this.report.sid,\r\n                })\r\n                .then((res) => {\r\n                  http\r\n                    .get(\r\n                      \"rezultati/odobravanje/samples/\" +\r\n                        this.$route.params.patient +\r\n                        \"/\" +\r\n                        this.$route.params.id +\r\n                        \"?token=\" +\r\n                        this.$store.state.token +\r\n                        \"&site=\" +\r\n                        this.$store.state.site +\r\n                        \"&date=\" +\r\n                        this.$route.query.date,\r\n                      {}\r\n                    )\r\n                    .then((res) => {\r\n                      this.final_pdf = res.data.final_pdf;\r\n\r\n                      this.count = res.data.results.length;\r\n                      this.approved = 0;\r\n\r\n                      this.odobren = true;\r\n                      this.verificiran = true;\r\n\r\n                      res.data.results.forEach((element) => {\r\n                        if (\r\n                          element.status === \"ODOBREN\" ||\r\n                          element.status === \"VERIFICIRAN\"\r\n                        ) {\r\n                          this.approved++;\r\n                        }\r\n                        if (\r\n                          element.status != \"ODOBREN\" &&\r\n                          element.status != \"VERIFICIRAN\"\r\n                        ) {\r\n                          this.odobren = false;\r\n                        }\r\n                        if (!element.verificiran) {\r\n                          this.verificiran = false;\r\n                        }\r\n                      });\r\n\r\n                      var response = res.data.results;\r\n\r\n                      if (this.count == this.approved) {\r\n                        // console.warn(\"Generate new Report.\");\r\n\r\n                        var report = [];\r\n\r\n                        this.uzorci.forEach((element) => {\r\n                          report.push(element._id);\r\n                        });\r\n\r\n                        http\r\n                          .post(\"nalazi/create\", {\r\n                            token: this.$store.state.token,\r\n                            site: this.$store.state.site,\r\n                            type: \"multi\",\r\n                            uzorci: this.uzorci,\r\n                            samples: report,\r\n                            timestamp: this.timestamp,\r\n                            napomena: \"\",\r\n                            status: false,\r\n                            idNalaza: \"\",\r\n                            location: \"/\",\r\n                            klijent: this.klijent,\r\n                            naziv: this.timestamp,\r\n                          })\r\n                          .then((res) => {\r\n                            if (res.data.success) {\r\n                              http\r\n                                .post(\"nalazi/memo\", {\r\n                                  token: this.$store.state.token,\r\n                                  site: this.$store.state.site,\r\n                                  timestamp: this.timestamp,\r\n                                  height: res.data.memo,\r\n                                  location: \"/\",\r\n                                  naziv: this.timestamp,\r\n                                })\r\n                                .then((res) => {\r\n                                  this.uzorci = [];\r\n\r\n                                  response.forEach((element) => {\r\n                                    var check = 0;\r\n                                    var zaprimljen = 0;\r\n                                    var realizovan = 0;\r\n\r\n                                    if (element.verificiran) {\r\n                                      var status_uzorka = \"VERIFICIRAN\";\r\n                                    } else {\r\n                                      var status_uzorka = element.status;\r\n                                    }\r\n\r\n                                    element.rezultati.forEach((test) => {\r\n                                      check++;\r\n\r\n                                      if (\r\n                                        test.rezultat[test.rezultat.length - 1]\r\n                                          .rezultat_f === \"\"\r\n                                      ) {\r\n                                        zaprimljen++;\r\n                                      }\r\n\r\n                                      if (\r\n                                        test.rezultat[test.rezultat.length - 1]\r\n                                          .rezultat_f != \"\"\r\n                                      ) {\r\n                                        realizovan++;\r\n                                      }\r\n\r\n                                      if (check === element.rezultati.length) {\r\n                                        // console.log(\"Provjera: Approve\")\r\n\r\n                                        if (status_uzorka === \"VERIFICIRAN\") {\r\n                                          this.uzorci.push({\r\n                                            sid: element.id,\r\n                                            status: \"VERIFICIRAN\",\r\n                                            pdf_exists: element.pdf_exists,\r\n                                            tip: element.sample.tip,\r\n                                            _id: element._id,\r\n                                            removed: false,\r\n                                          });\r\n                                        } else if (\r\n                                          status_uzorka === \"ODOBREN\"\r\n                                        ) {\r\n                                          this.uzorci.push({\r\n                                            sid: element.id,\r\n                                            status: \"ODOBREN\",\r\n                                            pdf_exists: element.pdf_exists,\r\n                                            tip: element.sample.tip,\r\n                                            _id: element._id,\r\n                                            removed: false,\r\n                                          });\r\n                                        } else if (zaprimljen < 1) {\r\n                                          this.uzorci.push({\r\n                                            sid: element.id,\r\n                                            status: \"REALIZOVAN\",\r\n                                            pdf_exists: element.pdf_exists,\r\n                                            tip: element.sample.tip,\r\n                                            _id: element._id,\r\n                                            removed: false,\r\n                                          });\r\n                                        } else if (realizovan < 1) {\r\n                                          var stat = \"ZAPRIMLJEN\";\r\n                                          if (\r\n                                            element.sample.tip.includes(\r\n                                              \"Mikrobiologija\"\r\n                                            )\r\n                                          ) {\r\n                                            if (\r\n                                              element.rezultati[0].rezultat[0]\r\n                                                .rezultat_m.length\r\n                                            ) {\r\n                                              stat = \"REALIZOVAN\";\r\n                                            }\r\n                                          }\r\n                                          this.uzorci.push({\r\n                                            sid: element.id,\r\n                                            status: stat,\r\n                                            pdf_exists: element.pdf_exists,\r\n                                            tip: element.sample.tip,\r\n                                            _id: element._id,\r\n                                            removed: false,\r\n                                          });\r\n                                        } else {\r\n                                          this.uzorci.push({\r\n                                            sid: element.id,\r\n                                            status: \"U OBRADI\",\r\n                                            pdf_exists: element.pdf_exists,\r\n                                            tip: element.sample.tip,\r\n                                            _id: element._id,\r\n                                            removed: false,\r\n                                          });\r\n                                        }\r\n                                      }\r\n                                    });\r\n                                  });\r\n\r\n                                  this.uzorci = this.uzorci.sort(function (\r\n                                    a,\r\n                                    b\r\n                                  ) {\r\n                                    return a.sid.localeCompare(\r\n                                      b.sid,\r\n                                      undefined,\r\n                                      {\r\n                                        numeric: true,\r\n                                        sensitivity: \"base\",\r\n                                      }\r\n                                    );\r\n                                  });\r\n\r\n                                  this.main = true;\r\n\r\n                                  // Vue Loading Overlay Component\r\n                                  this.isLoading = false;\r\n                                });\r\n                            }\r\n                          });\r\n                      } else {\r\n                        this.uzorci = [];\r\n\r\n                        res.data.results.forEach((element) => {\r\n                          var check = 0;\r\n                          var zaprimljen = 0;\r\n                          var realizovan = 0;\r\n\r\n                          if (element.verificiran) {\r\n                            var status_uzorka = \"VERIFICIRAN\";\r\n                          } else {\r\n                            var status_uzorka = element.status;\r\n                          }\r\n\r\n                          element.rezultati.forEach((test) => {\r\n                            check++;\r\n\r\n                            if (\r\n                              test.rezultat[test.rezultat.length - 1]\r\n                                .rezultat_f === \"\"\r\n                            ) {\r\n                              zaprimljen++;\r\n                            }\r\n\r\n                            if (\r\n                              test.rezultat[test.rezultat.length - 1]\r\n                                .rezultat_f != \"\"\r\n                            ) {\r\n                              realizovan++;\r\n                            }\r\n\r\n                            if (check === element.rezultati.length) {\r\n                              // console.log(\"Provjera: Approve\")\r\n\r\n                              if (status_uzorka === \"VERIFICIRAN\") {\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: \"VERIFICIRAN\",\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false,\r\n                                });\r\n                              } else if (status_uzorka === \"ODOBREN\") {\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: \"ODOBREN\",\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false,\r\n                                });\r\n                              } else if (zaprimljen < 1) {\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: \"REALIZOVAN\",\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false,\r\n                                });\r\n                              } else if (realizovan < 1) {\r\n                                var stat = \"ZAPRIMLJEN\";\r\n                                if (\r\n                                  element.sample.tip.includes(\"Mikrobiologija\")\r\n                                ) {\r\n                                  if (\r\n                                    element.rezultati[0].rezultat[0].rezultat_m\r\n                                      .length\r\n                                  ) {\r\n                                    stat = \"REALIZOVAN\";\r\n                                  }\r\n                                }\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: stat,\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false,\r\n                                });\r\n                              } else {\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: \"U OBRADI\",\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false,\r\n                                });\r\n                              }\r\n                            }\r\n                          });\r\n                        });\r\n\r\n                        this.uzorci = this.uzorci.sort(function (a, b) {\r\n                          return a.sid.localeCompare(b.sid, undefined, {\r\n                            numeric: true,\r\n                            sensitivity: \"base\",\r\n                          });\r\n                        });\r\n\r\n                        this.main = true;\r\n\r\n                        // Vue Loading Overlay Component\r\n                        this.isLoading = false;\r\n                      }\r\n                    })\r\n                    .then((res) => {});\r\n                });\r\n            });\r\n        });\r\n    },\r\n\r\n    Disapprove(rezultati, from) {\r\n      this.rezultati.forEach((element) => {\r\n        if (element.calculated) {\r\n          this.calculated = true;\r\n        }\r\n      });\r\n\r\n      http\r\n        .post(\"/rezultati/odobravanje/ukloni/\" + this.$store.state.sid, {\r\n          testovi: rezultati,\r\n          site: this.$store.state.site,\r\n          token: this.$store.state.token,\r\n        })\r\n        .then((res) => {\r\n          // Vue Loading Overlay Component\r\n          this.isLoading = true;\r\n\r\n          http\r\n            .get(\r\n              \"rezultati/odobravanje/samples/\" +\r\n                this.$route.params.patient +\r\n                \"/\" +\r\n                this.$route.params.id +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&date=\" +\r\n                this.$route.query.date,\r\n              {}\r\n            )\r\n            .then((res) => {\r\n              this.sample.status = \"REALIZOVAN\";\r\n\r\n              this.final_pdf = res.data.final_pdf;\r\n\r\n              this.count = res.data.results.length;\r\n              this.approved = 0;\r\n\r\n              this.odobren = true;\r\n              this.verificiran = true;\r\n\r\n              res.data.results.forEach((element) => {\r\n                if (\r\n                  element.status === \"ODOBREN\" ||\r\n                  element.status === \"VERIFICIRAN\"\r\n                ) {\r\n                  this.approved++;\r\n                }\r\n                if (\r\n                  element.status != \"ODOBREN\" &&\r\n                  element.status != \"VERIFICIRAN\"\r\n                ) {\r\n                  this.odobren = false;\r\n                }\r\n                if (!element.verificiran) {\r\n                  this.verificiran = false;\r\n                }\r\n              });\r\n\r\n              this.uzorci = [];\r\n\r\n              res.data.results.forEach((element) => {\r\n                var check = 0;\r\n                var zaprimljen = 0;\r\n                var realizovan = 0;\r\n\r\n                if (element.verificiran) {\r\n                  var status_uzorka = \"VERIFICIRAN\";\r\n                } else {\r\n                  var status_uzorka = element.status;\r\n                }\r\n\r\n                element.rezultati.forEach((test) => {\r\n                  check++;\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                  ) {\r\n                    zaprimljen++;\r\n                  }\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                  ) {\r\n                    realizovan++;\r\n                  }\r\n\r\n                  if (check === element.rezultati.length) {\r\n                    // console.log(\"Provjera: Disapprove\")\r\n\r\n                    if (status_uzorka === \"VERIFICIRAN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"VERIFICIRAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else if (status_uzorka === \"ODOBREN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"ODOBREN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else if (zaprimljen < 1) {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"REALIZOVAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else if (realizovan < 1) {\r\n                      var stat = \"ZAPRIMLJEN\";\r\n                      if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                        if (\r\n                          element.rezultati[0].rezultat[0].rezultat_m.length\r\n                        ) {\r\n                          stat = \"REALIZOVAN\";\r\n                        }\r\n                      }\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: stat,\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"U OBRADI\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    }\r\n                  }\r\n                });\r\n              });\r\n\r\n              this.uzorci = this.uzorci.sort(function (a, b) {\r\n                return a.sid.localeCompare(b.sid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\",\r\n                });\r\n              });\r\n\r\n              this.main = true;\r\n            });\r\n\r\n          this.rezultati.forEach((element) => {\r\n            element.edit = true;\r\n          });\r\n\r\n          // Vue Loading Overlay Component\r\n          this.isLoading = false;\r\n        });\r\n    },\r\n\r\n    Verify(data) {\r\n      if (!this.$store.state.access.verify) {\r\n        this.$refs.staticModalVerifyPrivilege.open();\r\n      } else {\r\n        http\r\n          .post(\"/rezultati/obrada/verifikacija/\" + this.$store.state.sid, {\r\n            site: this.$store.state.site,\r\n            token: this.$store.state.token,\r\n            verify: true,\r\n          })\r\n          .then((res) => {\r\n            http\r\n              .get(\r\n                \"rezultati/odobravanje/samples/\" +\r\n                  this.$route.params.patient +\r\n                  \"/\" +\r\n                  this.$route.params.id +\r\n                  \"?token=\" +\r\n                  this.$store.state.token +\r\n                  \"&site=\" +\r\n                  this.$store.state.site +\r\n                  \"&date=\" +\r\n                  this.$route.query.date,\r\n                {}\r\n              )\r\n              .then((res) => {\r\n                this.sample.status = \"VERIFICIRAN\";\r\n\r\n                this.final_pdf = res.data.final_pdf;\r\n\r\n                this.count = res.data.results.length;\r\n                this.approved = 0;\r\n                this.verified = 0;\r\n\r\n                this.odobren = true;\r\n                this.verificiran = true;\r\n                this.partials = [];\r\n                this.partials_condition = false;\r\n\r\n                res.data.results.forEach((element) => {\r\n                  if (element.verificiran) {\r\n                    this.partials.push(element._id);\r\n                    this.verified++;\r\n                  }\r\n                  if (\r\n                    element.status === \"ODOBREN\" ||\r\n                    element.status === \"VERIFICIRAN\"\r\n                  ) {\r\n                    this.approved++;\r\n                  }\r\n                  if (\r\n                    element.status != \"ODOBREN\" &&\r\n                    element.status != \"VERIFICIRAN\"\r\n                  ) {\r\n                    this.odobren = false;\r\n                  }\r\n                  if (!element.verificiran) {\r\n                    this.verificiran = false;\r\n                  }\r\n                });\r\n\r\n                if (this.count > this.verified && this.verified > 1) {\r\n                  this.partials_condition = true;\r\n                }\r\n\r\n                this.uzorci = [];\r\n\r\n                res.data.results.forEach((element) => {\r\n                  var check = 0;\r\n                  var zaprimljen = 0;\r\n                  var realizovan = 0;\r\n\r\n                  if (element.verificiran) {\r\n                    var status_uzorka = \"VERIFICIRAN\";\r\n                  } else {\r\n                    var status_uzorka = element.status;\r\n                  }\r\n\r\n                  element.rezultati.forEach((test) => {\r\n                    check++;\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                    ) {\r\n                      zaprimljen++;\r\n                    }\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                    ) {\r\n                      realizovan++;\r\n                    }\r\n\r\n                    if (check === element.rezultati.length) {\r\n                      // console.log(\"Provjera: Verify\")\r\n\r\n                      if (status_uzorka === \"VERIFICIRAN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"VERIFICIRAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      } else if (status_uzorka === \"ODOBREN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"ODOBREN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      } else if (zaprimljen < 1) {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"REALIZOVAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      } else if (realizovan < 1) {\r\n                        var stat = \"ZAPRIMLJEN\";\r\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                          if (\r\n                            element.rezultati[0].rezultat[0].rezultat_m.length\r\n                          ) {\r\n                            stat = \"REALIZOVAN\";\r\n                          }\r\n                        }\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: stat,\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      } else {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"U OBRADI\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      }\r\n                    }\r\n                  });\r\n                });\r\n\r\n                this.uzorci = this.uzorci.sort(function (a, b) {\r\n                  return a.sid.localeCompare(b.sid, undefined, {\r\n                    numeric: true,\r\n                    sensitivity: \"base\",\r\n                  });\r\n                });\r\n\r\n                if (this.verificiran) {\r\n                  http\r\n                    .post(\"rezultati/nalazi/status\", {\r\n                      token: this.$store.state.token,\r\n                      site: this.$store.state.site,\r\n                      timestamp: this.timestamp,\r\n                      location: \"/\",\r\n                      naziv: this.timestamp,\r\n                      status: true,\r\n                    })\r\n                    .then((res) => {\r\n                      this.main = true;\r\n\r\n                      if (this.lokacija.sendEmail) {\r\n                        http\r\n                          .post(\"nalazi/mail\", {\r\n                            token: this.$store.state.token,\r\n                            site: this.$store.state.site,\r\n                            email: this.lokacija.email,\r\n                            timestamp: this.timestamp,\r\n                            location: \"/\",\r\n                            naziv: this.timestamp,\r\n                          })\r\n                          .then((res) => {\r\n                            if (res.data.success) {\r\n                            } else {\r\n                              this.toastText = \"Greška prilikom slanja nalaza!\";\r\n                              this.toastIcon = \"fa-remove\";\r\n                              this.toastPosition = \"top-right\";\r\n                              this.className = \"vuestic-toast-danger\";\r\n\r\n                              this.showToast(this.toastText, {\r\n                                icon: this.toastIcon,\r\n                                position: this.toastPosition,\r\n                                duration: 2500,\r\n                                fullWidth: this.false,\r\n                                className: this.className,\r\n                              });\r\n                            }\r\n                          });\r\n                      } else {\r\n                      }\r\n                    });\r\n                } else {\r\n                  this.main = true;\r\n                }\r\n              });\r\n          });\r\n      }\r\n    },\r\n\r\n    UnVerify(data) {\r\n      if (!this.$store.state.access.verify) {\r\n        this.$refs.staticModalVerifyPrivilege.open();\r\n      } else {\r\n        this.verificiran = false;\r\n        this.sid = data.sid;\r\n\r\n        http\r\n          .post(\"/rezultati/obrada/verifikacija/\" + data.sid, {\r\n            site: this.$store.state.site,\r\n            token: this.$store.state.token,\r\n            verify: false,\r\n          })\r\n          .then((res) => {\r\n            http\r\n              .get(\r\n                \"rezultati/odobravanje/samples/\" +\r\n                  this.$route.params.patient +\r\n                  \"/\" +\r\n                  this.$route.params.id +\r\n                  \"?token=\" +\r\n                  this.$store.state.token +\r\n                  \"&site=\" +\r\n                  this.$store.state.site +\r\n                  \"&date=\" +\r\n                  this.$route.query.date,\r\n                {}\r\n              )\r\n              .then((res) => {\r\n                this.sample.status = \"ODOBREN\";\r\n\r\n                this.final_pdf = res.data.final_pdf;\r\n\r\n                this.count = res.data.results.length;\r\n                this.approved = 0;\r\n\r\n                this.odobren = true;\r\n                this.verificiran = true;\r\n                this.verified = 0;\r\n                this.partials = [];\r\n                this.partials_condition = false;\r\n\r\n                res.data.results.forEach((element) => {\r\n                  if (element.verificiran) {\r\n                    this.verified++;\r\n                    this.partials.push(element._id);\r\n                  }\r\n                  if (\r\n                    element.status === \"ODOBREN\" ||\r\n                    element.status === \"VERIFICIRAN\"\r\n                  ) {\r\n                    this.approved++;\r\n                  }\r\n                  if (\r\n                    element.status != \"ODOBREN\" &&\r\n                    element.status != \"VERIFICIRAN\"\r\n                  ) {\r\n                    this.odobren = false;\r\n                  }\r\n                  if (!element.verificiran) {\r\n                    this.verificiran = false;\r\n                  }\r\n                });\r\n\r\n                if (this.count > this.verified && this.verified > 1) {\r\n                  this.partials_condition = true;\r\n                }\r\n\r\n                this.uzorci = [];\r\n\r\n                res.data.results.forEach((element) => {\r\n                  var check = 0;\r\n                  var zaprimljen = 0;\r\n                  var realizovan = 0;\r\n\r\n                  if (element.verificiran) {\r\n                    var status_uzorka = \"VERIFICIRAN\";\r\n                  } else {\r\n                    var status_uzorka = element.status;\r\n                  }\r\n\r\n                  element.rezultati.forEach((test) => {\r\n                    check++;\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                    ) {\r\n                      zaprimljen++;\r\n                    }\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                    ) {\r\n                      realizovan++;\r\n                    }\r\n\r\n                    if (check === element.rezultati.length) {\r\n                      // console.log(\"Provjera: Unverify\")\r\n\r\n                      if (status_uzorka === \"VERIFICIRAN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"VERIFICIRAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      } else if (status_uzorka === \"ODOBREN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"ODOBREN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      } else if (zaprimljen < 1) {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"REALIZOVAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      } else if (realizovan < 1) {\r\n                        var stat = \"ZAPRIMLJEN\";\r\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                          if (\r\n                            element.rezultati[0].rezultat[0].rezultat_m.length\r\n                          ) {\r\n                            stat = \"REALIZOVAN\";\r\n                          }\r\n                        }\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: stat,\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      } else {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"U OBRADI\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      }\r\n                    }\r\n                  });\r\n                });\r\n\r\n                this.uzorci = this.uzorci.sort(function (a, b) {\r\n                  return a.sid.localeCompare(b.sid, undefined, {\r\n                    numeric: true,\r\n                    sensitivity: \"base\",\r\n                  });\r\n                });\r\n\r\n                if (!this.verificiran) {\r\n                  http\r\n                    .post(\"rezultati/nalazi/status\", {\r\n                      token: this.$store.state.token,\r\n                      site: this.$store.state.site,\r\n                      timestamp: this.timestamp,\r\n                      location: \"/\",\r\n                      naziv: this.timestamp,\r\n                      status: false,\r\n                    })\r\n                    .then((res) => {\r\n                      this.main = true;\r\n                    });\r\n                } else {\r\n                  this.main = true;\r\n                }\r\n              });\r\n          });\r\n      }\r\n    },\r\n\r\n    GetResults(data, status) {\r\n      this.sample_status = status;\r\n      this.vise = [];\r\n      this.labassay = \"\";\r\n      http\r\n        .post(\r\n          \"/rezultati/odobravanje/results\" +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site,\r\n          {\r\n            id: this.sample.sid,\r\n            labassay: data.labassay_id,\r\n          }\r\n        )\r\n        .then((res) => {\r\n          if (res.data.success) {\r\n            this.vise = res.data.element;\r\n            this.labassay =\r\n              this.vise.labassay.naziv + \" (\" + this.vise.labassay.analit + \")\";\r\n\r\n            var i = 0;\r\n            res.data.element.rezultat.forEach((element) => {\r\n              i++;\r\n              if (res.data.element.rezultat.length == i) {\r\n                element.izabran = true;\r\n              } else {\r\n                element.izabran = false;\r\n              }\r\n            });\r\n\r\n            this.vise.rezultat.sort(function (a, b) {\r\n              return Date.parse(a.created_at) == Date.parse(b.created_at)\r\n                ? 0\r\n                : +(Date.parse(a.created_at) < Date.parse(b.created_at)) || -1;\r\n            });\r\n\r\n            this.$refs.staticModalAllResults.open();\r\n          }\r\n        });\r\n    },\r\n\r\n    GetResultsMulti(data, status) {\r\n      this.sample_status = status;\r\n\r\n      this.multi_rezultati = [];\r\n      this.multi_test = data.ime + \" (\" + data.analit + \")\";\r\n\r\n      // this.$refs.staticModalResultsMulti.open();\r\n\r\n      // this.multi_rezultati = data.multi_rezultati\r\n\r\n      data.multi_rezultati.forEach((element) => {\r\n        element.rezultat.forEach((rez) => {});\r\n      });\r\n    },\r\n\r\n    IzborTesta(vise, test) {\r\n      document.getElementById(this.sample.sid).click();\r\n\r\n      http\r\n        .post(\r\n          \"/rezultati/odobravanje/choose\" +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site,\r\n          {\r\n            id: this.sample.sid,\r\n            labassay: vise.labassay._id,\r\n            picked: test._id,\r\n          }\r\n        )\r\n        .then((res) => {\r\n          document.getElementById(this.sample.sid).click();\r\n          this.$refs.staticModalAllResults.close();\r\n        });\r\n    },\r\n\r\n    Partials() {\r\n      http\r\n        .post(\"nalazi/create\", {\r\n          token: this.$store.state.token,\r\n          site: this.$store.state.site,\r\n          type: \"partial\",\r\n          uzorci: this.uzorci,\r\n          samples: this.partials,\r\n          timestamp: this.timestamp,\r\n          napomena: \"\",\r\n          status: false,\r\n          idNalaza: \"\",\r\n          location: \"/partials\",\r\n          klijent: this.klijent,\r\n          naziv: this.timestamp,\r\n        })\r\n        .then((res) => {\r\n          if (res.data.success) {\r\n            if (!res.data.success) {\r\n              this.$refs.staticModalError.open();\r\n            } else {\r\n              this.path = this.timestamp + \".pdf\";\r\n\r\n              this.url = server + \"nalazi/partials/\" + this.path;\r\n\r\n              var options = {\r\n                width: \"100%\",\r\n                height: \"800px\",\r\n              };\r\n              PDFObject.embed(this.url, \"#pdf-container\", options);\r\n\r\n              this.email_button = true;\r\n              this.main = false;\r\n              this.pdf = true;\r\n            }\r\n          }\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.collapse-page {\r\n  &__content {\r\n    padding: 2rem;\r\n    &__title {\r\n      font-size: 1.375rem;\r\n      font-weight: bold;\r\n    }\r\n  }\r\n}\r\n\r\n.icon-bar a {\r\n  color: #fff;\r\n  text-decoration: none;\r\n}\r\n\r\n.icon-bar a:hover {\r\n  color: #4ae387;\r\n}\r\n\r\ni:hover {\r\n  color: #4ae387 !important;\r\n}\r\n\r\n.circle {\r\n  width: 1rem;\r\n  opacity: 0.5;\r\n  height: 1rem;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/obrada/Obrada.vue","exports = module.exports = require(\"../../css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".vld-overlay{bottom:0;left:0;position:absolute;right:0;top:0;align-items:center;display:none;justify-content:center;overflow:hidden;z-index:1}.vld-overlay.is-active{display:flex}.vld-overlay.is-full-page{z-index:999;position:fixed}.vld-overlay .vld-background{bottom:0;left:0;position:absolute;right:0;top:0;background:#fff;opacity:.5}.vld-overlay .vld-icon,.vld-parent{position:relative}\", \"\", {\"version\":3,\"sources\":[\"C:/Users/atom/Desktop/BioLAB/client/node_modules/vue-loading-overlay/dist/vue-loading.css\"],\"names\":[],\"mappings\":\"AAAA,aACE,SAAU,AACV,OAAQ,AACR,kBAAmB,AACnB,QAAS,AACT,MAAO,AACP,mBAAoB,AACpB,aAAc,AACd,uBAAwB,AACxB,gBAAiB,AACjB,SAAU,CACX,AAED,uBACE,YAAa,CACd,AAED,0BACE,YAAa,AACb,cAAe,CAChB,AAED,6BACE,SAAU,AACV,OAAQ,AACR,kBAAmB,AACnB,QAAS,AACT,MAAO,AACP,gBAAiB,AACjB,UAAY,CACb,AAED,mCACE,iBAAkB,CACnB\",\"file\":\"vue-loading.css\",\"sourcesContent\":[\".vld-overlay {\\n  bottom: 0;\\n  left: 0;\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  align-items: center;\\n  display: none;\\n  justify-content: center;\\n  overflow: hidden;\\n  z-index: 1\\n}\\n\\n.vld-overlay.is-active {\\n  display: flex\\n}\\n\\n.vld-overlay.is-full-page {\\n  z-index: 999;\\n  position: fixed\\n}\\n\\n.vld-overlay .vld-background {\\n  bottom: 0;\\n  left: 0;\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  background: #fff;\\n  opacity: 0.5\\n}\\n\\n.vld-overlay .vld-icon, .vld-parent {\\n  position: relative\\n}\\n\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loading-overlay/dist/vue-loading.css\n// module id = MbHo\n// module chunks = 4 5 6 7 9 14 16 17 18 19 25 26 27 28 29 30 31 32 43 45 46 48 49 50 51 52 53 54 55 56 57 58 59 60","<template>\r\n  <span class=\"circle\" :class=\"classObject\"></span>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"badgeColumn\",\r\n  props: {\r\n    rowData: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    rowIndex: {\r\n      type: Number\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      classObject: {\r\n        \"badge-warning\": this.rowIndex % 6 === 0,\r\n        \"badge-primary\": this.rowIndex % 6 === 1,\r\n        \"badge-danger\": this.rowIndex % 6 === 2,\r\n        \"badge-info\": this.rowIndex % 6 === 3,\r\n        \"badge-violet\": this.rowIndex % 6 === 4,\r\n        \"badge-dark-blue\": this.rowIndex % 6 === 5\r\n      }\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.circle {\r\n  width: 0.4rem;\r\n  height: 0.4rem;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/obrada/BadgeColumn.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"circle\",class:_vm.classObject})}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-1099f53e\",\"hasScoped\":true,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/obrada/BadgeColumn.vue\n// module id = RHNw\n// module chunks = 17 33 44 66","// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = require('./_to-iobject');\nvar gOPN = require('./_object-gopn').f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-gopn-ext.js\n// module id = Rrel\n// module chunks = 17","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../css-loader/index.js??ref--7-2!./vue-loading.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../vue-style-loader/lib/addStylesClient.js\")(\"745170b4\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loading-overlay/dist/vue-loading.css\n// module id = SYh3\n// module chunks = 4 5 6 7 9 14 16 17 18 19 25 26 27 28 29 30 31 32 43 45 46 48 49 50 51 52 53 54 55 56 57 58 59 60","/*global ActiveXObject, window, console, define, module, jQuery */\n//jshint unused:false, strict: false\n\n/*\n    PDFObject v2.1.1\n    https://github.com/pipwerks/PDFObject\n    Copyright (c) 2008-2018 Philip Hutchison\n    MIT-style license: http://pipwerks.mit-license.org/\n    UMD module pattern from https://github.com/umdjs/umd/blob/master/templates/returnExports.js\n*/\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], factory);\n    } else if (typeof module === 'object' && module.exports) {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    } else {\n        // Browser globals (root is window)\n        root.PDFObject = factory();\n  }\n}(this, function () {\n\n    \"use strict\";\n    //jshint unused:true\n\n    //PDFObject is designed for client-side (browsers), not server-side (node)\n    //Will choke on undefined navigator and window vars when run on server\n    //Return boolean false and exit function when running server-side\n\n    if(typeof window === \"undefined\" || typeof navigator === \"undefined\"){ return false; }\n\n    var pdfobjectversion = \"2.1.1\",\n        ua = window.navigator.userAgent,\n\n        //declare booleans\n        supportsPDFs,\n        isIE,\n        supportsPdfMimeType = (typeof navigator.mimeTypes['application/pdf'] !== \"undefined\"),\n        supportsPdfActiveX,\n        isModernBrowser = (function (){ return (typeof window.Promise !== \"undefined\"); })(),\n        isFirefox = (function (){ return (ua.indexOf(\"irefox\") !== -1); } )(),\n        isFirefoxWithPDFJS = (function (){\n            //Firefox started shipping PDF.js in Firefox 19.\n            //If this is Firefox 19 or greater, assume PDF.js is available\n            if(!isFirefox){ return false; }\n            //parse userAgent string to get release version (\"rv\")\n            //ex: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:57.0) Gecko/20100101 Firefox/57.0\n            return (parseInt(ua.split(\"rv:\")[1].split(\".\")[0], 10) > 18);\n        })(),\n        isIOS = (function (){ return (/iphone|ipad|ipod/i.test(ua.toLowerCase())); })(),\n\n        //declare functions\n        createAXO,\n        buildFragmentString,\n        log,\n        embedError,\n        embed,\n        getTargetElement,\n        generatePDFJSiframe,\n        generateEmbedElement;\n\n\n    /* ----------------------------------------------------\n       Supporting functions\n       ---------------------------------------------------- */\n\n    createAXO = function (type){\n        var ax;\n        try {\n            ax = new ActiveXObject(type);\n        } catch (e) {\n            ax = null; //ensure ax remains null\n        }\n        return ax;\n    };\n\n    //IE11 still uses ActiveX for Adobe Reader, but IE 11 doesn't expose\n    //window.ActiveXObject the same way previous versions of IE did\n    //window.ActiveXObject will evaluate to false in IE 11, but \"ActiveXObject\" in window evaluates to true\n    //so check the first one for older IE, and the second for IE11\n    //FWIW, MS Edge (replacing IE11) does not support ActiveX at all, both will evaluate false\n    //Constructed as a method (not a prop) to avoid unneccesarry overhead -- will only be evaluated if needed\n    isIE = function (){ return !!(window.ActiveXObject || \"ActiveXObject\" in window); };\n\n    //If either ActiveX support for \"AcroPDF.PDF\" or \"PDF.PdfCtrl\" are found, return true\n    //Constructed as a method (not a prop) to avoid unneccesarry overhead -- will only be evaluated if needed\n    supportsPdfActiveX = function (){ return !!(createAXO(\"AcroPDF.PDF\") || createAXO(\"PDF.PdfCtrl\")); };\n\n    //Determines whether PDF support is available\n    supportsPDFs = (\n        //as of iOS 12, inline PDF rendering is still not supported in Safari or native webview\n        //3rd-party browsers (eg Chrome, Firefox) use Apple's webview for rendering, and thus the same result as Safari\n        //Therefore if iOS, we shall assume that PDF support is not available\n        !isIOS && (\n            //Modern versions of Firefox come bundled with PDFJS\n            isFirefoxWithPDFJS || \n            //Browsers that still support the original MIME type check\n            supportsPdfMimeType || (\n                //Pity the poor souls still using IE\n                isIE() && supportsPdfActiveX()\n            )\n        )\n    );\n\n    //Create a fragment identifier for using PDF Open parameters when embedding PDF\n    buildFragmentString = function(pdfParams){\n\n        var string = \"\",\n            prop;\n\n        if(pdfParams){\n\n            for (prop in pdfParams) {\n                if (pdfParams.hasOwnProperty(prop)) {\n                    string += encodeURIComponent(prop) + \"=\" + encodeURIComponent(pdfParams[prop]) + \"&\";\n                }\n            }\n\n            //The string will be empty if no PDF Params found\n            if(string){\n\n                string = \"#\" + string;\n\n                //Remove last ampersand\n                string = string.slice(0, string.length - 1);\n\n            }\n\n        }\n\n        return string;\n\n    };\n\n    log = function (msg){\n        if(typeof console !== \"undefined\" && console.log){\n            console.log(\"[PDFObject] \" + msg);\n        }\n    };\n\n    embedError = function (msg){\n        log(msg);\n        return false;\n    };\n\n    getTargetElement = function (targetSelector){\n\n        //Default to body for full-browser PDF\n        var targetNode = document.body;\n\n        //If a targetSelector is specified, check to see whether\n        //it's passing a selector, jQuery object, or an HTML element\n\n        if(typeof targetSelector === \"string\"){\n\n            //Is CSS selector\n            targetNode = document.querySelector(targetSelector);\n\n        } else if (typeof jQuery !== \"undefined\" && targetSelector instanceof jQuery && targetSelector.length) {\n\n            //Is jQuery element. Extract HTML node\n            targetNode = targetSelector.get(0);\n\n        } else if (typeof targetSelector.nodeType !== \"undefined\" && targetSelector.nodeType === 1){\n\n            //Is HTML element\n            targetNode = targetSelector;\n\n        }\n\n        return targetNode;\n\n    };\n\n    generatePDFJSiframe = function (targetNode, url, pdfOpenFragment, PDFJS_URL, id){\n\n        var fullURL = PDFJS_URL + \"?file=\" + encodeURIComponent(url) + pdfOpenFragment;\n        var scrollfix = (isIOS) ? \"-webkit-overflow-scrolling: touch; overflow-y: scroll; \" : \"overflow: hidden; \";\n        var iframe = \"<div style='\" + scrollfix + \"position: absolute; top: 0; right: 0; bottom: 0; left: 0;'><iframe  \" + id + \" src='\" + fullURL + \"' style='border: none; width: 100%; height: 100%;' frameborder='0'></iframe></div>\";\n        targetNode.className += \" pdfobject-container\";\n        targetNode.style.position = \"relative\";\n        targetNode.style.overflow = \"auto\";\n        targetNode.innerHTML = iframe;\n        return targetNode.getElementsByTagName(\"iframe\")[0];\n\n    };\n\n    generateEmbedElement = function (targetNode, targetSelector, url, pdfOpenFragment, width, height, id){\n\n        var style = \"\";\n\n        if(targetSelector && targetSelector !== document.body){\n            style = \"width: \" + width + \"; height: \" + height + \";\";\n        } else {\n            style = \"position: absolute; top: 0; right: 0; bottom: 0; left: 0; width: 100%; height: 100%;\";\n        }\n\n        targetNode.className += \" pdfobject-container\";\n        targetNode.innerHTML = \"<embed \" + id + \" class='pdfobject' src='\" + url + pdfOpenFragment + \"' type='application/pdf' style='overflow: auto; \" + style + \"'/>\";\n\n        return targetNode.getElementsByTagName(\"embed\")[0];\n\n    };\n\n    embed = function(url, targetSelector, options){\n\n        //Ensure URL is available. If not, exit now.\n        if(typeof url !== \"string\"){ return embedError(\"URL is not valid\"); }\n\n        //If targetSelector is not defined, convert to boolean\n        targetSelector = (typeof targetSelector !== \"undefined\") ? targetSelector : false;\n\n        //Ensure options object is not undefined -- enables easier error checking below\n        options = (typeof options !== \"undefined\") ? options : {};\n\n        //Get passed options, or set reasonable defaults\n        var id = (options.id && typeof options.id === \"string\") ? \"id='\" + options.id + \"'\" : \"\",\n            page = (options.page) ? options.page : false,\n            pdfOpenParams = (options.pdfOpenParams) ? options.pdfOpenParams : {},\n            fallbackLink = (typeof options.fallbackLink !== \"undefined\") ? options.fallbackLink : true,\n            width = (options.width) ? options.width : \"100%\",\n            height = (options.height) ? options.height : \"100%\",\n            assumptionMode = (typeof options.assumptionMode === \"boolean\") ? options.assumptionMode : true,\n            forcePDFJS = (typeof options.forcePDFJS === \"boolean\") ? options.forcePDFJS : false,\n            PDFJS_URL = (options.PDFJS_URL) ? options.PDFJS_URL : false,\n            targetNode = getTargetElement(targetSelector),\n            fallbackHTML = \"\",\n            pdfOpenFragment = \"\",\n            fallbackHTML_default = \"<p>This browser does not support inline PDFs. Please download the PDF to view it: <a href='[url]'>Download PDF</a></p>\";\n\n        //If target element is specified but is not valid, exit without doing anything\n        if(!targetNode){ return embedError(\"Target element cannot be determined\"); }\n\n\n        //page option overrides pdfOpenParams, if found\n        if(page){\n            pdfOpenParams.page = page;\n        }\n\n        //Stringify optional Adobe params for opening document (as fragment identifier)\n        pdfOpenFragment = buildFragmentString(pdfOpenParams);\n\n        //Do the dance\n\n        //If the forcePDFJS option is invoked, skip everything else and embed as directed\n        if(forcePDFJS && PDFJS_URL){\n\n            return generatePDFJSiframe(targetNode, url, pdfOpenFragment, PDFJS_URL, id);\n\n        //If traditional support is provided, or if this is a modern browser and not iOS (see comment for supportsPDFs declaration)\n        } else if(supportsPDFs || (assumptionMode && isModernBrowser && !isIOS)){\n\n            return generateEmbedElement(targetNode, targetSelector, url, pdfOpenFragment, width, height, id);\n\n        //If everything else has failed and a PDFJS fallback is provided, try to use it\n        } else if(PDFJS_URL){\n\n            return generatePDFJSiframe(targetNode, url, pdfOpenFragment, PDFJS_URL, id);\n\n        } else {\n\n            //Display the fallback link if available\n            if(fallbackLink){\n\n                fallbackHTML = (typeof fallbackLink === \"string\") ? fallbackLink : fallbackHTML_default;\n                targetNode.innerHTML = fallbackHTML.replace(/\\[url\\]/g, url);\n\n            }\n\n            return embedError(\"This browser does not support embedded PDFs\");\n\n        }\n\n    };\n\n    return {\n        embed: function (a,b,c){ return embed(a,b,c); },\n        pdfobjectversion: (function () { return pdfobjectversion; })(),\n        supportsPDFs: (function (){ return supportsPDFs; })()\n    };\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfobject/pdfobject.js\n// module id = UqI+\n// module chunks = 17 26 43 47","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1099f53e\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./BadgeColumn.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./BadgeColumn.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1099f53e\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./BadgeColumn.vue\"\n/* template functional */\n  var __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-1099f53e\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/obrada/BadgeColumn.vue\n// module id = XMpX\n// module chunks = 17 33 44 66","!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(\"VueLoading\",[],e):\"object\"==typeof exports?exports.VueLoading=e():t.VueLoading=e()}(\"undefined\"!=typeof self?self:this,function(){return function(t){var e={};function i(n){if(e[n])return e[n].exports;var r=e[n]={i:n,l:!1,exports:{}};return t[n].call(r.exports,r,r.exports,i),r.l=!0,r.exports}return i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},i.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var r in t)i.d(n,r,function(e){return t[e]}.bind(null,r));return n},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,\"a\",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p=\"\",i(i.s=1)}([function(t,e,i){},function(t,e,i){\"use strict\";i.r(e);var n=\"undefined\"!=typeof window?window.HTMLElement:Object,r={mounted:function(){document.addEventListener(\"focusin\",this.focusIn)},methods:{focusIn:function(t){if(this.isActive&&t.target!==this.$el&&!this.$el.contains(t.target)){var e=this.container?this.container:this.isFullPage?null:this.$el.parentElement;(this.isFullPage||e&&e.contains(t.target))&&(t.preventDefault(),this.$el.focus())}}},beforeDestroy:function(){document.removeEventListener(\"focusin\",this.focusIn)}};function a(t,e,i,n,r,a,o,s){var u,l=\"function\"==typeof t?t.options:t;if(e&&(l.render=e,l.staticRenderFns=i,l._compiled=!0),n&&(l.functional=!0),a&&(l._scopeId=\"data-v-\"+a),o?(u=function(t){(t=t||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||\"undefined\"==typeof __VUE_SSR_CONTEXT__||(t=__VUE_SSR_CONTEXT__),r&&r.call(this,t),t&&t._registeredComponents&&t._registeredComponents.add(o)},l._ssrRegister=u):r&&(u=s?function(){r.call(this,this.$root.$options.shadowRoot)}:r),u)if(l.functional){l._injectStyles=u;var c=l.render;l.render=function(t,e){return u.call(e),c(t,e)}}else{var d=l.beforeCreate;l.beforeCreate=d?[].concat(d,u):[u]}return{exports:t,options:l}}var o=a({name:\"spinner\",props:{color:{type:String,default:\"#000\"},height:{type:Number,default:64},width:{type:Number,default:64}}},function(){var t=this.$createElement,e=this._self._c||t;return e(\"svg\",{attrs:{viewBox:\"0 0 38 38\",xmlns:\"http://www.w3.org/2000/svg\",width:this.width,height:this.height,stroke:this.color}},[e(\"g\",{attrs:{fill:\"none\",\"fill-rule\":\"evenodd\"}},[e(\"g\",{attrs:{transform:\"translate(1 1)\",\"stroke-width\":\"2\"}},[e(\"circle\",{attrs:{\"stroke-opacity\":\".25\",cx:\"18\",cy:\"18\",r:\"18\"}}),e(\"path\",{attrs:{d:\"M36 18c0-9.94-8.06-18-18-18\"}},[e(\"animateTransform\",{attrs:{attributeName:\"transform\",type:\"rotate\",from:\"0 18 18\",to:\"360 18 18\",dur:\"0.8s\",repeatCount:\"indefinite\"}})],1)])])])},[],!1,null,null,null).exports,s=a({name:\"dots\",props:{color:{type:String,default:\"#000\"},height:{type:Number,default:240},width:{type:Number,default:60}}},function(){var t=this.$createElement,e=this._self._c||t;return e(\"svg\",{attrs:{viewBox:\"0 0 120 30\",xmlns:\"http://www.w3.org/2000/svg\",fill:this.color,width:this.width,height:this.height}},[e(\"circle\",{attrs:{cx:\"15\",cy:\"15\",r:\"15\"}},[e(\"animate\",{attrs:{attributeName:\"r\",from:\"15\",to:\"15\",begin:\"0s\",dur:\"0.8s\",values:\"15;9;15\",calcMode:\"linear\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"fill-opacity\",from:\"1\",to:\"1\",begin:\"0s\",dur:\"0.8s\",values:\"1;.5;1\",calcMode:\"linear\",repeatCount:\"indefinite\"}})]),e(\"circle\",{attrs:{cx:\"60\",cy:\"15\",r:\"9\",\"fill-opacity\":\"0.3\"}},[e(\"animate\",{attrs:{attributeName:\"r\",from:\"9\",to:\"9\",begin:\"0s\",dur:\"0.8s\",values:\"9;15;9\",calcMode:\"linear\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"fill-opacity\",from:\"0.5\",to:\"0.5\",begin:\"0s\",dur:\"0.8s\",values:\".5;1;.5\",calcMode:\"linear\",repeatCount:\"indefinite\"}})]),e(\"circle\",{attrs:{cx:\"105\",cy:\"15\",r:\"15\"}},[e(\"animate\",{attrs:{attributeName:\"r\",from:\"15\",to:\"15\",begin:\"0s\",dur:\"0.8s\",values:\"15;9;15\",calcMode:\"linear\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"fill-opacity\",from:\"1\",to:\"1\",begin:\"0s\",dur:\"0.8s\",values:\"1;.5;1\",calcMode:\"linear\",repeatCount:\"indefinite\"}})])])},[],!1,null,null,null).exports,u=a({name:\"bars\",props:{color:{type:String,default:\"#000\"},height:{type:Number,default:40},width:{type:Number,default:40}}},function(){var t=this.$createElement,e=this._self._c||t;return e(\"svg\",{attrs:{xmlns:\"http://www.w3.org/2000/svg\",viewBox:\"0 0 30 30\",height:this.height,width:this.width,fill:this.color}},[e(\"rect\",{attrs:{x:\"0\",y:\"13\",width:\"4\",height:\"5\"}},[e(\"animate\",{attrs:{attributeName:\"height\",attributeType:\"XML\",values:\"5;21;5\",begin:\"0s\",dur:\"0.6s\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"y\",attributeType:\"XML\",values:\"13; 5; 13\",begin:\"0s\",dur:\"0.6s\",repeatCount:\"indefinite\"}})]),e(\"rect\",{attrs:{x:\"10\",y:\"13\",width:\"4\",height:\"5\"}},[e(\"animate\",{attrs:{attributeName:\"height\",attributeType:\"XML\",values:\"5;21;5\",begin:\"0.15s\",dur:\"0.6s\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"y\",attributeType:\"XML\",values:\"13; 5; 13\",begin:\"0.15s\",dur:\"0.6s\",repeatCount:\"indefinite\"}})]),e(\"rect\",{attrs:{x:\"20\",y:\"13\",width:\"4\",height:\"5\"}},[e(\"animate\",{attrs:{attributeName:\"height\",attributeType:\"XML\",values:\"5;21;5\",begin:\"0.3s\",dur:\"0.6s\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"y\",attributeType:\"XML\",values:\"13; 5; 13\",begin:\"0.3s\",dur:\"0.6s\",repeatCount:\"indefinite\"}})])])},[],!1,null,null,null).exports,l=a({name:\"vue-loading\",mixins:[r],props:{active:Boolean,programmatic:Boolean,container:[Object,Function,n],isFullPage:{type:Boolean,default:!0},transition:{type:String,default:\"fade\"},canCancel:Boolean,onCancel:{type:Function,default:function(){}},color:String,backgroundColor:String,opacity:Number,width:Number,height:Number,zIndex:Number,loader:{type:String,default:\"spinner\"}},data:function(){return{isActive:this.active}},components:{Spinner:o,Dots:s,Bars:u},beforeMount:function(){this.programmatic&&(this.container?(this.isFullPage=!1,this.container.appendChild(this.$el)):document.body.appendChild(this.$el))},mounted:function(){this.programmatic&&(this.isActive=!0),document.addEventListener(\"keyup\",this.keyPress)},methods:{cancel:function(){this.canCancel&&this.isActive&&(this.hide(),this.onCancel.apply(null,arguments))},hide:function(){var t=this;this.$emit(\"hide\"),this.$emit(\"update:active\",!1),this.programmatic&&(this.isActive=!1,setTimeout(function(){var e;t.$destroy(),void 0!==(e=t.$el).remove?e.remove():e.parentNode.removeChild(e)},150))},keyPress:function(t){27===t.keyCode&&this.cancel()}},watch:{active:function(t){this.isActive=t}},beforeDestroy:function(){document.removeEventListener(\"keyup\",this.keyPress)}},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i(\"transition\",{attrs:{name:t.transition}},[i(\"div\",{directives:[{name:\"show\",rawName:\"v-show\",value:t.isActive,expression:\"isActive\"}],staticClass:\"vld-overlay is-active\",class:{\"is-full-page\":t.isFullPage},style:{zIndex:this.zIndex},attrs:{tabindex:\"0\",\"aria-busy\":t.isActive,\"aria-label\":\"Loading\"}},[i(\"div\",{staticClass:\"vld-background\",style:{background:this.backgroundColor,opacity:this.opacity},on:{click:function(e){return e.preventDefault(),t.cancel(e)}}}),i(\"div\",{staticClass:\"vld-icon\"},[t._t(\"before\"),t._t(\"default\",[i(t.loader,{tag:\"component\",attrs:{color:t.color,width:t.width,height:t.height}})]),t._t(\"after\")],2)])])},[],!1,null,null,null).exports,c=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return{show:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:e,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:i,a=Object.assign({},e,n,{programmatic:!0}),o=new(t.extend(l))({el:document.createElement(\"div\"),propsData:a}),s=Object.assign({},i,r);return Object.keys(s).map(function(t){o.$slots[t]=s[t]}),o}}};i(0);l.install=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},n=c(t,e,i);t.$loading=n,t.prototype.$loading=n};e.default=l}]).default});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loading-overlay/dist/vue-loading.min.js\n// module id = ZZvs\n// module chunks = 4 5 6 7 9 14 16 17 18 19 25 26 27 28 29 30 31 32 43 45 46 48 49 50 51 52 53 54 55 56 57 58 59 60","module.exports = { \"default\": require(\"core-js/library/fn/object/get-own-property-names\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/object/get-own-property-names.js\n// module id = aFK5\n// module chunks = 17","var interpretacija = require(\"./interpretacija\");\r\n\r\nmodule.exports = {\r\n  Interpretation: function(test, result, jedinica, dref, gref, site, interp, extend, spec) {\r\n   \r\n    var rezultat = result.trim()\r\n\r\n    switch (interp) {\r\n     case \"none\":\r\n        return [test, rezultat, interpretacija.None(rezultat, dref, gref)[0], jedinica, \"/\", interpretacija.None(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"A\":\r\n        return [test, rezultat, interpretacija.Standard(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.Standard(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"ogtt\":        \r\n        if(dref == \"0\" && gref == \"0\"){\r\n          var reference = \"/\"\r\n          return [test, rezultat, interpretacija.Standard(rezultat, dref, gref)[0], jedinica, reference, interpretacija.Standard(rezultat, dref, gref)[1], extend];\r\n        }else if(dref == \"0\" && gref != \"0\"){\r\n          var reference = \"< \" + gref\r\n          return [test, rezultat, interpretacija.Less(rezultat, dref, gref)[0], jedinica, reference, interpretacija.Less(rezultat, dref, gref)[1], extend];\r\n        }else{\r\n          var reference = dref + \" - \" + gref\r\n          return [test, rezultat, interpretacija.Standard(rezultat, dref, gref)[0], jedinica, reference, interpretacija.Standard(rezultat, dref, gref)[1], extend];\r\n        }        \r\n        break;\r\n      case \"insul\":\r\n        if(dref == \"0\" && gref == \"0\"){\r\n          var reference = \"/\"\r\n        }else{\r\n          var reference = dref + \" - \" + gref\r\n        }\r\n        return [test, rezultat, interpretacija.Standard(rezultat, dref, gref)[0], jedinica, reference, interpretacija.Standard(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"less\":\r\n        return [test, rezultat, interpretacija.Less(rezultat, dref, gref)[0], jedinica, \" < \" + gref, interpretacija.Less(rezultat, dref, gref)[1], extend];              \r\n        break; \r\n      case \"lesseq\":\r\n        return [test, rezultat, interpretacija.LessEqual(rezultat, dref, gref)[0], jedinica, \" ≤ \" + gref, interpretacija.LessEqual(rezultat, dref, gref)[1], extend];             \r\n        break;\r\n      case \"lesspl\":\r\n          return [test, rezultat, interpretacija.LessPlus(rezultat, dref, gref)[0], jedinica, \" < \" + gref + \" x 10^6\", interpretacija.LessPlus(rezultat, dref, gref)[1], extend];             \r\n          break; \r\n      case \"infekc\":\r\n        return [test, rezultat, interpretacija.Infekcija(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.Infekcija(rezultat, dref, gref)[1], extend];             \r\n        break; \r\n      case \"grt\":\r\n        return [test, rezultat, interpretacija.Greater(rezultat, dref, gref)[0], jedinica, \" > \" + gref, interpretacija.Greater(rezultat, dref, gref)[1], extend];        \r\n        break; \r\n      case \"grtno\":\r\n          return [test, rezultat, interpretacija.GreaterNoInterp(rezultat, dref, gref)[0], jedinica, \" > \" + gref, interpretacija.GreaterNoInterp(rezultat, dref, gref)[1], extend];        \r\n          break; \r\n      case \"grtpl\":\r\n        return [test, rezultat, interpretacija.Greater(rezultat, dref, gref)[0], jedinica, \" > \" + gref + \" x 10^6\", interpretacija.Greater(rezultat, dref, gref)[1], extend];        \r\n        break; \r\n      case \"grtepl\":\r\n          return [test, rezultat, interpretacija.GreaterEqual(rezultat, dref, gref)[0], jedinica, \" ≥ \" + gref + \" x 10^6\", interpretacija.GreaterEqual(rezultat, dref, gref)[1], extend];        \r\n          break; \r\n      case \"grte\":\r\n        return [test, rezultat, interpretacija.GreaterEqual(rezultat, dref, gref)[0], jedinica, \" ≥ \" + gref, interpretacija.GreaterEqual(rezultat, dref, gref)[1], extend];        \r\n        break;  \r\n      case \"neg\":\r\n        return [test, rezultat, interpretacija.Negativan(rezultat, dref, gref)[0], jedinica, \"negativan\", interpretacija.Negativan(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"trag\":\r\n        return [test, rezultat, interpretacija.Trag(rezultat, dref, gref)[0], jedinica, \"trag\", interpretacija.Trag(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"reakt\":\r\n        return [test, rezultat, interpretacija.Reaktivan(rezultat, dref, gref)[0], jedinica, \"negativan\", interpretacija.Reaktivan(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"norm\":\r\n        return [test, rezultat, interpretacija.Normalan(rezultat, dref, gref)[0], jedinica, \"normalna\", interpretacija.Normalan(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"norma\":\r\n        return [test, rezultat, interpretacija.Normalan(rezultat, dref, gref)[0], jedinica, \"normalan\", interpretacija.Normalan(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"ured\":\r\n        return [test, rezultat, interpretacija.Uredan(rezultat, dref, gref)[0], jedinica, \"uredna\", interpretacija.Uredan(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"plus\":\r\n        return [test, rezultat, interpretacija.Plus(rezultat, dref, gref)[0], jedinica, \"+ + +\", interpretacija.Plus(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"morf\":\r\n        return [test, rezultat, interpretacija.Morf(rezultat, dref, gref)[0], jedinica, gref, interpretacija.Morf(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"titar\":\r\n          return [test, rezultat, interpretacija.Titar(rezultat, dref, gref)[0], jedinica, \"< \" + dref + \":\" + gref, interpretacija.Titar(rezultat, dref, gref)[1], extend];\r\n          break;\r\n      case \"tsh\":\r\n        return [test, rezultat, interpretacija.TSH(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.TSH(rezultat, dref, gref)[1], extend];\r\n        break; \r\n      case \"trg\":      \r\n        return [test, rezultat, interpretacija.TRG(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.TRG(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"hol\":      \r\n        return [test, rezultat, interpretacija.HOL(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.HOL(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"hdl\":      \r\n        return [test, rezultat, interpretacija.HDL(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.HDL(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"ldl\":      \r\n        return [test, rezultat, interpretacija.LDL(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.LDL(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"fpsa\":      \r\n        return [test, rezultat, interpretacija.fPSA(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.fPSA(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"sediment\":\r\n        return [test, rezultat, interpretacija.Sedimentacija(rezultat, dref, gref)[0], jedinica, \"< \" + gref, interpretacija.Sedimentacija(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"bistar\":\r\n        return [test, rezultat, interpretacija.Bistar(rezultat, dref, gref)[0], jedinica, \"bistar\", interpretacija.Bistar(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"boja\":\r\n        return [test, rezultat, interpretacija.Boja(rezultat, dref, gref)[0], jedinica, \"žut\", interpretacija.Boja(rezultat, dref, gref)[1], extend];\r\n        break;   \r\n      case \"bojasp\":\r\n          return [test, rezultat, interpretacija.BojaSpermiogram(rezultat, dref, gref)[0], jedinica, \"blijedo žut\", interpretacija.BojaSpermiogram(rezultat, dref, gref)[1], extend];\r\n          break;    \r\n      case \"nesto\":\r\n        return [test, rezultat, interpretacija.Nesto(rezultat, dref, gref)[0], jedinica, \"nešto\", interpretacija.Nesto(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"exists\":\r\n        return [test, rezultat, interpretacija.Exists(rezultat, dref, gref)[0], jedinica, \" \", interpretacija.Exists(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"prisutno\":\r\n        return [test, rezultat, interpretacija.Prisutno(rezultat, dref, gref)[0], jedinica, \"0\", interpretacija.Prisutno(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"gljivice\":\r\n        return [test, rezultat, interpretacija.Gljivice(rezultat, dref, gref)[0], jedinica, \"0\", interpretacija.Gljivice(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"leuer\":\r\n          return [test, rezultat, interpretacija.LeuEr(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.LeuEr(rezultat, dref, gref)[1], extend];\r\n          break;\r\n      case \"nema\":\r\n          return [test, rezultat, interpretacija.Nema(rezultat, dref, gref)[0], jedinica, \"nema\", interpretacija.Nema(rezultat, dref, gref)[1], extend];\r\n          break;\r\n      case \"blst\":\r\n        return [test, rezultat, interpretacija.Blasti(rezultat, dref, gref)[0], jedinica, gref, interpretacija.Blasti(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"leu\":      \r\n        return [test, rezultat, interpretacija.LeuErc(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.LeuErc(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"spec\":      \r\n        return [test, rezultat, interpretacija.Specific(rezultat, dref, gref)[0], jedinica, spec, interpretacija.Specific(rezultat, dref, gref)[1], extend];\r\n        break;   \r\n          \r\n        \r\n\r\n      //\r\n\r\n\r\n\r\n      case \"da\":      \r\n        return [test, rezultat, interpretacija.Da(rezultat, dref, gref)[0], jedinica, \"da\", interpretacija.Da(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"e04\":      \r\n        return [test, rezultat, interpretacija.SpermIzgled(rezultat, dref, gref)[0], jedinica, \"uredan\", interpretacija.SpermIzgled(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"e05\":      \r\n        return [test, rezultat, interpretacija.SpermBoja(rezultat, dref, gref)[0], jedinica, \"sivo bijela\", interpretacija.SpermBoja(rezultat, dref, gref)[1], extend];\r\n        break;\r\n        \r\n        \r\n\r\n      //\r\n\r\n\r\n            \r\n      default:\r\n        return [test, rezultat, interpretacija.None(rezultat, dref, gref)[0], jedinica, \"/\", interpretacija.None(rezultat, dref, gref)[1], extend];\r\n        break;\r\n    }\r\n  }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/obrada/functions/reference.js","require('../../modules/es6.object.get-own-property-names');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function getOwnPropertyNames(it) {\n  return $Object.getOwnPropertyNames(it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/object/get-own-property-names.js\n// module id = gAsd\n// module chunks = 17","export default {\r\n  hex2rgb(hex, opacity) {\r\n    hex = (hex + \"\").trim();\r\n\r\n    let rgb = null;\r\n    let match = hex.match(/^#?(([0-9a-zA-Z]{3}){1,3})$/);\r\n\r\n    if (!match) {\r\n      return null;\r\n    }\r\n\r\n    rgb = {};\r\n\r\n    hex = match[1];\r\n\r\n    if (hex.length === 6) {\r\n      rgb.r = parseInt(hex.substring(0, 2), 16);\r\n      rgb.g = parseInt(hex.substring(2, 4), 16);\r\n      rgb.b = parseInt(hex.substring(4, 6), 16);\r\n    } else if (hex.length === 3) {\r\n      rgb.r = parseInt(hex.substring(0, 1) + hex.substring(0, 1), 16);\r\n      rgb.g = parseInt(hex.substring(1, 2) + hex.substring(1, 2), 16);\r\n      rgb.b = parseInt(hex.substring(2, 3) + hex.substring(2, 3), 16);\r\n    }\r\n\r\n    rgb.css = \"rgb\" + (opacity ? \"a\" : \"\") + \"(\";\r\n    rgb.css += rgb.r + \",\" + rgb.g + \",\" + rgb.b;\r\n    rgb.css += (opacity ? \",\" + opacity : \"\") + \")\";\r\n\r\n    return rgb;\r\n  }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/utils.js","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".circle[data-v-1099f53e]{width:.4rem;height:.4rem;border-radius:50%;display:inline-block}\", \"\", {\"version\":3,\"sources\":[\"C:/Users/atom/Desktop/BioLAB/client/src/components/obrada/BadgeColumn.vue\"],\"names\":[],\"mappings\":\"AACA,yBACE,YAAc,AACd,aAAe,AACf,kBAAmB,AACnB,oBAAsB,CACvB\",\"file\":\"BadgeColumn.vue\",\"sourcesContent\":[\"\\n.circle[data-v-1099f53e] {\\n  width: 0.4rem;\\n  height: 0.4rem;\\n  border-radius: 50%;\\n  display: inline-block;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-1099f53e\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/sass-loader/lib/loader.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/obrada/BadgeColumn.vue\n// module id = iF2Y\n// module chunks = 17 33 44 66","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = require('./_object-keys-internal');\nvar hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-gopn.js\n// module id = n0T6\n// module chunks = 17"],"sourceRoot":""}
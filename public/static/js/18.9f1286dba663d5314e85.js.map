{"version":3,"sources":["webpack:///static/js/18.9f1286dba663d5314e85.js","webpack:///./src/components/obrada/Obrada.vue","webpack:///./src/components/obrada/functions/interpretacija.js","webpack:///./src/components/obrada/BadgeColumn.vue?f0d0","webpack:///./src/components/obrada/Obrada.vue?53f6","webpack:///./src/components/obrada/data-izbornik/izbornik.js","webpack:///./node_modules/core-js/library/modules/es6.object.get-own-property-names.js","webpack:///./src/components/obrada/BadgeColumn.vue?fdfc","webpack:///src/components/obrada/Obrada.vue","webpack:///src/components/obrada/BadgeColumn.vue","webpack:///./node_modules/core-js/library/modules/_object-gopn-ext.js","webpack:///./src/components/obrada/BadgeColumn.vue?6981","webpack:///./node_modules/pdfobject/pdfobject.js","webpack:///./src/components/obrada/BadgeColumn.vue","webpack:///./node_modules/babel-runtime/core-js/object/get-own-property-names.js","webpack:///./src/components/obrada/functions/reference.js","webpack:///./node_modules/core-js/library/fn/object/get-own-property-names.js","webpack:///./src/services/utils.js","webpack:///./src/components/obrada/Obrada.vue?f258","webpack:///./src/components/obrada/Obrada.vue?e2ae","webpack:///./node_modules/core-js/library/modules/_object-gopn.js"],"names":["webpackJsonp","0fl9","module","__webpack_exports__","__webpack_require__","injectStyle","ssrContext","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Obrada_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_10b2afde_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Obrada_vue__","normalizeComponent","__vue_styles__","Component","3r/r","exports","None","result","dref","gref","replace","Standard","rezultat","isNaN","Number","Math","abs","Less","includes","LessEqual","LessPlus","Greater","GreaterNoInterp","GreaterEqual","Negativan","Trag","Reaktivan","Normalan","toLowerCase","Uredan","Plus","trim","SpermKolicina","SpermIzgled","SpermBoja","SpermLikvefakcija","SpermAglutinacija","Infekcija","TSH","TRG","HOL","HDL","LDL","fPSA","Sedimentacija","rez1","split","rez2","Bistar","Boja","BojaSpermiogram","Nesto","Exists","Prisutno","Gljivice","LeuEr","toUpperCase","Nema","Blasti","Morf","LeuErc","rez","Titar","Specific","6LuA","content","i","locals","83zh","8472","data","test","neg","reakt","G5/o","f","GXRP","render","_vm","this","_h","$createElement","_self","_c","staticClass","class","classObject","staticRenderFns","esExports","KUw5","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_own_property_names__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_own_property_names___default","n","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray__","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify__","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default","__WEBPACK_IMPORTED_MODULE_3_vue__","__WEBPACK_IMPORTED_MODULE_4__router__","__WEBPACK_IMPORTED_MODULE_5_vuex_store__","__WEBPACK_IMPORTED_MODULE_6_services_utils__","__WEBPACK_IMPORTED_MODULE_7__config_config_js__","__WEBPACK_IMPORTED_MODULE_8__BadgeColumn_vue__","__WEBPACK_IMPORTED_MODULE_9__main__","__WEBPACK_IMPORTED_MODULE_10__functions_reference_js__","__WEBPACK_IMPORTED_MODULE_10__functions_reference_js___default","__WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__","__WEBPACK_IMPORTED_MODULE_12_vue_loading_overlay__","__WEBPACK_IMPORTED_MODULE_12_vue_loading_overlay___default","__WEBPACK_IMPORTED_MODULE_13_vue_loading_overlay_dist_vue_loading_css__","__WEBPACK_IMPORTED_MODULE_13_vue_loading_overlay_dist_vue_loading_css___default","__WEBPACK_IMPORTED_MODULE_14__vuestic_components_vuestic_chart_chart_types_LineChart__","__WEBPACK_IMPORTED_MODULE_15_epic_spinners__","__WEBPACK_IMPORTED_MODULE_16_pdfobject__","__WEBPACK_IMPORTED_MODULE_16_pdfobject___default","component","name","AllowGetSample","MicrobiologyOrder","MicrobiologySample","ModalNegative","ModalPositive","ModalPositiveCondition","ShowAllBacteries","ShowAntibiotics","ShowBacteries","BacteryTabs","CurrentTab","CurrentTest","MicrobiologyModalHeader","SelectedBacteries","NegativeResultSelection","PositiveResultSelection","MicrobiologyScenario","Antibiotics","TemporaryAntibiotics","TemporaryBacteries","TemporaryBacteriesAdd","Antibiograms","Bacteries","MicrobiologyResult","negative","positive","BUG","F_RESULT","M_RESULT","DefaultBacteries","RemainingBacteries","NegativeDescriptions","PositiveDescriptions","datumRodjenja","imeRoditelja","adresaStanovanja","save_retest","multiparam_izbor","klijent","multiparam_id","analit","multiparams","Response","spinner","multiparam_izbornik","warning","analiza","text","control","main","show","pdf","header","lokacija","timestamp","pacijent","ime","prezime","jmbg","pid","sid","email","email_tmp","verificiran","email_button","final_pdf","odobren","approved","verified","partials","partials_condition","count","nalaz","report","path","url","uzorci","vise","samples","sample_status","labassay","multi_test","multi_rezultati","check","link","spec","testovi","rezultati","analysers","analyser","analyser_selected","analyser_patient","analitiprikaz","analiti","naslov","calculated","show_table","sample","resdata","email_changed","Previous","Next","Results","Datum","today","query","next","previous","pagination","forward_disabled","backward_disabled","data_length","data_min","data_pid","data_spol","query_date","today_date","starost","reference","interpretacije","toastText","toastIcon","toastPosition","toastDuration","isToastFullWidth","className","isLoading","fullPage","analiza_eval","showLineChart","optionsLineChart","dataLineChart","Procjena","jedinica","jedinice","graph","table_header","components","Loading","a","AtomSpinner","watch","console","log","beforeCreate","_this","get","$store","state","token","site","then","res","mounted","_this2","$on","forEach","element","opis","_id","_","isEmpty","palette","getters","obj","Multi","multi","param","rezultat_f","jedinice_f","interp","extend","refd","refg","updated_at","Date","datum","slice","time","getTime","getTimezoneOffset","toISOString","substring","vrijeme","kontrola","Interpretacija","push","length","sort","b","parse","responsive","maintainAspectRatio","title","display","scales","xAxes","gridLines","color","yAxes","labels","danger","primary","info","datasets","label","backgroundColor","hex2rgb","css","pointBorderColor","pointBackgroundColor","borderColor","transparent","setTimeout","$refs","staticModalDeleteSample","open","staticModalEditSample","staticModalComment","BarcodePrint","SaveResults","Approve","Verify","Disapprove","UnVerify","options","width","height","embed","staticModalError","pdf_exists","tip","dispatch","GetSingleSample","DeletedSample","EditSample","SaveMultiResults","SendMail","warn","AnalyserSelected","Sljedeci","Prethodni","staticModalFind","$route","params","id","patient","date","document","getElementById","click","post","userId","RetestSave","status","chosen","disabled","selected","antibiogram","antibiotici","ant","antibiotik","Scenario","rezultat_m","realizovan","results","zaprimljen","status_uzorka","removed","stat","localeCompare","undefined","numeric","sensitivity","$emit","bakterija","negativan","pozitivan","naziv","rbr_a","Antibiotici","largeModalneg","largeModalpos","concat","antibgr","antbtk","__v","beforeDestroy","$off","destroyed","created","Created","setDate","getDate","methods","_this3","success","ExclamationMulti","napomena","m_interp","m_opis","multiparam","interpretacija","snizeno","poviseno","Exclamation","dRef","gRef","staticModalExclamation","LabAssayEval","e","_this4","preventDefault","multidata","labassay_id","response","staticModalLabAssayEvalMulti","staticModalLabAssayEvalSingle","Evaluation","_this5","staticModalEvaluationMulti","staticModalEvaluationSingle","filteredAntibiotics","column","columns","_this6","filter","item","indexOf","filteredBacteries","_this7","AddAntibiotics","splice","AddBacteries","OpenMicroSelect","$event","_this8","topcije","grupa","grouporder","sifra","IDE","multi_count","kategorija","manual","select_options","eval","sekcija","anaassay","unit","edit","bakterije","neg_description","pos_description","refSet","retest","unshift","bakterioloski","bakterijed","bakterijei","neg_rezultati","poz_rezultati","counter","ima","bakt","maxVal","reduce","max","val","bact","staticModalMicroBacterySelect","OpenMicro","_this9","staticModalMicroBactery","SelectBactery","MicroResultSelect","event","_this10","staticModalSelectResult","ResetSample","staticModalResetSample","onCancel","_this11","found","toString","_this12","_this13","datRodjenja","godiste2","adresa","roditelj","customer","spol","str","tmp","jmbgDan","jmbgMjesec","jmbgGodina","jmbgObj","parse_date","zGodina","years","Email","antibiogrami","Povratak","Nazad","months","days","year","getFullYear","month","getMonth","day","yy","parseInt","mm","dd","floor","_this14","SelectAnalyser","_this15","anaassays","aparat","staticModalAparati","_this16","close","Reference","staticModalReference","_this17","printEPL","surname","pacijentRBr","godiste","code","from","_this18","_this19","type","idNalaza","location","memo","_this20","RetestEnable","_this21","target","id_u","id_t","RetestDisable","_this22","MultiGet","ana","_this23","single","noResult","kod","module_sn","mparam","izbornik","tmpOptionsAna","labID","nazivTesta","sn","dilucija","flag","rezultat_i","rezultat_multiple","izbor","largeModalMulti","MailDialog","staticModalSendMail","_this24","showToast","icon","position","duration","fullWidth","false","_this25","Calculate","edited","_this26","_this27","_this28","_this29","access","verify","sendEmail","staticModalVerifyPrivilege","_this30","GetResults","_this31","izabran","created_at","staticModalAllResults","GetResultsMulti","IzborTesta","_this32","picked","Partials","_this33","R7hf","props","rowData","required","rowIndex","badge-warning","badge-primary","badge-danger","badge-info","badge-violet","badge-dark-blue","Rrel","toIObject","gOPN","windowNames","window","getOwnPropertyNames","getWindowNames","it","call","S6Gs","version","sources","names","mappings","file","sourcesContent","sourceRoot","UqI+","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","root","factory","apply","navigator","supportsPDFs","isIE","supportsPdfActiveX","createAXO","buildFragmentString","embedError","getTargetElement","generatePDFJSiframe","generateEmbedElement","ua","userAgent","supportsPdfMimeType","mimeTypes","isModernBrowser","Promise","isFirefox","isFirefoxWithPDFJS","isIOS","ax","ActiveXObject","pdfParams","prop","string","hasOwnProperty","encodeURIComponent","msg","targetSelector","targetNode","body","querySelector","jQuery","nodeType","pdfOpenFragment","PDFJS_URL","fullURL","scrollfix","iframe","style","overflow","innerHTML","getElementsByTagName","page","pdfOpenParams","fallbackLink","assumptionMode","forcePDFJS","fallbackHTML","c","pdfobjectversion","XMpX","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_BadgeColumn_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0a28fd12_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_BadgeColumn_vue__","aFK5","default","__esModule","d5lM","Interpretation","gAsd","$Object","hLWQ","hex","opacity","rgb","match","r","g","kyCW","mIAj","directives","rawName","expression","on","_v","_s","attrs","size","domProps","input","composing","for","headerText","rezultati_length","staticStyle","min-height","_l","uzorak","key","slot","line-height","align","_e","text-transform","index","table-danger","table-success","table-warning","padding","padding-left","padding-right","font-size","fa fa-exclamation-triangle icon-right input-icon error-icon","fa fa-check success-icon icon-right input-icon","contextmenu","change","$$selectedVal","Array","prototype","o","map","_value","$set","multiple","option","final","ref","cancelText","okText","update:show","min-width","large","select","update","povratak","empty","bactery","checked","isArray","_i","$$a","$$el","$$c","$$i","tab","prikazi","abtk","model","callback","$$v","pos","border","desc","href","action","JSON","stringify","level","text-align","flex-direction","justify-content","align-items","float","vertical-align","animation-duration","active","can-cancel","on-cancel","is-full-page","update:active","n0T6","$keys","hiddenKeys","O"],"mappings":"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AC,WAAA,EACAC,SAAA,EACAC,SAAA,EACAC,SAAA,EACAC,YACAC,oBAAA,EACAC,MAAA,EACAC,SACAC,UACAC,KAAA,GACAC,IAAA,GACAC,UACAC,QACAC,WACAC,cAAA,GACAC,SAAA,GACAC,WAAA,GACAC,mBACAC,MAAA,GACAC,KAAA,GACAC,KAAA,IACAC,WACAC,aACAC,aACAC,YACA3C,WACA4C,qBACAC,oBACAC,iBACAC,WACAC,OAAA,GACAC,YAAA,EACAC,YAAA,EACAC,UACAC,WACAC,eAAA,EACAC,UAAAzC,IAAA,MACA0C,MAAA1C,IAAA,MACA2C,WACAC,OAAAC,MAAA,KAAAC,MAAA,KAAAC,KAAA,KAAAC,SAAA,MACAC,YAAA,EACAC,kBAAA,EACAC,mBAAA,EACAC,YAAA,EACAC,SAAA,EACAC,SAAA,EACAC,UAAA,GACAC,WAAA,GACAC,WAAA,GACAC,QAAA,GACAC,aACAC,gBACA,OACA,IACA,OACA,QACA,OACA,SACA,SACA,SACA,MACA,QACA,SACA,QACA,OACA,MACA,OACA,OACA,QACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,QACA,OACA,OACA,WACA,WACA,QACA,OACA,QACA,MACA,OACA,MACA,MACA,MACA,MACA,OACA,WACA,SACA,OACA,SACA,QACA,SACA,OACA,MACA,QAKAC,UAAA,GACAC,UAAA,GACAC,cAAA,GACAC,cAAA,KACAC,kBAAA,EACAC,UAAA,GAEAC,WAAA,EACAC,UAAA,EAIAC,gBACAC,eAAA,EACAC,oBACAC,iBACAC,YAIAC,SAAA,GACAC,YACAC,OAAA,EACAC,aAAA,KAGAC,YACAC,QAAAnJ,2DAAAoJ,EACAC,YAAAjJ,6CAAA,GAGAkJ,OACAhF,MAAA,WACAnG,KAAAmG,MAAAnJ,QAAAgD,KAAAoG,UAAApJ,SACAgD,KAAAyI,eAAA,IA4BAhG,cAAA,WACAzC,KAAAyC,gBACA2I,QAAAC,IAAA,oBAEArL,KAAAkD,wBAAA,0BACAlD,KAAAsD,qBAAAnH,SAAA,QACA6D,KAAA2C,wBAAA,EAEA3C,KAAA2C,wBAAA,IAKA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","file":"static/js/18.9f1286dba663d5314e85.js","sourcesContent":["webpackJsonp([18,55],{\n\n/***/ \"0fl9\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Obrada_vue__ = __webpack_require__(\"KUw5\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_10b2afde_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Obrada_vue__ = __webpack_require__(\"mIAj\");\nfunction injectStyle (ssrContext) {\n  __webpack_require__(\"83zh\")\n}\nvar normalizeComponent = __webpack_require__(\"VU/8\")\n/* script */\n\n/* template */\n\n/* template functional */\n  var __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-10b2afde\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Obrada_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_10b2afde_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Obrada_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ \"3r/r\":\n/***/ (function(module, exports) {\n\nmodule.exports = {\n  None: function None(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    return [\" \", \"No Class\"];\n  },\n\n  Standard: function Standard(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\" || dref == \"0\" && gref == \"0\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) < Number(Math.abs(dref))) {\n      return [\"L\", \"Red\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"H\", \"Red\"];\n    } else if (Number(rezultat) === Number(Math.abs(dref)) || Number(rezultat) === Number(Math.abs(gref))) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Less: function Less(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat.includes(\"pozitivan\") || rezultat.includes(\"pos\")) {\n      return [\"H\", \"Red\"];\n    } else if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) >= Number(Math.abs(gref))) {\n      return [\"H\", \"Red\"];\n    } else if (rezultat.includes(\"pozitivan\") || rezultat.includes(\"pos\")) {\n      return [\"H\", \"Red\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  LessEqual: function LessEqual(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"L\", \"Red\"];\n    } else if (Number(rezultat) == Number(Math.abs(gref))) {\n      return [\" \", \"Green\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  LessPlus: function LessPlus(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (isNaN(rezultat)) {\n      return [\"H\", \"Red\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"H\", \"Red\"];\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Greater: function Greater(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) < Number(Math.abs(gref))) {\n      return [\"L\", \"Red\"];\n    } else if (Number(rezultat) == Number(Math.abs(gref))) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  GreaterNoInterp: function GreaterNoInterp(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) < Number(Math.abs(gref))) {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) == Number(Math.abs(gref))) {\n      return [\" \", \"No Class\"];\n    } else {\n      return [\" \", \"No Class\"];\n    }\n  },\n\n  GreaterEqual: function GreaterEqual(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) < Number(Math.abs(gref))) {\n      return [\"L\", \"Red\"];\n    } else if (Number(rezultat) == Number(Math.abs(gref))) {\n      return [\" \", \"Green\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Negativan: function Negativan(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat.includes(\"pozitivan\") || rezultat.includes(\"pos\")) {\n      return [\"H\", \"Red\"];\n    } else if (rezultat.includes(\"negativan\") || rezultat.includes(\"neg\")) {\n      return [\" \", \"Green\"];\n    } else if (rezultat.includes(\"graničan\")) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"Red\"];\n    }\n  },\n\n  Trag: function Trag(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat.includes(\"pozitivan\") || rezultat.includes(\"pos\")) {\n      return [\"H\", \"Red\"];\n    } else if (rezultat.includes(\"negativan\") || rezultat.includes(\"neg\") || rezultat.includes(\"trag\")) {\n      return [\" \", \"Green\"];\n    } else if (rezultat.includes(\"graničan\")) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"Red\"];\n    }\n  },\n\n  Reaktivan: function Reaktivan(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat.includes(\"reaktivan\")) {\n      return [\"H\", \"Red\"];\n    } else if (rezultat.includes(\"negativan\")) {\n      return [\" \", \"Green\"];\n    } else if (rezultat.includes(\"graničan\")) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"No Class\"];\n    }\n  },\n\n  Normalan: function Normalan(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat.toLowerCase().includes(\"norm\") && !rezultat.toLowerCase().includes(\"nije\")) {\n      return [\" \", \"Green\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  Uredan: function Uredan(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat.toLowerCase().includes(\"ured\") && !rezultat.toLowerCase().includes(\"nije\")) {\n      return [\" \", \"Green\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  Plus: function Plus(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat.trim() === \"+++\" || rezultat.trim() === \"+ + +\") {\n      return [\" \", \"Green\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  SpermKolicina: function SpermKolicina(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat.trim() === \"da\" || rezultat.trim() === \"Da\") {\n      return [\" \", \"Green\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  SpermIzgled: function SpermIzgled(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat.toLowerCase() === \"uredan\" || rezultat.toLowerCase() === \"uredno\") {\n      return [\" \", \"Green\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  SpermBoja: function SpermBoja(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat.toLowerCase() === \"sivo bijela\") {\n      return [\" \", \"Green\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  SpermLikvefakcija: function SpermLikvefakcija(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat.toLowerCase() === \"uredna\") {\n      return [\" \", \"Green\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  SpermAglutinacija: function SpermAglutinacija(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat.toLowerCase() === \"nije prisutna\") {\n      return [\" \", \"Green\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  Infekcija: function Infekcija(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"pasivna infekcija\", \"Green\"];\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\n      return [\"siva zona\", \"Yellow\"];\n    } else {\n      return [\"svježa infekcija\", \"Red\"];\n    }\n  },\n\n  TSH: function TSH(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"hipotireoza\", \"Red\"];\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\n      return [\"eutireoza\", \"Green\"];\n    } else {\n      return [\"hipertireoza\", \"Red\"];\n    }\n  },\n\n  TRG: function TRG(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"visoko\", \"Red\"];\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\n      return [\"granično\", \"Yellow\"];\n    } else {\n      return [\"idealno\", \"Green\"];\n    }\n  },\n\n  HOL: function HOL(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"visoko\", \"Red\"];\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\n      return [\"granično\", \"Yellow\"];\n    } else {\n      return [\"idealno\", \"Green\"];\n    }\n  },\n\n  HDL: function HDL(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"nema rizika\", \"Green\"];\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\n      return [\"rizik\", \"Yellow\"];\n    } else {\n      return [\"visok rizik\", \"Red\"];\n    }\n  },\n\n  LDL: function LDL(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"visok rizik\", \"Red\"];\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\n      return [\"granično\", \"Yellow\"];\n    } else {\n      return [\"optimalno\", \"Green\"];\n    }\n  },\n\n  fPSA: function fPSA(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"benigni proces\", \"Green\"];\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\n      return [\"siva zona\", \"Yellow\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  Sedimentacija: function Sedimentacija(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat.includes(\"/\")) {\n      var rez1 = rezultat.split(\"/\")[0].trim();\n      var rez2 = rezultat.split(\"/\")[1].trim();\n    } else {\n      var rez1 = rezultat.trim();\n      var rez2 = rezultat.trim();\n    }\n\n    if (isNaN(rez1) || rez1 === \"\" || isNaN(rez2) || rez2 === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rez1) > Number(Math.abs(gref))) {\n      return [\"H\", \"Red\"];\n    } else if (Number(rez1) === Number(Math.abs(gref))) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Bistar: function Bistar(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat === \"bistar\") {\n      return [\" \", \"Green\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  Boja: function Boja(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat === \"svjetlo žut\" || rezultat === \"žut\") {\n      return [\" \", \"Green\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  BojaSpermiogram: function BojaSpermiogram(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat === \"blijedo žut\") {\n      return [\" \", \"Green\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  Nesto: function Nesto(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat.includes(\"masa\") || rezultat.includes(\"dosta\") || rezultat.includes(\"malo\")) {\n      return [\"H\", \"Red\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Exists: function Exists(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  Prisutno: function Prisutno(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(gref)) {\n      return [\"H\", \"Red\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Gljivice: function Gljivice(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(gref)) {\n      return [\"H\", \"Red\"];\n    } else if (isNaN(rezultat)) {\n      return [\"H\", \"Red\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  LeuEr: function LeuEr(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat.toUpperCase().includes(\"DOSTA\")) {\n      return [\"H\", \"Red\"];\n    } else if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(gref)) {\n      return [\"H\", \"Red\"];\n    } else if (Number(rezultat) === Number(gref)) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Nema: function Nema(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  Blasti: function Blasti(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) < Number(Math.abs(dref))) {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"H\", \"Red\"];\n    } else if (Number(rezultat) === Number(Math.abs(dref)) || Number(rezultat) === Number(Math.abs(gref))) {\n      return [\" \", \"No Class\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Morf: function Morf(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) === Number(Math.abs(dref)) || Number(rezultat) === Number(Math.abs(gref))) {\n      return [\" \", \"Green\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  LeuErc: function LeuErc(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat.includes(\"-\")) {\n      var rez = rezultat.split(\"-\")[1].trim();\n    } else {\n      var rez = rezultat.trim();\n    }\n\n    if (rez === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (isNaN(rez)) {\n      return [\"H\", \"Red\"];\n    } else if (Number(rez) > Number(gref)) {\n      return [\"H\", \"Red\"];\n    } else if (Number(rez) === Number(gref)) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Titar: function Titar(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat.includes(\":\")) {\n      var rez1 = rezultat.split(\":\")[0].trim();\n      var rez2 = rezultat.split(\":\")[1].trim();\n    } else {\n      var rez1 = rezultat.trim();\n      var rez2 = \"\";\n    }\n\n    if (isNaN(rez1) || rez1 === \"\" || rez1 != \"1\" || isNaN(rez2) || rez2 === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rez2) > Number(Math.abs(gref))) {\n      return [\"H\", \"Red\"];\n    } else if (Number(rez2) === Number(Math.abs(gref))) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Specific: function Specific(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    return [\" \", \"No Class\"];\n  }\n};\n\n/***/ }),\n\n/***/ \"6LuA\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"S6Gs\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"rjj0\")(\"7a538c38\", content, true);\n\n/***/ }),\n\n/***/ \"83zh\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"kyCW\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"rjj0\")(\"f13fe6f6\", content, true);\n\n/***/ }),\n\n/***/ \"8472\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar data = {\n  test: [\"\", \"test\"]\n};\n\nvar rez = {\n  neg: [\"\", \"negativan\", \"graničan\", \"pozitivan\"],\n  reakt: [\"\", \"negativan\", \"graničan\", \"reaktivan\"]\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  data: data,\n  rez: rez\n});\n\n/***/ }),\n\n/***/ \"G5/o\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.7 Object.getOwnPropertyNames(O)\n__webpack_require__(\"uqUo\")('getOwnPropertyNames', function () {\n  return __webpack_require__(\"Rrel\").f;\n});\n\n\n/***/ }),\n\n/***/ \"GXRP\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"circle\",class:_vm.classObject})}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ \"KUw5\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_own_property_names__ = __webpack_require__(\"aFK5\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_own_property_names___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_own_property_names__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray__ = __webpack_require__(\"Gu7T\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify__ = __webpack_require__(\"mvHQ\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_vue__ = __webpack_require__(\"7+uW\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__router__ = __webpack_require__(\"YaEn\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_vuex_store__ = __webpack_require__(\"IcnI\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_services_utils__ = __webpack_require__(\"hLWQ\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__config_config_js__ = __webpack_require__(\"1wn0\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__BadgeColumn_vue__ = __webpack_require__(\"XMpX\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__main__ = __webpack_require__(\"NHnr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__functions_reference_js__ = __webpack_require__(\"d5lM\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__functions_reference_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10__functions_reference_js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__ = __webpack_require__(\"8472\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_vue_loading_overlay__ = __webpack_require__(\"ZZvs\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_vue_loading_overlay___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_12_vue_loading_overlay__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_vue_loading_overlay_dist_vue_loading_css__ = __webpack_require__(\"SYh3\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_vue_loading_overlay_dist_vue_loading_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_13_vue_loading_overlay_dist_vue_loading_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__vuestic_components_vuestic_chart_chart_types_LineChart__ = __webpack_require__(\"eDOj\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15_epic_spinners__ = __webpack_require__(\"pyJd\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_pdfobject__ = __webpack_require__(\"UqI+\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_pdfobject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_16_pdfobject__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_3_vue__[\"default\"].component(\"line-chart\", __WEBPACK_IMPORTED_MODULE_14__vuestic_components_vuestic_chart_chart_types_LineChart__[\"a\" /* default */]);\n__WEBPACK_IMPORTED_MODULE_3_vue__[\"default\"].component(\"badge-column\", __WEBPACK_IMPORTED_MODULE_8__BadgeColumn_vue__[\"default\"]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: \"collapse-obrada\",\n\n  data: function data() {\n    return {\n\n      AllowGetSample: true,\n      MicrobiologyOrder: false,\n      MicrobiologySample: false,\n      ModalNegative: false,\n      ModalPositive: false,\n      ModalPositiveCondition: false,\n      ShowAllBacteries: false,\n      ShowAntibiotics: false,\n      ShowBacteries: false,\n      BacteryTabs: [\"\"],\n      CurrentTab: \"\",\n      CurrentTest: \"\",\n      MicrobiologyModalHeader: \"Predefinisani rezultati\",\n      SelectedBacteries: [],\n      NegativeResultSelection: \"\",\n      PositiveResultSelection: \"\",\n      MicrobiologyScenario: \"Unknown\",\n      Antibiotics: [],\n      TemporaryAntibiotics: [],\n      TemporaryBacteries: [],\n      TemporaryBacteriesAdd: [],\n      Antibiograms: [],\n      Bacteries: [],\n\n      MicrobiologyResult: {\n        negative: null,\n        positive: null,\n        BUG: null,\n        F_RESULT: \"\",\n        M_RESULT: [],\n        DefaultBacteries: [],\n        RemainingBacteries: [],\n        NegativeDescriptions: [],\n        PositiveDescriptions: []\n      },\n\n      datumRodjenja: \"\",\n      imeRoditelja: \"\",\n      adresaStanovanja: \"\",\n\n      save_retest: false,\n      multiparam_izbor: \"\",\n      klijent: null,\n      multiparam_id: \"\",\n      analit: {},\n      multiparams: [],\n      Response: {},\n      spinner: false,\n      multiparam_izbornik: [],\n      warning: { analiza: \"\", text: \"\", control: \"\" },\n      main: false,\n      show: true,\n      pdf: false,\n      header: \"\",\n      lokacija: {},\n      timestamp: \"\",\n      pacijent: \"\",\n      ime: \"\",\n      prezime: \"\",\n      jmbg: \"\",\n      pid: \"\",\n      sid: \"\",\n      email: \"\",\n      email_tmp: \"\",\n      verificiran: false,\n      email_button: false,\n      final_pdf: false,\n      odobren: false,\n      approved: 0,\n      verified: 0,\n      partials: [],\n      partials_condition: false,\n      count: 0,\n      nalaz: {},\n      report: {},\n      path: \"\",\n      url: \"\",\n      uzorci: [],\n      vise: [],\n      samples: [],\n      sample_status: \"\",\n      labassay: \"\",\n      multi_test: \"\",\n      multi_rezultati: [],\n      check: \"\",\n      link: \"\",\n      spec: \"*\",\n      testovi: [],\n      rezultati: [],\n      analysers: [],\n      analyser: {},\n      analiza: {},\n      analyser_selected: {},\n      analyser_patient: {},\n      analitiprikaz: [],\n      analiti: [],\n      naslov: \"\",\n      calculated: false,\n      show_table: false,\n      sample: {},\n      resdata: {},\n      email_changed: false,\n      Previous: { pid: null },\n      Next: { pid: null },\n      Results: [],\n      Datum: { today: null, query: null, next: null, previous: null },\n      pagination: false,\n      forward_disabled: false,\n      backward_disabled: false,\n      data_length: 0,\n      data_min: 1,\n      data_pid: 0,\n      data_spol: \"\",\n      query_date: \"\",\n      today_date: \"\",\n      starost: \"\",\n      reference: {},\n      interpretacije: [\"none\", \"A\", \"ogtt\", \"insul\", \"less\", \"lesseq\", \"lesspl\", \"infekc\", \"grt\", \"grtpl\", \"grtepl\", \"grtno\", \"grte\", \"neg\", \"nema\", \"urbl\", \"reakt\", \"e0x\", \"e02\", \"e04\", \"e05\", \"e07\", \"e08\", \"norm\", \"norma\", \"ured\", \"plus\", \"prisutno\", \"gljivice\", \"leuer\", \"morf\", \"titar\", \"tsh\", \"trag\", \"trg\", \"hol\", \"hdl\", \"ldl\", \"fpsa\", \"sediment\", \"bistar\", \"boja\", \"bojasp\", \"nesto\", \"exists\", \"blst\", \"leu\", \"spec\"],\n\n      toastText: \"\",\n      toastIcon: \"\",\n      toastPosition: \"\",\n      toastDuration: 2500,\n      isToastFullWidth: false,\n      className: \"\",\n\n      isLoading: false,\n      fullPage: true,\n\n      analiza_eval: {},\n      showLineChart: false,\n      optionsLineChart: {},\n      dataLineChart: {},\n      Procjena: [],\n\n      jedinica: \"\",\n      jedinice: [],\n      graph: false,\n      table_header: \"\"\n    };\n  },\n\n  components: {\n    Loading: __WEBPACK_IMPORTED_MODULE_12_vue_loading_overlay___default.a,\n    AtomSpinner: __WEBPACK_IMPORTED_MODULE_15_epic_spinners__[\"a\" /* AtomSpinner */]\n  },\n\n  watch: {\n    email: function email() {\n      if (this.email.trim() != this.email_tmp.trim()) {\n        this.email_changed = true;\n      }\n    },\n\n    ModalNegative: function ModalNegative() {\n      if (this.ModalNegative) {\n        console.log(\"Izbor: negativan\");\n\n        this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\n        if (this.MicrobiologyScenario.includes(\"MANB\")) {\n          this.ModalPositiveCondition = true;\n        } else {\n          this.ModalPositiveCondition = false;\n        }\n      }\n    },\n\n    ModalPositive: function ModalPositive() {\n      if (this.ModalPositive) {\n        console.log(\"Izbor: pozitivan\");\n\n        if (this.MicrobiologyScenario === \"MAIBNoR\") {\n          this.MicrobiologyModalHeader = \"Bakterije\";\n        } else {\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\n        }\n\n        if (this.MicrobiologyScenario.includes(\"MANB\")) {\n          this.ModalPositiveCondition = true;\n        } else {\n          this.ModalPositiveCondition = false;\n        }\n      }\n    },\n\n    MicrobiologyScenario: function MicrobiologyScenario() {\n      switch (this.MicrobiologyScenario) {\n        case \"MAIBNoR\":\n          this.ModalNegative = false;\n          this.ModalPositive = false;\n          this.ModalPositiveCondition = false;\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\n          this.NegativeResultSelection = \"\";\n          this.PositiveResultSelection = \"\";\n          this.SelectedBacteries = [];\n          this.ShowAllBacteries = false;\n\n          break;\n\n        case \"MAIBNeR\":\n          this.SelectedBacteries = [];\n\n          break;\n\n        case \"MAIBPoR\":\n          break;\n\n        case \"MANBNoR\":\n          this.ModalNegative = false;\n          this.ModalPositive = false;\n          this.ModalPositiveCondition = false;\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\n          this.NegativeResultSelection = \"\";\n          this.PositiveResultSelection = \"\";\n          this.SelectedBacteries = [];\n          this.ShowAllBacteries = false;\n\n          break;\n\n        case \"MANBNeR\":\n          this.SelectedBacteries = [];\n\n          break;\n\n        case \"MANBPoR\":\n          this.SelectedBacteries = [];\n\n          break;\n\n        default:\n          break;\n      }\n    }\n\n  },\n  beforeCreate: function beforeCreate() {\n    var _this = this;\n\n    __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"postavke/jedinice/mount/list?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site, {}).then(function (res) {\n      _this.jedinice = res.data.jedinica;\n    });\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Parametar\", function (data) {\n\n      _this2.spinner = true;\n\n      _this2.analit = {};\n\n      _this2.multiparams.forEach(function (element) {\n        if (element.opis === data) {\n          _this2.analit = element;\n          _this2.multiparam_id = element._id;\n          _this2.multiparam_izbor = data;\n        }\n      });\n\n      if (_.isEmpty(_this2.analit)) {} else {\n        if (!_.isEmpty(_this2.Response)) {\n          _this2.showLineChart = false;\n          var palette = __WEBPACK_IMPORTED_MODULE_5_vuex_store__[\"a\" /* default */].getters.palette;\n\n          _this2.Procjena = [];\n\n          var obj = {};\n          var count = 0;\n\n          _this2.Response.Multi.forEach(function (element) {\n            count++;\n            element.multi.forEach(function (param) {\n              if (_this2.multiparam_id == param.labassay && param.rezultat[0].rezultat_f.trim() != \"\") {\n                obj.rezultat = param.rezultat[0].rezultat_f;\n                obj.jedinica = param.rezultat[0].jedinice_f;\n                obj.analit = \"Nema podataka\";\n                obj.interp = param.interp;\n                obj.extend = param.extend;\n                obj.refd = param.refd;\n                obj.refg = param.refg;\n                obj.sid = \"Nema podataka\";\n                obj.updated_at = new Date(param.rezultat[0].updated_at);\n\n                var datum = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(9, 11) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(6, 8) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(1, 5);\n                var time = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date(param.rezultat[0].updated_at).getTime() - new Date(param.rezultat[0].updated_at).getTimezoneOffset() * 60000).toISOString()).substring(12, 17);\n                obj.datum = datum;\n                obj.vrijeme = time;\n                obj.kontrola = _this2.Interpretacija(\"\", obj.rezultat, obj.jedinica, obj.refd, obj.refg, _this2.$store.state.site, obj.interp, obj.extend, _this2.spec)[5];\n\n                _this2.Procjena.push(obj);\n                obj = {};\n              }\n            });\n\n            if (count == _this2.Response.Multi.length) {\n              _this2.Procjena.sort(function (a, b) {\n                return Date.parse(a.updated_at) == Date.parse(b.updated_at) ? 0 : +(Date.parse(a.updated_at) < Date.parse(b.updated_at)) || -1;\n              });\n\n              var data = [];\n\n              if (_this2.Procjena.length) {\n                _this2.optionsLineChart = {\n                  responsive: true,\n                  maintainAspectRatio: false,\n                  title: {\n                    display: true,\n                    text: \"\"\n                  },\n                  scales: {\n                    xAxes: [{\n                      display: true,\n                      gridLines: {\n                        display: true,\n                        color: \"#eee\"\n                      }\n                    }],\n                    yAxes: [{\n                      display: true,\n                      gridLines: {\n                        display: true,\n                        color: \"#eee\"\n                      }\n                    }]\n                  }\n                };\n\n                var labels = [];\n                var kontrola = [];\n                var temp = \"\";\n\n                _this2.Procjena.forEach(function (element) {\n                  if (!isNaN(element.rezultat.trim())) {\n                    switch (element.kontrola) {\n                      case \"Red\":\n                        kontrola.push(palette.danger);\n                        break;\n                      case \"Green\":\n                        kontrola.push(palette.primary);\n                        break;\n                      case \"Yellow\":\n                        kontrola.push(palette.warning);\n                        break;\n\n                      default:\n                        kontrola.push(palette.info);\n                        break;\n                    }\n\n                    labels.push(element.datum);\n                    data.push(element.rezultat);\n                  }\n                });\n\n                _this2.dataLineChart = {\n                  labels: labels,\n                  datasets: [{\n                    label: _this2.table_header,\n                    backgroundColor: __WEBPACK_IMPORTED_MODULE_6_services_utils__[\"a\" /* default */].hex2rgb(palette.info, 0.5).css,\n                    pointBorderColor: kontrola,\n                    pointBackgroundColor: kontrola,\n                    borderColor: palette.transparent,\n                    data: data\n                  }]\n                };\n\n                if (data.length) {\n                  setTimeout(function () {\n                    _this2.showLineChart = true;\n                  }, 500);\n                }\n              } else {\n\n                _this2.spinner = false;\n              }\n            }\n          });\n        } else {}\n      }\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"graph\", function () {\n      _this2.Procjena.sort(function (a, b) {\n        return Date.parse(a.updated_at) == Date.parse(b.updated_at) ? 0 : +(Date.parse(a.updated_at) < Date.parse(b.updated_at)) || -1;\n      });\n\n      var data = [];\n\n      if (_this2.Procjena.length) {\n        var palette = __WEBPACK_IMPORTED_MODULE_5_vuex_store__[\"a\" /* default */].getters.palette;\n        _this2.optionsLineChart = {\n          responsive: true,\n          maintainAspectRatio: false,\n          title: {\n            display: true,\n            text: \"\"\n          },\n          scales: {\n            xAxes: [{\n              display: true,\n              gridLines: {\n                display: true,\n                color: \"#eee\"\n              }\n            }],\n            yAxes: [{\n              display: true,\n              gridLines: {\n                display: true,\n                color: \"#eee\"\n              }\n            }]\n          }\n        };\n\n        var labels = [];\n        var kontrola = [];\n        var temp = \"\";\n\n        _this2.Procjena.forEach(function (element) {\n          if (!isNaN(element.rezultat.trim())) {\n            switch (element.kontrola) {\n              case \"Red\":\n                kontrola.push(palette.danger);\n                break;\n              case \"Green\":\n                kontrola.push(palette.primary);\n                break;\n              case \"Yellow\":\n                kontrola.push(palette.warning);\n                break;\n\n              default:\n                kontrola.push(palette.info);\n                break;\n            }\n\n            labels.push(element.datum);\n            data.push(element.rezultat);\n          }\n        });\n\n        _this2.dataLineChart = {\n          labels: labels,\n          datasets: [{\n            label: _this2.analiza_eval.ime + \" | \" + _this2.analiza_eval.analit,\n            backgroundColor: __WEBPACK_IMPORTED_MODULE_6_services_utils__[\"a\" /* default */].hex2rgb(palette.info, 0.5).css,\n            pointBorderColor: kontrola,\n            pointBackgroundColor: kontrola,\n            borderColor: palette.transparent,\n            data: data\n          }]\n        };\n\n        if (data.length) {\n          _this2.showLineChart = true;\n        }\n      } else {}\n      _this2.graph = false;\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"table\", function () {\n      _this2.Procjena.sort(function (a, b) {\n        return Date.parse(a.updated_at) == Date.parse(b.updated_at) ? 0 : +(Date.parse(a.updated_at) > Date.parse(b.updated_at)) || -1;\n      });\n\n      var data = [];\n\n      if (_this2.Procjena.length) {\n        var palette = __WEBPACK_IMPORTED_MODULE_5_vuex_store__[\"a\" /* default */].getters.palette;\n        _this2.optionsLineChart = {\n          responsive: true,\n          maintainAspectRatio: false,\n          title: {\n            display: true,\n            text: \"\"\n          },\n          scales: {\n            xAxes: [{\n              display: true,\n              gridLines: {\n                display: true,\n                color: \"#eee\"\n              }\n            }],\n            yAxes: [{\n              display: true,\n              gridLines: {\n                display: true,\n                color: \"#eee\"\n              }\n            }]\n          }\n        };\n\n        var labels = [];\n        var kontrola = [];\n        var temp = \"\";\n\n        _this2.Procjena.forEach(function (element) {\n          if (!isNaN(element.rezultat.trim())) {\n            switch (element.kontrola) {\n              case \"Red\":\n                kontrola.push(palette.danger);\n                break;\n              case \"Green\":\n                kontrola.push(palette.primary);\n                break;\n              case \"Yellow\":\n                kontrola.push(palette.warning);\n                break;\n\n              default:\n                kontrola.push(palette.info);\n                break;\n            }\n\n            labels.push(element.datum);\n            data.push(element.rezultat);\n          }\n        });\n\n        _this2.dataLineChart = {\n          labels: labels,\n          datasets: [{\n            label: _this2.analiza_eval.ime + \" | \" + _this2.analiza_eval.analit,\n            backgroundColor: __WEBPACK_IMPORTED_MODULE_6_services_utils__[\"a\" /* default */].hex2rgb(palette.info, 0.5).css,\n            pointBorderColor: kontrola,\n            pointBackgroundColor: kontrola,\n            borderColor: palette.transparent,\n            data: data\n          }]\n        };\n\n        if (data.length) {\n          _this2.showLineChart = true;\n        }\n      } else {}\n      _this2.graph = true;\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"trash\", function (data) {\n      _this2.sid = data.sid;\n      _this2.$refs.staticModalDeleteSample.open();\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"edit\", function (data) {\n      _this2.sid = data.sid;\n      _this2.$refs.staticModalEditSample.open();\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"comment\", function (data) {\n      _this2.sid = data.sid;\n      _this2.$refs.staticModalComment.open();\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"barcode\", function (data) {\n      _this2.BarcodePrint(data);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"save\", function (data) {\n      _this2.SaveResults(_this2.rezultati, \"save\");\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"check\", function (data) {\n      _this2.Approve(_this2.rezultati);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"verify\", function (data) {\n      _this2.Verify(data, \"verify\");\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"undo\", function (data) {\n      _this2.Disapprove(_this2.rezultati, \"undo\");\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"unlock\", function (data) {\n      _this2.UnVerify(data, \"unlock\");\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Nalaz\", function (data) {\n      if (!data.final_pdf) {\n        _this2.$refs.staticModalError.open();\n      } else {\n        _this2.path = _this2.timestamp + \".pdf\";\n\n        _this2.url = __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"r\" /* server */] + \"nalazi/\" + _this2.path;\n\n        var options = {\n          width: \"100%\",\n          height: \"800px\"\n        };\n        __WEBPACK_IMPORTED_MODULE_16_pdfobject___default.a.embed(_this2.url, \"#pdf-container\", options);\n\n        _this2.email_button = true;\n        _this2.main = false;\n        _this2.pdf = true;\n      }\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"pdf\", function (data) {\n      if (!data.pdf_exists) {\n        _this2.$refs.staticModalError.open();\n      } else {\n        _this2.path = \"samples/\" + data.sid + \".pdf\";\n\n        _this2.url = __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"r\" /* server */] + \"nalazi/samples/\" + data.sid + \".pdf\";\n\n        var options = {\n          width: \"100%\",\n          height: \"800px\"\n        };\n        __WEBPACK_IMPORTED_MODULE_16_pdfobject___default.a.embed(_this2.url, \"#pdf-container\", options);\n\n        _this2.main = false;\n        _this2.pdf = true;\n      }\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Sample\", function (data) {\n\n      if (data.tip.includes(\"Mikrobiologija\")) {\n        _this2.MicrobiologySample = true;\n      } else {\n        _this2.MicrobiologySample = false;\n      }\n\n      _this2.$store.dispatch(\"SetSample\", data.sid);\n      _this2.GetSingleSample(data);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Deleted\", function (data) {\n      _this2.DeletedSample(data);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Edited\", function (data) {\n      _this2.EditSample(data);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"SaveMulti\", function (data) {\n      _this2.SaveMultiResults(_this2.analiti, data);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Mail\", function () {\n      _this2.SendMail(_this2.email);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Error\", function () {\n      console.warn(\"Greška prilikom čitanja nalaza.\");\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Analyser\", function (data) {\n      _this2.AnalyserSelected(data);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Sljedeci\", function () {\n      _this2.Sljedeci();\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Prethodni\", function () {\n      _this2.Prethodni();\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Search\", function () {\n      _this2.$refs.staticModalFind.open();\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Push\", function (data) {\n      if (_this2.$route.params.id != data) {\n        _this2.Results.forEach(function (element) {\n          if (element.pid == data) {\n            __WEBPACK_IMPORTED_MODULE_4__router__[\"a\" /* default */].push(\"/obrada/rezultati/\" + element.patient + \"/\" + element.pid + \"?date=\" + element.date);\n          }\n        });\n      } else {}\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Reference\", function () {\n      _this2.reference.dref = Math.abs(_this2.reference.dref.replace(/,/g, \".\").trim());\n      _this2.reference.gref = Math.abs(_this2.reference.gref.replace(/,/g, \".\").trim());\n\n      if (_this2.reference.interp != \"spec\") {\n        _this2.reference.extend = _this2.reference.extend.replace(/(\\r\\n|\\n|\\r)/gm, \" \");\n      }\n\n      if (isNaN(_this2.reference.dref) || isNaN(_this2.reference.gref) || _this2.reference.dref === \"\" || _this2.reference.gref === \"\" || _this2.reference.dref > _this2.reference.gref) {} else {\n        document.getElementById(_this2.$store.state.sid).click();\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"/rezultati/odobravanje/reference/\", {\n          email: _this2.$store.state.userId,\n          token: _this2.$store.state.token,\n          site: _this2.$store.state.site,\n          reference: _this2.reference\n        }).then(function (res) {\n          setTimeout(function () {\n            document.getElementById(_this2.$store.state.sid).click();\n          }, 500);\n        });\n      }\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"retest\", function (data) {\n      _this2.RetestSave(data);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Antibiotik\", function (data) {\n      if (_this2.sample.status != \"ODOBREN\" && _this2.sample.status != \"VERIFICIRAN\") {\n        _this2.TemporaryAntibiotics = [];\n        _this2.TemporaryBacteries = [];\n        _this2.TemporaryBacteriesAdd = [];\n\n        _this2.Antibiotics.forEach(function (element) {\n          element.chosen = false;\n          element.disabled = false;\n        });\n\n        _this2.SelectedBacteries.forEach(function (selected) {\n          if (selected.opis == data) {\n            selected.antibiogram.antibiotici.forEach(function (ant) {\n              _this2.Antibiotics.forEach(function (antibiotik) {\n                if (antibiotik._id == ant._id) {\n                  antibiotik.disabled = true;\n                  antibiotik.chosen = true;\n                  antibiotik.rezultat = ant.rezultat;\n                }\n              });\n            });\n          }\n        });\n\n        _this2.ShowAntibiotics = true;\n      }\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"tabChanged\", function (data) {\n      _this2.CurrentTab = data;\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"AllowClick\", function (data) {\n      if (_this2.MicrobiologySample) {\n        if (data) {\n          _this2.AllowGetSample = false;\n        } else {\n          _this2.AllowGetSample = true;\n        }\n      }\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"MicroReset\", function () {\n      console.log(\"Reset: \" + _this2.$store.state.sid);\n      var Scenario = _this2.MicrobiologyScenario;\n\n      _this2.rezultati[0].rezultat = \"\";\n      _this2.rezultati[0].rezultat_m = [];\n      _this2.rezultati[0].realizovan = false;\n\n      _this2.MicrobiologyResult.DefaultBacteries.forEach(function (element) {\n        element.chosen = false;\n      });\n\n      _this2.MicrobiologyResult.RemainingBacteries.forEach(function (element) {\n        element.chosen = false;\n      });\n\n      _this2.SelectedBacteries = [];\n      _this2.ShowAllBacteries = false;\n\n      if (_this2.MicrobiologyScenario.includes(\"MAIB\")) {\n        _this2.main = false;\n\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + _this2.$store.state.sid, {\n          email: _this2.$store.state.userId,\n          token: _this2.$store.state.token,\n          site: _this2.$store.state.site,\n          rezultati: _this2.rezultati\n        }).then(function (res) {\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this2.$route.params.patient + \"/\" + _this2.$route.params.id + \"?token=\" + _this2.$store.state.token + \"&site=\" + _this2.$store.state.site + \"&date=\" + _this2.$route.query.date, {}).then(function (res) {\n            _this2.uzorci = [];\n\n            res.data.results.forEach(function (element) {\n              if (_this2.$store.state.sid === element.id) {\n                console.log(element.rezultati[0].rezultat[0]);\n              }\n\n              var check = 0;\n              var zaprimljen = 0;\n              var realizovan = 0;\n\n              if (element.verificiran) {\n                var status_uzorka = \"VERIFICIRAN\";\n              } else {\n                var status_uzorka = element.status;\n              }\n\n              element.rezultati.forEach(function (test) {\n                check++;\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                  zaprimljen++;\n                }\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                  realizovan++;\n                }\n\n                if (check === element.rezultati.length) {\n\n                  if (status_uzorka === \"VERIFICIRAN\") {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"VERIFICIRAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (status_uzorka === \"ODOBREN\") {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"ODOBREN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (zaprimljen < 1) {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"REALIZOVAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (realizovan < 1) {\n                    var stat = \"ZAPRIMLJEN\";\n                    if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                      if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                        stat = \"REALIZOVAN\";\n                      }\n                    }\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: stat,\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"U OBRADI\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  }\n                }\n              });\n            });\n\n            _this2.uzorci = _this2.uzorci.sort(function (a, b) {\n              return a.sid.localeCompare(b.sid, undefined, {\n                numeric: true,\n                sensitivity: \"base\"\n              });\n            });\n          }).then(function (res) {\n            _this2.MicrobiologyScenario = \"MAIBNoR\";\n            console.log(\"Scenario: \" + Scenario + \" - > \" + _this2.MicrobiologyScenario);\n            _this2.main = true;\n            __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$emit(\"CloseMicroReset\");\n          });\n        });\n      } else if (_this2.MicrobiologyScenario.includes(\"MANB\")) {\n        _this2.main = false;\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + _this2.$store.state.sid, {\n          email: _this2.$store.state.userId,\n          token: _this2.$store.state.token,\n          site: _this2.$store.state.site,\n          rezultati: _this2.rezultati\n        }).then(function (res) {\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this2.$route.params.patient + \"/\" + _this2.$route.params.id + \"?token=\" + _this2.$store.state.token + \"&site=\" + _this2.$store.state.site + \"&date=\" + _this2.$route.query.date, {}).then(function (res) {\n            _this2.uzorci = [];\n\n            res.data.results.forEach(function (element) {\n              if (_this2.$store.state.sid === element.id) {\n                console.log(element.rezultati[0].rezultat[0]);\n              }\n\n              var check = 0;\n              var zaprimljen = 0;\n              var realizovan = 0;\n\n              if (element.verificiran) {\n                var status_uzorka = \"VERIFICIRAN\";\n              } else {\n                var status_uzorka = element.status;\n              }\n\n              element.rezultati.forEach(function (test) {\n                check++;\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                  zaprimljen++;\n                }\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                  realizovan++;\n                }\n\n                if (check === element.rezultati.length) {\n                  if (status_uzorka === \"VERIFICIRAN\") {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"VERIFICIRAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (status_uzorka === \"ODOBREN\") {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"ODOBREN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (zaprimljen < 1) {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"REALIZOVAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (realizovan < 1) {\n                    var stat = \"ZAPRIMLJEN\";\n                    if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                      if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                        stat = \"REALIZOVAN\";\n                      }\n                    }\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: stat,\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"U OBRADI\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  }\n                }\n              });\n            });\n\n            _this2.uzorci = _this2.uzorci.sort(function (a, b) {\n              return a.sid.localeCompare(b.sid, undefined, {\n                numeric: true,\n                sensitivity: \"base\"\n              });\n            });\n          }).then(function (res) {\n            _this2.MicrobiologyScenario = \"MANBNoR\";\n            console.log(\"Scenario: \" + Scenario + \" - > \" + _this2.MicrobiologyScenario);\n            _this2.main = true;\n            __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$emit(\"CloseMicroReset\");\n          });\n        });\n      } else {}\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"MicroResult\", function () {\n      console.log(\"Defining result...\");\n\n      var Scenario = _this2.MicrobiologyScenario;\n\n      switch (_this2.MicrobiologyScenario) {\n        case \"MAIBNoR\":\n          _this2.rezultati[0].rezultat_m = [];\n          _this2.rezultati[0].rezultat_m.push({\n            bakterija: false,\n            negativan: _this2.ModalNegative,\n            pozitivan: _this2.ModalPositive,\n            _id: null,\n            naziv: null,\n            opis: null,\n            antibiogram: {\n              _id: null,\n              naziv: null,\n              opis: null,\n              antibiotici: [{\n                _id: null,\n                rbr_a: null,\n                naziv: null,\n                opis: null,\n                rezultat: null\n              }]\n            }\n          });\n\n          if (_this2.ModalNegative) {\n            _this2.rezultati[0].rezultat = _this2.NegativeResultSelection;\n            _this2.isLoading = true;\n            _this2.main = false;\n\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + _this2.$store.state.sid, {\n              email: _this2.$store.state.userId,\n              token: _this2.$store.state.token,\n              site: _this2.$store.state.site,\n              rezultati: _this2.rezultati\n            }).then(function (res) {\n              __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this2.$route.params.patient + \"/\" + _this2.$route.params.id + \"?token=\" + _this2.$store.state.token + \"&site=\" + _this2.$store.state.site + \"&date=\" + _this2.$route.query.date, {}).then(function (res) {\n                _this2.uzorci = [];\n\n                res.data.results.forEach(function (element) {\n                  if (_this2.$store.state.sid === element.id) {\n                    console.log(element.rezultati[0].rezultat[0]);\n                  }\n\n                  var check = 0;\n                  var zaprimljen = 0;\n                  var realizovan = 0;\n\n                  if (element.verificiran) {\n                    var status_uzorka = \"VERIFICIRAN\";\n                  } else {\n                    var status_uzorka = element.status;\n                  }\n\n                  element.rezultati.forEach(function (test) {\n                    check++;\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                      zaprimljen++;\n                    }\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                      realizovan++;\n                    }\n\n                    if (check === element.rezultati.length) {\n                      if (status_uzorka === \"VERIFICIRAN\") {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"VERIFICIRAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (status_uzorka === \"ODOBREN\") {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"ODOBREN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (zaprimljen < 1) {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"REALIZOVAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (realizovan < 1) {\n                        var stat = \"ZAPRIMLJEN\";\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                          if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                            stat = \"REALIZOVAN\";\n                          }\n                        }\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: stat,\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"U OBRADI\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      }\n                    }\n                  });\n                });\n\n                _this2.uzorci = _this2.uzorci.sort(function (a, b) {\n                  return a.sid.localeCompare(b.sid, undefined, {\n                    numeric: true,\n                    sensitivity: \"base\"\n                  });\n                });\n              }).then(function (res) {\n                __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$emit(\"CloseMicroResult\");\n                _this2.rezultati[0].realizovan = true;\n                _this2.MicrobiologyScenario = \"MAIBNeR\";\n                console.log(\"Scenario: \" + Scenario + \" - > \" + _this2.MicrobiologyScenario);\n                _this2.main = true;\n                _this2.isLoading = false;\n              });\n            });\n          } else {\n            _this2.PositiveResultSelection = \"\";\n            _this2.SelectedBacteries.forEach(function (element) {\n              _this2.PositiveResultSelection = _this2.PositiveResultSelection + element.opis + \"\\n\";\n              var Antibiotici = [];\n              var antibiotik = {};\n\n              _this2.Antibiotics.forEach(function (antibiotik) {\n                element.antibiogram.antibiotici.forEach(function (ant) {\n                  if (antibiotik._id == ant) {\n                    antibiotik = {\n                      _id: antibiotik._id,\n                      rbr_a: antibiotik.rbr_a,\n                      naziv: antibiotik.naziv,\n                      opis: antibiotik.opis,\n                      disabled: false,\n                      rezultat: \"\"\n                    };\n                    Antibiotici.push(antibiotik);\n                    antibiotik = {};\n                  }\n                });\n              });\n\n              _this2.rezultati[0].rezultat_m.push({\n                bakterija: true,\n                negativan: _this2.largeModalneg,\n                pozitivan: _this2.largeModalpos,\n                _id: element._id,\n                naziv: element.naziv,\n                opis: element.opis,\n                antibiogram: {\n                  _id: element.antibiogram._id,\n                  naziv: element.antibiogram.naziv,\n                  opis: element.antibiogram.opis,\n                  antibiotici: [].concat(Antibiotici)\n                }\n              });\n            });\n\n            _this2.rezultati[0].rezultat = _this2.PositiveResultSelection.trim();\n            _this2.isLoading = true;\n            _this2.main = false;\n\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + _this2.$store.state.sid, {\n              email: _this2.$store.state.userId,\n              token: _this2.$store.state.token,\n              site: _this2.$store.state.site,\n              rezultati: _this2.rezultati\n            }).then(function (res) {\n              __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this2.$route.params.patient + \"/\" + _this2.$route.params.id + \"?token=\" + _this2.$store.state.token + \"&site=\" + _this2.$store.state.site + \"&date=\" + _this2.$route.query.date, {}).then(function (res) {\n                _this2.uzorci = [];\n\n                res.data.results.forEach(function (element) {\n                  if (_this2.$store.state.sid === element.id) {\n                    console.log(element.rezultati[0].rezultat[0]);\n                  }\n\n                  var check = 0;\n                  var zaprimljen = 0;\n                  var realizovan = 0;\n\n                  if (element.verificiran) {\n                    var status_uzorka = \"VERIFICIRAN\";\n                  } else {\n                    var status_uzorka = element.status;\n                  }\n\n                  element.rezultati.forEach(function (test) {\n                    check++;\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                      zaprimljen++;\n                    }\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                      realizovan++;\n                    }\n\n                    if (check === element.rezultati.length) {\n                      if (status_uzorka === \"VERIFICIRAN\") {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"VERIFICIRAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (status_uzorka === \"ODOBREN\") {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"ODOBREN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (zaprimljen < 1) {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"REALIZOVAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (realizovan < 1) {\n                        var stat = \"ZAPRIMLJEN\";\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                          if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                            stat = \"REALIZOVAN\";\n                          }\n                        }\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: stat,\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"U OBRADI\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      }\n                    }\n                  });\n                });\n\n                _this2.uzorci = _this2.uzorci.sort(function (a, b) {\n                  return a.sid.localeCompare(b.sid, undefined, {\n                    numeric: true,\n                    sensitivity: \"base\"\n                  });\n                });\n              }).then(function (res) {\n                __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$emit(\"CloseMicroResult\");\n                _this2.rezultati[0].realizovan = true;\n                _this2.MicrobiologyScenario = \"MAIBPoR\";\n                console.log(\"Scenario: \" + Scenario + \" - > \" + _this2.MicrobiologyScenario);\n                _this2.main = true;\n                _this2.isLoading = false;\n              });\n            });\n          }\n\n          break;\n\n        case \"MANBNoR\":\n          _this2.rezultati[0].rezultat_m = [{\n            bakterija: false,\n            negativan: _this2.ModalNegative,\n            pozitivan: _this2.ModalPositive,\n            _id: null,\n            naziv: null,\n            opis: null,\n            antibiogram: {\n              _id: null,\n              naziv: null,\n              opis: null,\n              antibiotici: [{\n                _id: null,\n                rbr_a: null,\n                naziv: null,\n                opis: null,\n                rezultat: null\n              }]\n            }\n          }];\n\n          if (_this2.ModalNegative) {\n            _this2.rezultati[0].rezultat = _this2.NegativeResultSelection;\n            _this2.isLoading = true;\n            _this2.main = false;\n\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + _this2.$store.state.sid, {\n              email: _this2.$store.state.userId,\n              token: _this2.$store.state.token,\n              site: _this2.$store.state.site,\n              rezultati: _this2.rezultati\n            }).then(function (res) {\n              __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this2.$route.params.patient + \"/\" + _this2.$route.params.id + \"?token=\" + _this2.$store.state.token + \"&site=\" + _this2.$store.state.site + \"&date=\" + _this2.$route.query.date, {}).then(function (res) {\n                _this2.uzorci = [];\n\n                res.data.results.forEach(function (element) {\n                  if (_this2.$store.state.sid === element.id) {\n                    console.log(element.rezultati[0].rezultat[0]);\n                  }\n\n                  var check = 0;\n                  var zaprimljen = 0;\n                  var realizovan = 0;\n\n                  if (element.verificiran) {\n                    var status_uzorka = \"VERIFICIRAN\";\n                  } else {\n                    var status_uzorka = element.status;\n                  }\n\n                  element.rezultati.forEach(function (test) {\n                    check++;\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                      zaprimljen++;\n                    }\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                      realizovan++;\n                    }\n\n                    if (check === element.rezultati.length) {\n                      if (status_uzorka === \"VERIFICIRAN\") {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"VERIFICIRAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (status_uzorka === \"ODOBREN\") {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"ODOBREN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (zaprimljen < 1) {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"REALIZOVAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (realizovan < 1) {\n                        var stat = \"ZAPRIMLJEN\";\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                          if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                            stat = \"REALIZOVAN\";\n                          }\n                        }\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: stat,\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"U OBRADI\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      }\n                    }\n                  });\n                });\n\n                _this2.uzorci = _this2.uzorci.sort(function (a, b) {\n                  return a.sid.localeCompare(b.sid, undefined, {\n                    numeric: true,\n                    sensitivity: \"base\"\n                  });\n                });\n              }).then(function (res) {\n                __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$emit(\"CloseMicroResult\");\n                _this2.rezultati[0].realizovan = true;\n                _this2.MicrobiologyScenario = \"MANBNeR\";\n                console.log(\"Scenario: \" + Scenario + \" - > \" + _this2.MicrobiologyScenario);\n                _this2.main = true;\n                _this2.isLoading = false;\n              });\n            });\n          } else {\n            _this2.rezultati[0].rezultat = _this2.PositiveResultSelection;\n            _this2.isLoading = true;\n            _this2.main = false;\n\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + _this2.$store.state.sid, {\n              email: _this2.$store.state.userId,\n              token: _this2.$store.state.token,\n              site: _this2.$store.state.site,\n              rezultati: _this2.rezultati\n            }).then(function (res) {\n              __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this2.$route.params.patient + \"/\" + _this2.$route.params.id + \"?token=\" + _this2.$store.state.token + \"&site=\" + _this2.$store.state.site + \"&date=\" + _this2.$route.query.date, {}).then(function (res) {\n                _this2.uzorci = [];\n\n                res.data.results.forEach(function (element) {\n                  if (_this2.$store.state.sid === element.id) {\n                    console.log(element.rezultati[0].rezultat[0]);\n                  }\n\n                  var check = 0;\n                  var zaprimljen = 0;\n                  var realizovan = 0;\n\n                  if (element.verificiran) {\n                    var status_uzorka = \"VERIFICIRAN\";\n                  } else {\n                    var status_uzorka = element.status;\n                  }\n\n                  element.rezultati.forEach(function (test) {\n                    check++;\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                      zaprimljen++;\n                    }\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                      realizovan++;\n                    }\n\n                    if (check === element.rezultati.length) {\n                      if (status_uzorka === \"VERIFICIRAN\") {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"VERIFICIRAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (status_uzorka === \"ODOBREN\") {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"ODOBREN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (zaprimljen < 1) {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"REALIZOVAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (realizovan < 1) {\n                        var stat = \"ZAPRIMLJEN\";\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                          if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                            stat = \"REALIZOVAN\";\n                          }\n                        }\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: stat,\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"U OBRADI\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      }\n                    }\n                  });\n                });\n\n                _this2.uzorci = _this2.uzorci.sort(function (a, b) {\n                  return a.sid.localeCompare(b.sid, undefined, {\n                    numeric: true,\n                    sensitivity: \"base\"\n                  });\n                });\n              }).then(function (res) {\n                __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$emit(\"CloseMicroResult\");\n                _this2.rezultati[0].realizovan = true;\n                _this2.MicrobiologyScenario = \"MANBPoR\";\n                console.log(\"Scenario: \" + Scenario + \" - > \" + _this2.MicrobiologyScenario);\n                _this2.main = true;\n                _this2.isLoading = false;\n              });\n            });\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"ResetResultSelection\", function () {\n      switch (_this2.MicrobiologyScenario) {\n        case \"MAIBNoR\":\n          _this2.ModalNegative = false;\n          _this2.ModalPositive = false;\n          _this2.ModalPositiveCondition = false;\n          _this2.MicrobiologyModalHeader = \"Predefinisani rezultati\";\n          _this2.NegativeResultSelection = \"\";\n          _this2.PositiveResultSelection = \"\";\n          _this2.SelectedBacteries = [];\n          _this2.ShowAllBacteries = false;\n\n          break;\n\n        case \"MAIBNeR\":\n          _this2.SelectedBacteries = [];\n\n          break;\n\n        case \"MAIBPoR\":\n          break;\n\n        case \"MANBNoR\":\n          _this2.ModalNegative = false;\n          _this2.ModalPositive = false;\n          _this2.ModalPositiveCondition = false;\n          _this2.MicrobiologyModalHeader = \"Predefinisani rezultati\";\n          _this2.NegativeResultSelection = \"\";\n          _this2.PositiveResultSelection = \"\";\n          _this2.SelectedBacteries = [];\n          _this2.ShowAllBacteries = false;\n\n          break;\n\n        case \"MANBNeR\":\n          _this2.SelectedBacteries = [];\n\n          break;\n\n        case \"MANBPoR\":\n          _this2.SelectedBacteries = [];\n\n          break;\n\n        default:\n          break;\n      }\n\n      _this2.MicrobiologyResult.DefaultBacteries.forEach(function (element) {\n        element.chosen = false;\n      });\n\n      _this2.MicrobiologyResult.RemainingBacteries.forEach(function (element) {\n        element.chosen = false;\n      });\n\n      _this2.SelectedBacteries = [];\n      _this2.ShowAllBacteries = false;\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"CancelMicroResult\", function () {\n      switch (_this2.MicrobiologyScenario) {\n        case \"MAIBNoR\":\n          _this2.ModalNegative = false;\n          _this2.ModalPositive = false;\n          _this2.ModalPositiveCondition = false;\n          _this2.MicrobiologyModalHeader = \"Predefinisani rezultati\";\n          _this2.NegativeResultSelection = \"\";\n          _this2.PositiveResultSelection = \"\";\n          _this2.SelectedBacteries = [];\n          _this2.ShowAllBacteries = false;\n\n          break;\n\n        case \"MAIBNeR\":\n          _this2.SelectedBacteries = [];\n\n          break;\n\n        case \"MAIBPoR\":\n          break;\n\n        case \"MANBNoR\":\n          _this2.ModalNegative = false;\n          _this2.ModalPositive = false;\n          _this2.ModalPositiveCondition = false;\n          _this2.MicrobiologyModalHeader = \"Predefinisani rezultati\";\n          _this2.NegativeResultSelection = \"\";\n          _this2.PositiveResultSelection = \"\";\n          _this2.SelectedBacteries = [];\n          _this2.ShowAllBacteries = false;\n\n          break;\n\n        case \"MANBNeR\":\n          _this2.SelectedBacteries = [];\n\n          break;\n\n        case \"MANBPoR\":\n          _this2.SelectedBacteries = [];\n\n          break;\n\n        default:\n          break;\n      }\n\n      _this2.MicrobiologyResult.DefaultBacteries.forEach(function (element) {\n        element.chosen = false;\n      });\n\n      _this2.MicrobiologyResult.RemainingBacteries.forEach(function (element) {\n        element.chosen = false;\n      });\n\n      _this2.SelectedBacteries = [];\n      _this2.ShowAllBacteries = false;\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"MicroBactery\", function () {\n      console.log(\"Saving main result...\");\n\n      _this2.isLoading = true;\n      _this2.main = false;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + _this2.$store.state.sid, {\n        email: _this2.$store.state.userId,\n        token: _this2.$store.state.token,\n        site: _this2.$store.state.site,\n        rezultati: _this2.rezultati\n      }).then(function (res) {\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this2.$route.params.patient + \"/\" + _this2.$route.params.id + \"?token=\" + _this2.$store.state.token + \"&site=\" + _this2.$store.state.site + \"&date=\" + _this2.$route.query.date, {}).then(function (res) {\n          _this2.uzorci = [];\n\n          res.data.results.forEach(function (element) {\n            if (_this2.$store.state.sid === element.id) {\n              console.log(element.rezultati[0].rezultat[0]);\n            }\n\n            var check = 0;\n            var zaprimljen = 0;\n            var realizovan = 0;\n\n            if (element.verificiran) {\n              var status_uzorka = \"VERIFICIRAN\";\n            } else {\n              var status_uzorka = element.status;\n            }\n\n            element.rezultati.forEach(function (test) {\n              check++;\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                zaprimljen++;\n              }\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                realizovan++;\n              }\n\n              if (check === element.rezultati.length) {\n                if (status_uzorka === \"VERIFICIRAN\") {\n                  _this2.uzorci.push({\n                    sid: element.id,\n                    status: \"VERIFICIRAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (status_uzorka === \"ODOBREN\") {\n                  _this2.uzorci.push({\n                    sid: element.id,\n                    status: \"ODOBREN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (zaprimljen < 1) {\n                  _this2.uzorci.push({\n                    sid: element.id,\n                    status: \"REALIZOVAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (realizovan < 1) {\n                  var stat = \"ZAPRIMLJEN\";\n                  if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                    if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                      stat = \"REALIZOVAN\";\n                    }\n                  }\n                  _this2.uzorci.push({\n                    sid: element.id,\n                    status: stat,\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else {\n                  _this2.uzorci.push({\n                    sid: element.id,\n                    status: \"U OBRADI\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                }\n              }\n            });\n          });\n\n          _this2.uzorci = _this2.uzorci.sort(function (a, b) {\n            return a.sid.localeCompare(b.sid, undefined, {\n              numeric: true,\n              sensitivity: \"base\"\n            });\n          });\n        }).then(function (res) {\n          _this2.main = true;\n          _this2.isLoading = false;\n          __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$emit(\"CloseMicroBactery\");\n        });\n      });\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"CancelMicroBactery\", function () {});\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"PovratakMicroBactery\", function () {\n      _this2.ShowAntibiotics = false;\n      _this2.ShowBacteries = false;\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"SpasiMicroBactery\", function () {\n      if (_this2.TemporaryBacteriesAdd.length) {\n        console.log(\"Dodavanje bakterija...\");\n        var bakterija = {};\n        var antibiogram = {};\n        var antibiotik = {};\n\n        _this2.TemporaryBacteriesAdd.forEach(function (element) {\n          _this2.Antibiograms.forEach(function (antibgr) {\n            if (__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(element.antibiogram._id) === __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(antibgr._id)) {\n              antibiogram = antibgr;\n            }\n          });\n\n          antibiogram.antibiotici.forEach(function (antbtk) {\n            antbtk.disabled = false;\n            antbtk.rezultat = \"\";\n          });\n\n          bakterija.bakterija = true;\n          bakterija._id = element._id;\n          bakterija.naziv = element.naziv;\n          bakterija.opis = element.opis;\n          bakterija.antibiogram = antibiogram;\n\n          console.log(bakterija);\n\n          _this2.SelectedBacteries.push(bakterija);\n          _this2.BacteryTabs.push(bakterija.opis);\n          _this2.rezultati[0].rezultat_m.push(bakterija);\n          _this2.rezultati[0].rezultat = _this2.rezultati[0].rezultat + \"\\n\" + bakterija.opis;\n          bakterija = {};\n          antibiogram = {};\n        });\n      } else {\n        console.log(\"Dodavanje antibiotika...\");\n      }\n\n      if (_this2.TemporaryAntibiotics.length || _this2.TemporaryBacteriesAdd.length) {\n        _this2.TemporaryAntibiotics.forEach(function (element) {\n          _this2.rezultati[0].rezultat_m.forEach(function (selected) {\n            if (selected.opis == _this2.CurrentTab) {\n              selected.antibiogram.antibiotici.push(element);\n            }\n          });\n        });\n\n        _this2.isLoading = true;\n        _this2.main = false;\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + _this2.$store.state.sid, {\n          email: _this2.$store.state.userId,\n          token: _this2.$store.state.token,\n          site: _this2.$store.state.site,\n          rezultati: _this2.rezultati\n        }).then(function (res) {\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this2.$route.params.patient + \"/\" + _this2.$route.params.id + \"?token=\" + _this2.$store.state.token + \"&site=\" + _this2.$store.state.site + \"&date=\" + _this2.$route.query.date, {}).then(function (res) {\n            _this2.uzorci = [];\n\n            res.data.results.forEach(function (element) {\n              if (_this2.$store.state.sid === element.id) {\n                console.log(element.rezultati[0].rezultat[0]);\n              }\n\n              var check = 0;\n              var zaprimljen = 0;\n              var realizovan = 0;\n\n              if (element.verificiran) {\n                var status_uzorka = \"VERIFICIRAN\";\n              } else {\n                var status_uzorka = element.status;\n              }\n\n              element.rezultati.forEach(function (test) {\n                check++;\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                  zaprimljen++;\n                }\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                  realizovan++;\n                }\n\n                if (check === element.rezultati.length) {\n                  if (status_uzorka === \"VERIFICIRAN\") {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"VERIFICIRAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (status_uzorka === \"ODOBREN\") {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"ODOBREN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (zaprimljen < 1) {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"REALIZOVAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (realizovan < 1) {\n                    var stat = \"ZAPRIMLJEN\";\n                    if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                      if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                        stat = \"REALIZOVAN\";\n                      }\n                    }\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: stat,\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"U OBRADI\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  }\n                }\n              });\n            });\n\n            _this2.uzorci = _this2.uzorci.sort(function (a, b) {\n              return a.sid.localeCompare(b.sid, undefined, {\n                numeric: true,\n                sensitivity: \"base\"\n              });\n            });\n          }).then(function (res) {\n            _this2.MicrobiologyScenario = \"MAIBPoR\";\n            _this2.ShowAntibiotics = false;\n            _this2.ShowBacteries = false;\n\n            _this2.main = true;\n            _this2.isLoading = false;\n\n            if (_this2.TemporaryBacteriesAdd.length) {\n              _this2.CurrentTab = _this2.BacteryTabs[_this2.BacteryTabs.length - 1];\n            }\n          });\n        });\n      } else {\n        _this2.MicrobiologyScenario = \"MAIBPoR\";\n        _this2.ShowAntibiotics = false;\n        _this2.ShowBacteries = false;\n      }\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"UpdateMicroBactery\", function (data) {\n      if (!_this2.ShowAntibiotics && !_this2.ShowBacteries && _this2.MicrobiologyScenario === \"MAIBPoR\") {\n        if (_this2.sample.status != \"ODOBREN\" && _this2.sample.status != \"VERIFICIRAN\") {\n          _this2.TemporaryAntibiotics = [];\n          _this2.TemporaryBacteries = [];\n          _this2.TemporaryBacteriesAdd = [];\n          var obj = {};\n\n          _this2.Bacteries.forEach(function (element) {\n            obj.chosen = false;\n            obj.disabled = false;\n            obj._id = element._id;\n            obj.naziv = element.naziv;\n            obj.opis = element.opis;\n            obj.antibiogram = element.antibiogram;\n            obj.__v = element.__v;\n            obj.chosen = element.chosen;\n            _this2.TemporaryBacteries.push(obj);\n            obj = {};\n          });\n\n          _this2.TemporaryBacteries.forEach(function (element) {\n            _this2.SelectedBacteries.forEach(function (selected) {\n              if (selected._id == element._id) {\n                element.chosen = true;\n                element.disabled = true;\n              }\n            });\n          });\n\n          _this2.ShowBacteries = true;\n        }\n      }\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Parametar\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"trash\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"edit\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"comment\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"barcode\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"save\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"check\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"verify\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"undo\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"unlock\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Nalaz\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"pdf\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Sample\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Deleted\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Edited\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"SaveMulti\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Mail\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Error\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Analyser\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Sljedeci\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Prethodni\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Search\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Push\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Reference\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"graph\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"table\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"retest\");\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"tabChanged\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Antibiotik\");\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"MicroResult\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"ResetResultSelection\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"CancelMicroResult\");\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"MicroReset\");\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"AllowClick\");\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"MicroBactery\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"CancelMicroBactery\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"PovratakMicroBactery\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"SpasiMicroBactery\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"UpdateMicroBactery\");\n  },\n  destroyed: function destroyed() {},\n  created: function created() {\n    this.Created();\n\n    this.Previous.pid = Number(this.$route.params.id) - 1;\n    this.Next.pid = Number(this.$route.params.id) + 1;\n    this.query_date = this.$route.query.date.substring(8, 10) + \".\" + this.$route.query.date.substring(5, 7) + \".\" + this.$route.query.date.substring(0, 4);\n\n    this.Datum.today = new Date(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date().setDate(new Date().getDate()))).substring(1, 11) + \"T00:00:00\");\n\n    this.today_date = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date().setDate(new Date().getDate()))).substring(1, 11).substring(8, 10) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date().setDate(new Date().getDate()))).substring(1, 11).substring(5, 7) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date().setDate(new Date().getDate()))).substring(1, 11).substring(0, 4);\n\n    this.Datum.query = new Date(this.$route.query.date.substring(0, 10) + \"T00:00:00\");\n\n    this.Datum.next = new Date(new Date(this.$route.query.date.substring(0, 10) + \"T00:00:00\").setDate(this.Datum.query.getDate() + 1));\n\n    this.Datum.previous = new Date(new Date(this.$route.query.date.substring(0, 10) + \"T00:00:00\").setDate(this.Datum.query.getDate() - 1));\n\n    if (new Date(this.Datum.today) > new Date(this.Datum.query)) {\n      this.pagination = false;\n    } else if (new Date(this.Datum.today) < new Date(this.Datum.query)) {\n      this.pagination = false;\n    } else {\n      this.pagination = true;\n    }\n\n    this.interpretacije = this.interpretacije.sort(function (a, b) {\n      return a.localeCompare(b, undefined, {\n        numeric: true,\n        sensitivity: \"base\"\n      });\n    });\n  },\n\n\n  methods: {\n    RetestSave: function RetestSave(data) {\n      var _this3 = this;\n\n      this.isLoading = true;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"rezultati/odobravanje/retest/save/\", {\n        sid: this.$store.state.sid,\n        rezultati: this.rezultati,\n        site: this.$store.state.site,\n        token: this.$store.state.token\n      }).then(function (res) {\n        if (res.data.success) {\n          _this3.isLoading = false;\n          _this3.save_retest = false;\n        } else {}\n      });\n    },\n    ExclamationMulti: function ExclamationMulti(test) {\n      this.warning = { analiza: \"\", text: \"\", napomena: \"\", control: \"\" };\n      var rezultat = test.rezultat.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n      var m_interp = {};\n      var m_opis = \"\";\n\n      this.analitiprikaz.forEach(function (element) {\n        element.labassay.multiparam.forEach(function (param) {\n          if (__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(param._id) == __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(test.analit)) {\n\n            m_interp = param.interpretacija;\n            m_opis = param.opis;\n          }\n        });\n      });\n\n      switch (this.Interpretacija(test.opis, rezultat, test.jedinica, test.refd, test.refg, this.$store.state.site, test.interp, \"\", this.spec)[2]) {\n        case \"L\":\n          this.warning = {\n            analiza: m_opis,\n            text: m_interp.snizeno.text.trim(),\n            napomena: m_interp.napomena.trim(),\n            control: \"Sniženo\"\n          };\n          break;\n\n        case \"H\":\n          switch (test.interp) {\n            case \"neg\":\n              this.warning = {\n                analiza: m_opis,\n                text: m_interp.poviseno.text.trim(),\n                napomena: m_interp.napomena.trim(),\n                control: \"Pozitivan\"\n              };\n              break;\n\n            default:\n              this.warning = {\n                analiza: m_opis,\n                text: m_interp.poviseno.text.trim(),\n                napomena: m_interp.napomena.trim(),\n                control: \"Povišeno\"\n              };\n              break;\n          }\n\n          break;\n\n        default:\n          this.warning = { analiza: \"\", text: \"\", napomena: \"\", control: \"\" };\n          break;\n      }\n\n      if (this.warning.text && this.warning.text != \"\") {}\n    },\n    Exclamation: function Exclamation(test) {\n      this.warning = { analiza: \"\", text: \"\", napomena: \"\", control: \"\" };\n      var rezultat = test.rezultat.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n      switch (this.Interpretacija(test.opis, rezultat, test.jedinica, test.dRef, test.gRef, this.$store.state.site, test.interp, test.extend, this.spec)[2]) {\n        case \"L\":\n          this.warning = {\n            analiza: test.analit,\n            text: test.interpretacija.snizeno.text.trim(),\n            napomena: test.interpretacija.napomena.trim(),\n            control: \"Sniženo\"\n          };\n          break;\n\n        case \"H\":\n          switch (test.interp) {\n            case \"neg\":\n              this.warning = {\n                analiza: test.analit,\n                text: test.interpretacija.poviseno.text.trim(),\n                napomena: test.interpretacija.napomena.trim(),\n                control: \"Pozitivan\"\n              };\n              break;\n\n            default:\n              this.warning = {\n                analiza: test.analit,\n                text: test.interpretacija.poviseno.text.trim(),\n                napomena: test.interpretacija.napomena.trim(),\n                control: \"Povišeno\"\n              };\n              break;\n          }\n\n          break;\n\n        default:\n          this.warning = { analiza: \"\", text: \"\", napomena: \"\", control: \"\" };\n          break;\n      }\n\n      if (this.warning.text && this.warning.text != \"\") {\n        this.$refs.staticModalExclamation.open();\n      }\n    },\n    LabAssayEval: function LabAssayEval(e, test) {\n      var _this4 = this;\n\n      this.analiza_eval = test;\n      e.preventDefault();\n      this.spinner = false;\n      this.showLineChart = false;\n      var palette = __WEBPACK_IMPORTED_MODULE_5_vuex_store__[\"a\" /* default */].getters.palette;\n      this.table_header = test.ime + \" | \" + test.analit;\n      if (!test.multidata) {\n        this.isLoading = true;\n        this.Procjena = [];\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"/labassay/evaluation/single\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&range=\" + \"14\", {}).then(function (response) {\n          if (response.data.Results.length) {\n            var obj = {};\n            var count = 0;\n\n            response.data.Results.forEach(function (element) {\n              count++;\n              element.rezultati.forEach(function (rez) {\n                if (rez.labassay === test.labassay_id && element.verificiran && rez.rezultat[rez.rezultat.length - 1].rezultat_f.trim() != \"\") {\n                  obj.rezultat = rez.rezultat[rez.rezultat.length - 1].rezultat_f;\n                  obj.jedinica = rez.rezultat[rez.rezultat.length - 1].jedinice_f;\n                  obj.analit = \"\";\n                  obj.interp = rez.interp;\n                  obj.extend = rez.extend;\n                  obj.refd = rez.refd;\n                  obj.refg = rez.refg;\n                  obj.sid = element.id;\n                  obj.updated_at = rez.rezultat[rez.rezultat.length - 1].updated_at;\n\n                  var datum = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(rez.rezultat[rez.rezultat.length - 1].updated_at).slice(9, 11) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(rez.rezultat[rez.rezultat.length - 1].updated_at).slice(6, 8) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(rez.rezultat[rez.rezultat.length - 1].updated_at).slice(1, 5);\n                  var time = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date(rez.rezultat[rez.rezultat.length - 1].updated_at).getTime() - new Date(rez.rezultat[rez.rezultat.length - 1].updated_at).getTimezoneOffset() * 60000).toISOString()).substring(12, 17);\n\n                  obj.datum = datum;\n                  obj.vrijeme = time;\n                  obj.kontrola = _this4.Interpretacija(\"\", obj.rezultat, obj.jedinica, obj.refd, obj.refg, _this4.$store.state.site, obj.interp, obj.extend, _this4.spec)[5];\n\n                  _this4.Procjena.push(obj);\n                  obj = {};\n                }\n              });\n\n              if (count == response.data.Results.length) {\n                _this4.Procjena.sort(function (a, b) {\n                  return Date.parse(a.updated_at) == Date.parse(b.updated_at) ? 0 : +(Date.parse(a.updated_at) < Date.parse(b.updated_at)) || -1;\n                });\n\n                var data = [];\n\n                if (_this4.Procjena.length) {\n                  _this4.optionsLineChart = {\n                    responsive: true,\n                    maintainAspectRatio: false,\n                    title: {\n                      display: true,\n                      text: \"\"\n                    },\n                    scales: {\n                      xAxes: [{\n                        display: true,\n                        gridLines: {\n                          display: true,\n                          color: \"#eee\"\n                        }\n                      }],\n                      yAxes: [{\n                        display: true,\n                        gridLines: {\n                          display: true,\n                          color: \"#eee\"\n                        }\n                      }]\n                    }\n                  };\n\n                  var labels = [];\n                  var kontrola = [];\n                  var temp = \"\";\n\n                  _this4.Procjena.forEach(function (element) {\n                    if (!isNaN(element.rezultat.trim())) {\n                      switch (element.kontrola) {\n                        case \"Red\":\n                          kontrola.push(palette.danger);\n                          break;\n                        case \"Green\":\n                          kontrola.push(palette.primary);\n                          break;\n                        case \"Yellow\":\n                          kontrola.push(palette.warning);\n                          break;\n\n                        default:\n                          kontrola.push(palette.info);\n                          break;\n                      }\n\n                      labels.push(element.datum);\n                      data.push(element.rezultat);\n                    }\n                  });\n\n                  _this4.dataLineChart = {\n                    labels: labels,\n                    datasets: [{\n                      label: test.ime + \" | \" + test.analit,\n                      backgroundColor: __WEBPACK_IMPORTED_MODULE_6_services_utils__[\"a\" /* default */].hex2rgb(palette.info, 0.5).css,\n                      pointBorderColor: kontrola,\n                      pointBackgroundColor: kontrola,\n                      borderColor: palette.transparent,\n                      data: data\n                    }]\n                  };\n\n                  if (data.length) {\n                    _this4.showLineChart = true;\n                  }\n\n                  _this4.$refs.staticModalLabAssayEvalSingle.open();\n                } else {}\n              }\n            });\n          } else {}\n          _this4.isLoading = false;\n        });\n      } else {\n\n        this.multiparam_izbor = test.multiparam[0].opis;\n        this.multiparam_id = test.multiparam[0]._id;\n\n        this.multiparams = [];\n\n        this.multiparam_izbornik = [];\n\n        test.multiparam.forEach(function (element) {\n          _this4.multiparam_izbornik.push(element.opis);\n          _this4.multiparams.push(element);\n        });\n\n        this.isLoading = true;\n        this.Procjena = [];\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"/labassay/evaluation/multi\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&labassay=\" + test.labassay_id + \"&range=\" + \"14\", {}).then(function (response) {\n          if (response.data.Multi.length) {\n            _this4.Response = response.data;\n\n            var obj = {};\n            var count = 0;\n\n            response.data.Multi.forEach(function (element) {\n              count++;\n              element.multi.forEach(function (param) {\n                if (_this4.multiparam_id == param.labassay && param.rezultat[0].rezultat_f.trim() != \"\") {\n                  obj.rezultat = param.rezultat[0].rezultat_f;\n                  obj.jedinica = param.rezultat[0].jedinice_f;\n                  obj.analit = \"Nema podataka\";\n                  obj.interp = param.interp;\n                  obj.extend = param.extend;\n                  obj.refd = param.refd;\n                  obj.refg = param.refg;\n                  obj.sid = \"Nema podataka\";\n                  obj.updated_at = new Date(param.rezultat[0].updated_at);\n\n                  var datum = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(9, 11) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(6, 8) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(1, 5);\n                  var time = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date(param.rezultat[0].updated_at).getTime() - new Date(param.rezultat[0].updated_at).getTimezoneOffset() * 60000).toISOString()).substring(12, 17);\n                  obj.datum = datum;\n                  obj.vrijeme = time;\n                  obj.kontrola = _this4.Interpretacija(\"\", obj.rezultat, obj.jedinica, obj.refd, obj.refg, _this4.$store.state.site, obj.interp, obj.extend, _this4.spec)[5];\n\n                  _this4.Procjena.push(obj);\n                  obj = {};\n                }\n              });\n\n              if (count == response.data.Multi.length) {\n                _this4.Procjena.sort(function (a, b) {\n                  return Date.parse(a.updated_at) == Date.parse(b.updated_at) ? 0 : +(Date.parse(a.updated_at) < Date.parse(b.updated_at)) || -1;\n                });\n\n                var data = [];\n\n                if (_this4.Procjena.length) {\n                  _this4.optionsLineChart = {\n                    responsive: true,\n                    maintainAspectRatio: false,\n                    title: {\n                      display: true,\n                      text: \"\"\n                    },\n                    scales: {\n                      xAxes: [{\n                        display: true,\n                        gridLines: {\n                          display: true,\n                          color: \"#eee\"\n                        }\n                      }],\n                      yAxes: [{\n                        display: true,\n                        gridLines: {\n                          display: true,\n                          color: \"#eee\"\n                        }\n                      }]\n                    }\n                  };\n\n                  var labels = [];\n                  var kontrola = [];\n                  var temp = \"\";\n\n                  _this4.Procjena.forEach(function (element) {\n                    if (!isNaN(element.rezultat.trim())) {\n                      switch (element.kontrola) {\n                        case \"Red\":\n                          kontrola.push(palette.danger);\n                          break;\n                        case \"Green\":\n                          kontrola.push(palette.primary);\n                          break;\n                        case \"Yellow\":\n                          kontrola.push(palette.warning);\n                          break;\n\n                        default:\n                          kontrola.push(palette.info);\n                          break;\n                      }\n\n                      labels.push(element.datum);\n                      data.push(element.rezultat);\n                    }\n                  });\n\n                  _this4.dataLineChart = {\n                    labels: labels,\n                    datasets: [{\n                      label: test.ime + \" | \" + test.analit,\n                      backgroundColor: __WEBPACK_IMPORTED_MODULE_6_services_utils__[\"a\" /* default */].hex2rgb(palette.info, 0.5).css,\n                      pointBorderColor: kontrola,\n                      pointBackgroundColor: kontrola,\n                      borderColor: palette.transparent,\n                      data: data\n                    }]\n                  };\n\n                  if (data.length) {\n                    _this4.showLineChart = true;\n                  }\n\n                  _this4.$refs.staticModalLabAssayEvalMulti.open();\n                } else {}\n              }\n            });\n          } else {}\n          _this4.isLoading = false;\n        });\n      }\n    },\n    Evaluation: function Evaluation(test) {\n      var _this5 = this;\n\n      this.analiza_eval = test;\n      this.spinner = false;\n      if (true) {\n        this.showLineChart = false;\n        var palette = __WEBPACK_IMPORTED_MODULE_5_vuex_store__[\"a\" /* default */].getters.palette;\n        this.table_header = test.ime + \" | \" + test.analit;\n\n        if (test.multidata) {\n          this.multiparam_izbor = test.multiparam[0].opis;\n          this.multiparam_id = test.multiparam[0]._id;\n\n          this.multiparams = [];\n\n          this.multiparam_izbornik = [];\n\n          test.multiparam.forEach(function (element) {\n            _this5.multiparam_izbornik.push(element.opis);\n            _this5.multiparams.push(element);\n          });\n\n          this.isLoading = true;\n          this.Procjena = [];\n\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"/patient/evaluation/multi\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&patient=\" + this.pacijent + \"&labassay=\" + test.labassay_id, {}).then(function (response) {\n            if (response.data.Multi.length) {\n              _this5.Response = response.data;\n\n              var obj = {};\n              var count = 0;\n\n              response.data.Multi.forEach(function (element) {\n                count++;\n                element.multi.forEach(function (param) {\n                  if (_this5.multiparam_id == param.labassay && param.rezultat[0].rezultat_f.trim() != \"\") {\n                    obj.rezultat = param.rezultat[0].rezultat_f;\n                    obj.jedinica = param.rezultat[0].jedinice_f;\n                    obj.analit = \"Nema podataka\";\n                    obj.interp = param.interp;\n                    obj.extend = param.extend;\n                    obj.refd = param.refd;\n                    obj.refg = param.refg;\n                    obj.sid = \"Nema podataka\";\n                    obj.updated_at = new Date(param.rezultat[0].updated_at);\n\n                    var datum = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(9, 11) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(6, 8) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(1, 5);\n                    var time = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date(param.rezultat[0].updated_at).getTime() - new Date(param.rezultat[0].updated_at).getTimezoneOffset() * 60000).toISOString()).substring(12, 17);\n                    obj.datum = datum;\n                    obj.vrijeme = time;\n                    obj.kontrola = _this5.Interpretacija(\"\", obj.rezultat, obj.jedinica, obj.refd, obj.refg, _this5.$store.state.site, obj.interp, obj.extend, _this5.spec)[5];\n\n                    _this5.Procjena.push(obj);\n                    obj = {};\n                  }\n                });\n\n                if (count == response.data.Multi.length) {\n                  _this5.Procjena.sort(function (a, b) {\n                    return Date.parse(a.updated_at) == Date.parse(b.updated_at) ? 0 : +(Date.parse(a.updated_at) < Date.parse(b.updated_at)) || -1;\n                  });\n\n                  var data = [];\n\n                  if (_this5.Procjena.length) {\n                    _this5.optionsLineChart = {\n                      responsive: true,\n                      maintainAspectRatio: false,\n                      title: {\n                        display: true,\n                        text: \"\"\n                      },\n                      scales: {\n                        xAxes: [{\n                          display: true,\n                          gridLines: {\n                            display: true,\n                            color: \"#eee\"\n                          }\n                        }],\n                        yAxes: [{\n                          display: true,\n                          gridLines: {\n                            display: true,\n                            color: \"#eee\"\n                          }\n                        }]\n                      }\n                    };\n\n                    var labels = [];\n                    var kontrola = [];\n                    var temp = \"\";\n\n                    _this5.Procjena.forEach(function (element) {\n                      if (!isNaN(element.rezultat.trim())) {\n                        switch (element.kontrola) {\n                          case \"Red\":\n                            kontrola.push(palette.danger);\n                            break;\n                          case \"Green\":\n                            kontrola.push(palette.primary);\n                            break;\n                          case \"Yellow\":\n                            kontrola.push(palette.warning);\n                            break;\n\n                          default:\n                            kontrola.push(palette.info);\n                            break;\n                        }\n\n                        labels.push(element.datum);\n                        data.push(element.rezultat);\n                      }\n                    });\n\n                    _this5.dataLineChart = {\n                      labels: labels,\n                      datasets: [{\n                        label: test.ime + \" | \" + test.analit,\n                        backgroundColor: __WEBPACK_IMPORTED_MODULE_6_services_utils__[\"a\" /* default */].hex2rgb(palette.info, 0.5).css,\n                        pointBorderColor: kontrola,\n                        pointBackgroundColor: kontrola,\n                        borderColor: palette.transparent,\n                        data: data\n                      }]\n                    };\n\n                    if (data.length) {\n                      _this5.showLineChart = true;\n                    }\n\n                    _this5.$refs.staticModalEvaluationMulti.open();\n                  } else {}\n                }\n              });\n            } else {}\n            _this5.isLoading = false;\n          });\n        } else {\n          this.isLoading = true;\n          this.Procjena = [];\n\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"/patient/evaluation/single\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&patient=\" + this.pacijent, {}).then(function (response) {\n            if (response.data.Results.length) {\n              var obj = {};\n              var count = 0;\n\n              response.data.Results.forEach(function (element) {\n                count++;\n                element.rezultati.forEach(function (rez) {\n                  if (rez.labassay === test.labassay_id && element.verificiran && rez.rezultat[rez.rezultat.length - 1].rezultat_f.trim() != \"\") {\n                    obj.rezultat = rez.rezultat[rez.rezultat.length - 1].rezultat_f;\n                    obj.jedinica = rez.rezultat[rez.rezultat.length - 1].jedinice_f;\n                    obj.analit = \"\";\n                    obj.interp = rez.interp;\n                    obj.extend = rez.extend;\n                    obj.refd = rez.refd;\n                    obj.refg = rez.refg;\n                    obj.sid = element.id;\n                    obj.updated_at = rez.rezultat[rez.rezultat.length - 1].updated_at;\n\n                    var datum = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(rez.rezultat[rez.rezultat.length - 1].updated_at).slice(9, 11) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(rez.rezultat[rez.rezultat.length - 1].updated_at).slice(6, 8) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(rez.rezultat[rez.rezultat.length - 1].updated_at).slice(1, 5);\n                    var time = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date(rez.rezultat[rez.rezultat.length - 1].updated_at).getTime() - new Date(rez.rezultat[rez.rezultat.length - 1].updated_at).getTimezoneOffset() * 60000).toISOString()).substring(12, 17);\n\n                    obj.datum = datum;\n                    obj.vrijeme = time;\n                    obj.kontrola = _this5.Interpretacija(\"\", obj.rezultat, obj.jedinica, obj.refd, obj.refg, _this5.$store.state.site, obj.interp, obj.extend, _this5.spec)[5];\n\n                    _this5.Procjena.push(obj);\n                    obj = {};\n                  }\n                });\n\n                if (count == response.data.Results.length) {\n                  _this5.Procjena.sort(function (a, b) {\n                    return Date.parse(a.updated_at) == Date.parse(b.updated_at) ? 0 : +(Date.parse(a.updated_at) < Date.parse(b.updated_at)) || -1;\n                  });\n\n                  var data = [];\n\n                  if (_this5.Procjena.length) {\n                    _this5.optionsLineChart = {\n                      responsive: true,\n                      maintainAspectRatio: false,\n                      title: {\n                        display: true,\n                        text: \"\"\n                      },\n                      scales: {\n                        xAxes: [{\n                          display: true,\n                          gridLines: {\n                            display: true,\n                            color: \"#eee\"\n                          }\n                        }],\n                        yAxes: [{\n                          display: true,\n                          gridLines: {\n                            display: true,\n                            color: \"#eee\"\n                          }\n                        }]\n                      }\n                    };\n\n                    var labels = [];\n                    var kontrola = [];\n                    var temp = \"\";\n\n                    _this5.Procjena.forEach(function (element) {\n                      if (!isNaN(element.rezultat.trim())) {\n                        switch (element.kontrola) {\n                          case \"Red\":\n                            kontrola.push(palette.danger);\n                            break;\n                          case \"Green\":\n                            kontrola.push(palette.primary);\n                            break;\n                          case \"Yellow\":\n                            kontrola.push(palette.warning);\n                            break;\n\n                          default:\n                            kontrola.push(palette.info);\n                            break;\n                        }\n\n                        labels.push(element.datum);\n                        data.push(element.rezultat);\n                      }\n                    });\n\n                    _this5.dataLineChart = {\n                      labels: labels,\n                      datasets: [{\n                        label: test.ime + \" | \" + test.analit,\n                        backgroundColor: __WEBPACK_IMPORTED_MODULE_6_services_utils__[\"a\" /* default */].hex2rgb(palette.info, 0.5).css,\n                        pointBorderColor: kontrola,\n                        pointBackgroundColor: kontrola,\n                        borderColor: palette.transparent,\n                        data: data\n                      }]\n                    };\n\n                    if (data.length) {\n                      _this5.showLineChart = true;\n                    }\n\n                    _this5.$refs.staticModalEvaluationSingle.open();\n                  } else {}\n                }\n              });\n            } else {}\n            _this5.isLoading = false;\n          });\n        }\n      }\n    },\n    filteredAntibiotics: function filteredAntibiotics(column, columns) {\n      var _this6 = this;\n\n      return this.Antibiotics.filter(function (item) {\n        return _this6.Antibiotics.indexOf(item) % columns === column - 1;\n      });\n    },\n    filteredBacteries: function filteredBacteries(column, columns) {\n      var _this7 = this;\n\n      return this.TemporaryBacteries.filter(function (item) {\n        return _this7.TemporaryBacteries.indexOf(item) % columns === column - 1;\n      });\n    },\n    AddAntibiotics: function AddAntibiotics(data) {\n      var obj = {};\n\n      if (!data.chosen) {\n        obj._id = data._id, obj.rbr_a = data.rbr_a, obj.naziv = data.naziv, obj.opis = data.opis, obj.rezultat = \"\";\n        this.TemporaryAntibiotics.push(obj);\n      } else {\n        for (var i = 0; i < this.TemporaryAntibiotics.length; i++) {\n          if (this.TemporaryAntibiotics[i]._id === data._id) {\n            this.TemporaryAntibiotics.splice(i, 1);\n            break;\n          }\n        }\n      }\n    },\n    AddBacteries: function AddBacteries(data) {\n      if (!data.chosen) {\n        this.TemporaryBacteriesAdd.push(data);\n      } else {\n        for (var i = 0; i < this.TemporaryBacteriesAdd.length; i++) {\n          if (this.TemporaryBacteriesAdd[i]._id === data._id) {\n            this.TemporaryBacteriesAdd.splice(i, 1);\n            break;\n          }\n        }\n      }\n    },\n    OpenMicroSelect: function OpenMicroSelect($event, test) {\n      var _this8 = this;\n\n      console.log(\"Select Modal opening...\");\n\n      this.CurrentTab = \"\";\n      this.testovi = [];\n      this.rezultati = [];\n      this.analitiprikaz = [];\n      this.calculated = false;\n      this.show_table = false;\n      this.main = false;\n\n      var topcije = null;\n      topcije = __WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__[\"a\" /* default */].rez;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/showsingle/\" + this.$store.state.sid + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site, {}).then(function (res) {\n        console.log(res.data);\n        var test = {};\n\n        if (res.data.data.length) {\n          res.data.data.sort(function (a, b) {\n            return a.testovi.labassay.grupa + a.testovi.labassay.grouporder == b.testovi.labassay.grupa + b.testovi.labassay.grouporder ? 0 : +(a.testovi.labassay.grupa + a.testovi.labassay.grouporder > b.testovi.labassay.grupa + b.testovi.labassay.grouporder) || -1;\n          });\n\n          _this8.testovi = res.data.data;\n          _this8.analitiprikaz = res.data.multidata;\n\n          res.data.data.forEach(function (element) {\n            test = {};\n            test.realizovan = false;\n\n            test.ime = element.testovi.labassay.naziv;\n            test.test = element.testovi.labassay.sifra;\n            test.analit = element.testovi.labassay.analit;\n            test.IDE = element.testovi._id;\n            test.labassay_id = element.testovi.labassay._id;\n\n            test.multi_count = 0;\n            test.multi_rezultati = [];\n\n            res.data.multidata.forEach(function (multi) {\n              if (multi.labassay._id === element.testovi.labassay._id) {\n                test.multi_rezultati = multi.rezultat;\n                test.multi_count = multi.rezultat[0].rezultat.length;\n              }\n            });\n\n            test.kategorija = element.testovi.labassay.kategorija;\n            test.analyser = element.testovi.labassay.analyser;\n            test.multiparam = element.testovi.labassay.multiparam;\n            test.vise = element.testovi.rezultat.length;\n            test.calculated = element.testovi.labassay.calculated;\n            test.manual = element.testovi.labassay.manual;\n\n            test.select_options = eval(\"topcije.\" + element.testovi.interp.replace(\"%\", \"_\").replace(\"/\", \"_\").replace(\" \", \"_\").replace(/-/g, \"_\").replace(\"#\", \"_\").replace(/^\\d+/, \"\"));\n\n            element.testovi.rezultat.forEach(function (rezultat) {\n              test.sekcija = rezultat.anaassay.sekcija;\n              test.rezultat = rezultat.rezultat_f;\n              test.result = rezultat;\n              test.anaassay = rezultat.anaassay;\n\n              if (rezultat.rezultat_f != \"\") {\n                test.realizovan = true;\n              }\n\n              test.unit = rezultat.jedinice_f;\n\n              if (res.data.verificiran || res.data.status === \"ODOBREN\") {\n                test.odobren = \"ODOBREN\";\n                test.edit = false;\n              } else {\n                test.odobren != \"ODOBREN\";\n                test.edit = true;\n              }\n\n              test.jedinica = rezultat.jedinice_f;\n              test.id = rezultat._id;\n              test.multidata = element.testovi.labassay.multi;\n              test.rezultat_m = rezultat.rezultat_m;\n              test.bakterije = element.testovi.labassay.bakterije;\n              test.neg_description = element.testovi.labassay.neg_description;\n              test.pos_description = element.testovi.labassay.pos_description;\n              test.refSet = element.testovi.grupa;\n              test.dRef = element.testovi.refd;\n              test.gRef = element.testovi.refg;\n              test.interp = element.testovi.interp;\n              test.extend = element.testovi.extend;\n              test.retest = element.testovi.retest;\n              test.interpretacija = element.testovi.labassay.interpretacija;\n            });\n\n            if (test.select_options != undefined && !test.select_options.includes(test.rezultat)) {\n              test.select_options.unshift(test.rezultat);\n            }\n            _this8.rezultati.push(test);\n          });\n\n          if (_this8.MicrobiologySample && _this8.AllowGetSample) {\n            var bakterioloski = false;\n            var negativan = false;\n            var pozitivan = false;\n            var bakterijed = [];\n            var bakterijei = [];\n            var neg_rezultati = [];\n            var poz_rezultati = [];\n\n            _this8.CurrentTest = _this8.rezultati[0].analit;\n\n            neg_rezultati = [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this8.rezultati[0].neg_description));\n            poz_rezultati = [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this8.rezultati[0].pos_description));\n\n            if (_this8.rezultati[0].bakterije.length) {\n              bakterioloski = true;\n\n              var counter = 0;\n              var ima = false;\n\n              _this8.Bacteries.forEach(function (element) {\n                element.chosen = false;\n                counter = 0;\n                ima = false;\n                _this8.rezultati[0].bakterije.forEach(function (bakt) {\n                  counter++;\n                  if (element._id == bakt) {\n                    ima = true;\n                  }\n\n                  if (counter === _this8.rezultati[0].bakterije.length && !ima) {\n                    bakterijed.push(element);\n                  }\n\n                  if (counter === _this8.rezultati[0].bakterije.length && ima) {\n                    bakterijei.push(element);\n                  }\n                });\n              });\n\n              switch (_this8.rezultati[0].rezultat_m.length) {\n                case 0:\n                  _this8.MicrobiologyScenario = \"MAIBNoR\";\n                  _this8.SelectedBacteries = [];\n                  break;\n                case 1:\n                  _this8.MicrobiologyScenario = \"MAIBNeR\";\n                  _this8.SelectedBacteries = [];\n\n                  negativan = true;\n\n                  if (!neg_rezultati.includes(_this8.rezultati[0].rezultat.trim())) {\n                    neg_rezultati.unshift(_this8.rezultati[0].rezultat.trim());\n                  }\n\n                  break;\n\n                default:\n                  _this8.MicrobiologyScenario = \"MAIBPoR\";\n                  _this8.SelectedBacteries = [];\n                  _this8.BacteryTabs = [];\n\n                  _this8.rezultati[0].rezultat_m.forEach(function (element) {\n                    if (element.bakterija) {\n                      _this8.SelectedBacteries.push(element);\n                      _this8.BacteryTabs.push(element.opis);\n                    }\n                  });\n\n                  console.log(\"Izabrane bakterije:\");\n                  console.log(_this8.SelectedBacteries);\n\n                  var maxVal = _this8.SelectedBacteries.reduce(function (max, val) {\n                    return max.antibiogram.antibiotici.length > val.antibiogram.antibiotici.length ? max : val;\n                  });\n\n                  if (_this8.CurrentTab == \"\") {}\n                  _this8.CurrentTab = _this8.SelectedBacteries[0].opis;\n\n                  bakterijed.forEach(function (element) {\n                    _this8.SelectedBacteries.forEach(function (bact) {\n                      if (element._id == bact._id) {\n                        element.chosen = true;\n                      }\n                    });\n                  });\n\n                  bakterijei.forEach(function (element) {\n                    _this8.SelectedBacteries.forEach(function (bact) {\n                      if (element._id == bact._id) {\n                        element.chosen = true;\n                      }\n                    });\n                  });\n\n                  pozitivan = true;\n                  if (!poz_rezultati.includes(_this8.rezultati[0].rezultat.trim())) {\n                    poz_rezultati.unshift(_this8.rezultati[0].rezultat.trim());\n                  }\n\n                  break;\n              }\n            } else {\n              bakterioloski = false;\n              _this8.SelectedBacteries = [];\n\n              switch (_this8.rezultati[0].rezultat_m.length) {\n                case 0:\n                  _this8.MicrobiologyScenario = \"MANBNoR\";\n                  neg_rezultati = _this8.rezultati[0].neg_description;\n                  poz_rezultati = _this8.rezultati[0].pos_description;\n\n                  break;\n\n                case 1:\n                  if (_this8.rezultati[0].rezultat_m[0].negativan === true) {\n                    _this8.MicrobiologyScenario = \"MANBNeR\";\n\n                    negativan = true;\n\n                    if (!neg_rezultati.includes(_this8.rezultati[0].rezultat.trim())) {\n                      neg_rezultati.unshift(_this8.rezultati[0].rezultat.trim());\n                    }\n                  } else {\n                    _this8.MicrobiologyScenario = \"MANBPoR\";\n\n                    pozitivan = true;\n\n                    if (!poz_rezultati.includes(_this8.rezultati[0].rezultat.trim())) {\n                      poz_rezultati.unshift(_this8.rezultati[0].rezultat.trim());\n                    }\n                  }\n\n                  break;\n\n                default:\n                  _this8.MicrobiologyScenario = \"Unknown\";\n\n                  break;\n              }\n            }\n\n            _this8.MicrobiologyResult = {\n              negative: negativan,\n              positive: pozitivan,\n              BUG: bakterioloski,\n              F_RESULT: _this8.rezultati[0].rezultat,\n              M_RESULT: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this8.rezultati[0].rezultat_m)),\n              DefaultBacteries: [].concat(bakterijei),\n              RemainingBacteries: [].concat(bakterijed),\n              NegativeDescriptions: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(neg_rezultati)),\n              PositiveDescriptions: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(poz_rezultati))\n            };\n          } else {\n            _this8.MicrobiologyScenario = \"Unknown\";\n\n            _this8.MicrobiologyResult = {\n              negative: null,\n              positive: null,\n              BUG: null,\n              F_RESULT: \"\",\n              M_RESULT: [],\n              DefaultBacteries: [],\n              RemainingBacteries: [],\n              NegativeDescriptions: [],\n              PositiveDescriptions: []\n            };\n          }\n\n          _this8.rezultati.forEach(function (element) {\n            if (element.calculated) {\n              _this8.calculated = true;\n            }\n          });\n        }\n      }).then(function () {\n        _this8.ShowAntibiotics = false;\n        _this8.ShowBacteries = false;\n        _this8.show_table = true;\n        _this8.main = true;\n        _this8.$refs.staticModalMicroBacterySelect.open();\n      });\n    },\n    OpenMicro: function OpenMicro($event, test) {\n      var _this9 = this;\n\n      console.log(\"Result Modal opening...\");\n      this.CurrentTab = \"\";\n      this.testovi = [];\n      this.rezultati = [];\n      this.analitiprikaz = [];\n      this.calculated = false;\n      this.show_table = false;\n      this.main = false;\n\n      var topcije = null;\n      topcije = __WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__[\"a\" /* default */].rez;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/showsingle/\" + this.$store.state.sid + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site, {}).then(function (res) {\n        console.log(res.data);\n        var test = {};\n\n        if (res.data.data.length) {\n          res.data.data.sort(function (a, b) {\n            return a.testovi.labassay.grupa + a.testovi.labassay.grouporder == b.testovi.labassay.grupa + b.testovi.labassay.grouporder ? 0 : +(a.testovi.labassay.grupa + a.testovi.labassay.grouporder > b.testovi.labassay.grupa + b.testovi.labassay.grouporder) || -1;\n          });\n\n          _this9.testovi = res.data.data;\n          _this9.analitiprikaz = res.data.multidata;\n\n          res.data.data.forEach(function (element) {\n            test = {};\n            test.realizovan = false;\n\n            test.ime = element.testovi.labassay.naziv;\n            test.test = element.testovi.labassay.sifra;\n            test.analit = element.testovi.labassay.analit;\n            test.IDE = element.testovi._id;\n            test.labassay_id = element.testovi.labassay._id;\n\n            test.multi_count = 0;\n            test.multi_rezultati = [];\n\n            res.data.multidata.forEach(function (multi) {\n              if (multi.labassay._id === element.testovi.labassay._id) {\n                test.multi_rezultati = multi.rezultat;\n                test.multi_count = multi.rezultat[0].rezultat.length;\n              }\n            });\n\n            test.kategorija = element.testovi.labassay.kategorija;\n            test.analyser = element.testovi.labassay.analyser;\n            test.multiparam = element.testovi.labassay.multiparam;\n            test.vise = element.testovi.rezultat.length;\n            test.calculated = element.testovi.labassay.calculated;\n            test.manual = element.testovi.labassay.manual;\n\n            test.select_options = eval(\"topcije.\" + element.testovi.interp.replace(\"%\", \"_\").replace(\"/\", \"_\").replace(\" \", \"_\").replace(/-/g, \"_\").replace(\"#\", \"_\").replace(/^\\d+/, \"\"));\n\n            element.testovi.rezultat.forEach(function (rezultat) {\n              test.sekcija = rezultat.anaassay.sekcija;\n              test.rezultat = rezultat.rezultat_f;\n              test.result = rezultat;\n              test.anaassay = rezultat.anaassay;\n\n              if (rezultat.rezultat_f != \"\") {\n                test.realizovan = true;\n              }\n\n              test.unit = rezultat.jedinice_f;\n\n              if (res.data.verificiran || res.data.status === \"ODOBREN\") {\n                test.odobren = \"ODOBREN\";\n                test.edit = false;\n              } else {\n                test.odobren != \"ODOBREN\";\n                test.edit = true;\n              }\n\n              test.jedinica = rezultat.jedinice_f;\n              test.id = rezultat._id;\n              test.multidata = element.testovi.labassay.multi;\n              test.rezultat_m = rezultat.rezultat_m;\n              test.bakterije = element.testovi.labassay.bakterije;\n              test.neg_description = element.testovi.labassay.neg_description;\n              test.pos_description = element.testovi.labassay.pos_description;\n              test.refSet = element.testovi.grupa;\n              test.dRef = element.testovi.refd;\n              test.gRef = element.testovi.refg;\n              test.interp = element.testovi.interp;\n              test.extend = element.testovi.extend;\n              test.retest = element.testovi.retest;\n              test.interpretacija = element.testovi.labassay.interpretacija;\n            });\n\n            if (test.select_options != undefined && !test.select_options.includes(test.rezultat)) {\n              test.select_options.unshift(test.rezultat);\n            }\n            _this9.rezultati.push(test);\n          });\n\n          if (_this9.MicrobiologySample && _this9.AllowGetSample) {\n            var bakterioloski = false;\n            var negativan = false;\n            var pozitivan = false;\n            var bakterijed = [];\n            var bakterijei = [];\n            var neg_rezultati = [];\n            var poz_rezultati = [];\n\n            _this9.CurrentTest = _this9.rezultati[0].analit;\n\n            neg_rezultati = [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this9.rezultati[0].neg_description));\n            poz_rezultati = [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this9.rezultati[0].pos_description));\n\n            if (_this9.rezultati[0].bakterije.length) {\n              bakterioloski = true;\n\n              var counter = 0;\n              var ima = false;\n\n              _this9.Bacteries.forEach(function (element) {\n                element.chosen = false;\n                counter = 0;\n                ima = false;\n                _this9.rezultati[0].bakterije.forEach(function (bakt) {\n                  counter++;\n                  if (element._id == bakt) {\n                    ima = true;\n                  }\n\n                  if (counter === _this9.rezultati[0].bakterije.length && !ima) {\n                    bakterijed.push(element);\n                  }\n\n                  if (counter === _this9.rezultati[0].bakterije.length && ima) {\n                    bakterijei.push(element);\n                  }\n                });\n              });\n\n              switch (_this9.rezultati[0].rezultat_m.length) {\n                case 0:\n                  _this9.MicrobiologyScenario = \"MAIBNoR\";\n                  _this9.SelectedBacteries = [];\n                  break;\n                case 1:\n                  _this9.MicrobiologyScenario = \"MAIBNeR\";\n                  _this9.SelectedBacteries = [];\n\n                  negativan = true;\n\n                  if (!neg_rezultati.includes(_this9.rezultati[0].rezultat.trim())) {\n                    neg_rezultati.unshift(_this9.rezultati[0].rezultat.trim());\n                  }\n\n                  break;\n\n                default:\n                  _this9.MicrobiologyScenario = \"MAIBPoR\";\n                  _this9.SelectedBacteries = [];\n                  _this9.BacteryTabs = [];\n\n                  _this9.rezultati[0].rezultat_m.forEach(function (element) {\n                    if (element.bakterija) {\n                      _this9.SelectedBacteries.push(element);\n                      _this9.BacteryTabs.push(element.opis);\n                    }\n                  });\n\n                  console.log(\"Izabrane bakterije:\");\n                  console.log(_this9.SelectedBacteries);\n\n                  var maxVal = _this9.SelectedBacteries.reduce(function (max, val) {\n                    return max.antibiogram.antibiotici.length > val.antibiogram.antibiotici.length ? max : val;\n                  });\n\n                  if (_this9.CurrentTab == \"\") {}\n                  _this9.CurrentTab = _this9.SelectedBacteries[0].opis;\n\n                  bakterijed.forEach(function (element) {\n                    _this9.SelectedBacteries.forEach(function (bact) {\n                      if (element._id == bact._id) {\n                        element.chosen = true;\n                      }\n                    });\n                  });\n\n                  bakterijei.forEach(function (element) {\n                    _this9.SelectedBacteries.forEach(function (bact) {\n                      if (element._id == bact._id) {\n                        element.chosen = true;\n                      }\n                    });\n                  });\n\n                  pozitivan = true;\n                  if (!poz_rezultati.includes(_this9.rezultati[0].rezultat.trim())) {\n                    poz_rezultati.unshift(_this9.rezultati[0].rezultat.trim());\n                  }\n\n                  break;\n              }\n            } else {\n              bakterioloski = false;\n              _this9.SelectedBacteries = [];\n\n              switch (_this9.rezultati[0].rezultat_m.length) {\n                case 0:\n                  _this9.MicrobiologyScenario = \"MANBNoR\";\n                  neg_rezultati = _this9.rezultati[0].neg_description;\n                  poz_rezultati = _this9.rezultati[0].pos_description;\n\n                  break;\n\n                case 1:\n                  if (_this9.rezultati[0].rezultat_m[0].negativan === true) {\n                    _this9.MicrobiologyScenario = \"MANBNeR\";\n\n                    negativan = true;\n\n                    if (!neg_rezultati.includes(_this9.rezultati[0].rezultat.trim())) {\n                      neg_rezultati.unshift(_this9.rezultati[0].rezultat.trim());\n                    }\n                  } else {\n                    _this9.MicrobiologyScenario = \"MANBPoR\";\n\n                    pozitivan = true;\n\n                    if (!poz_rezultati.includes(_this9.rezultati[0].rezultat.trim())) {\n                      poz_rezultati.unshift(_this9.rezultati[0].rezultat.trim());\n                    }\n                  }\n\n                  break;\n\n                default:\n                  _this9.MicrobiologyScenario = \"Unknown\";\n\n                  break;\n              }\n            }\n\n            _this9.MicrobiologyResult = {\n              negative: negativan,\n              positive: pozitivan,\n              BUG: bakterioloski,\n              F_RESULT: _this9.rezultati[0].rezultat,\n              M_RESULT: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this9.rezultati[0].rezultat_m)),\n              DefaultBacteries: [].concat(bakterijei),\n              RemainingBacteries: [].concat(bakterijed),\n              NegativeDescriptions: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(neg_rezultati)),\n              PositiveDescriptions: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(poz_rezultati))\n            };\n          } else {\n            _this9.MicrobiologyScenario = \"Unknown\";\n\n            _this9.MicrobiologyResult = {\n              negative: null,\n              positive: null,\n              BUG: null,\n              F_RESULT: \"\",\n              M_RESULT: [],\n              DefaultBacteries: [],\n              RemainingBacteries: [],\n              NegativeDescriptions: [],\n              PositiveDescriptions: []\n            };\n          }\n\n          _this9.rezultati.forEach(function (element) {\n            if (element.calculated) {\n              _this9.calculated = true;\n            }\n          });\n        }\n      }).then(function () {\n        _this9.ShowAntibiotics = false;\n        _this9.ShowBacteries = false;\n        _this9.show_table = true;\n        _this9.main = true;\n        _this9.$refs.staticModalMicroBactery.open();\n      });\n    },\n    SelectBactery: function SelectBactery(data) {\n      if (!data.chosen) {\n        this.SelectedBacteries.push(data);\n      } else {\n        for (var i = this.SelectedBacteries.length - 1; i >= 0; i--) {\n          if (this.SelectedBacteries[i]._id === data._id) {\n            this.SelectedBacteries.splice(i, 1);\n          }\n        }\n      }\n\n      if (this.SelectedBacteries.length > 0) {\n        this.ModalPositiveCondition = true;\n      } else {\n        this.ModalPositiveCondition = false;\n      }\n    },\n    MicroResultSelect: function MicroResultSelect(event) {\n      var _this10 = this;\n\n      this.uzorci.forEach(function (element) {\n        if (element.sid === _this10.$store.state.sid) {\n          _this10.sample.status = \"ZAPRIMLJEN\";\n        }\n      });\n      this.$refs.staticModalSelectResult.open();\n    },\n    ResetSample: function ResetSample(event) {\n      this.$refs.staticModalResetSample.open();\n    },\n    onCancel: function onCancel() {},\n    Prethodni: function Prethodni() {\n      var _this11 = this;\n\n      this.pagination = false;\n\n      var check = 0;\n      var found = false;\n      this.Results.forEach(function (element) {\n        check++;\n        if (element.pid == _this11.Previous.pid) {\n          found = true;\n          __WEBPACK_IMPORTED_MODULE_4__router__[\"a\" /* default */].push(\"/obrada/rezultati/\" + element.patient + \"/\" + element.pid + \"?date=\" + element.date);\n        }\n      });\n\n      if (check === this.Results.length) {\n        if (found) {\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"/rezultati/pagination\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&pid=\" + this.Previous.pid.toString() + \"&date=\" + this.$route.query.date, {}).then(function (res) {\n            res.data.rezultati = res.data.rezultati.sort(function (a, b) {\n              return a.pid.localeCompare(b.pid, undefined, {\n                numeric: true,\n                sensitivity: \"base\"\n              });\n            });\n\n            _this11.data_length = res.data.rezultati[res.data.rezultati.length - 1].pid;\n            _this11.data_min = res.data.rezultati[0].pid;\n            if (__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_own_property_names___default()(res.data).length === 0) {\n\n              _this11.pagination = true;\n              _this11.backward_disabled = true;\n            } else {\n              _this11.data_pid = res.data.data.pid;\n              _this11.Results = res.data.rezultati;\n\n              __WEBPACK_IMPORTED_MODULE_4__router__[\"a\" /* default */].push(\"/obrada/rezultati/\" + res.data.data.patient + \"/\" + res.data.data.pid + \"?date=\" + res.data.data.date);\n            }\n          });\n        } else {\n          this.Previous.pid = this.Previous.pid - 1;\n          if (this.Previous.pid > 0) {\n            this.Prethodni();\n          } else {}\n        }\n      } else {}\n    },\n    Sljedeci: function Sljedeci() {\n      var _this12 = this;\n\n      this.pagination = false;\n\n      var check = 0;\n      var found = false;\n      this.Results.forEach(function (element) {\n        check++;\n        if (element.pid == _this12.Next.pid) {\n          found = true;\n          __WEBPACK_IMPORTED_MODULE_4__router__[\"a\" /* default */].push(\"/obrada/rezultati/\" + element.patient + \"/\" + element.pid + \"?date=\" + element.date);\n        }\n      });\n\n      if (check === this.Results.length) {\n        if (found) {\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"/rezultati/pagination\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&pid=\" + this.Next.pid.toString() + \"&date=\" + this.$route.query.date, {}).then(function (res) {\n            res.data.rezultati = res.data.rezultati.sort(function (a, b) {\n              return a.pid.localeCompare(b.pid, undefined, {\n                numeric: true,\n                sensitivity: \"base\"\n              });\n            });\n\n            _this12.data_length = res.data.rezultati[res.data.rezultati.length - 1].pid;\n            _this12.data_min = res.data.rezultati[0].pid;\n            if (__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_own_property_names___default()(res.data).length === 0) {\n\n              _this12.pagination = true;\n              _this12.forward_disabled = true;\n            } else {\n              _this12.data_pid = res.data.data.pid;\n              _this12.Results = res.data.rezultati;\n\n              __WEBPACK_IMPORTED_MODULE_4__router__[\"a\" /* default */].push(\"/obrada/rezultati/\" + res.data.data.patient + \"/\" + res.data.data.pid + \"?date=\" + res.data.data.date);\n            }\n          });\n        } else {\n          this.Next.pid = this.Next.pid + 1;\n          this.Sljedeci();\n        }\n      } else {}\n    },\n    Created: function Created() {\n      var _this13 = this;\n\n      this.MicrobiologyOrder = false;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/odobravanje/samples/\" + this.$route.params.patient + \"/\" + this.$route.params.id + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&date=\" + this.$route.query.date, {}).then(function (res) {\n        _this13.header = res.data.results[0].patient.ime + \" \" + res.data.results[0].patient.prezime;\n\n        var datRodjenja = res.data.results[0].patient.jmbg.substring(0, 2) + \".\" + res.data.results[0].patient.jmbg.substring(2, 4) + \".\";\n\n        var godiste2 = res.data.results[0].patient.jmbg.substring(4, 7);\n\n        switch (godiste2[0]) {\n          case \"9\":\n            godiste2 = \"1\" + godiste2;\n            break;\n          case \"0\":\n            godiste2 = \"2\" + godiste2;\n            break;\n\n          default:\n            break;\n        }\n\n        if (datRodjenja.includes(\"01.01\") && godiste2 == \"1920\") {\n          _this13.datumRodjenja = \"Nema podataka\";\n        } else if (!datRodjenja.includes(\"00.00\")) {\n          _this13.datumRodjenja = datRodjenja + godiste2;\n        } else {\n          _this13.datumRodjenja = godiste2;\n        }\n\n        _this13.adresaStanovanja = res.data.results[0].patient.adresa;\n\n        _this13.imeRoditelja = res.data.results[0].patient.roditelj;\n\n        _this13.lokacija = res.data.lokacija;\n        _this13.klijent = res.data.results[0].customer;\n        console.log(_this13.klijent);\n        _this13.final_pdf = res.data.final_pdf;\n\n        _this13.analyser_patient = res.data.results[0].patient;\n\n        _this13.timestamp = res.data.results[0].timestamp;\n\n        _this13.pacijent = res.data.results[0].patient._id;\n        _this13.ime = res.data.results[0].patient.ime;\n        _this13.prezime = res.data.results[0].patient.prezime;\n        _this13.data_spol = res.data.results[0].patient.spol;\n        _this13.jmbg = res.data.results[0].patient.jmbg;\n        _this13.pid = res.data.results[0].sample.pid;\n\n        _this13.email = res.data.results[0].patient.email.trim();\n        _this13.email_tmp = res.data.results[0].patient.email.trim();\n\n        var str = \"\";\n        var tmp = \"\";\n        var jmbgDan = _this13.jmbg.slice(0, 2);\n        var jmbgMjesec = _this13.jmbg.slice(2, 4);\n        var jmbgGodina = _this13.jmbg.slice(4, 7);\n\n        if (jmbgGodina[0] === \"9\") {\n          str = \"1\";\n          tmp = jmbgGodina;\n          jmbgGodina = str.concat(tmp);\n        } else if (jmbgGodina[0] === \"0\") {\n          str = \"2\";\n          tmp = jmbgGodina;\n          jmbgGodina = str.concat(tmp);\n        } else {\n          console.warn(\"Invalid year...\");\n        }\n\n        var date = jmbgGodina + \"-\" + jmbgMjesec + \"-\" + jmbgDan;\n        var jmbgObj = _this13.parse_date(date);\n        var zGodina = jmbgObj.years + 1;\n        _this13.starost = zGodina;\n\n        if (!_this13.Email(_this13.email)) {\n          _this13.email = \"\";\n          _this13.email_tmp = \"\";\n        }\n\n        _this13.count = res.data.results.length;\n        _this13.approved = 0;\n        _this13.verified = 0;\n\n        _this13.odobren = true;\n        _this13.verificiran = true;\n        _this13.partials = [];\n        _this13.partials_condition = false;\n\n        res.data.results.forEach(function (element) {\n          if (element.verificiran) {\n            _this13.verified++;\n            _this13.partials.push(element._id);\n          }\n          if (element.status === \"ODOBREN\" || element.status === \"VERIFICIRAN\") {\n            _this13.approved++;\n          }\n          if (element.status != \"ODOBREN\" && element.status != \"VERIFICIRAN\") {\n            _this13.odobren = false;\n          }\n          if (!element.verificiran) {\n            _this13.verificiran = false;\n          }\n        });\n\n        if (_this13.count > _this13.verified && _this13.verified > 1) {\n          _this13.partials_condition = true;\n        }\n\n        _this13.uzorci = [];\n\n        _this13.nalaz.patient = res.data.results[0].patient._id;\n        _this13.nalaz.samples = [];\n\n        res.data.results.forEach(function (element) {\n          var check = 0;\n          var zaprimljen = 0;\n          var realizovan = 0;\n\n          if (element.verificiran) {\n            var status_uzorka = \"VERIFICIRAN\";\n          } else {\n            var status_uzorka = element.status;\n          }\n\n          _this13.nalaz.samples.push(element._id);\n\n          element.rezultati.forEach(function (test) {\n            check++;\n\n            if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n              zaprimljen++;\n            }\n\n            if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n              realizovan++;\n            }\n\n            if (check === element.rezultati.length) {\n\n              if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                _this13.MicrobiologyOrder = true;\n              }\n\n              if (status_uzorka === \"VERIFICIRAN\") {\n                _this13.uzorci.push({\n                  sid: element.id,\n                  status: \"VERIFICIRAN\",\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              } else if (status_uzorka === \"ODOBREN\") {\n                _this13.uzorci.push({\n                  sid: element.id,\n                  status: \"ODOBREN\",\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              } else if (zaprimljen < 1) {\n                _this13.uzorci.push({\n                  sid: element.id,\n                  status: \"REALIZOVAN\",\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              } else if (realizovan < 1) {\n                var stat = \"ZAPRIMLJEN\";\n                if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                  if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                    stat = \"REALIZOVAN\";\n                  }\n                }\n                _this13.uzorci.push({\n                  sid: element.id,\n                  status: stat,\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              } else {\n                _this13.uzorci.push({\n                  sid: element.id,\n                  status: \"U OBRADI\",\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              }\n            }\n          });\n        });\n\n        _this13.uzorci = _this13.uzorci.sort(function (a, b) {\n          return a.sid.localeCompare(b.sid, undefined, {\n            numeric: true,\n            sensitivity: \"base\"\n          });\n        });\n        _this13.main = true;\n\n        _this13.pagination = true;\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"/rezultati/pagination\" + \"?token=\" + _this13.$store.state.token + \"&site=\" + _this13.$store.state.site + \"&pid=\" + _this13.$route.params.id + \"&date=\" + _this13.$route.query.date, {}).then(function (res) {\n          res.data.rezultati = res.data.rezultati.sort(function (a, b) {\n            return a.pid.localeCompare(b.pid, undefined, {\n              numeric: true,\n              sensitivity: \"base\"\n            });\n          });\n\n          _this13.data_length = res.data.rezultati[res.data.rezultati.length - 1].pid;\n          _this13.data_min = res.data.rezultati[0].pid;\n          if (__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_own_property_names___default()(res.data).length === 0) {\n\n            _this13.pagination = true;\n          } else {\n            _this13.data_pid = res.data.data.pid;\n            _this13.Results = res.data.rezultati;\n          }\n\n          if (_this13.MicrobiologyOrder) {\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"mikrobiologija/bakterije/get?token=\" + _this13.$store.state.token + \"&site=\" + _this13.$store.state.site, {}).then(function (res) {\n              _this13.Bacteries = res.data.bakterije;\n              __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"mikrobiologija/antibiogrami/get?token=\" + _this13.$store.state.token + \"&site=\" + _this13.$store.state.site, {}).then(function (res) {\n                _this13.Antibiograms = res.data.antibiogrami;\n\n                _this13.Antibiograms.sort(function (a, b) {\n                  return a.naziv.localeCompare(b.naziv, undefined, {\n                    numeric: true,\n                    sensitivity: \"base\"\n                  });\n                });\n\n                __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"mikrobiologija/antibiotici/get?token=\" + _this13.$store.state.token + \"&site=\" + _this13.$store.state.site, {}).then(function (res) {\n                  res.data.antibiotici.sort(function (a, b) {\n                    return a.rbr_a.localeCompare(b.rbr_a, undefined, {\n                      numeric: true,\n                      sensitivity: \"base\"\n                    });\n                  });\n\n                  _this13.Antibiotics = [];\n\n                  res.data.antibiotici.forEach(function (element) {\n                    element.chosen = false;\n                    element.disabled = false;\n                    _this13.Antibiotics.push(element);\n                  });\n                });\n              });\n            });\n          }\n        });\n      });\n    },\n    Povratak: function Povratak() {\n      __WEBPACK_IMPORTED_MODULE_4__router__[\"a\" /* default */].push(\"/obrada/pregled/\" + \"?sekcija=\" + \"SVE\");\n    },\n    Nazad: function Nazad() {\n      this.email_button = false;\n      this.main = true;\n      this.pdf = false;\n    },\n\n\n    Email: function Email(email) {\n      if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    parse_date: function parse_date(date) {\n      date = date.split(\"-\");\n      var today = new Date();\n      var year = today.getFullYear();\n      var month = today.getMonth() + 1;\n      var day = today.getDate();\n      var yy = parseInt(date[0]);\n      var mm = parseInt(date[1]);\n      var dd = parseInt(date[2]);\n      var years, months, days;\n\n      months = month - mm;\n      if (day < dd) {\n        months = months - 1;\n      }\n\n      years = year - yy;\n      if (month * 100 + day < mm * 100 + dd) {\n        years = years - 1;\n        months = months + 12;\n      }\n\n      days = Math.floor((today.getTime() - new Date(yy + years, mm + months - 1, dd).getTime()) / (24 * 60 * 60 * 1000));\n\n      return { years: years, months: months, days: days };\n    },\n\n    GetSingleSample: function GetSingleSample(data) {\n      var _this14 = this;\n\n      this.testovi = [];\n      this.rezultati = [];\n      this.analitiprikaz = [];\n      this.calculated = false;\n\n      var topcije = null;\n      topcije = __WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__[\"a\" /* default */].rez;\n\n      this.show_table = false;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/showsingle/\" + data.sid + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site, {}).then(function (res) {\n        var test = {};\n\n        if (res.data.data.length) {\n          res.data.data.sort(function (a, b) {\n            return a.testovi.labassay.grupa + a.testovi.labassay.grouporder == b.testovi.labassay.grupa + b.testovi.labassay.grouporder ? 0 : +(a.testovi.labassay.grupa + a.testovi.labassay.grouporder > b.testovi.labassay.grupa + b.testovi.labassay.grouporder) || -1;\n          });\n\n          _this14.testovi = res.data.data;\n          _this14.analitiprikaz = res.data.multidata;\n\n          res.data.data.forEach(function (element) {\n            test = {};\n            test.realizovan = false;\n\n            test.ime = element.testovi.labassay.naziv;\n            test.test = element.testovi.labassay.sifra;\n            test.analit = element.testovi.labassay.analit;\n            test.IDE = element.testovi._id;\n            test.labassay_id = element.testovi.labassay._id;\n\n            test.multi_count = 0;\n            test.multi_rezultati = [];\n\n            res.data.multidata.forEach(function (multi) {\n              if (multi.labassay._id === element.testovi.labassay._id) {\n                test.multi_rezultati = multi.rezultat;\n                test.multi_count = multi.rezultat[0].rezultat.length;\n              }\n            });\n\n            test.kategorija = element.testovi.labassay.kategorija;\n            test.analyser = element.testovi.labassay.analyser;\n            test.multiparam = element.testovi.labassay.multiparam;\n            test.vise = element.testovi.rezultat.length;\n            test.calculated = element.testovi.labassay.calculated;\n            test.manual = element.testovi.labassay.manual;\n\n            test.select_options = eval(\"topcije.\" + element.testovi.interp.replace(\"%\", \"_\").replace(\"/\", \"_\").replace(\" \", \"_\").replace(/-/g, \"_\").replace(\"#\", \"_\").replace(/^\\d+/, \"\"));\n\n            element.testovi.rezultat.forEach(function (rezultat) {\n              test.sekcija = rezultat.anaassay.sekcija;\n\n              if (rezultat.anaassay.test === \"5f6ca517e4d760238841bba3\" && rezultat.rezultat_f.trim() == \"\") {\n                console.log(\"Starost pacijenta: \" + _this14.starost);\n                test.rezultat = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(_this14.starost);\n              } else {\n                test.rezultat = rezultat.rezultat_f;\n              }\n\n              test.result = rezultat;\n              test.anaassay = rezultat.anaassay;\n\n              if (rezultat.rezultat_f != \"\") {\n                test.realizovan = true;\n              }\n\n              test.unit = rezultat.jedinice_f;\n\n              if (res.data.verificiran || res.data.status === \"ODOBREN\") {\n                test.odobren = \"ODOBREN\";\n                test.edit = false;\n              } else {\n                test.odobren != \"ODOBREN\";\n                test.edit = true;\n              }\n\n              test.jedinica = rezultat.jedinice_f;\n              test.id = rezultat._id;\n              test.multidata = element.testovi.labassay.multi;\n              test.rezultat_m = rezultat.rezultat_m;\n              test.bakterije = element.testovi.labassay.bakterije;\n              test.neg_description = element.testovi.labassay.neg_description;\n              test.pos_description = element.testovi.labassay.pos_description;\n              test.refSet = element.testovi.grupa;\n              test.dRef = element.testovi.refd;\n              test.gRef = element.testovi.refg;\n              test.interp = element.testovi.interp;\n              test.extend = element.testovi.extend;\n              test.retest = element.testovi.retest;\n              test.interpretacija = element.testovi.labassay.interpretacija;\n            });\n\n            if (test.select_options != undefined && !test.select_options.includes(test.rezultat)) {\n              test.select_options.unshift(test.rezultat);\n            }\n            _this14.rezultati.push(test);\n          });\n\n          if (_this14.MicrobiologySample) {\n\n            var bakterioloski = false;\n            var negativan = false;\n            var pozitivan = false;\n            var bakterijed = [];\n            var bakterijei = [];\n            var neg_rezultati = [];\n            var poz_rezultati = [];\n\n            _this14.CurrentTest = _this14.rezultati[0].analit;\n\n            neg_rezultati = [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this14.rezultati[0].neg_description));\n            poz_rezultati = [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this14.rezultati[0].pos_description));\n\n            if (_this14.rezultati[0].bakterije.length) {\n              console.log(\"Ima bakterije.\");\n\n              bakterioloski = true;\n\n              var counter = 0;\n              var ima = false;\n\n              _this14.Bacteries.forEach(function (element) {\n                element.chosen = false;\n                counter = 0;\n                ima = false;\n                _this14.rezultati[0].bakterije.forEach(function (bakt) {\n                  counter++;\n                  if (element._id == bakt) {\n                    ima = true;\n                  }\n\n                  if (counter === _this14.rezultati[0].bakterije.length && !ima) {\n                    bakterijed.push(element);\n                  }\n\n                  if (counter === _this14.rezultati[0].bakterije.length && ima) {\n                    bakterijei.push(element);\n                  }\n                });\n              });\n\n              switch (_this14.rezultati[0].rezultat_m.length) {\n                case 0:\n                  _this14.MicrobiologyScenario = \"MAIBNoR\";\n                  _this14.SelectedBacteries = [];\n                  break;\n                case 1:\n                  _this14.MicrobiologyScenario = \"MAIBNeR\";\n                  _this14.SelectedBacteries = [];\n\n                  negativan = true;\n\n                  if (!neg_rezultati.includes(_this14.rezultati[0].rezultat.trim())) {\n                    neg_rezultati.unshift(_this14.rezultati[0].rezultat.trim());\n                  }\n\n                  break;\n\n                default:\n                  _this14.MicrobiologyScenario = \"MAIBPoR\";\n                  _this14.SelectedBacteries = [];\n                  _this14.BacteryTabs = [];\n\n                  _this14.rezultati[0].rezultat_m.forEach(function (element) {\n                    if (element.bakterija) {\n                      _this14.SelectedBacteries.push(element);\n                      _this14.BacteryTabs.push(element.opis);\n                    }\n                  });\n\n                  console.log(\"Izabrane bakterije:\");\n                  console.log(_this14.SelectedBacteries);\n\n                  var maxVal = _this14.SelectedBacteries.reduce(function (max, val) {\n                    return max.antibiogram.antibiotici.length > val.antibiogram.antibiotici.length ? max : val;\n                  });\n\n                  if (_this14.CurrentTab == \"\") {}\n                  _this14.CurrentTab = _this14.SelectedBacteries[0].opis;\n\n                  bakterijed.forEach(function (element) {\n                    _this14.SelectedBacteries.forEach(function (bact) {\n                      if (element._id == bact._id) {\n                        element.chosen = true;\n                      }\n                    });\n                  });\n\n                  bakterijei.forEach(function (element) {\n                    _this14.SelectedBacteries.forEach(function (bact) {\n                      if (element._id == bact._id) {\n                        element.chosen = true;\n                      }\n                    });\n                  });\n\n                  pozitivan = true;\n                  if (!poz_rezultati.includes(_this14.rezultati[0].rezultat.trim())) {\n                    poz_rezultati.unshift(_this14.rezultati[0].rezultat.trim());\n                  }\n\n                  break;\n              }\n            } else {\n              bakterioloski = false;\n\n              console.log(\"Nema bakterije.\");\n\n              _this14.SelectedBacteries = [];\n\n              switch (_this14.rezultati[0].rezultat_m.length) {\n                case 0:\n                  _this14.MicrobiologyScenario = \"MANBNoR\";\n                  neg_rezultati = _this14.rezultati[0].neg_description;\n                  poz_rezultati = _this14.rezultati[0].pos_description;\n\n                  break;\n\n                case 1:\n                  if (_this14.rezultati[0].rezultat_m[0].negativan === true) {\n                    _this14.MicrobiologyScenario = \"MANBNeR\";\n\n                    negativan = true;\n\n                    if (!neg_rezultati.includes(_this14.rezultati[0].rezultat.trim())) {\n                      neg_rezultati.unshift(_this14.rezultati[0].rezultat.trim());\n                    }\n                  } else {\n                    _this14.MicrobiologyScenario = \"MANBPoR\";\n\n                    pozitivan = true;\n\n                    if (!poz_rezultati.includes(_this14.rezultati[0].rezultat.trim())) {\n                      poz_rezultati.unshift(_this14.rezultati[0].rezultat.trim());\n                    }\n                  }\n\n                  break;\n\n                default:\n                  _this14.MicrobiologyScenario = \"Unknown\";\n\n                  break;\n              }\n            }\n\n            _this14.MicrobiologyResult = {\n              negative: negativan,\n              positive: pozitivan,\n              BUG: bakterioloski,\n              F_RESULT: _this14.rezultati[0].rezultat,\n              M_RESULT: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this14.rezultati[0].rezultat_m)),\n              DefaultBacteries: [].concat(bakterijei),\n              RemainingBacteries: [].concat(bakterijed),\n              NegativeDescriptions: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(neg_rezultati)),\n              PositiveDescriptions: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(poz_rezultati))\n            };\n          } else {\n\n            _this14.MicrobiologyScenario = \"Unknown\";\n\n            _this14.MicrobiologyResult = {\n              negative: null,\n              positive: null,\n              BUG: null,\n              F_RESULT: \"\",\n              M_RESULT: [],\n              DefaultBacteries: [],\n              RemainingBacteries: [],\n              NegativeDescriptions: [],\n              PositiveDescriptions: []\n            };\n          }\n\n          _this14.rezultati.forEach(function (element) {\n            if (element.calculated) {\n              _this14.calculated = true;\n            }\n          });\n\n          _this14.sample = data;\n          _this14.show_table = true;\n        }\n      }).then(function () {\n        __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$emit(\"SetClientHeight\", data.sid);\n      });\n    },\n    SelectAnalyser: function SelectAnalyser(test) {\n      var _this15 = this;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/odobravanje/analysers\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&test=\" + test.labassay_id, {}).then(function (res) {\n        _this15.analysers = [];\n\n        res.data.anaassays.forEach(function (element) {\n          element.aparat.site = element.site;\n          _this15.analysers.push(element.aparat);\n        });\n\n        _this15.analysers.forEach(function (analyser) {\n          analyser.selected = false;\n        });\n\n        _this15.analiza = test;\n\n        _this15.rezultati.forEach(function (element) {\n          _this15.analysers.forEach(function (analyser) {\n            if (element.ime === _this15.analiza.ime && element.anaassay.aparat === analyser._id) {\n              analyser.selected = true;\n              _this15.analyser_selected = analyser;\n            }\n          });\n        });\n        _this15.$refs.staticModalAparati.open();\n      });\n    },\n    AnalyserSelected: function AnalyserSelected(analyser) {\n      var _this16 = this;\n\n      this.analyser = analyser;\n\n      if (this.analyser_selected._id === analyser._id) {\n        this.$refs.staticModalAparati.close();\n      } else {\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"rezultati/odobravanje/references\", {\n          token: this.$store.state.token,\n          site: this.$store.state.site,\n          id: this.sample.sid,\n          pacijent: this.analyser_patient,\n          analiza: this.analiza,\n          analyser: this.analyser\n        }).then(function (res) {\n          if (res.data.success) {\n            var data = {};\n\n            _this16.uzorci.forEach(function (element) {\n              if (element.sid === _this16.$store.state.sid) {\n                data = element;\n              }\n            });\n\n            _this16.testovi = [];\n            _this16.rezultati = [];\n            _this16.analitiprikaz = [];\n            _this16.calculated = false;\n\n            var topcije = null;\n            topcije = __WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__[\"a\" /* default */].rez;\n\n            _this16.show_table = false;\n\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/showsingle/\" + data.sid + \"?token=\" + _this16.$store.state.token + \"&site=\" + _this16.$store.state.site, {}).then(function (res) {\n              var test = {};\n\n              if (res.data.data.length) {\n                res.data.data.sort(function (a, b) {\n                  return a.testovi.labassay.grupa + a.testovi.labassay.grouporder == b.testovi.labassay.grupa + b.testovi.labassay.grouporder ? 0 : +(a.testovi.labassay.grupa + a.testovi.labassay.grouporder > b.testovi.labassay.grupa + b.testovi.labassay.grouporder) || -1;\n                });\n\n                _this16.testovi = res.data.data;\n                _this16.analitiprikaz = res.data.multidata;\n\n                res.data.data.forEach(function (element) {\n                  test = {};\n                  test.realizovan = false;\n\n                  test.ime = element.testovi.labassay.naziv;\n                  test.test = element.testovi.labassay.sifra;\n                  test.analit = element.testovi.labassay.analit;\n                  test.IDE = element.testovi._id;\n                  test.labassay_id = element.testovi.labassay._id;\n\n                  test.multi_count = 0;\n                  test.multi_rezultati = [];\n\n                  res.data.multidata.forEach(function (multi) {\n                    if (multi.labassay._id === element.testovi.labassay._id) {\n                      test.multi_rezultati = multi.rezultat;\n                      test.multi_count = multi.rezultat[0].rezultat.length;\n                    }\n                  });\n\n                  test.kategorija = element.testovi.labassay.kategorija;\n                  test.analyser = element.testovi.labassay.analyser;\n                  test.multiparam = element.testovi.labassay.multiparam;\n                  test.vise = element.testovi.rezultat.length;\n                  test.calculated = element.testovi.labassay.calculated;\n                  test.manual = element.testovi.labassay.manual;\n\n                  test.select_options = eval(\"topcije.\" + element.testovi.interp.replace(\"%\", \"_\").replace(\"/\", \"_\").replace(\" \", \"_\").replace(/-/g, \"_\").replace(\"#\", \"_\").replace(/^\\d+/, \"\"));\n\n                  element.testovi.rezultat.forEach(function (rezultat) {\n                    test.sekcija = rezultat.anaassay.sekcija;\n                    test.rezultat = rezultat.rezultat_f;\n                    test.result = rezultat;\n                    test.anaassay = rezultat.anaassay;\n\n                    if (rezultat.rezultat_f != \"\") {\n                      test.realizovan = true;\n                    }\n\n                    test.unit = rezultat.jedinice_f;\n\n                    if (res.data.verificiran || res.data.status === \"ODOBREN\") {\n                      test.odobren = \"ODOBREN\";\n                      test.edit = false;\n                    } else {\n                      test.odobren != \"ODOBREN\";\n                      test.edit = true;\n                    }\n\n                    test.jedinica = rezultat.jedinice_f;\n                    test.id = rezultat._id;\n                    test.multidata = element.testovi.labassay.multi;\n                    test.rezultat_m = rezultat.rezultat_m;\n                    test.bakterije = element.testovi.labassay.bakterije;\n                    test.neg_description = element.testovi.labassay.neg_description;\n                    test.pos_description = element.testovi.labassay.pos_description;\n                    test.refSet = element.testovi.grupa;\n                    test.dRef = element.testovi.refd;\n                    test.gRef = element.testovi.refg;\n                    test.interp = element.testovi.interp;\n                    test.extend = element.testovi.extend;\n                    test.retest = element.testovi.retest;\n                    test.interpretacija = element.testovi.labassay.interpretacija;\n                  });\n\n                  if (test.select_options != undefined && !test.select_options.includes(test.rezultat)) {\n                    test.select_options.unshift(test.rezultat);\n                  }\n                  _this16.rezultati.push(test);\n                });\n\n                _this16.rezultati.forEach(function (element) {\n                  if (element.calculated) {\n                    _this16.calculated = true;\n                  }\n                });\n\n                _this16.sample = data;\n                _this16.show_table = true;\n              }\n            });\n            _this16.$refs.staticModalAparati.close();\n          } else {}\n        });\n      }\n    },\n    Reference: function Reference(event, test) {\n      this.reference = {\n        sample: this.$store.state.sid,\n        labassay: test.labassay_id,\n        naziv: test.ime,\n        opis: test.analit,\n        dref: test.dRef,\n        gref: test.gRef,\n        interp: test.interp,\n        extend: test.extend,\n        jedinica: test.jedinica\n      };\n      this.$refs.staticModalReference.open();\n    },\n    BarcodePrint: function BarcodePrint(data) {\n      var _this17 = this;\n\n      var link = __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"p\" /* barcode */] + data.sid + \".png\";\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"uzorci/barcode/\" + data.sid + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site, {}).then(function (res) {\n        printEPL(res.data.name + \" \" + res.data.surname, _this17.sid, res.data.pacijentRBr, res.data.godiste, res.data.datum, link, res.data.code, _this17.$store.state.site, undefined, undefined);\n      });\n    },\n    SaveResults: function SaveResults(rezultati, from) {\n      var _this18 = this;\n\n      this.isLoading = true;\n\n      if (!this.MicrobiologySample) {\n        rezultati.forEach(function (element) {\n          element.rezultat = element.rezultat.replace(/,/g, \".\");\n        });\n\n        rezultati[0].rezultat_m = [];\n      }\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\n        email: this.$store.state.userId,\n        token: this.$store.state.token,\n        site: this.$store.state.site,\n        rezultati: rezultati\n      }).then(function (res) {\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this18.$route.params.patient + \"/\" + _this18.$route.params.id + \"?token=\" + _this18.$store.state.token + \"&site=\" + _this18.$store.state.site + \"&date=\" + _this18.$route.query.date, {}).then(function (res) {\n          _this18.uzorci = [];\n\n          res.data.results.forEach(function (element) {\n            var check = 0;\n            var zaprimljen = 0;\n            var realizovan = 0;\n\n            if (element.verificiran) {\n              var status_uzorka = \"VERIFICIRAN\";\n            } else {\n              var status_uzorka = element.status;\n            }\n\n            element.rezultati.forEach(function (test) {\n              check++;\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                zaprimljen++;\n              }\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                realizovan++;\n              }\n\n              if (check === element.rezultati.length) {\n\n                if (status_uzorka === \"VERIFICIRAN\") {\n                  _this18.uzorci.push({\n                    sid: element.id,\n                    status: \"VERIFICIRAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (status_uzorka === \"ODOBREN\") {\n                  _this18.uzorci.push({\n                    sid: element.id,\n                    status: \"ODOBREN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (zaprimljen < 1) {\n                  _this18.uzorci.push({\n                    sid: element.id,\n                    status: \"REALIZOVAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (realizovan < 1) {\n                  var stat = \"ZAPRIMLJEN\";\n                  if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                    if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                      stat = \"REALIZOVAN\";\n                    }\n                  }\n                  _this18.uzorci.push({\n                    sid: element.id,\n                    status: stat,\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else {\n                  _this18.uzorci.push({\n                    sid: element.id,\n                    status: \"U OBRADI\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                }\n              }\n            });\n          });\n\n          _this18.uzorci = _this18.uzorci.sort(function (a, b) {\n            return a.sid.localeCompare(b.sid, undefined, {\n              numeric: true,\n              sensitivity: \"base\"\n            });\n          });\n\n          _this18.isLoading = false;\n        });\n      });\n    },\n    DeletedSample: function DeletedSample(data) {\n      var _this19 = this;\n\n      this.uzorci.forEach(function (element) {\n        if (element.sid === data) {\n          element.removed = false;\n        }\n      });\n\n      for (var i = 0; i < this.uzorci.length; i++) {\n        if (this.uzorci[i].sid === data) {\n          this.uzorci.splice(i, 1);\n          break;\n        }\n      }\n\n      if (this.uzorci.length) {\n        this.show = false;\n        this.main = false;\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/odobravanje/samples/\" + this.$route.params.patient + \"/\" + this.$route.params.id + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&date=\" + this.$route.query.date, {}).then(function (res) {\n          _this19.count = res.data.results.length;\n          _this19.approved = 0;\n\n          _this19.odobren = true;\n          _this19.verificiran = true;\n\n          _this19.resdata = {};\n\n          _this19.resdata = res.data.results;\n\n          res.data.results.forEach(function (element) {\n            if (element.status === \"ODOBREN\" || element.status === \"VERIFICIRAN\") {\n              _this19.approved++;\n            }\n            if (element.status != \"ODOBREN\" && element.status != \"VERIFICIRAN\") {\n              _this19.odobren = false;\n            }\n            if (!element.verificiran) {\n              _this19.verificiran = false;\n            }\n          });\n\n          if (_this19.count == _this19.approved) {\n            var report = [];\n\n            _this19.uzorci.forEach(function (element) {\n              report.push(element._id);\n            });\n\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"nalazi/create\", {\n              token: _this19.$store.state.token,\n              site: _this19.$store.state.site,\n              type: \"multi\",\n              uzorci: _this19.uzorci,\n              samples: report,\n              timestamp: _this19.timestamp,\n              napomena: \"\",\n              status: false,\n              idNalaza: \"\",\n              location: \"/\",\n              klijent: _this19.klijent,\n              naziv: _this19.timestamp\n            }).then(function (res) {\n              if (res.data.success) {\n                __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"nalazi/memo\", {\n                  token: _this19.$store.state.token,\n                  site: _this19.$store.state.site,\n                  timestamp: _this19.timestamp,\n                  height: res.data.memo,\n                  location: \"/\",\n                  naziv: _this19.timestamp\n                }).then(function (res) {\n                  _this19.final_pdf = true;\n\n                  _this19.uzorci = [];\n\n                  _this19.resdata.forEach(function (element) {\n                    var check = 0;\n                    var zaprimljen = 0;\n                    var realizovan = 0;\n\n                    if (element.verificiran) {\n                      var status_uzorka = \"VERIFICIRAN\";\n                    } else {\n                      var status_uzorka = element.status;\n                    }\n\n                    element.rezultati.forEach(function (test) {\n                      check++;\n\n                      if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                        zaprimljen++;\n                      }\n\n                      if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                        realizovan++;\n                      }\n\n                      if (check === element.rezultati.length) {\n\n                        if (status_uzorka === \"VERIFICIRAN\") {\n                          _this19.uzorci.push({\n                            sid: element.id,\n                            status: \"VERIFICIRAN\",\n                            pdf_exists: element.pdf_exists,\n                            tip: element.sample.tip,\n                            _id: element._id,\n                            removed: false\n                          });\n                        } else if (status_uzorka === \"ODOBREN\") {\n                          _this19.uzorci.push({\n                            sid: element.id,\n                            status: \"ODOBREN\",\n                            pdf_exists: element.pdf_exists,\n                            tip: element.sample.tip,\n                            _id: element._id,\n                            removed: false\n                          });\n                        } else if (zaprimljen < 1) {\n                          _this19.uzorci.push({\n                            sid: element.id,\n                            status: \"REALIZOVAN\",\n                            pdf_exists: element.pdf_exists,\n                            tip: element.sample.tip,\n                            _id: element._id,\n                            removed: false\n                          });\n                        } else if (realizovan < 1) {\n                          var stat = \"ZAPRIMLJEN\";\n                          if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                            if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                              stat = \"REALIZOVAN\";\n                            }\n                          }\n                          _this19.uzorci.push({\n                            sid: element.id,\n                            status: stat,\n                            pdf_exists: element.pdf_exists,\n                            tip: element.sample.tip,\n                            _id: element._id,\n                            removed: false\n                          });\n                        } else {\n                          _this19.uzorci.push({\n                            sid: element.id,\n                            status: \"U OBRADI\",\n                            pdf_exists: element.pdf_exists,\n                            tip: element.sample.tip,\n                            _id: element._id,\n                            removed: false\n                          });\n                        }\n                      }\n                    });\n                  });\n\n                  _this19.uzorci = _this19.uzorci.sort(function (a, b) {\n                    return a.sid.localeCompare(b.sid, undefined, {\n                      numeric: true,\n                      sensitivity: \"base\"\n                    });\n                  });\n\n                  _this19.main = true;\n                  _this19.show = true;\n                });\n              }\n            });\n          } else {\n            _this19.uzorci = [];\n\n            res.data.results.forEach(function (element) {\n              var check = 0;\n              var zaprimljen = 0;\n              var realizovan = 0;\n\n              if (element.verificiran) {\n                var status_uzorka = \"VERIFICIRAN\";\n              } else {\n                var status_uzorka = element.status;\n              }\n\n              element.rezultati.forEach(function (test) {\n                check++;\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                  zaprimljen++;\n                }\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                  realizovan++;\n                }\n\n                if (check === element.rezultati.length) {\n\n                  if (status_uzorka === \"VERIFICIRAN\") {\n                    _this19.uzorci.push({\n                      sid: element.id,\n                      status: \"VERIFICIRAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (status_uzorka === \"ODOBREN\") {\n                    _this19.uzorci.push({\n                      sid: element.id,\n                      status: \"ODOBREN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (zaprimljen < 1) {\n                    _this19.uzorci.push({\n                      sid: element.id,\n                      status: \"REALIZOVAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (realizovan < 1) {\n                    var stat = \"ZAPRIMLJEN\";\n                    if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                      if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                        stat = \"REALIZOVAN\";\n                      }\n                    }\n                    _this19.uzorci.push({\n                      sid: element.id,\n                      status: stat,\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else {\n                    _this19.uzorci.push({\n                      sid: element.id,\n                      status: \"U OBRADI\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  }\n                }\n              });\n            });\n\n            _this19.uzorci = _this19.uzorci.sort(function (a, b) {\n              return a.sid.localeCompare(b.sid, undefined, {\n                numeric: true,\n                sensitivity: \"base\"\n              });\n            });\n\n            _this19.main = true;\n            _this19.show = true;\n          }\n        });\n      } else {\n        __WEBPACK_IMPORTED_MODULE_4__router__[\"a\" /* default */].push(\"/obrada/pregled\");\n      }\n    },\n    EditSample: function EditSample(data) {\n      var _this20 = this;\n\n      document.getElementById(data).click();\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/odobravanje/samples/\" + this.$route.params.patient + \"/\" + this.$route.params.id + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&date=\" + this.$route.query.date, {}).then(function (res) {\n        _this20.uzorci = [];\n\n        res.data.results.forEach(function (element) {\n          var check = 0;\n          var zaprimljen = 0;\n          var realizovan = 0;\n\n          if (element.verificiran) {\n            var status_uzorka = \"VERIFICIRAN\";\n          } else {\n            var status_uzorka = element.status;\n          }\n\n          element.rezultati.forEach(function (test) {\n            check++;\n\n            if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n              zaprimljen++;\n            }\n\n            if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n              realizovan++;\n            }\n\n            if (check === element.rezultati.length) {\n\n              if (status_uzorka === \"VERIFICIRAN\") {\n                _this20.uzorci.push({\n                  sid: element.id,\n                  status: \"VERIFICIRAN\",\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              } else if (status_uzorka === \"ODOBREN\") {\n                _this20.uzorci.push({\n                  sid: element.id,\n                  status: \"ODOBREN\",\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              } else if (zaprimljen < 1) {\n                _this20.uzorci.push({\n                  sid: element.id,\n                  status: \"REALIZOVAN\",\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              } else if (realizovan < 1) {\n                var stat = \"ZAPRIMLJEN\";\n                if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                  if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                    stat = \"REALIZOVAN\";\n                  }\n                }\n                _this20.uzorci.push({\n                  sid: element.id,\n                  status: stat,\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              } else {\n                _this20.uzorci.push({\n                  sid: element.id,\n                  status: \"U OBRADI\",\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              }\n            }\n          });\n        });\n\n        _this20.uzorci = _this20.uzorci.sort(function (a, b) {\n          return a.sid.localeCompare(b.sid, undefined, {\n            numeric: true,\n            sensitivity: \"base\"\n          });\n        });\n      }).then(function () {\n        setTimeout(function () {\n          document.getElementById(_this20.$store.state.sid).click();\n        }, 500);\n      });\n    },\n\n\n    RetestEnable: function RetestEnable(event) {\n      var _this21 = this;\n\n      this.rezultati.forEach(function (element) {\n        if (element.test === event.target.id) {\n          element.retest = true;\n        }\n      });\n\n      this.save_retest = true;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"rezultati/odobravanje/retest/da/\", {\n        id_u: this.$store.state.sid,\n        id_t: event.target.id,\n        site: this.$store.state.site,\n        token: this.$store.state.token\n      }).then(function (res) {\n        if (res.data.success) {\n          _this21.rezultati.forEach(function (element) {\n            if (element.test === event.target.id) {\n              element.retest = true;\n            }\n          });\n        }\n      });\n    },\n\n    RetestDisable: function RetestDisable(event) {\n      var _this22 = this;\n\n      this.rezultati.forEach(function (element) {\n        if (element.test === event.target.id) {\n          element.retest = false;\n        }\n      });\n\n      this.save_retest = true;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"rezultati/odobravanje/retest/ne/\", {\n        id_u: this.$store.state.sid,\n        id_t: event.target.id,\n        site: this.$store.state.site,\n        token: this.$store.state.token\n      }).then(function (res) {\n        if (res.data.success) {\n          _this22.rezultati.forEach(function (element) {\n            if (element.test === event.target.id) {\n              element.retest = false;\n            }\n          });\n        }\n      });\n    },\n\n    MultiGet: function MultiGet(event, naziv, ana, rezultat, odobren) {\n      var _this23 = this;\n\n      this.naslov = \"Rezultati testa: \" + naziv + \" (\" + ana + \")\";\n      this.analiti = [];\n      var single = {};\n      var i = 0;\n      var kontrola = false;\n\n      this.uzorci.forEach(function (element) {\n        if (element.sid === _this23.$store.state.sid) {\n          _this23.check = element.status;\n        }\n      });\n\n      this.analitiprikaz.forEach(function (element) {\n        i++;\n        single = {};\n\n        var opcije = null;\n        opcije = __WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__[\"a\" /* default */].data;\n\n        var noResult = true;\n\n        if (event.target.id === element.labassay._id) {\n          console.log(element.labassay);\n          element.rezultat.forEach(function (analit) {\n            if (analit.rezultat[0].rezultat_f.trim() != \"\") {\n              noResult = false;\n            }\n          });\n          console.log(noResult);\n        }\n\n        if (event.target.id === element.labassay._id) {\n          element.rezultat.forEach(function (analit) {\n            single.kod = analit.rezultat[0].module_sn;\n\n            element.labassay.multiparam.forEach(function (mparam) {\n              if (mparam.kod === single.kod) {\n                if (mparam.izbornik.length) {\n                  single.select_options = mparam.izbornik;\n                } else {\n                  single.select_options = undefined;\n                }\n              }\n            });\n\n            var tmpOptionsAna = [];\n            if (single.select_options != undefined) {\n              tmpOptionsAna = single.select_options.slice();\n              single.select_options = tmpOptionsAna.slice();\n            }\n\n            if (analit.rezultat[0].rezultat_f.trim() != \"\" && single.select_options != undefined && !single.select_options.includes(analit.rezultat[0].rezultat_f)) {\n              if (single.kod != \"s03\" && single.kod != \"s04\" && single.kod != \"s08\" && single.kod != \"s09\") {\n                single.select_options.unshift(analit.rezultat[0].rezultat_f);\n              }\n            }\n\n            single.refd = analit.refd;\n            single.labID = event.target.id;\n            single.refg = analit.refg;\n            single.interp = analit.interp;\n            single.interpretacija = null;\n            single.nazivTesta = naziv;\n            single.grupa = analit.grupa;\n            single.naziv = analit.rezultat[0].sn;\n            single.opis = analit.rezultat[0].dilucija;\n            single.jedinica = analit.rezultat[0].jedinice_f;\n            single.rezultat = analit.rezultat[0].rezultat_f;\n            single.flag = analit.rezultat[0].rezultat_i;\n            single.manual = element.labassay.manual;\n            single.odobren = odobren;\n\n            if (single.select_options != undefined && (single.kod === \"s03\" || single.kod === \"s04\" || single.kod === \"s08\" || single.kod === \"s09\")) {\n              single.rezultat_multiple = single.rezultat.split(\";\");\n              for (var i = single.rezultat_multiple.length - 1; i >= 0; i--) {\n                single.rezultat_multiple[i] = single.rezultat_multiple[i].trim();\n                if (single.rezultat_multiple[i] === \"\") {\n                  single.rezultat_multiple.splice(i, 1);\n                }\n              }\n            } else {\n              single.rezultat_multiple = [];\n            }\n\n            if (_this23.check === \"ODOBREN\" || _this23.check === \"VERIFICIRAN\") {\n              single.edit = false;\n            } else {\n              single.edit = true;\n            }\n\n            if (ana === \"Opšti pregled urina\" && _this23.check != \"ODOBREN\" && _this23.check != \"VERIFICIRAN\") {\n              if (analit.rezultat[0].rezultat_f === \"\" && single.select_options != undefined) {\n                if (noResult) {\n                  single.rezultat = single.select_options[1];\n                }\n              }\n            }\n\n            single.analit = analit.rezultat[0].anaassay;\n            single.izbor = ana;\n\n            if (single.kod === \"o12\" && single.rezultat.trim() === \"\") {\n              if (noResult) {\n                single.rezultat = \"16\";\n              }\n            }\n\n            _this23.analiti.push(single);\n\n            single = {};\n          });\n        }\n\n        if (i === _this23.analitiprikaz.length) {\n          kontrola = true;\n        }\n      });\n\n      if (kontrola) {\n        this.$refs.largeModalMulti.open();\n      }\n    },\n\n    Interpretacija: function Interpretacija(test, rezultat, jedinica, refd, refg, site, interp, extend, spec) {\n      return Object(__WEBPACK_IMPORTED_MODULE_10__functions_reference_js__[\"Interpretation\"])(test, rezultat, jedinica, refd, refg, site, interp, extend, spec);\n    },\n\n    MailDialog: function MailDialog() {\n      this.$refs.staticModalSendMail.open();\n    },\n    SendMail: function SendMail(email) {\n      var _this24 = this;\n\n      this.isLoading = true;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"nalazi/mail\", {\n        token: this.$store.state.token,\n        site: this.$store.state.site,\n        email: email,\n        timestamp: this.timestamp,\n        location: \"/\",\n        naziv: this.timestamp\n      }).then(function (res) {\n        _this24.isLoading = false;\n\n        if (res.data.success) {\n          _this24.toastText = \"Nalaz uspješno poslan.\";\n          _this24.toastIcon = \"fa-check\";\n          _this24.toastPosition = \"top-right\";\n          _this24.className = \"vuestic-toast-primary\";\n\n          _this24.showToast(_this24.toastText, {\n            icon: _this24.toastIcon,\n            position: _this24.toastPosition,\n            duration: 2500,\n            fullWidth: _this24.false,\n            className: _this24.className\n          });\n\n          if (_this24.email_changed) {}\n        } else {\n          _this24.toastText = \"Greška prilikom slanja nalaza!\";\n          _this24.toastIcon = \"fa-remove\";\n          _this24.toastPosition = \"top-right\";\n          _this24.className = \"vuestic-toast-danger\";\n\n          _this24.showToast(_this24.toastText, {\n            icon: _this24.toastIcon,\n            position: _this24.toastPosition,\n            duration: 2500,\n            fullWidth: _this24.false,\n            className: _this24.className\n          });\n        }\n      });\n    },\n    SaveMultiResults: function SaveMultiResults(analiti, data) {\n      var _this25 = this;\n\n      analiti.forEach(function (analit) {\n        analit.rezultat = analit.rezultat.replace(/,/g, \".\");\n\n        if (analit.rezultat_multiple.length) {\n          analit.rezultat = \"\";\n\n          analit.rezultat_multiple.forEach(function (element) {\n            if (element === \"\") {} else {\n              analit.rezultat = analit.rezultat + element + \";\";\n            }\n          });\n\n          analit.rezultat = analit.rezultat.trim().slice(0, analit.rezultat.length - 1);\n        }\n      });\n\n      this.isLoading = true;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"/rezultati/odobravanje/analiti/\" + this.$store.state.sid, {\n        analiti: analiti,\n        site: this.$store.state.site,\n        token: this.$store.state.token\n      }).then(function (res) {\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this25.$route.params.patient + \"/\" + _this25.$route.params.id + \"?token=\" + _this25.$store.state.token + \"&site=\" + _this25.$store.state.site + \"&date=\" + _this25.$route.query.date, {}).then(function (res) {\n          _this25.uzorci = [];\n\n          res.data.results.forEach(function (element) {\n            var check = 0;\n            var zaprimljen = 0;\n            var realizovan = 0;\n\n            if (element.verificiran) {\n              var status_uzorka = \"VERIFICIRAN\";\n            } else {\n              var status_uzorka = element.status;\n            }\n\n            element.rezultati.forEach(function (test) {\n              check++;\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                zaprimljen++;\n              }\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                realizovan++;\n              }\n\n              if (check === element.rezultati.length) {\n\n                if (status_uzorka === \"VERIFICIRAN\") {\n                  _this25.uzorci.push({\n                    sid: element.id,\n                    status: \"VERIFICIRAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (status_uzorka === \"ODOBREN\") {\n                  _this25.uzorci.push({\n                    sid: element.id,\n                    status: \"ODOBREN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (zaprimljen < 1) {\n                  _this25.uzorci.push({\n                    sid: element.id,\n                    status: \"REALIZOVAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (realizovan < 1) {\n                  var stat = \"ZAPRIMLJEN\";\n                  if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                    if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                      stat = \"REALIZOVAN\";\n                    }\n                  }\n                  _this25.uzorci.push({\n                    sid: element.id,\n                    status: stat,\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else {\n                  _this25.uzorci.push({\n                    sid: element.id,\n                    status: \"U OBRADI\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                }\n              }\n            });\n          });\n\n          _this25.uzorci = _this25.uzorci.sort(function (a, b) {\n            return a.sid.localeCompare(b.sid, undefined, {\n              numeric: true,\n              sensitivity: \"base\"\n            });\n          });\n\n          _this25.isLoading = false;\n        });\n      }).then(function (res) {\n        var data = {};\n\n        _this25.uzorci.forEach(function (element) {\n          if (element.sid === _this25.$store.state.sid) {\n            data = element;\n          }\n        });\n\n        _this25.testovi = [];\n        _this25.rezultati = [];\n        _this25.analitiprikaz = [];\n        _this25.calculated = false;\n\n        var topcije = null;\n        topcije = __WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__[\"a\" /* default */].rez;\n\n        _this25.show_table = false;\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/showsingle/\" + data.sid + \"?token=\" + _this25.$store.state.token + \"&site=\" + _this25.$store.state.site, {}).then(function (res) {\n          var test = {};\n\n          if (res.data.data.length) {\n            res.data.data.sort(function (a, b) {\n              return a.testovi.labassay.grupa + a.testovi.labassay.grouporder == b.testovi.labassay.grupa + b.testovi.labassay.grouporder ? 0 : +(a.testovi.labassay.grupa + a.testovi.labassay.grouporder > b.testovi.labassay.grupa + b.testovi.labassay.grouporder) || -1;\n            });\n\n            _this25.testovi = res.data.data;\n            _this25.analitiprikaz = res.data.multidata;\n\n            res.data.data.forEach(function (element) {\n              test = {};\n              test.realizovan = false;\n\n              test.ime = element.testovi.labassay.naziv;\n              test.test = element.testovi.labassay.sifra;\n              test.analit = element.testovi.labassay.analit;\n              test.IDE = element.testovi._id;\n              test.labassay_id = element.testovi.labassay._id;\n\n              test.multi_count = 0;\n              test.multi_rezultati = [];\n\n              res.data.multidata.forEach(function (multi) {\n                if (multi.labassay._id === element.testovi.labassay._id) {\n                  test.multi_rezultati = multi.rezultat;\n                  test.multi_count = multi.rezultat[0].rezultat.length;\n                }\n              });\n\n              test.kategorija = element.testovi.labassay.kategorija;\n              test.analyser = element.testovi.labassay.analyser;\n              test.multiparam = element.testovi.labassay.multiparam;\n              test.vise = element.testovi.rezultat.length;\n              test.calculated = element.testovi.labassay.calculated;\n              test.manual = element.testovi.labassay.manual;\n\n              test.select_options = eval(\"topcije.\" + element.testovi.interp.replace(\"%\", \"_\").replace(\"/\", \"_\").replace(\" \", \"_\").replace(/-/g, \"_\").replace(\"#\", \"_\").replace(/^\\d+/, \"\"));\n\n              element.testovi.rezultat.forEach(function (rezultat) {\n                test.sekcija = rezultat.anaassay.sekcija;\n                test.rezultat = rezultat.rezultat_f;\n                test.result = rezultat;\n                test.anaassay = rezultat.anaassay;\n\n                if (rezultat.rezultat_f != \"\") {\n                  test.realizovan = true;\n                }\n\n                test.unit = rezultat.jedinice_f;\n\n                if (res.data.verificiran || res.data.status === \"ODOBREN\") {\n                  test.odobren = \"ODOBREN\";\n                  test.edit = false;\n                } else {\n                  test.odobren != \"ODOBREN\";\n                  test.edit = true;\n                }\n\n                test.jedinica = rezultat.jedinice_f;\n                test.id = rezultat._id;\n                test.multidata = element.testovi.labassay.multi;\n                test.rezultat_m = rezultat.rezultat_m;\n                test.bakterije = element.testovi.labassay.bakterije;\n                test.neg_description = element.testovi.labassay.neg_description;\n                test.pos_description = element.testovi.labassay.pos_description;\n                test.refSet = element.testovi.grupa;\n                test.dRef = element.testovi.refd;\n                test.gRef = element.testovi.refg;\n                test.interp = element.testovi.interp;\n                test.extend = element.testovi.extend;\n                test.retest = element.testovi.retest;\n                test.interpretacija = element.testovi.labassay.interpretacija;\n              });\n\n              if (test.select_options != undefined && !test.select_options.includes(test.rezultat)) {\n                test.select_options.unshift(test.rezultat);\n              }\n              _this25.rezultati.push(test);\n            });\n\n            _this25.rezultati.forEach(function (element) {\n              if (element.calculated) {\n                _this25.calculated = true;\n              }\n            });\n\n            _this25.sample = data;\n            _this25.show_table = true;\n          }\n        });\n      });\n    },\n\n\n    Calculate: function Calculate(event, id, ime, edited) {\n      var _this26 = this;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"/rezultati/odobravanje/calculate/\" + this.$store.state.sid, {\n        _id: id,\n        token: this.$store.state.token,\n        site: this.$store.state.site,\n        ime: ime,\n        pid: this.pid\n      }).then(function (res) {\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this26.$route.params.patient + \"/\" + _this26.$route.params.id + \"?token=\" + _this26.$store.state.token + \"&site=\" + _this26.$store.state.site + \"&date=\" + _this26.$route.query.date, {}).then(function (res) {\n          _this26.uzorci = [];\n\n          res.data.results.forEach(function (element) {\n            var check = 0;\n            var zaprimljen = 0;\n            var realizovan = 0;\n\n            if (element.verificiran) {\n              var status_uzorka = \"VERIFICIRAN\";\n            } else {\n              var status_uzorka = element.status;\n            }\n\n            element.rezultati.forEach(function (test) {\n              check++;\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                zaprimljen++;\n              }\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                realizovan++;\n              }\n\n              if (check === element.rezultati.length) {\n\n                if (status_uzorka === \"VERIFICIRAN\") {\n                  _this26.uzorci.push({\n                    sid: element.id,\n                    status: \"VERIFICIRAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (status_uzorka === \"ODOBREN\") {\n                  _this26.uzorci.push({\n                    sid: element.id,\n                    status: \"ODOBREN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (zaprimljen < 1) {\n                  _this26.uzorci.push({\n                    sid: element.id,\n                    status: \"REALIZOVAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (realizovan < 1) {\n                  var stat = \"ZAPRIMLJEN\";\n                  if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                    if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                      stat = \"REALIZOVAN\";\n                    }\n                  }\n                  _this26.uzorci.push({\n                    sid: element.id,\n                    status: stat,\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else {\n                  _this26.uzorci.push({\n                    sid: element.id,\n                    status: \"U OBRADI\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                }\n              }\n            });\n          });\n\n          _this26.uzorci = _this26.uzorci.sort(function (a, b) {\n            return a.sid.localeCompare(b.sid, undefined, {\n              numeric: true,\n              sensitivity: \"base\"\n            });\n          });\n        });\n      }).then(function (res) {\n        var data = {};\n\n        _this26.uzorci.forEach(function (element) {\n          if (element.sid === _this26.$store.state.sid) {\n            data = element;\n          }\n        });\n\n        _this26.testovi = [];\n        _this26.rezultati = [];\n        _this26.analitiprikaz = [];\n        _this26.calculated = false;\n\n        var topcije = null;\n        topcije = __WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__[\"a\" /* default */].rez;\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/showsingle/\" + data.sid + \"?token=\" + _this26.$store.state.token + \"&site=\" + _this26.$store.state.site, {}).then(function (res) {\n          var test = {};\n\n          if (res.data.data.length) {\n            res.data.data.sort(function (a, b) {\n              return a.testovi.labassay.grupa + a.testovi.labassay.grouporder == b.testovi.labassay.grupa + b.testovi.labassay.grouporder ? 0 : +(a.testovi.labassay.grupa + a.testovi.labassay.grouporder > b.testovi.labassay.grupa + b.testovi.labassay.grouporder) || -1;\n            });\n\n            _this26.testovi = res.data.data;\n            _this26.analitiprikaz = res.data.multidata;\n\n            res.data.data.forEach(function (element) {\n              test = {};\n              test.realizovan = false;\n\n              test.ime = element.testovi.labassay.naziv;\n              test.test = element.testovi.labassay.sifra;\n              test.analit = element.testovi.labassay.analit;\n              test.IDE = element.testovi._id;\n              test.labassay_id = element.testovi.labassay._id;\n\n              test.multi_count = 0;\n              test.multi_rezultati = [];\n\n              res.data.multidata.forEach(function (multi) {\n                if (multi.labassay._id === element.testovi.labassay._id) {\n                  test.multi_rezultati = multi.rezultat;\n                  test.multi_count = multi.rezultat[0].rezultat.length;\n                }\n              });\n\n              test.kategorija = element.testovi.labassay.kategorija;\n              test.analyser = element.testovi.labassay.analyser;\n              test.multiparam = element.testovi.labassay.multiparam;\n              test.vise = element.testovi.rezultat.length;\n              test.calculated = element.testovi.labassay.calculated;\n              test.manual = element.testovi.labassay.manual;\n\n              test.select_options = eval(\"topcije.\" + element.testovi.interp.replace(\"%\", \"_\").replace(\"/\", \"_\").replace(\" \", \"_\").replace(/-/g, \"_\").replace(\"#\", \"_\").replace(/^\\d+/, \"\"));\n\n              element.testovi.rezultat.forEach(function (rezultat) {\n                test.sekcija = rezultat.anaassay.sekcija;\n                test.rezultat = rezultat.rezultat_f;\n                test.result = rezultat;\n                test.anaassay = rezultat.anaassay;\n\n                if (rezultat.rezultat_f != \"\") {\n                  test.realizovan = true;\n                }\n\n                test.unit = rezultat.jedinice_f;\n\n                if (res.data.verificiran || res.data.status === \"ODOBREN\") {\n                  test.odobren = \"ODOBREN\";\n                  test.edit = false;\n                } else {\n                  test.odobren != \"ODOBREN\";\n                  test.edit = true;\n                }\n\n                test.jedinica = rezultat.jedinice_f;\n                test.id = rezultat._id;\n                test.multidata = element.testovi.labassay.multi;\n                test.rezultat_m = rezultat.rezultat_m;\n                test.bakterije = element.testovi.labassay.bakterije;\n                test.neg_description = element.testovi.labassay.neg_description;\n                test.pos_description = element.testovi.labassay.pos_description;\n                test.refSet = element.testovi.grupa;\n                test.dRef = element.testovi.refd;\n                test.gRef = element.testovi.refg;\n                test.interp = element.testovi.interp;\n                test.extend = element.testovi.extend;\n                test.retest = element.testovi.retest;\n                test.interpretacija = element.testovi.labassay.interpretacija;\n              });\n\n              if (test.select_options != undefined && !test.select_options.includes(test.rezultat)) {\n                test.select_options.unshift(test.rezultat);\n              }\n              _this26.rezultati.push(test);\n            });\n\n            _this26.rezultati.forEach(function (element) {\n              if (element.calculated) {\n                _this26.calculated = true;\n              }\n            });\n\n            _this26.sample = data;\n          }\n        });\n      });\n    },\n\n    Approve: function Approve(rezultati) {\n      var _this27 = this;\n\n      this.rezultati.forEach(function (element) {\n        element.edit = false;\n      });\n\n      this.calculated = false;\n\n      if (!this.MicrobiologySample) {\n        rezultati.forEach(function (element) {\n          element.rezultat = element.rezultat.replace(/,/g, \".\");\n        });\n\n        rezultati[0].rezultat_m = [];\n      }\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\n        email: this.$store.state.userId,\n        token: this.$store.state.token,\n        site: this.$store.state.site,\n        rezultati: rezultati\n      }).then(function (res) {\n        _this27.isLoading = true;\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"/rezultati/odobravanje/odobri/\" + _this27.$store.state.sid, {\n          testovi: rezultati,\n          site: _this27.$store.state.site,\n          token: _this27.$store.state.token\n        }).then(function (res) {\n          _this27.sample.status = \"ODOBREN\";\n\n          _this27.report = {};\n\n          _this27.uzorci.forEach(function (element) {\n            if (element.sid === _this27.$store.state.sid) {\n              _this27.report = element;\n            }\n          });\n\n          var sample = [];\n          sample.push(_this27.report._id);\n\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"nalazi/create\", {\n            token: _this27.$store.state.token,\n            site: _this27.$store.state.site,\n            type: \"single\",\n            uzorci: _this27.uzorci,\n            samples: sample,\n            timestamp: _this27.timestamp,\n            napomena: \"\",\n            status: false,\n            idNalaza: \"\",\n            location: \"/samples\",\n            klijent: _this27.klijent,\n            naziv: _this27.report.sid\n          }).then(function (res) {\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this27.$route.params.patient + \"/\" + _this27.$route.params.id + \"?token=\" + _this27.$store.state.token + \"&site=\" + _this27.$store.state.site + \"&date=\" + _this27.$route.query.date, {}).then(function (res) {\n              _this27.final_pdf = res.data.final_pdf;\n\n              _this27.count = res.data.results.length;\n              _this27.approved = 0;\n\n              _this27.odobren = true;\n              _this27.verificiran = true;\n\n              res.data.results.forEach(function (element) {\n                if (element.status === \"ODOBREN\" || element.status === \"VERIFICIRAN\") {\n                  _this27.approved++;\n                }\n                if (element.status != \"ODOBREN\" && element.status != \"VERIFICIRAN\") {\n                  _this27.odobren = false;\n                }\n                if (!element.verificiran) {\n                  _this27.verificiran = false;\n                }\n              });\n\n              var response = res.data.results;\n\n              if (_this27.count == _this27.approved) {\n\n                var report = [];\n\n                _this27.uzorci.forEach(function (element) {\n                  report.push(element._id);\n                });\n\n                __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"nalazi/create\", {\n                  token: _this27.$store.state.token,\n                  site: _this27.$store.state.site,\n                  type: \"multi\",\n                  uzorci: _this27.uzorci,\n                  samples: report,\n                  timestamp: _this27.timestamp,\n                  napomena: \"\",\n                  status: false,\n                  idNalaza: \"\",\n                  location: \"/\",\n                  klijent: _this27.klijent,\n                  naziv: _this27.timestamp\n                }).then(function (res) {\n                  if (res.data.success) {\n                    __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"nalazi/memo\", {\n                      token: _this27.$store.state.token,\n                      site: _this27.$store.state.site,\n                      timestamp: _this27.timestamp,\n                      height: res.data.memo,\n                      location: \"/\",\n                      naziv: _this27.timestamp\n                    }).then(function (res) {\n                      _this27.uzorci = [];\n\n                      response.forEach(function (element) {\n                        var check = 0;\n                        var zaprimljen = 0;\n                        var realizovan = 0;\n\n                        if (element.verificiran) {\n                          var status_uzorka = \"VERIFICIRAN\";\n                        } else {\n                          var status_uzorka = element.status;\n                        }\n\n                        element.rezultati.forEach(function (test) {\n                          check++;\n\n                          if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                            zaprimljen++;\n                          }\n\n                          if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                            realizovan++;\n                          }\n\n                          if (check === element.rezultati.length) {\n\n                            if (status_uzorka === \"VERIFICIRAN\") {\n                              _this27.uzorci.push({\n                                sid: element.id,\n                                status: \"VERIFICIRAN\",\n                                pdf_exists: element.pdf_exists,\n                                tip: element.sample.tip,\n                                _id: element._id,\n                                removed: false\n                              });\n                            } else if (status_uzorka === \"ODOBREN\") {\n                              _this27.uzorci.push({\n                                sid: element.id,\n                                status: \"ODOBREN\",\n                                pdf_exists: element.pdf_exists,\n                                tip: element.sample.tip,\n                                _id: element._id,\n                                removed: false\n                              });\n                            } else if (zaprimljen < 1) {\n                              _this27.uzorci.push({\n                                sid: element.id,\n                                status: \"REALIZOVAN\",\n                                pdf_exists: element.pdf_exists,\n                                tip: element.sample.tip,\n                                _id: element._id,\n                                removed: false\n                              });\n                            } else if (realizovan < 1) {\n                              var stat = \"ZAPRIMLJEN\";\n                              if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                                if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                                  stat = \"REALIZOVAN\";\n                                }\n                              }\n                              _this27.uzorci.push({\n                                sid: element.id,\n                                status: stat,\n                                pdf_exists: element.pdf_exists,\n                                tip: element.sample.tip,\n                                _id: element._id,\n                                removed: false\n                              });\n                            } else {\n                              _this27.uzorci.push({\n                                sid: element.id,\n                                status: \"U OBRADI\",\n                                pdf_exists: element.pdf_exists,\n                                tip: element.sample.tip,\n                                _id: element._id,\n                                removed: false\n                              });\n                            }\n                          }\n                        });\n                      });\n\n                      _this27.uzorci = _this27.uzorci.sort(function (a, b) {\n                        return a.sid.localeCompare(b.sid, undefined, {\n                          numeric: true,\n                          sensitivity: \"base\"\n                        });\n                      });\n\n                      _this27.main = true;\n\n                      _this27.isLoading = false;\n                    });\n                  }\n                });\n              } else {\n                _this27.uzorci = [];\n\n                res.data.results.forEach(function (element) {\n                  var check = 0;\n                  var zaprimljen = 0;\n                  var realizovan = 0;\n\n                  if (element.verificiran) {\n                    var status_uzorka = \"VERIFICIRAN\";\n                  } else {\n                    var status_uzorka = element.status;\n                  }\n\n                  element.rezultati.forEach(function (test) {\n                    check++;\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                      zaprimljen++;\n                    }\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                      realizovan++;\n                    }\n\n                    if (check === element.rezultati.length) {\n\n                      if (status_uzorka === \"VERIFICIRAN\") {\n                        _this27.uzorci.push({\n                          sid: element.id,\n                          status: \"VERIFICIRAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (status_uzorka === \"ODOBREN\") {\n                        _this27.uzorci.push({\n                          sid: element.id,\n                          status: \"ODOBREN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (zaprimljen < 1) {\n                        _this27.uzorci.push({\n                          sid: element.id,\n                          status: \"REALIZOVAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (realizovan < 1) {\n                        var stat = \"ZAPRIMLJEN\";\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                          if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                            stat = \"REALIZOVAN\";\n                          }\n                        }\n                        _this27.uzorci.push({\n                          sid: element.id,\n                          status: stat,\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else {\n                        _this27.uzorci.push({\n                          sid: element.id,\n                          status: \"U OBRADI\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      }\n                    }\n                  });\n                });\n\n                _this27.uzorci = _this27.uzorci.sort(function (a, b) {\n                  return a.sid.localeCompare(b.sid, undefined, {\n                    numeric: true,\n                    sensitivity: \"base\"\n                  });\n                });\n\n                _this27.main = true;\n\n                _this27.isLoading = false;\n              }\n            }).then(function (res) {});\n          });\n        });\n      });\n    },\n    Disapprove: function Disapprove(rezultati, from) {\n      var _this28 = this;\n\n      this.rezultati.forEach(function (element) {\n        if (element.calculated) {\n          _this28.calculated = true;\n        }\n      });\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"/rezultati/odobravanje/ukloni/\" + this.$store.state.sid, {\n        testovi: rezultati,\n        site: this.$store.state.site,\n        token: this.$store.state.token\n      }).then(function (res) {\n        _this28.isLoading = true;\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this28.$route.params.patient + \"/\" + _this28.$route.params.id + \"?token=\" + _this28.$store.state.token + \"&site=\" + _this28.$store.state.site + \"&date=\" + _this28.$route.query.date, {}).then(function (res) {\n          _this28.sample.status = \"REALIZOVAN\";\n\n          _this28.final_pdf = res.data.final_pdf;\n\n          _this28.count = res.data.results.length;\n          _this28.approved = 0;\n\n          _this28.odobren = true;\n          _this28.verificiran = true;\n\n          res.data.results.forEach(function (element) {\n            if (element.status === \"ODOBREN\" || element.status === \"VERIFICIRAN\") {\n              _this28.approved++;\n            }\n            if (element.status != \"ODOBREN\" && element.status != \"VERIFICIRAN\") {\n              _this28.odobren = false;\n            }\n            if (!element.verificiran) {\n              _this28.verificiran = false;\n            }\n          });\n\n          _this28.uzorci = [];\n\n          res.data.results.forEach(function (element) {\n            var check = 0;\n            var zaprimljen = 0;\n            var realizovan = 0;\n\n            if (element.verificiran) {\n              var status_uzorka = \"VERIFICIRAN\";\n            } else {\n              var status_uzorka = element.status;\n            }\n\n            element.rezultati.forEach(function (test) {\n              check++;\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                zaprimljen++;\n              }\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                realizovan++;\n              }\n\n              if (check === element.rezultati.length) {\n\n                if (status_uzorka === \"VERIFICIRAN\") {\n                  _this28.uzorci.push({\n                    sid: element.id,\n                    status: \"VERIFICIRAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (status_uzorka === \"ODOBREN\") {\n                  _this28.uzorci.push({\n                    sid: element.id,\n                    status: \"ODOBREN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (zaprimljen < 1) {\n                  _this28.uzorci.push({\n                    sid: element.id,\n                    status: \"REALIZOVAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (realizovan < 1) {\n                  var stat = \"ZAPRIMLJEN\";\n                  if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                    if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                      stat = \"REALIZOVAN\";\n                    }\n                  }\n                  _this28.uzorci.push({\n                    sid: element.id,\n                    status: stat,\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else {\n                  _this28.uzorci.push({\n                    sid: element.id,\n                    status: \"U OBRADI\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                }\n              }\n            });\n          });\n\n          _this28.uzorci = _this28.uzorci.sort(function (a, b) {\n            return a.sid.localeCompare(b.sid, undefined, {\n              numeric: true,\n              sensitivity: \"base\"\n            });\n          });\n\n          _this28.main = true;\n        });\n\n        _this28.rezultati.forEach(function (element) {\n          element.edit = true;\n        });\n\n        _this28.isLoading = false;\n      });\n    },\n    Verify: function Verify(data) {\n      var _this29 = this;\n\n      if (!this.$store.state.access.verify) {\n        this.$refs.staticModalVerifyPrivilege.open();\n      } else {\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"/rezultati/obrada/verifikacija/\" + this.$store.state.sid, {\n          site: this.$store.state.site,\n          token: this.$store.state.token,\n          verify: true\n        }).then(function (res) {\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this29.$route.params.patient + \"/\" + _this29.$route.params.id + \"?token=\" + _this29.$store.state.token + \"&site=\" + _this29.$store.state.site + \"&date=\" + _this29.$route.query.date, {}).then(function (res) {\n            _this29.sample.status = \"VERIFICIRAN\";\n\n            _this29.final_pdf = res.data.final_pdf;\n\n            _this29.count = res.data.results.length;\n            _this29.approved = 0;\n            _this29.verified = 0;\n\n            _this29.odobren = true;\n            _this29.verificiran = true;\n            _this29.partials = [];\n            _this29.partials_condition = false;\n\n            res.data.results.forEach(function (element) {\n              if (element.verificiran) {\n                _this29.partials.push(element._id);\n                _this29.verified++;\n              }\n              if (element.status === \"ODOBREN\" || element.status === \"VERIFICIRAN\") {\n                _this29.approved++;\n              }\n              if (element.status != \"ODOBREN\" && element.status != \"VERIFICIRAN\") {\n                _this29.odobren = false;\n              }\n              if (!element.verificiran) {\n                _this29.verificiran = false;\n              }\n            });\n\n            if (_this29.count > _this29.verified && _this29.verified > 1) {\n              _this29.partials_condition = true;\n            }\n\n            _this29.uzorci = [];\n\n            res.data.results.forEach(function (element) {\n              var check = 0;\n              var zaprimljen = 0;\n              var realizovan = 0;\n\n              if (element.verificiran) {\n                var status_uzorka = \"VERIFICIRAN\";\n              } else {\n                var status_uzorka = element.status;\n              }\n\n              element.rezultati.forEach(function (test) {\n                check++;\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                  zaprimljen++;\n                }\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                  realizovan++;\n                }\n\n                if (check === element.rezultati.length) {\n\n                  if (status_uzorka === \"VERIFICIRAN\") {\n                    _this29.uzorci.push({\n                      sid: element.id,\n                      status: \"VERIFICIRAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (status_uzorka === \"ODOBREN\") {\n                    _this29.uzorci.push({\n                      sid: element.id,\n                      status: \"ODOBREN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (zaprimljen < 1) {\n                    _this29.uzorci.push({\n                      sid: element.id,\n                      status: \"REALIZOVAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (realizovan < 1) {\n                    var stat = \"ZAPRIMLJEN\";\n                    if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                      if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                        stat = \"REALIZOVAN\";\n                      }\n                    }\n                    _this29.uzorci.push({\n                      sid: element.id,\n                      status: stat,\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else {\n                    _this29.uzorci.push({\n                      sid: element.id,\n                      status: \"U OBRADI\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  }\n                }\n              });\n            });\n\n            _this29.uzorci = _this29.uzorci.sort(function (a, b) {\n              return a.sid.localeCompare(b.sid, undefined, {\n                numeric: true,\n                sensitivity: \"base\"\n              });\n            });\n\n            if (_this29.verificiran) {\n              __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"rezultati/nalazi/status\", {\n                token: _this29.$store.state.token,\n                site: _this29.$store.state.site,\n                timestamp: _this29.timestamp,\n                location: \"/\",\n                naziv: _this29.timestamp,\n                status: true\n              }).then(function (res) {\n                _this29.main = true;\n\n                if (_this29.lokacija.sendEmail) {\n                  __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"nalazi/mail\", {\n                    token: _this29.$store.state.token,\n                    site: _this29.$store.state.site,\n                    email: _this29.lokacija.email,\n                    timestamp: _this29.timestamp,\n                    location: \"/\",\n                    naziv: _this29.timestamp\n                  }).then(function (res) {\n                    if (res.data.success) {} else {\n                      _this29.toastText = \"Greška prilikom slanja nalaza!\";\n                      _this29.toastIcon = \"fa-remove\";\n                      _this29.toastPosition = \"top-right\";\n                      _this29.className = \"vuestic-toast-danger\";\n\n                      _this29.showToast(_this29.toastText, {\n                        icon: _this29.toastIcon,\n                        position: _this29.toastPosition,\n                        duration: 2500,\n                        fullWidth: _this29.false,\n                        className: _this29.className\n                      });\n                    }\n                  });\n                } else {}\n              });\n            } else {\n              _this29.main = true;\n            }\n          });\n        });\n      }\n    },\n    UnVerify: function UnVerify(data) {\n      var _this30 = this;\n\n      if (!this.$store.state.access.verify) {\n        this.$refs.staticModalVerifyPrivilege.open();\n      } else {\n        this.verificiran = false;\n        this.sid = data.sid;\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"/rezultati/obrada/verifikacija/\" + data.sid, {\n          site: this.$store.state.site,\n          token: this.$store.state.token,\n          verify: false\n        }).then(function (res) {\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this30.$route.params.patient + \"/\" + _this30.$route.params.id + \"?token=\" + _this30.$store.state.token + \"&site=\" + _this30.$store.state.site + \"&date=\" + _this30.$route.query.date, {}).then(function (res) {\n            _this30.sample.status = \"ODOBREN\";\n\n            _this30.final_pdf = res.data.final_pdf;\n\n            _this30.count = res.data.results.length;\n            _this30.approved = 0;\n\n            _this30.odobren = true;\n            _this30.verificiran = true;\n            _this30.verified = 0;\n            _this30.partials = [];\n            _this30.partials_condition = false;\n\n            res.data.results.forEach(function (element) {\n              if (element.verificiran) {\n                _this30.verified++;\n                _this30.partials.push(element._id);\n              }\n              if (element.status === \"ODOBREN\" || element.status === \"VERIFICIRAN\") {\n                _this30.approved++;\n              }\n              if (element.status != \"ODOBREN\" && element.status != \"VERIFICIRAN\") {\n                _this30.odobren = false;\n              }\n              if (!element.verificiran) {\n                _this30.verificiran = false;\n              }\n            });\n\n            if (_this30.count > _this30.verified && _this30.verified > 1) {\n              _this30.partials_condition = true;\n            }\n\n            _this30.uzorci = [];\n\n            res.data.results.forEach(function (element) {\n              var check = 0;\n              var zaprimljen = 0;\n              var realizovan = 0;\n\n              if (element.verificiran) {\n                var status_uzorka = \"VERIFICIRAN\";\n              } else {\n                var status_uzorka = element.status;\n              }\n\n              element.rezultati.forEach(function (test) {\n                check++;\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                  zaprimljen++;\n                }\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                  realizovan++;\n                }\n\n                if (check === element.rezultati.length) {\n\n                  if (status_uzorka === \"VERIFICIRAN\") {\n                    _this30.uzorci.push({\n                      sid: element.id,\n                      status: \"VERIFICIRAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (status_uzorka === \"ODOBREN\") {\n                    _this30.uzorci.push({\n                      sid: element.id,\n                      status: \"ODOBREN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (zaprimljen < 1) {\n                    _this30.uzorci.push({\n                      sid: element.id,\n                      status: \"REALIZOVAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (realizovan < 1) {\n                    var stat = \"ZAPRIMLJEN\";\n                    if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                      if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                        stat = \"REALIZOVAN\";\n                      }\n                    }\n                    _this30.uzorci.push({\n                      sid: element.id,\n                      status: stat,\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else {\n                    _this30.uzorci.push({\n                      sid: element.id,\n                      status: \"U OBRADI\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  }\n                }\n              });\n            });\n\n            _this30.uzorci = _this30.uzorci.sort(function (a, b) {\n              return a.sid.localeCompare(b.sid, undefined, {\n                numeric: true,\n                sensitivity: \"base\"\n              });\n            });\n\n            if (!_this30.verificiran) {\n              __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"rezultati/nalazi/status\", {\n                token: _this30.$store.state.token,\n                site: _this30.$store.state.site,\n                timestamp: _this30.timestamp,\n                location: \"/\",\n                naziv: _this30.timestamp,\n                status: false\n              }).then(function (res) {\n                _this30.main = true;\n              });\n            } else {\n              _this30.main = true;\n            }\n          });\n        });\n      }\n    },\n    GetResults: function GetResults(data, status) {\n      var _this31 = this;\n\n      this.sample_status = status;\n      this.vise = [];\n      this.labassay = \"\";\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"/rezultati/odobravanje/results\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site, {\n        id: this.sample.sid,\n        labassay: data.labassay_id\n      }).then(function (res) {\n        if (res.data.success) {\n          _this31.vise = res.data.element;\n          _this31.labassay = _this31.vise.labassay.naziv + \" (\" + _this31.vise.labassay.analit + \")\";\n\n          var i = 0;\n          res.data.element.rezultat.forEach(function (element) {\n            i++;\n            if (res.data.element.rezultat.length == i) {\n              element.izabran = true;\n            } else {\n              element.izabran = false;\n            }\n          });\n\n          _this31.vise.rezultat.sort(function (a, b) {\n            return Date.parse(a.created_at) == Date.parse(b.created_at) ? 0 : +(Date.parse(a.created_at) < Date.parse(b.created_at)) || -1;\n          });\n\n          _this31.$refs.staticModalAllResults.open();\n        }\n      });\n    },\n    GetResultsMulti: function GetResultsMulti(data, status) {\n      this.sample_status = status;\n\n      this.multi_rezultati = [];\n      this.multi_test = data.ime + \" (\" + data.analit + \")\";\n\n      data.multi_rezultati.forEach(function (element) {\n        element.rezultat.forEach(function (rez) {});\n      });\n    },\n    IzborTesta: function IzborTesta(vise, test) {\n      var _this32 = this;\n\n      document.getElementById(this.sample.sid).click();\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"/rezultati/odobravanje/choose\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site, {\n        id: this.sample.sid,\n        labassay: vise.labassay._id,\n        picked: test._id\n      }).then(function (res) {\n        document.getElementById(_this32.sample.sid).click();\n        _this32.$refs.staticModalAllResults.close();\n      });\n    },\n    Partials: function Partials() {\n      var _this33 = this;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"q\" /* http */].post(\"nalazi/create\", {\n        token: this.$store.state.token,\n        site: this.$store.state.site,\n        type: \"partial\",\n        uzorci: this.uzorci,\n        samples: this.partials,\n        timestamp: this.timestamp,\n        napomena: \"\",\n        status: false,\n        idNalaza: \"\",\n        location: \"/partials\",\n        klijent: this.klijent,\n        naziv: this.timestamp\n      }).then(function (res) {\n        if (res.data.success) {\n          if (!res.data.success) {\n            _this33.$refs.staticModalError.open();\n          } else {\n            _this33.path = _this33.timestamp + \".pdf\";\n\n            _this33.url = __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"r\" /* server */] + \"nalazi/partials/\" + _this33.path;\n\n            var options = {\n              width: \"100%\",\n              height: \"800px\"\n            };\n            __WEBPACK_IMPORTED_MODULE_16_pdfobject___default.a.embed(_this33.url, \"#pdf-container\", options);\n\n            _this33.email_button = true;\n            _this33.main = false;\n            _this33.pdf = true;\n          }\n        }\n      });\n    }\n  }\n});\n\n/***/ }),\n\n/***/ \"R7hf\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: \"badgeColumn\",\n  props: {\n    rowData: {\n      type: Object,\n      required: true\n    },\n    rowIndex: {\n      type: Number\n    }\n  },\n  data: function data() {\n    return {\n      classObject: {\n        \"badge-warning\": this.rowIndex % 6 === 0,\n        \"badge-primary\": this.rowIndex % 6 === 1,\n        \"badge-danger\": this.rowIndex % 6 === 2,\n        \"badge-info\": this.rowIndex % 6 === 3,\n        \"badge-violet\": this.rowIndex % 6 === 4,\n        \"badge-dark-blue\": this.rowIndex % 6 === 5\n      }\n    };\n  }\n});\n\n/***/ }),\n\n/***/ \"Rrel\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = __webpack_require__(\"TcQ7\");\nvar gOPN = __webpack_require__(\"n0T6\").f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n\n\n/***/ }),\n\n/***/ \"S6Gs\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"FZ+f\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \".circle[data-v-0a28fd12]{width:.4rem;height:.4rem;border-radius:50%;display:inline-block}\", \"\", {\"version\":3,\"sources\":[\"C:/Users/atom/Desktop/ATOM/26 - BIOLAB Laboratorij Sarajevo/bls_client/src/components/obrada/BadgeColumn.vue\"],\"names\":[],\"mappings\":\"AACA,yBACE,YAAc,AACd,aAAe,AACf,kBAAmB,AACnB,oBAAsB,CACvB\",\"file\":\"BadgeColumn.vue\",\"sourcesContent\":[\"\\n.circle[data-v-0a28fd12] {\\n  width: 0.4rem;\\n  height: 0.4rem;\\n  border-radius: 50%;\\n  display: inline-block;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"UqI+\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*global ActiveXObject, window, console, define, module, jQuery */\n//jshint unused:false, strict: false\n\n/*\n    PDFObject v2.1.1\n    https://github.com/pipwerks/PDFObject\n    Copyright (c) 2008-2018 Philip Hutchison\n    MIT-style license: http://pipwerks.mit-license.org/\n    UMD module pattern from https://github.com/umdjs/umd/blob/master/templates/returnExports.js\n*/\n\n(function (root, factory) {\n    if (true) {\n        // AMD. Register as an anonymous module.\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if (typeof module === 'object' && module.exports) {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    } else {\n        // Browser globals (root is window)\n        root.PDFObject = factory();\n  }\n}(this, function () {\n\n    \"use strict\";\n    //jshint unused:true\n\n    //PDFObject is designed for client-side (browsers), not server-side (node)\n    //Will choke on undefined navigator and window vars when run on server\n    //Return boolean false and exit function when running server-side\n\n    if(typeof window === \"undefined\" || typeof navigator === \"undefined\"){ return false; }\n\n    var pdfobjectversion = \"2.1.1\",\n        ua = window.navigator.userAgent,\n\n        //declare booleans\n        supportsPDFs,\n        isIE,\n        supportsPdfMimeType = (typeof navigator.mimeTypes['application/pdf'] !== \"undefined\"),\n        supportsPdfActiveX,\n        isModernBrowser = (function (){ return (typeof window.Promise !== \"undefined\"); })(),\n        isFirefox = (function (){ return (ua.indexOf(\"irefox\") !== -1); } )(),\n        isFirefoxWithPDFJS = (function (){\n            //Firefox started shipping PDF.js in Firefox 19.\n            //If this is Firefox 19 or greater, assume PDF.js is available\n            if(!isFirefox){ return false; }\n            //parse userAgent string to get release version (\"rv\")\n            //ex: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:57.0) Gecko/20100101 Firefox/57.0\n            return (parseInt(ua.split(\"rv:\")[1].split(\".\")[0], 10) > 18);\n        })(),\n        isIOS = (function (){ return (/iphone|ipad|ipod/i.test(ua.toLowerCase())); })(),\n\n        //declare functions\n        createAXO,\n        buildFragmentString,\n        log,\n        embedError,\n        embed,\n        getTargetElement,\n        generatePDFJSiframe,\n        generateEmbedElement;\n\n\n    /* ----------------------------------------------------\n       Supporting functions\n       ---------------------------------------------------- */\n\n    createAXO = function (type){\n        var ax;\n        try {\n            ax = new ActiveXObject(type);\n        } catch (e) {\n            ax = null; //ensure ax remains null\n        }\n        return ax;\n    };\n\n    //IE11 still uses ActiveX for Adobe Reader, but IE 11 doesn't expose\n    //window.ActiveXObject the same way previous versions of IE did\n    //window.ActiveXObject will evaluate to false in IE 11, but \"ActiveXObject\" in window evaluates to true\n    //so check the first one for older IE, and the second for IE11\n    //FWIW, MS Edge (replacing IE11) does not support ActiveX at all, both will evaluate false\n    //Constructed as a method (not a prop) to avoid unneccesarry overhead -- will only be evaluated if needed\n    isIE = function (){ return !!(window.ActiveXObject || \"ActiveXObject\" in window); };\n\n    //If either ActiveX support for \"AcroPDF.PDF\" or \"PDF.PdfCtrl\" are found, return true\n    //Constructed as a method (not a prop) to avoid unneccesarry overhead -- will only be evaluated if needed\n    supportsPdfActiveX = function (){ return !!(createAXO(\"AcroPDF.PDF\") || createAXO(\"PDF.PdfCtrl\")); };\n\n    //Determines whether PDF support is available\n    supportsPDFs = (\n        //as of iOS 12, inline PDF rendering is still not supported in Safari or native webview\n        //3rd-party browsers (eg Chrome, Firefox) use Apple's webview for rendering, and thus the same result as Safari\n        //Therefore if iOS, we shall assume that PDF support is not available\n        !isIOS && (\n            //Modern versions of Firefox come bundled with PDFJS\n            isFirefoxWithPDFJS || \n            //Browsers that still support the original MIME type check\n            supportsPdfMimeType || (\n                //Pity the poor souls still using IE\n                isIE() && supportsPdfActiveX()\n            )\n        )\n    );\n\n    //Create a fragment identifier for using PDF Open parameters when embedding PDF\n    buildFragmentString = function(pdfParams){\n\n        var string = \"\",\n            prop;\n\n        if(pdfParams){\n\n            for (prop in pdfParams) {\n                if (pdfParams.hasOwnProperty(prop)) {\n                    string += encodeURIComponent(prop) + \"=\" + encodeURIComponent(pdfParams[prop]) + \"&\";\n                }\n            }\n\n            //The string will be empty if no PDF Params found\n            if(string){\n\n                string = \"#\" + string;\n\n                //Remove last ampersand\n                string = string.slice(0, string.length - 1);\n\n            }\n\n        }\n\n        return string;\n\n    };\n\n    log = function (msg){\n        if(typeof console !== \"undefined\" && console.log){\n            console.log(\"[PDFObject] \" + msg);\n        }\n    };\n\n    embedError = function (msg){\n        log(msg);\n        return false;\n    };\n\n    getTargetElement = function (targetSelector){\n\n        //Default to body for full-browser PDF\n        var targetNode = document.body;\n\n        //If a targetSelector is specified, check to see whether\n        //it's passing a selector, jQuery object, or an HTML element\n\n        if(typeof targetSelector === \"string\"){\n\n            //Is CSS selector\n            targetNode = document.querySelector(targetSelector);\n\n        } else if (typeof jQuery !== \"undefined\" && targetSelector instanceof jQuery && targetSelector.length) {\n\n            //Is jQuery element. Extract HTML node\n            targetNode = targetSelector.get(0);\n\n        } else if (typeof targetSelector.nodeType !== \"undefined\" && targetSelector.nodeType === 1){\n\n            //Is HTML element\n            targetNode = targetSelector;\n\n        }\n\n        return targetNode;\n\n    };\n\n    generatePDFJSiframe = function (targetNode, url, pdfOpenFragment, PDFJS_URL, id){\n\n        var fullURL = PDFJS_URL + \"?file=\" + encodeURIComponent(url) + pdfOpenFragment;\n        var scrollfix = (isIOS) ? \"-webkit-overflow-scrolling: touch; overflow-y: scroll; \" : \"overflow: hidden; \";\n        var iframe = \"<div style='\" + scrollfix + \"position: absolute; top: 0; right: 0; bottom: 0; left: 0;'><iframe  \" + id + \" src='\" + fullURL + \"' style='border: none; width: 100%; height: 100%;' frameborder='0'></iframe></div>\";\n        targetNode.className += \" pdfobject-container\";\n        targetNode.style.position = \"relative\";\n        targetNode.style.overflow = \"auto\";\n        targetNode.innerHTML = iframe;\n        return targetNode.getElementsByTagName(\"iframe\")[0];\n\n    };\n\n    generateEmbedElement = function (targetNode, targetSelector, url, pdfOpenFragment, width, height, id){\n\n        var style = \"\";\n\n        if(targetSelector && targetSelector !== document.body){\n            style = \"width: \" + width + \"; height: \" + height + \";\";\n        } else {\n            style = \"position: absolute; top: 0; right: 0; bottom: 0; left: 0; width: 100%; height: 100%;\";\n        }\n\n        targetNode.className += \" pdfobject-container\";\n        targetNode.innerHTML = \"<embed \" + id + \" class='pdfobject' src='\" + url + pdfOpenFragment + \"' type='application/pdf' style='overflow: auto; \" + style + \"'/>\";\n\n        return targetNode.getElementsByTagName(\"embed\")[0];\n\n    };\n\n    embed = function(url, targetSelector, options){\n\n        //Ensure URL is available. If not, exit now.\n        if(typeof url !== \"string\"){ return embedError(\"URL is not valid\"); }\n\n        //If targetSelector is not defined, convert to boolean\n        targetSelector = (typeof targetSelector !== \"undefined\") ? targetSelector : false;\n\n        //Ensure options object is not undefined -- enables easier error checking below\n        options = (typeof options !== \"undefined\") ? options : {};\n\n        //Get passed options, or set reasonable defaults\n        var id = (options.id && typeof options.id === \"string\") ? \"id='\" + options.id + \"'\" : \"\",\n            page = (options.page) ? options.page : false,\n            pdfOpenParams = (options.pdfOpenParams) ? options.pdfOpenParams : {},\n            fallbackLink = (typeof options.fallbackLink !== \"undefined\") ? options.fallbackLink : true,\n            width = (options.width) ? options.width : \"100%\",\n            height = (options.height) ? options.height : \"100%\",\n            assumptionMode = (typeof options.assumptionMode === \"boolean\") ? options.assumptionMode : true,\n            forcePDFJS = (typeof options.forcePDFJS === \"boolean\") ? options.forcePDFJS : false,\n            PDFJS_URL = (options.PDFJS_URL) ? options.PDFJS_URL : false,\n            targetNode = getTargetElement(targetSelector),\n            fallbackHTML = \"\",\n            pdfOpenFragment = \"\",\n            fallbackHTML_default = \"<p>This browser does not support inline PDFs. Please download the PDF to view it: <a href='[url]'>Download PDF</a></p>\";\n\n        //If target element is specified but is not valid, exit without doing anything\n        if(!targetNode){ return embedError(\"Target element cannot be determined\"); }\n\n\n        //page option overrides pdfOpenParams, if found\n        if(page){\n            pdfOpenParams.page = page;\n        }\n\n        //Stringify optional Adobe params for opening document (as fragment identifier)\n        pdfOpenFragment = buildFragmentString(pdfOpenParams);\n\n        //Do the dance\n\n        //If the forcePDFJS option is invoked, skip everything else and embed as directed\n        if(forcePDFJS && PDFJS_URL){\n\n            return generatePDFJSiframe(targetNode, url, pdfOpenFragment, PDFJS_URL, id);\n\n        //If traditional support is provided, or if this is a modern browser and not iOS (see comment for supportsPDFs declaration)\n        } else if(supportsPDFs || (assumptionMode && isModernBrowser && !isIOS)){\n\n            return generateEmbedElement(targetNode, targetSelector, url, pdfOpenFragment, width, height, id);\n\n        //If everything else has failed and a PDFJS fallback is provided, try to use it\n        } else if(PDFJS_URL){\n\n            return generatePDFJSiframe(targetNode, url, pdfOpenFragment, PDFJS_URL, id);\n\n        } else {\n\n            //Display the fallback link if available\n            if(fallbackLink){\n\n                fallbackHTML = (typeof fallbackLink === \"string\") ? fallbackLink : fallbackHTML_default;\n                targetNode.innerHTML = fallbackHTML.replace(/\\[url\\]/g, url);\n\n            }\n\n            return embedError(\"This browser does not support embedded PDFs\");\n\n        }\n\n    };\n\n    return {\n        embed: function (a,b,c){ return embed(a,b,c); },\n        pdfobjectversion: (function () { return pdfobjectversion; })(),\n        supportsPDFs: (function (){ return supportsPDFs; })()\n    };\n\n}));\n\n/***/ }),\n\n/***/ \"XMpX\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_BadgeColumn_vue__ = __webpack_require__(\"R7hf\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0a28fd12_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_BadgeColumn_vue__ = __webpack_require__(\"GXRP\");\nfunction injectStyle (ssrContext) {\n  __webpack_require__(\"6LuA\")\n}\nvar normalizeComponent = __webpack_require__(\"VU/8\")\n/* script */\n\n/* template */\n\n/* template functional */\n  var __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-0a28fd12\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_BadgeColumn_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0a28fd12_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_BadgeColumn_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ \"aFK5\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(\"gAsd\"), __esModule: true };\n\n/***/ }),\n\n/***/ \"d5lM\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar interpretacija = __webpack_require__(\"3r/r\");\n\nmodule.exports = {\n  Interpretation: function Interpretation(test, result, jedinica, dref, gref, site, interp, extend, spec) {\n\n    var rezultat = result.trim();\n\n    switch (interp) {\n      case \"none\":\n        return [test, rezultat, interpretacija.None(rezultat, dref, gref)[0], jedinica, \"/\", interpretacija.None(rezultat, dref, gref)[1], extend];\n        break;\n      case \"A\":\n        return [test, rezultat, interpretacija.Standard(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.Standard(rezultat, dref, gref)[1], extend];\n        break;\n      case \"ogtt\":\n        if (dref == \"0\" && gref == \"0\") {\n          var reference = \"/\";\n          return [test, rezultat, interpretacija.Standard(rezultat, dref, gref)[0], jedinica, reference, interpretacija.Standard(rezultat, dref, gref)[1], extend];\n        } else if (dref == \"0\" && gref != \"0\") {\n          var reference = \"< \" + gref;\n          return [test, rezultat, interpretacija.Less(rezultat, dref, gref)[0], jedinica, reference, interpretacija.Less(rezultat, dref, gref)[1], extend];\n        } else {\n          var reference = dref + \" - \" + gref;\n          return [test, rezultat, interpretacija.Standard(rezultat, dref, gref)[0], jedinica, reference, interpretacija.Standard(rezultat, dref, gref)[1], extend];\n        }\n        break;\n      case \"insul\":\n        if (dref == \"0\" && gref == \"0\") {\n          var reference = \"/\";\n        } else {\n          var reference = dref + \" - \" + gref;\n        }\n        return [test, rezultat, interpretacija.Standard(rezultat, dref, gref)[0], jedinica, reference, interpretacija.Standard(rezultat, dref, gref)[1], extend];\n        break;\n      case \"less\":\n        return [test, rezultat, interpretacija.Less(rezultat, dref, gref)[0], jedinica, \" < \" + gref, interpretacija.Less(rezultat, dref, gref)[1], extend];\n        break;\n      case \"lesseq\":\n        return [test, rezultat, interpretacija.LessEqual(rezultat, dref, gref)[0], jedinica, \" ≤ \" + gref, interpretacija.LessEqual(rezultat, dref, gref)[1], extend];\n        break;\n      case \"lesspl\":\n        return [test, rezultat, interpretacija.LessPlus(rezultat, dref, gref)[0], jedinica, \" < \" + gref + \" x 10^6\", interpretacija.LessPlus(rezultat, dref, gref)[1], extend];\n        break;\n      case \"infekc\":\n        return [test, rezultat, interpretacija.Infekcija(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.Infekcija(rezultat, dref, gref)[1], extend];\n        break;\n      case \"grt\":\n        return [test, rezultat, interpretacija.Greater(rezultat, dref, gref)[0], jedinica, \" > \" + gref, interpretacija.Greater(rezultat, dref, gref)[1], extend];\n        break;\n      case \"grtno\":\n        return [test, rezultat, interpretacija.GreaterNoInterp(rezultat, dref, gref)[0], jedinica, \" > \" + gref, interpretacija.GreaterNoInterp(rezultat, dref, gref)[1], extend];\n        break;\n      case \"grtpl\":\n        return [test, rezultat, interpretacija.Greater(rezultat, dref, gref)[0], jedinica, \" > \" + gref + \" x 10^6\", interpretacija.Greater(rezultat, dref, gref)[1], extend];\n        break;\n      case \"grtepl\":\n        return [test, rezultat, interpretacija.GreaterEqual(rezultat, dref, gref)[0], jedinica, \" ≥ \" + gref + \" x 10^6\", interpretacija.GreaterEqual(rezultat, dref, gref)[1], extend];\n        break;\n      case \"grte\":\n        return [test, rezultat, interpretacija.GreaterEqual(rezultat, dref, gref)[0], jedinica, \" ≥ \" + gref, interpretacija.GreaterEqual(rezultat, dref, gref)[1], extend];\n        break;\n      case \"neg\":\n        return [test, rezultat, interpretacija.Negativan(rezultat, dref, gref)[0], jedinica, \"negativan\", interpretacija.Negativan(rezultat, dref, gref)[1], extend];\n        break;\n      case \"trag\":\n        return [test, rezultat, interpretacija.Trag(rezultat, dref, gref)[0], jedinica, \"trag\", interpretacija.Trag(rezultat, dref, gref)[1], extend];\n        break;\n      case \"reakt\":\n        return [test, rezultat, interpretacija.Reaktivan(rezultat, dref, gref)[0], jedinica, \"negativan\", interpretacija.Reaktivan(rezultat, dref, gref)[1], extend];\n        break;\n      case \"norm\":\n        return [test, rezultat, interpretacija.Normalan(rezultat, dref, gref)[0], jedinica, \"normalna\", interpretacija.Normalan(rezultat, dref, gref)[1], extend];\n        break;\n      case \"norma\":\n        return [test, rezultat, interpretacija.Normalan(rezultat, dref, gref)[0], jedinica, \"normalan\", interpretacija.Normalan(rezultat, dref, gref)[1], extend];\n        break;\n      case \"ured\":\n        return [test, rezultat, interpretacija.Uredan(rezultat, dref, gref)[0], jedinica, \"uredna\", interpretacija.Uredan(rezultat, dref, gref)[1], extend];\n        break;\n      case \"plus\":\n        return [test, rezultat, interpretacija.Plus(rezultat, dref, gref)[0], jedinica, \"+ + +\", interpretacija.Plus(rezultat, dref, gref)[1], extend];\n        break;\n      case \"morf\":\n        return [test, rezultat, interpretacija.Morf(rezultat, dref, gref)[0], jedinica, gref, interpretacija.Morf(rezultat, dref, gref)[1], extend];\n        break;\n      case \"titar\":\n        return [test, rezultat, interpretacija.Titar(rezultat, dref, gref)[0], jedinica, \"< \" + dref + \":\" + gref, interpretacija.Titar(rezultat, dref, gref)[1], extend];\n        break;\n      case \"tsh\":\n        return [test, rezultat, interpretacija.TSH(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.TSH(rezultat, dref, gref)[1], extend];\n        break;\n      case \"trg\":\n        return [test, rezultat, interpretacija.TRG(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.TRG(rezultat, dref, gref)[1], extend];\n        break;\n      case \"hol\":\n        return [test, rezultat, interpretacija.HOL(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.HOL(rezultat, dref, gref)[1], extend];\n        break;\n      case \"hdl\":\n        return [test, rezultat, interpretacija.HDL(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.HDL(rezultat, dref, gref)[1], extend];\n        break;\n      case \"ldl\":\n        return [test, rezultat, interpretacija.LDL(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.LDL(rezultat, dref, gref)[1], extend];\n        break;\n      case \"fpsa\":\n        return [test, rezultat, interpretacija.fPSA(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.fPSA(rezultat, dref, gref)[1], extend];\n        break;\n      case \"sediment\":\n        return [test, rezultat, interpretacija.Sedimentacija(rezultat, dref, gref)[0], jedinica, \"< \" + gref, interpretacija.Sedimentacija(rezultat, dref, gref)[1], extend];\n        break;\n      case \"bistar\":\n        return [test, rezultat, interpretacija.Bistar(rezultat, dref, gref)[0], jedinica, \"bistar\", interpretacija.Bistar(rezultat, dref, gref)[1], extend];\n        break;\n      case \"boja\":\n        return [test, rezultat, interpretacija.Boja(rezultat, dref, gref)[0], jedinica, \"žut\", interpretacija.Boja(rezultat, dref, gref)[1], extend];\n        break;\n      case \"bojasp\":\n        return [test, rezultat, interpretacija.BojaSpermiogram(rezultat, dref, gref)[0], jedinica, \"blijedo žut\", interpretacija.BojaSpermiogram(rezultat, dref, gref)[1], extend];\n        break;\n      case \"nesto\":\n        return [test, rezultat, interpretacija.Nesto(rezultat, dref, gref)[0], jedinica, \"nešto\", interpretacija.Nesto(rezultat, dref, gref)[1], extend];\n        break;\n      case \"exists\":\n        return [test, rezultat, interpretacija.Exists(rezultat, dref, gref)[0], jedinica, \" \", interpretacija.Exists(rezultat, dref, gref)[1], extend];\n        break;\n      case \"prisutno\":\n        return [test, rezultat, interpretacija.Prisutno(rezultat, dref, gref)[0], jedinica, \"0\", interpretacija.Prisutno(rezultat, dref, gref)[1], extend];\n        break;\n      case \"gljivice\":\n        return [test, rezultat, interpretacija.Gljivice(rezultat, dref, gref)[0], jedinica, \"0\", interpretacija.Gljivice(rezultat, dref, gref)[1], extend];\n        break;\n      case \"leuer\":\n        return [test, rezultat, interpretacija.LeuEr(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.LeuEr(rezultat, dref, gref)[1], extend];\n        break;\n      case \"nema\":\n        return [test, rezultat, interpretacija.Nema(rezultat, dref, gref)[0], jedinica, \"nema\", interpretacija.Nema(rezultat, dref, gref)[1], extend];\n        break;\n      case \"blst\":\n        return [test, rezultat, interpretacija.Blasti(rezultat, dref, gref)[0], jedinica, gref, interpretacija.Blasti(rezultat, dref, gref)[1], extend];\n        break;\n      case \"leu\":\n        return [test, rezultat, interpretacija.LeuErc(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.LeuErc(rezultat, dref, gref)[1], extend];\n        break;\n      case \"spec\":\n        return [test, rezultat, interpretacija.Specific(rezultat, dref, gref)[0], jedinica, spec, interpretacija.Specific(rezultat, dref, gref)[1], extend];\n        break;\n\n      case \"e0x\":\n        return [test, rezultat, interpretacija.None(rezultat, dref, gref)[0], jedinica, \"\", interpretacija.None(rezultat, dref, gref)[1], extend];\n        break;\n      case \"e02\":\n        return [test, rezultat, interpretacija.SpermKolicina(rezultat, dref, gref)[0], jedinica, \"da\", interpretacija.SpermKolicina(rezultat, dref, gref)[1], extend];\n        break;\n      case \"e04\":\n        return [test, rezultat, interpretacija.SpermIzgled(rezultat, dref, gref)[0], jedinica, \"uredan\", interpretacija.SpermIzgled(rezultat, dref, gref)[1], extend];\n        break;\n      case \"e05\":\n        return [test, rezultat, interpretacija.SpermBoja(rezultat, dref, gref)[0], jedinica, \"sivo bijela\", interpretacija.SpermBoja(rezultat, dref, gref)[1], extend];\n        break;\n      case \"e07\":\n        return [test, rezultat, interpretacija.SpermLikvefakcija(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.SpermLikvefakcija(rezultat, dref, gref)[1], extend];\n        break;\n      case \"e08\":\n        return [test, rezultat, interpretacija.SpermAglutinacija(rezultat, dref, gref)[0], jedinica, \"nije prisutna\", interpretacija.SpermAglutinacija(rezultat, dref, gref)[1], extend];\n        break;\n\n      default:\n        return [test, rezultat, interpretacija.None(rezultat, dref, gref)[0], jedinica, \"/\", interpretacija.None(rezultat, dref, gref)[1], extend];\n        break;\n    }\n  }\n};\n\n/***/ }),\n\n/***/ \"gAsd\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"G5/o\");\nvar $Object = __webpack_require__(\"FeBl\").Object;\nmodule.exports = function getOwnPropertyNames(it) {\n  return $Object.getOwnPropertyNames(it);\n};\n\n\n/***/ }),\n\n/***/ \"hLWQ\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    hex2rgb: function hex2rgb(hex, opacity) {\n        hex = (hex + \"\").trim();\n\n        var rgb = null;\n        var match = hex.match(/^#?(([0-9a-zA-Z]{3}){1,3})$/);\n\n        if (!match) {\n            return null;\n        }\n\n        rgb = {};\n\n        hex = match[1];\n\n        if (hex.length === 6) {\n            rgb.r = parseInt(hex.substring(0, 2), 16);\n            rgb.g = parseInt(hex.substring(2, 4), 16);\n            rgb.b = parseInt(hex.substring(4, 6), 16);\n        } else if (hex.length === 3) {\n            rgb.r = parseInt(hex.substring(0, 1) + hex.substring(0, 1), 16);\n            rgb.g = parseInt(hex.substring(1, 2) + hex.substring(1, 2), 16);\n            rgb.b = parseInt(hex.substring(2, 3) + hex.substring(2, 3), 16);\n        }\n\n        rgb.css = \"rgb\" + (opacity ? \"a\" : \"\") + \"(\";\n        rgb.css += rgb.r + \",\" + rgb.g + \",\" + rgb.b;\n        rgb.css += (opacity ? \",\" + opacity : \"\") + \")\";\n\n        return rgb;\n    }\n});\n\n/***/ }),\n\n/***/ \"kyCW\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"FZ+f\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \".collapse-page__content[data-v-10b2afde]{padding:2rem}.collapse-page__content__title[data-v-10b2afde]{font-size:1.375rem;font-weight:700}.icon-bar a[data-v-10b2afde]{color:#fff;text-decoration:none}.icon-bar a[data-v-10b2afde]:hover{color:#4ae387}i[data-v-10b2afde]:hover{color:#4ae387!important}.circle[data-v-10b2afde]{width:1rem;opacity:.5;height:1rem;border-radius:50%;display:inline-block}\", \"\", {\"version\":3,\"sources\":[\"C:/Users/atom/Desktop/ATOM/26 - BIOLAB Laboratorij Sarajevo/bls_client/src/components/obrada/Obrada.vue\"],\"names\":[],\"mappings\":\"AACA,yCACE,YAAc,CACf,AACD,gDACI,mBAAoB,AACpB,eAAkB,CACrB,AACD,6BACE,WAAY,AACZ,oBAAsB,CACvB,AACD,mCACE,aAAe,CAChB,AACD,yBACE,uBAA0B,CAC3B,AACD,yBACE,WAAY,AACZ,WAAa,AACb,YAAa,AACb,kBAAmB,AACnB,oBAAsB,CACvB\",\"file\":\"Obrada.vue\",\"sourcesContent\":[\"\\n.collapse-page__content[data-v-10b2afde] {\\n  padding: 2rem;\\n}\\n.collapse-page__content__title[data-v-10b2afde] {\\n    font-size: 1.375rem;\\n    font-weight: bold;\\n}\\n.icon-bar a[data-v-10b2afde] {\\n  color: #fff;\\n  text-decoration: none;\\n}\\n.icon-bar a[data-v-10b2afde]:hover {\\n  color: #4ae387;\\n}\\ni[data-v-10b2afde]:hover {\\n  color: #4ae387 !important;\\n}\\n.circle[data-v-10b2afde] {\\n  width: 1rem;\\n  opacity: 0.5;\\n  height: 1rem;\\n  border-radius: 50%;\\n  display: inline-block;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"mIAj\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"collapse-page\"},[(_vm.show)?_c('div',{staticClass:\"flex md12\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.main && _vm.pdf),expression:\"!main && pdf\"}]},[_c('div',{staticClass:\"btn-container\"},[_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.verificiran),expression:\"verificiran\"}],staticClass:\"btn btn-secondary btn-sm\",on:{\"click\":function($event){$event.preventDefault();_vm.Nazad()}}},[_c('span',{staticClass:\"fa fa-step-backward\"}),_vm._v(\"\\n            \"+_vm._s(\" NAZAD\")+\"\\n          \")]),_vm._v(\" \"),_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.verificiran),expression:\"!verificiran\"}],staticClass:\"btn btn-secondary-danger btn-sm\",on:{\"click\":function($event){$event.preventDefault();_vm.Nazad()}}},[_c('span',{staticClass:\"fa fa-step-backward\"}),_vm._v(\"\\n            \"+_vm._s(\" NAZAD\")+\"\\n          \")]),_vm._v(\" \"),_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.email_button && _vm.verificiran),expression:\"email_button && verificiran\"}],staticClass:\"btn btn-secondary btn-sm pull-right\",attrs:{\"disabled\":!_vm.Email(_vm.email)},on:{\"click\":function($event){$event.preventDefault();_vm.MailDialog()}}},[_c('span',{staticClass:\"glyphicon glyphicon-send\"}),_vm._v(\"\\n            \"+_vm._s(\" Pošalji\")+\"\\n          \")]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.email_button && _vm.verificiran),expression:\"email_button && verificiran\"}],staticClass:\"form-group with-icon-left pull-right\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.email),expression:\"email\"}],attrs:{\"size\":\"40\",\"id\":\"input-icon-left\",\"name\":\"input-icon-left\",\"title\":\" \",\"required\":\"\"},domProps:{\"value\":(_vm.email)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.email=$event.target.value}}}),_vm._v(\" \"),_c('i',{staticClass:\"fa fa-envelope-o icon-left input-icon\"}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(\"\\n                \"+_vm._s(\"Email adresa\")+\"\\n              \")]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]),_vm._v(\" \"),_c('hr'),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"pdf-container\"}})]),_vm._v(\" \"),_c('vuestic-widget',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.main),expression:\"main\"}],attrs:{\"headerText\":_vm.header,\"pagination\":_vm.pagination,\"main\":_vm.main,\"data_pid\":Number(_vm.data_pid),\"data_length\":Number(_vm.data_length),\"rezultati_length\":_vm.Results.length,\"spol\":_vm.data_spol,\"data_min\":Number(_vm.data_min),\"datum\":_vm.query_date,\"today\":_vm.today_date,\"forward_disabled\":_vm.forward_disabled,\"backward_disabled\":_vm.backward_disabled}},[_c('div',{staticClass:\"ui-grid row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('vuestic-widget',{staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"headerText\":\"Informacije o pacijentu\"}},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col\"},[_c('div',[_vm._v(\"\\n                     \\n                    \"),_c('span',{staticStyle:{\"color\":\"#000000\"}},[_vm._v(_vm._s(\"Datum rođenja: \")+\"\\n                      \"),_c('strong',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(\"\\n                        \"+_vm._s(_vm.datumRodjenja))])]),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#000000\"}},[_vm._v(\"  \"+_vm._s(\"Ime jednog roditelja: \")+\"\\n                      \"),_c('strong',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(\"\\n                        \"+_vm._s(_vm.imeRoditelja))])]),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#000000\"}},[_vm._v(\"  \"+_vm._s(\"Adresa stanovanja: \")+\"\\n                      \"),_c('strong',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(\"\\n                        \"+_vm._s(_vm.adresaStanovanja))])])])])])])],1),_vm._v(\" \"),_c('div',{staticStyle:{\"min-height\":\"10px\"}})]),_vm._v(\" \"),_c('vuestic-accordion-obrada',_vm._l((_vm.uzorci),function(uzorak){return _c('vuestic-collapse-obrada',{directives:[{name:\"show\",rawName:\"v-show\",value:(!uzorak.removed),expression:\"!uzorak.removed\"}],key:uzorak.sid,attrs:{\"id\":uzorak.sid,\"sample\":uzorak,\"retest\":_vm.save_retest}},[_c('span',{attrs:{\"slot\":\"header\",\"id\":uzorak.sid},slot:\"header\"},[_vm._v(_vm._s(uzorak.sid))]),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"body\"},slot:\"body\"},[_c('div',{staticStyle:{\"line-height\":\"10px\"}},[_vm._v(\" \")]),_vm._v(\" \"),(uzorak.tip.includes('Mikrobiologija'))?_c('div',{staticClass:\"va-row\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_table),expression:\"show_table\"}],staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN'\n                          )?_c('td'):_vm._e(),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(\"ANALIZA\"))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(\"REZULTAT\"))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(\"JEDINICA\"))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(\"REFERENCE\"))]),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN'\n                          )?_c('td'):_vm._e(),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN' &&\n                            _vm.MicrobiologyScenario != 'MAIBPoR'\n                          )?_c('td',[_vm._v(\"\\n                          \"+_vm._s(\"PONOVI\")+\"\\n                        \")]):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR')?_c('td',{staticStyle:{\"text-transform\":\"none\"}},[_vm._v(\"\\n                          \"+_vm._s(\"Bakterije\")+\"\\n                        \")]):_vm._e(),_vm._v(\" \"),_c('td')])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.rezultati),function(test,index){return _c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(index < 1),expression:\"index < 1\"}],key:test.labassay_id,class:{\n                          'table-danger':\n                            test.rezultat_m.length &&\n                            test.rezultat_m[0].pozitivan,\n                          'table-success':\n                            test.rezultat_m.length &&\n                            test.rezultat_m[0].negativan,\n                          'table-warning': false,\n                        },attrs:{\"align\":\"middle\"}},[(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN'\n                          )?_c('td',[(uzorak.status === 'ZAPRIMLJEN')?_c('button',{staticClass:\"btn btn-secondary-danger btn-micro\",staticStyle:{\"padding\":\"0.4px\",\"padding-left\":\"2px\"},on:{\"click\":function($event){$event.preventDefault();_vm.MicroResultSelect($event)}}},[_c('i',{staticClass:\"fa fa-bug\",on:{\"click\":function($event){$event.preventDefault();_vm.MicroResultSelect($event)}}})]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ZAPRIMLJEN')?_c('button',{staticClass:\"btn btn-secondary-danger btn-micro\",staticStyle:{\"padding\":\"0.6px\",\"padding-right\":\"1px\",\"padding-left\":\"1.2px\"},on:{\"click\":function($event){$event.preventDefault();_vm.ResetSample($event)}}},[_c('i',{staticClass:\"fa fa-backward\",on:{\"click\":function($event){$event.preventDefault();_vm.ResetSample($event)}}})]):_vm._e()]):_vm._e(),_vm._v(\" \"),_c('td',{attrs:{\"title\":test.analit}},[_c('span',[_vm._v(_vm._s(test.ime))])]),_vm._v(\" \"),(test.rezultat_m.length > 0)?_c('td',[_c('button',{staticClass:\"btn btn-primary btn-micro\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();_vm.OpenMicro($event, test)}}},[_c('span',{staticClass:\"glyphicon glyphicon-search\",attrs:{\"id\":test.labassay_id}}),_vm._v(\"\\n                            \"+_vm._s(\"VIŠE\")+\"\\n                          \")])]):_vm._e(),_vm._v(\" \"),(test.rezultat_m.length < 1)?_c('td',[_c('button',{staticClass:\"btn btn-pale btn-micro\",attrs:{\"id\":test.labassay_id}},[_c('span',{staticClass:\"glyphicon glyphicon-ban-circle\",attrs:{\"id\":test.labassay_id}}),_vm._v(\"\\n                            \"+_vm._s(\"VIŠE\")+\"\\n                          \")])]):_vm._e(),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(test.unit))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(\"/\"))]),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN'\n                          )?_c('td',[_c('i',{staticClass:\"glyphicon glyphicon-stats\",staticStyle:{\"font-size\":\"15px\",\"color\":\"#f7cc36\",\"opacity\":\"0\"},attrs:{\"id\":\"reference\",\"title\":\" \"}})]):_vm._e(),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN' &&\n                            _vm.MicrobiologyScenario != 'MAIBPoR'\n                          )?_c('td',[_c('button',{staticClass:\"btn btn-pale btn-micro\"},[_c('span',{staticClass:\"glyphicon glyphicon-ban-circle\"})])]):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR')?_c('td',[_c('button',{staticClass:\"btn btn-primary btn-micro\",on:{\"click\":function($event){$event.preventDefault();_vm.OpenMicroSelect($event, test)}}},[_c('span',{staticClass:\"fa fa-bug\"})])]):_vm._e(),_vm._v(\" \"),_c('td',[_c('i',{class:{\n                              'fa fa-exclamation-triangle icon-right input-icon error-icon': false,\n                            },on:{\"click\":function($event){$event.preventDefault();_vm.Exclamation(test)}}}),_vm._v(\" \"),_c('i',{class:{\n                              'fa fa-check success-icon icon-right input-icon': false,\n                            }})])])}))])])]):_vm._e(),_vm._v(\" \"),(!uzorak.tip.includes('Mikrobiologija'))?_c('div',{staticClass:\"va-row\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_table),expression:\"show_table\"}],staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN'\n                          )?_c('td'):_vm._e(),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(\"ANALIZA\"))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(\"REZULTAT\"))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(\"JEDINICA\"))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(\"REFERENCE\"))]),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN'\n                          )?_c('td'):_vm._e(),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN' &&\n                            _vm.calculated\n                          )?_c('td',[_vm._v(\"\\n                          \"+_vm._s(\"AKCIJA\")+\"\\n                        \")]):_vm._e(),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN'\n                          )?_c('td',[_vm._v(\"\\n                          \"+_vm._s(\"PONOVI\")+\"\\n                        \")]):_vm._e(),_vm._v(\" \"),_c('td')])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.rezultati),function(test){return _c('tr',{key:test.labassay_id,class:{\n                          'table-danger':\n                            _vm.Interpretacija(\n                              test.analit,\n                              test.rezultat,\n                              test.unit,\n                              test.dRef,\n                              test.gRef,\n                              _vm.$store.state.site,\n                              test.interp,\n                              test.extend,\n                              _vm.spec\n                            )[5] === 'Red' && !test.multidata,\n                          'table-success':\n                            _vm.Interpretacija(\n                              test.analit,\n                              test.rezultat,\n                              test.unit,\n                              test.dRef,\n                              test.gRef,\n                              _vm.$store.state.site,\n                              test.interp,\n                              test.extend,\n                              _vm.spec\n                            )[5] === 'Green' && !test.multidata,\n                          'table-warning':\n                            _vm.Interpretacija(\n                              test.analit,\n                              test.rezultat,\n                              test.unit,\n                              test.dRef,\n                              test.gRef,\n                              _vm.$store.state.site,\n                              test.interp,\n                              test.extend,\n                              _vm.spec\n                            )[5] === 'Yellow' && !test.multidata,\n                        },attrs:{\"align\":\"middle\"}},[(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN'\n                          )?_c('td',[(!test.multidata)?_c('i',{staticClass:\"glyphicon glyphicon-object-align-bottom\",staticStyle:{\"color\":\"#4ae387\"},on:{\"click\":function($event){$event.preventDefault();_vm.SelectAnalyser(test)}}}):_vm._e(),_vm._v(\" \"),(test.multidata)?_c('span',{staticClass:\"glyphicon glyphicon-object-align-bottom\",staticStyle:{\"color\":\"#d9d9d9\"}}):_vm._e()]):_vm._e(),_vm._v(\" \"),_c('td',{attrs:{\"title\":test.analit}},[_c('span',{on:{\"contextmenu\":function($event){_vm.LabAssayEval($event, test)},\"click\":function($event){$event.preventDefault();_vm.Evaluation(test)}}},[_vm._v(_vm._s(test.ime))])]),_vm._v(\" \"),(!test.multidata)?_c('td',[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == false),expression:\"test.edit == false\"}],staticStyle:{\"display\":\"inline\",\"font-size\":\"14px\",\"line-height\":\"4.5px\"}},[_c('label',[_c('strong',[_vm._v(_vm._s(test.rezultat))])])]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"}],staticStyle:{\"display\":\"inline\",\"line-height\":\"5px\"}},[(test.select_options != undefined)?_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],staticStyle:{\"width\":\"110px\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(test, \"rezultat\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((test.select_options),function(option){return _c('option',{key:option},[_vm._v(_vm._s(option))])})):_vm._e()]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"}],staticStyle:{\"display\":\"inline\"}},[(test.select_options === undefined)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],staticStyle:{\"width\":\"110px\",\"font-size\":\"12px\",\"line-height\":\"7px\"},domProps:{\"value\":(test.rezultat)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(test, \"rezultat\", $event.target.value)}}}):_vm._e()]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.vise > 2),expression:\"test.vise > 2\"}],on:{\"click\":function($event){$event.preventDefault();_vm.GetResults(test, uzorak.status)}}},[_c('i',{staticClass:\"fa fa-star\",staticStyle:{\"font-size\":\"5px\",\"color\":\"#e34a4a\"},attrs:{\"id\":\"star\",\"title\":\" \"}})]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.vise < 3),expression:\"test.vise < 3\"}]},[_c('i',{staticClass:\"fa fa-star-o\",staticStyle:{\"font-size\":\"5px\",\"opacity\":\"0\"},attrs:{\"id\":\"star\",\"title\":\" \"}})])]):_vm._e(),_vm._v(\" \"),(test.multidata && test.realizovan)?_c('td',[_c('button',{staticClass:\"btn btn-primary btn-micro\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();\n                              _vm.MultiGet(\n                                $event,\n                                test.ime,\n                                test.analit,\n                                test.rezultat,\n                                test.odobren\n                              )\n                            }}},[_c('span',{staticClass:\"glyphicon glyphicon-search\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();\n                                _vm.MultiGet(\n                                  $event,\n                                  test.ime,\n                                  test.analit,\n                                  test.rezultat,\n                                  test.odobren\n                                )\n                              }}}),_vm._v(\"\\n                            \"+_vm._s(\"VIŠE\")+\"\\n                          \")]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.multi_count > 2),expression:\"test.multi_count > 2\"}],on:{\"click\":function($event){$event.preventDefault();\n                              _vm.GetResultsMulti(test, uzorak.status)\n                            }}},[_c('i',{staticClass:\"fa fa-star\",staticStyle:{\"font-size\":\"5px\",\"color\":\"#e34a4a\"},attrs:{\"id\":\"star\",\"title\":\" \"}})]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.multi_count < 3),expression:\"test.multi_count < 3\"}]},[_c('i',{staticClass:\"fa fa-star-o\",staticStyle:{\"font-size\":\"5px\",\"opacity\":\"0\"},attrs:{\"id\":\"star\",\"title\":\" \"}})])]):_vm._e(),_vm._v(\" \"),(test.multidata && !test.realizovan)?_c('td',[_c('button',{staticClass:\"btn btn-warning btn-micro\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();\n                              _vm.MultiGet(\n                                $event,\n                                test.ime,\n                                test.analit,\n                                test.rezultat,\n                                test.odobren\n                              )\n                            }}},[_c('span',{staticClass:\"glyphicon glyphicon-search\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();\n                                _vm.MultiGet(\n                                  $event,\n                                  test.ime,\n                                  test.analit,\n                                  test.rezultat,\n                                  test.odobren\n                                )\n                              }}}),_vm._v(\"\\n                            \"+_vm._s(\"VIŠE\")+\"\\n                          \")]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.multi_count > 2),expression:\"test.multi_count > 2\"}],on:{\"click\":function($event){$event.preventDefault();\n                              _vm.GetResultsMulti(test, uzorak.status)\n                            }}},[_c('i',{staticClass:\"fa fa-star\",staticStyle:{\"font-size\":\"5px\",\"color\":\"#e34a4a\"},attrs:{\"id\":\"star\",\"title\":\" \"}})]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.multi_count < 3),expression:\"test.multi_count < 3\"}]},[_c('i',{staticClass:\"fa fa-star-o\",staticStyle:{\"font-size\":\"5px\",\"opacity\":\"0\"},attrs:{\"id\":\"star\",\"title\":\" \"}})])]):_vm._e(),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(test.unit))]),_vm._v(\" \"),(!test.multidata)?_c('td',[_vm._v(\"\\n                          \"+_vm._s(_vm.Interpretacija(\n                              test.analit,\n                              test.rezultat,\n                              test.unit,\n                              test.dRef,\n                              test.gRef,\n                              _vm.$store.state.site,\n                              test.interp,\n                              test.extend,\n                              _vm.spec\n                            )[4])+\"\\n                        \")]):_vm._e(),_vm._v(\" \"),(test.multidata)?_c('td',[_vm._v(_vm._s(\"/\"))]):_vm._e(),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN'\n                          )?_c('td',[(!test.multidata)?_c('i',{staticClass:\"glyphicon glyphicon-stats\",staticStyle:{\"font-size\":\"15px\",\"color\":\"#f7cc36\"},attrs:{\"id\":\"reference\",\"title\":\" \"},on:{\"click\":function($event){$event.preventDefault();_vm.Reference($event, test)}}}):_vm._e(),_vm._v(\" \"),(test.multidata)?_c('i',{staticClass:\"glyphicon glyphicon-stats\",staticStyle:{\"font-size\":\"15px\",\"color\":\"#f7cc36\",\"opacity\":\"0\"},attrs:{\"id\":\"reference\",\"title\":\" \"}}):_vm._e()]):_vm._e(),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN' &&\n                            _vm.calculated &&\n                            !test.calculated\n                          )?_c('td',[_c('button',{staticClass:\"btn btn-pale btn-micro\"},[_c('span',{staticClass:\"glyphicon glyphicon-ban-circle\"})])]):_vm._e(),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN' &&\n                            _vm.calculated &&\n                            test.calculated\n                          )?_c('td',[_c('button',{staticClass:\"btn btn-primary btn-micro\",attrs:{\"id\":test.test},on:{\"click\":function($event){$event.preventDefault();\n                              _vm.Calculate(\n                                $event,\n                                test.labassay_id,\n                                test.ime,\n                                test.id\n                              )\n                            }}},[_c('span',{staticClass:\"fa fa-calculator\",attrs:{\"id\":test.test}})])]):_vm._e(),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN' &&\n                            (test.rezultat === '' ||\n                              test.manual ||\n                              test.calculated)\n                          )?_c('td',[_c('button',{staticClass:\"btn btn-pale btn-micro\"},[_c('span',{staticClass:\"glyphicon glyphicon-ban-circle\"})])]):_vm._e(),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN' &&\n                            test.rezultat != '' &&\n                            !test.manual &&\n                            !test.calculated\n                          )?_c('td',[(!test.retest)?_c('button',{staticClass:\"btn btn-primary btn-micro\",attrs:{\"id\":test.test},on:{\"click\":function($event){$event.preventDefault();_vm.RetestEnable($event)}}},[_c('span',{staticClass:\"fa fa-refresh\",attrs:{\"id\":test.test}})]):_vm._e(),_vm._v(\" \"),(test.retest)?_c('button',{staticClass:\"btn btn-info btn-micro\",attrs:{\"id\":test.test},on:{\"click\":function($event){$event.preventDefault();_vm.RetestDisable($event)}}},[_c('span',{staticClass:\"glyphicon glyphicon-duplicate\",attrs:{\"id\":test.test}})]):_vm._e()]):_vm._e(),_vm._v(\" \"),_c('td',[_c('i',{class:{\n                              'fa fa-exclamation-triangle icon-right input-icon error-icon':\n                                _vm.Interpretacija(\n                                  test.analit,\n                                  test.rezultat,\n                                  test.unit,\n                                  test.dRef,\n                                  test.gRef,\n                                  _vm.$store.state.site,\n                                  test.interp,\n                                  test.extend,\n                                  _vm.spec\n                                )[5] === 'Red' && !test.multidata,\n                            },on:{\"click\":function($event){$event.preventDefault();_vm.Exclamation(test)}}}),_vm._v(\" \"),_c('i',{class:{\n                              'fa fa-check success-icon icon-right input-icon':\n                                _vm.Interpretacija(\n                                  test.analit,\n                                  test.rezultat,\n                                  test.unit,\n                                  test.dRef,\n                                  test.gRef,\n                                  _vm.$store.state.site,\n                                  test.interp,\n                                  test.extend,\n                                  _vm.spec\n                                )[5] === 'Green' && !test.multidata,\n                            }})])])}))])])]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticStyle:{\"min-height\":\"10px\"}}),_vm._v(\" \"),(_vm.verificiran)?_c('div',{staticClass:\"va-row\"},[_c('div',{staticClass:\"flex md12\"},[_c('vuestic-collapse-nalaz',{attrs:{\"final\":_vm.verificiran,\"final_pdf\":_vm.final_pdf,\"samples\":_vm.samples,\"pdf\":_vm.link,\"pacijent\":_vm.ime + ' ' + _vm.prezime}},[_c('span',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_vm._v(\"Nalaz\")]),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"body\"},slot:\"body\"},[_c('div',{staticClass:\"va-row\"})])])],1)]):_vm._e(),_vm._v(\" \"),_c('div',[_c('hr')]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-3\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"btn-container\"},[_c('button',{staticClass:\"btn btn-secondary btn-sm wizard-back pull-left\",on:{\"click\":function($event){$event.preventDefault();_vm.Povratak()}}},[_c('span',{staticClass:\"fa fa-backward\"}),_vm._v(\"\\n                \"+_vm._s(\" POVRATAK\")+\"\\n              \")]),_vm._v(\" \"),(_vm.partials_condition && !_vm.verificiran)?_c('button',{staticClass:\"btn btn-secondary-warning btn-sm wizard-back pull-right\",staticStyle:{\"text-transform\":\"none\",\"color\":\"#e34a4a\"},on:{\"click\":function($event){$event.preventDefault();_vm.Partials()}}},[_c('span',{staticClass:\"fa fa-file-pdf-o\",staticStyle:{\"color\":\"#e34a4a\"}}),_vm._v(\"\\n                \"+_vm._s(\" Djelimični nalaz\")+\"\\n              \")]):_vm._e()])])])],1),_vm._v(\" \"),_c('vuestic-modal-multi',{ref:\"largeModalMulti\",attrs:{\"show\":_vm.show,\"sample\":_vm.sample,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(_vm._s(_vm.naslov))]),_vm._v(\" \"),_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"10%\"}}),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"ANALIT\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"30%\"}},[_vm._v(_vm._s(\"REZULTAT\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"10%\"}},[_vm._v(_vm._s(\"JEDINICA\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"REFERENCE\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"10%\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.analiti),function(test){return _c('tr',{key:test.labID,class:{\n                  'table-danger':\n                    _vm.Interpretacija(\n                      test.opis,\n                      test.rezultat,\n                      test.jedinica,\n                      test.refd,\n                      test.refg,\n                      _vm.$store.state.site,\n                      test.interp,\n                      test.extend,\n                      _vm.spec\n                    )[5] === 'Red' && !test.rezultat_multiple.length,\n                  'table-success':\n                    _vm.Interpretacija(\n                      test.opis,\n                      test.rezultat,\n                      test.jedinica,\n                      test.refd,\n                      test.refg,\n                      _vm.$store.state.site,\n                      test.interp,\n                      test.extend,\n                      _vm.spec\n                    )[5] === 'Green' && !test.rezultat_multiple.length,\n                  'table-warning':\n                    _vm.Interpretacija(\n                      test.opis,\n                      test.rezultat,\n                      test.jedinica,\n                      test.refd,\n                      test.refg,\n                      _vm.$store.state.site,\n                      test.interp,\n                      test.extend,\n                      _vm.spec\n                    )[5] === 'Yellow' && !test.rezultat_multiple.length,\n                },attrs:{\"align\":\"middle\"}},[(test.flag != '')?_c('td',[_vm._v(_vm._s(test.flag))]):_vm._e(),_vm._v(\" \"),(test.flag === '')?_c('td',[_vm._v(\" \")]):_vm._e(),_vm._v(\" \"),_c('td',{attrs:{\"title\":test.opis}},[_vm._v(_vm._s(test.naziv))]),_vm._v(\" \"),_c('td',{attrs:{\"id\":test.analit}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == false),expression:\"test.edit == false\"}]},[_c('label',[_c('strong',[_vm._v(_vm._s(test.rezultat))])])]),_vm._v(\" \"),(\n                      test.select_options != undefined &&\n                      (test.kod === 's03' ||\n                        test.kod === 's04' ||\n                        test.kod === 's08' ||\n                        test.kod === 's09')\n                    )?_c('select',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"},{name:\"model\",rawName:\"v-model\",value:(test.rezultat_multiple),expression:\"test.rezultat_multiple\"}],staticStyle:{\"min-width\":\"200px\"},attrs:{\"multiple\":\"\",\"size\":test.select_options.length},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(test, \"rezultat_multiple\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((test.select_options),function(option){return _c('option',{key:option},[_vm._v(_vm._s(option))])})):_vm._e(),_vm._v(\" \"),(test.select_options != undefined && (test.kod != 's03' && test.kod != 's04' && test.kod != 's08' && test.kod != 's09'))?_c('select',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"},{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],staticStyle:{\"width\":\"200px\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(test, \"rezultat\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((test.select_options),function(option){return _c('option',{key:option},[_vm._v(_vm._s(option))])})):_vm._e(),_vm._v(\" \"),(test.select_options === undefined)?_c('input',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"},{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],staticStyle:{\"width\":\"200px\"},domProps:{\"value\":(test.rezultat)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(test, \"rezultat\", $event.target.value)}}}):_vm._e()]),_vm._v(\" \"),_c('td',[_vm._v(\"\\n                  \"+_vm._s(_vm.Interpretacija(\n                      test.opis,\n                      test.rezultat,\n                      test.jedinica,\n                      test.refd,\n                      test.refg,\n                      _vm.$store.state.site,\n                      test.interp,\n                      test.extend,\n                      _vm.spec\n                    )[3])+\"\\n                \")]),_vm._v(\" \"),_c('td',[_vm._v(\"\\n                  \"+_vm._s(_vm.Interpretacija(\n                      test.opis,\n                      test.rezultat,\n                      test.jedinica,\n                      test.refd,\n                      test.refg,\n                      _vm.$store.state.site,\n                      test.interp,\n                      test.extend,\n                      _vm.spec\n                    )[4])+\"\\n                \")]),_vm._v(\" \"),_c('td',[_c('i',{class:{\n                      'fa fa-exclamation-triangle icon-right input-icon error-icon':\n                        _vm.Interpretacija(\n                          test.opis,\n                          test.rezultat,\n                          test.jedinica,\n                          test.refd,\n                          test.refg,\n                          _vm.$store.state.site,\n                          test.interp,\n                          test.extend,\n                          _vm.spec\n                        )[5] === 'Red' && !test.rezultat_multiple.length,\n                    },on:{\"click\":function($event){$event.preventDefault();_vm.ExclamationMulti(test)}}}),_vm._v(\" \"),_c('i',{class:{\n                      'fa fa-check success-icon icon-right input-icon':\n                        _vm.Interpretacija(\n                          test.opis,\n                          test.rezultat,\n                          test.jedinica,\n                          test.refd,\n                          test.refg,\n                          _vm.$store.state.site,\n                          test.interp,\n                          test.extend,\n                          _vm.spec\n                        )[5] === 'Green' && !test.rezultat_multiple.length,\n                    }})])])}))])])]),_vm._v(\" \"),_c('vuestic-modal-micro-reset',{ref:\"staticModalResetSample\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s(\"Brisanje rezultata: \"))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.CurrentTest))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s(\"Jeste li sigurni da želite obrisati rezultat?\"))])])]),_vm._v(\" \"),_c('vuestic-modal-micro-bactery',{ref:\"staticModalMicroBacterySelect\",attrs:{\"show\":_vm.show,\"large\":true,\"sample\":_vm.sample,\"select\":true,\"update\":!_vm.ShowAntibiotics &&\n          !_vm.ShowBacteries &&\n          _vm.MicrobiologyScenario === 'MAIBPoR',\"povratak\":_vm.ShowAntibiotics || _vm.ShowBacteries,\"empty\":_vm.TemporaryAntibiotics.length > 0 || _vm.TemporaryBacteriesAdd.length > 0,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[(!_vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s(\"Rezultat analize: \"))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.CurrentTest))])]):_vm._e(),_vm._v(\" \"),(_vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s(\"Antibiotici | \"))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Izbornik\"))])]):_vm._e(),_vm._v(\" \"),(!_vm.ShowAntibiotics && _vm.ShowBacteries)?_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s(\"Bakterije | \"))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Izbornik\"))])]):_vm._e(),_vm._v(\" \"),_c('div',[(_vm.show_table)?_c('div',{staticClass:\"row\"},[(\n                _vm.MicrobiologyScenario === 'MAIBPoR' &&\n                _vm.ShowBacteries &&\n                !_vm.ShowAntibiotics\n              )?_c('div',{staticClass:\"col-md-1\"}):_vm._e(),_vm._v(\" \"),(\n                _vm.MicrobiologyScenario === 'MAIBPoR' &&\n                _vm.ShowBacteries &&\n                !_vm.ShowAntibiotics\n              )?_c('div',{staticClass:\"col-md-10\"},[(_vm.TemporaryBacteries.length)?_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredBacteries(1, 3)),function(bactery){return _c('div',{key:bactery._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bactery.chosen),expression:\"bactery.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bactery._id,\"type\":\"checkbox\",\"disabled\":bactery.disabled},domProps:{\"checked\":Array.isArray(bactery.chosen)?_vm._i(bactery.chosen,null)>-1:(bactery.chosen)},on:{\"click\":function($event){_vm.AddBacteries(bactery)},\"change\":function($event){var $$a=bactery.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bactery.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bactery.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bactery, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":bactery._id}},[(!bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e(),_vm._v(\" \"),(bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredBacteries(2, 3)),function(bactery){return _c('div',{key:bactery._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bactery.chosen),expression:\"bactery.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bactery._id,\"type\":\"checkbox\",\"disabled\":bactery.disabled},domProps:{\"checked\":Array.isArray(bactery.chosen)?_vm._i(bactery.chosen,null)>-1:(bactery.chosen)},on:{\"click\":function($event){_vm.AddBacteries(bactery)},\"change\":function($event){var $$a=bactery.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bactery.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bactery.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bactery, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":bactery._id}},[(!bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e(),_vm._v(\" \"),(bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredBacteries(3, 3)),function(bactery){return _c('div',{key:bactery._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bactery.chosen),expression:\"bactery.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bactery._id,\"type\":\"checkbox\",\"disabled\":bactery.disabled},domProps:{\"checked\":Array.isArray(bactery.chosen)?_vm._i(bactery.chosen,null)>-1:(bactery.chosen)},on:{\"click\":function($event){_vm.AddBacteries(bactery)},\"change\":function($event){var $$a=bactery.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bactery.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bactery.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bactery, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":bactery._id}},[(!bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e(),_vm._v(\" \"),(bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e()])])}))])]):_vm._e()]):_vm._e(),_vm._v(\" \"),(\n                _vm.MicrobiologyScenario === 'MAIBPoR' &&\n                _vm.ShowAntibiotics &&\n                !_vm.ShowBacteries\n              )?_c('div',{staticClass:\"col-md-1\"}):_vm._e(),_vm._v(\" \"),(\n                _vm.MicrobiologyScenario === 'MAIBPoR' &&\n                _vm.ShowAntibiotics &&\n                !_vm.ShowBacteries\n              )?_c('div',{staticClass:\"col-md-10\"},[(_vm.Antibiotics.length)?_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredAntibiotics(1, 3)),function(antibiotik){return _c('div',{key:antibiotik._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(antibiotik.chosen),expression:\"antibiotik.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":antibiotik._id,\"type\":\"checkbox\",\"disabled\":antibiotik.disabled},domProps:{\"checked\":Array.isArray(antibiotik.chosen)?_vm._i(antibiotik.chosen,null)>-1:(antibiotik.chosen)},on:{\"click\":function($event){_vm.AddAntibiotics(antibiotik)},\"change\":function($event){var $$a=antibiotik.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(antibiotik.chosen=$$a.concat([$$v]))}else{$$i>-1&&(antibiotik.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(antibiotik, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":antibiotik._id}},[(!antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e(),_vm._v(\" \"),(antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredAntibiotics(2, 3)),function(antibiotik){return _c('div',{key:antibiotik._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(antibiotik.chosen),expression:\"antibiotik.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":antibiotik._id,\"type\":\"checkbox\",\"disabled\":antibiotik.disabled},domProps:{\"checked\":Array.isArray(antibiotik.chosen)?_vm._i(antibiotik.chosen,null)>-1:(antibiotik.chosen)},on:{\"click\":function($event){_vm.AddAntibiotics(antibiotik)},\"change\":function($event){var $$a=antibiotik.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(antibiotik.chosen=$$a.concat([$$v]))}else{$$i>-1&&(antibiotik.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(antibiotik, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":antibiotik._id}},[(!antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e(),_vm._v(\" \"),(antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredAntibiotics(3, 3)),function(antibiotik){return _c('div',{key:antibiotik._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(antibiotik.chosen),expression:\"antibiotik.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":antibiotik._id,\"type\":\"checkbox\",\"disabled\":antibiotik.disabled},domProps:{\"checked\":Array.isArray(antibiotik.chosen)?_vm._i(antibiotik.chosen,null)>-1:(antibiotik.chosen)},on:{\"click\":function($event){_vm.AddAntibiotics(antibiotik)},\"change\":function($event){var $$a=antibiotik.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(antibiotik.chosen=$$a.concat([$$v]))}else{$$i>-1&&(antibiotik.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(antibiotik, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":antibiotik._id}},[(!antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e(),_vm._v(\" \"),(antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e()])])}))])]):_vm._e()]):_vm._e(),_vm._v(\" \"),(\n                _vm.MicrobiologyScenario === 'MAIBPoR' &&\n                !_vm.ShowAntibiotics &&\n                !_vm.ShowBacteries\n              )?_c('div',{staticClass:\"col-md-1\"}):_vm._e(),_vm._v(\" \"),(\n                _vm.MicrobiologyScenario === 'MAIBPoR' &&\n                !_vm.ShowAntibiotics &&\n                !_vm.ShowBacteries\n              )?_c('div',{staticClass:\"col-md-10\"},[(_vm.SelectedBacteries.length)?_c('vuestic-tabs-bactery',{ref:\"tabs\",attrs:{\"names\":_vm.BacteryTabs,\"tab\":_vm.CurrentTab,\"id\":_vm.CurrentTab,\"prikazi\":_vm.sample.status != 'VERIFICIRAN' && _vm.sample.status != 'ODOBREN'}},_vm._l((_vm.SelectedBacteries),function(test){return _c('div',{key:test._id,attrs:{\"slot\":_vm.CurrentTab},slot:_vm.CurrentTab},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.opis === _vm.CurrentTab),expression:\"test.opis === CurrentTab\"}],staticClass:\"row\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"left\"}},[_c('td',{staticStyle:{\"text-transform\":\"none\"},attrs:{\"width\":\"30%\"}},[_vm._v(\"\\n                              \"+_vm._s(test.antibiogram.opis)+\"\\n                            \")]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"10%\"}},[_vm._v(_vm._s(\"\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"\"))])])]),_vm._v(\" \"),_c('tbody',_vm._l((test.antibiogram.antibiotici),function(abtk){return _c('tr',{key:abtk._id,class:{\n                              'table-danger': false,\n                              'table-success': false,\n                              'table-warning': false,\n                            },attrs:{\"align\":\"left\"}},[_c('td',{attrs:{\"title\":abtk.opis}},[_vm._v(_vm._s(abtk.opis))]),_vm._v(\" \"),_c('td',[_c('bactery-radio-button',{attrs:{\"disabled\":_vm.sample.status === 'ODOBREN' ||\n                                  _vm.sample.status === 'VERIFICIRAN',\"label\":'',\"value\":'',\"id\":'' + test._id + abtk._id,\"name\":test._id + abtk._id},model:{value:(abtk.rezultat),callback:function ($$v) {_vm.$set(abtk, \"rezultat\", $$v)},expression:\"abtk.rezultat\"}})],1),_vm._v(\" \"),_c('td',[_c('postavke-radio-button',{attrs:{\"disabled\":_vm.sample.status === 'ODOBREN' ||\n                                  _vm.sample.status === 'VERIFICIRAN',\"label\":'Senzitivan',\"value\":'S',\"id\":'S' + test._id + abtk._id,\"name\":test._id + abtk._id},model:{value:(abtk.rezultat),callback:function ($$v) {_vm.$set(abtk, \"rezultat\", $$v)},expression:\"abtk.rezultat\"}})],1),_vm._v(\" \"),_c('td',[_c('postavke-radio-button',{attrs:{\"disabled\":_vm.sample.status === 'ODOBREN' ||\n                                  _vm.sample.status === 'VERIFICIRAN',\"label\":'Intermedijaran',\"value\":'I',\"id\":'I' + test._id + abtk._id,\"name\":test._id + abtk._id},model:{value:(abtk.rezultat),callback:function ($$v) {_vm.$set(abtk, \"rezultat\", $$v)},expression:\"abtk.rezultat\"}})],1),_vm._v(\" \"),_c('td',[_c('postavke-radio-button',{attrs:{\"disabled\":_vm.sample.status === 'ODOBREN' ||\n                                  _vm.sample.status === 'VERIFICIRAN',\"label\":'Rezistentan',\"value\":'R',\"id\":'R' + test._id + abtk._id,\"name\":test._id + abtk._id},model:{value:(abtk.rezultat),callback:function ($$v) {_vm.$set(abtk, \"rezultat\", $$v)},expression:\"abtk.rezultat\"}})],1)])}))])])])])})):_vm._e()],1):_vm._e(),_vm._v(\" \"),(\n                _vm.MicrobiologyScenario === 'MANBNeR' ||\n                _vm.MicrobiologyScenario === 'MANBPoR' ||\n                _vm.MicrobiologyScenario === 'MAIBNeR'\n              )?_c('div',{staticClass:\"col-md-12\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_table),expression:\"show_table\"}],staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"left\"}},[_c('td',[_vm._v(_vm._s(\"REZULTAT\"))])])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.rezultati),function(test,index){return _c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(index < 1),expression:\"index < 1\"}],key:test.labassay_id,class:{\n                        'table-danger':\n                          test.rezultat_m.length &&\n                          test.rezultat_m[0].pozitivan,\n                        'table-success':\n                          test.rezultat_m.length &&\n                          test.rezultat_m[0].negativan,\n                        'table-warning': false,\n                      },attrs:{\"align\":\"left\"}},[(\n                          _vm.sample.status != 'ODOBREN' &&\n                          _vm.sample.status != 'VERIFICIRAN'\n                        )?_c('td',[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],attrs:{\"type\":\"text\",\"id\":\"simple-textarea\",\"required\":\"\"},domProps:{\"value\":(test.rezultat)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(test, \"rezultat\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"simple-textarea\"}},[_vm._v(_vm._s(\"\"))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]):_vm._e(),_vm._v(\" \"),(\n                          _vm.sample.status === 'ODOBREN' ||\n                          _vm.sample.status === 'VERIFICIRAN'\n                        )?_c('td',[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"disabled\":\"\"}}),_vm._v(\" \"),(test.rezultat.length)?_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(test.rezultat))]):_vm._e(),_vm._v(\" \"),(!test.rezultat.length)?_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(\"Nema podataka.\"))]):_vm._e(),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]):_vm._e()])}))])])]):_vm._e()]):_vm._e()])]),_vm._v(\" \"),_c('vuestic-modal-micro-bactery',{ref:\"staticModalMicroBactery\",attrs:{\"show\":_vm.show,\"large\":true,\"sample\":_vm.sample,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s(\"Rezultat analize: \"))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.CurrentTest))])]),_vm._v(\" \"),_c('div',[(_vm.show_table)?_c('div',{staticClass:\"row\"},[(true)?_c('div',{staticClass:\"col-md-12\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_table),expression:\"show_table\"}],staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"left\"}},[_c('td',[_vm._v(_vm._s(\"REZULTAT\"))])])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.rezultati),function(test,index){return _c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(index < 1),expression:\"index < 1\"}],key:test.labassay_id,class:{\n                        'table-danger':\n                          test.rezultat_m.length &&\n                          test.rezultat_m[0].pozitivan,\n                        'table-success':\n                          test.rezultat_m.length &&\n                          test.rezultat_m[0].negativan,\n                        'table-warning': false,\n                      },attrs:{\"align\":\"left\"}},[(\n                          _vm.sample.status != 'ODOBREN' &&\n                          _vm.sample.status != 'VERIFICIRAN'\n                        )?_c('td',[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],attrs:{\"type\":\"text\",\"id\":\"simple-textarea\",\"required\":\"\"},domProps:{\"value\":(test.rezultat)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(test, \"rezultat\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"simple-textarea\"}},[_vm._v(_vm._s(\"\"))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]):_vm._e(),_vm._v(\" \"),(\n                          _vm.sample.status === 'ODOBREN' ||\n                          _vm.sample.status === 'VERIFICIRAN'\n                        )?_c('td',[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"disabled\":\"\"}}),_vm._v(\" \"),(test.rezultat.length)?_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(test.rezultat))]):_vm._e(),_vm._v(\" \"),(!test.rezultat.length)?_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(\"Nema podataka.\"))]):_vm._e(),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]):_vm._e()])}))])])]):_vm._e()]):_vm._e()])]),_vm._v(\" \"),_c('vuestic-modal-micro-result',{ref:\"staticModalSelectResult\",attrs:{\"show\":_vm.show,\"sample\":_vm.sample,\"large\":_vm.ShowAllBacteries,\"neg\":_vm.ModalNegative,\"pos\":_vm.ModalPositive,\"selected\":_vm.ModalPositiveCondition,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s(_vm.MicrobiologyModalHeader)+\" |\")]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Izbornik\"))])]),_vm._v(\" \"),(!_vm.ModalNegative && !_vm.ModalPositive)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-3\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('button',{staticClass:\"btn btn-secondary btn-sm wizard-back pull-left\",staticStyle:{\"text-transform\":\"none\",\"border\":\"0px\"},on:{\"click\":function($event){\n                    _vm.ModalNegative = true;\n                    _vm.ModalPositive = false;\n                  }}},[_vm._v(\"\\n                  \"+_vm._s(\"Negativan\")+\"\\n                \")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-3\"})])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-2\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('button',{staticClass:\"btn btn-secondary-danger btn-sm wizard-next pull-right\",staticStyle:{\"text-transform\":\"none\",\"border\":\"0px\"},on:{\"click\":function($event){\n                    _vm.ModalPositive = true;\n                    _vm.ModalNegative = false;\n                  }}},[_vm._v(\"\\n                  \"+_vm._s(\"Pozitivan\")+\"\\n                \")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"})])])]):_vm._e(),_vm._v(\" \"),(_vm.ModalNegative && !_vm.ModalPositive)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-11\"},_vm._l((_vm.MicrobiologyResult.NegativeDescriptions),function(desc,index){return _c('vuestic-radio-button',{key:index,attrs:{\"label\":_vm.MicrobiologyResult.NegativeDescriptions[index],\"id\":_vm.MicrobiologyResult.NegativeDescriptions[index],\"value\":_vm.MicrobiologyResult.NegativeDescriptions[index],\"name\":_vm.MicrobiologyResult.NegativeDescriptions[index],\"disabled\":false},model:{value:(_vm.NegativeResultSelection),callback:function ($$v) {_vm.NegativeResultSelection=$$v},expression:\"NegativeResultSelection\"}})}))]):_vm._e(),_vm._v(\" \"),(\n            !_vm.ModalNegative &&\n            _vm.ModalPositive &&\n            !_vm.MicrobiologyResult.DefaultBacteries.length\n          )?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-11\"},_vm._l((_vm.MicrobiologyResult.PositiveDescriptions),function(desc,index){return _c('vuestic-radio-button',{key:index,attrs:{\"label\":_vm.MicrobiologyResult.PositiveDescriptions[index],\"id\":_vm.MicrobiologyResult.PositiveDescriptions[index],\"value\":_vm.MicrobiologyResult.PositiveDescriptions[index],\"name\":_vm.MicrobiologyResult.PositiveDescriptions[index],\"disabled\":false},model:{value:(_vm.PositiveResultSelection),callback:function ($$v) {_vm.PositiveResultSelection=$$v},expression:\"PositiveResultSelection\"}})}))]):_vm._e(),_vm._v(\" \"),(\n            !_vm.ModalNegative &&\n            _vm.ModalPositive &&\n            _vm.MicrobiologyResult.DefaultBacteries.length\n          )?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-2\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-10\"},_vm._l((_vm.MicrobiologyResult.DefaultBacteries),function(bakt,index){return _c('div',{key:index,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bakt.chosen),expression:\"bakt.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bakt._id,\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(bakt.chosen)?_vm._i(bakt.chosen,null)>-1:(bakt.chosen)},on:{\"click\":function($event){_vm.SelectBactery(bakt, index)},\"change\":function($event){var $$a=bakt.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bakt.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bakt.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bakt, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":bakt._id}},[_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(\"\\n                      \"+_vm._s(bakt.opis)+\"\\n                    \")])])])}))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[(!_vm.ShowAllBacteries)?_c('a',{staticStyle:{\"font-size\":\"16px\",\"color\":\"#4ae387\"},attrs:{\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();_vm.ShowAllBacteries = true}}},[_vm._v(\"Prikaži više\")]):_vm._e()]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-5\"})]),_vm._v(\" \"),(_vm.ShowAllBacteries)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-10\"},_vm._l((_vm.MicrobiologyResult.RemainingBacteries),function(bakt,index){return _c('div',{key:index,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bakt.chosen),expression:\"bakt.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bakt._id,\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(bakt.chosen)?_vm._i(bakt.chosen,null)>-1:(bakt.chosen)},on:{\"click\":function($event){_vm.SelectBactery(bakt, index)},\"change\":function($event){var $$a=bakt.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bakt.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bakt.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bakt, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":bakt._id}},[_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(\"\\n                      \"+_vm._s(bakt.opis)+\"\\n                    \")])])])}))]):_vm._e()])]):_vm._e()]),_vm._v(\" \"),_c('vuestic-modal-delete',{ref:\"staticModalDeleteSample\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s(\"Brisanje uzorka: \"))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.sid))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s(\"Jeste li sigurni da želite obrisati uzorak?\"))])])]),_vm._v(\" \"),_c('vuestic-modal-comment',{ref:\"staticModalComment\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(_vm._s(\"Unos komentara za uzorak: \" + _vm.sid))]),_vm._v(\" \"),_c('div',[_c('h5')])]),_vm._v(\" \"),_c('vuestic-modal-edit',{ref:\"staticModalEditSample\",attrs:{\"show\":_vm.show,\"sample\":_vm.sid,\"action\":\"Edit\",\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(_vm._s(\"Uređivanje uzorka: \" + _vm.sid))]),_vm._v(\" \"),_c('div',[_c('h5')])]),_vm._v(\" \"),_c('vuestic-modal-mail',{ref:\"staticModalSendMail\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s(\"Slanje nalaza na adresu: \")+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(_vm.email))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s(\"Jeste li sigurni da želite poslati nalaz?\"))])])]),_vm._v(\" \"),_c('vuestic-modal-all-results',{ref:\"staticModalAllResults\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s(\"Izbor rezultata: \")+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.labassay))])]),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',[_c('td',[_vm._v(\"analizator\")]),_vm._v(\" \"),_c('td',[_vm._v(\"vrijeme\")]),_vm._v(\" \"),_c('td',[_vm._v(\"rezultat\")]),_vm._v(\" \"),_c('td',[_vm._v(\"jedinica\")]),_vm._v(\" \"),_c('td',[_vm._v(\"reference\")]),_vm._v(\" \"),(\n                      _vm.sample_status != 'ODOBREN' &&\n                      _vm.sample_status != 'VERIFICIRAN'\n                    )?_c('td',[_vm._v(\"\\n                    izbor\\n                  \")]):_vm._e(),_vm._v(\" \"),_c('td',{attrs:{\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.vise.rezultat),function(test){return _c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.rezultat_f != ''),expression:\"test.rezultat_f != ''\"}],key:test._id,class:{\n                    'table-danger':\n                      _vm.Interpretacija(\n                        _vm.vise.labassay.analit,\n                        test.rezultat_f,\n                        test.jedinice_f,\n                        _vm.vise.refd,\n                        _vm.vise.refg,\n                        _vm.$store.state.site,\n                        _vm.vise.interp,\n                        _vm.vise.extend,\n                        _vm.spec\n                      )[5] === 'Red' && !test.multidata,\n                    'table-success':\n                      _vm.Interpretacija(\n                        _vm.vise.labassay.analit,\n                        test.rezultat_f,\n                        test.jedinice_f,\n                        _vm.vise.refd,\n                        _vm.vise.refg,\n                        _vm.$store.state.site,\n                        _vm.vise.interp,\n                        _vm.vise.extend,\n                        _vm.spec\n                      )[5] === 'Green' && !test.multidata,\n                    'table-warning':\n                      _vm.Interpretacija(\n                        _vm.vise.labassay.analit,\n                        test.rezultat_f,\n                        test.jedinice_f,\n                        _vm.vise.refd,\n                        _vm.vise.refg,\n                        _vm.$store.state.site,\n                        _vm.vise.interp,\n                        _vm.vise.extend,\n                        _vm.spec\n                      )[5] === 'Yellow' && !test.multidata,\n                  }},[_c('td',[_vm._v(_vm._s(test.anaassay.aparat.ime))]),_vm._v(\" \"),_c('td',[_vm._v(\"\\n                    \"+_vm._s(JSON.stringify(test.updated_at).slice(9, 11) +\n                      \".\" +\n                      JSON.stringify(test.updated_at).slice(6, 8) +\n                      \".\" +\n                      JSON.stringify(test.updated_at).slice(1, 5) +\n                      \" | \")+\"\\n                    \"),_c('sub',[_vm._v(_vm._s(JSON.stringify(test.updated_at).slice(12, 20)))])]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(test.rezultat_f))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(test.jedinice_f))]),_vm._v(\" \"),_c('td',[_vm._v(\"\\n                    \"+_vm._s(_vm.Interpretacija(\n                        _vm.vise.labassay.analit,\n                        test.rezultat_f,\n                        test.jedinice_f,\n                        _vm.vise.refd,\n                        _vm.vise.refg,\n                        _vm.$store.state.site,\n                        _vm.vise.interp,\n                        _vm.vise.extend,\n                        _vm.spec\n                      )[4])+\"\\n                  \")]),_vm._v(\" \"),(\n                      _vm.sample_status != 'ODOBREN' &&\n                      _vm.sample_status != 'VERIFICIRAN'\n                    )?_c('td',[(!test.izabran)?_c('i',{staticClass:\"glyphicon glyphicon-unchecked\",staticStyle:{\"font-size\":\"18px\",\"color\":\"#e34a4a\"},on:{\"click\":function($event){$event.preventDefault();_vm.IzborTesta(_vm.vise, test)}}}):_vm._e(),_vm._v(\" \"),(test.izabran)?_c('i',{staticClass:\"glyphicon glyphicon-check\",staticStyle:{\"font-size\":\"18px\",\"color\":\"#4ae387\"}}):_vm._e()]):_vm._e(),_vm._v(\" \"),_c('td',[_c('i',{class:{\n                        'fa fa-exclamation-triangle icon-right input-icon error-icon':\n                          _vm.Interpretacija(\n                            _vm.vise.labassay.analit,\n                            test.rezultat_f,\n                            test.jedinice_f,\n                            _vm.vise.refd,\n                            _vm.vise.refg,\n                            _vm.$store.state.site,\n                            _vm.vise.interp,\n                            _vm.vise.extend,\n                            _vm.spec\n                          )[5] === 'Red',\n                      }}),_vm._v(\" \"),_c('i',{class:{\n                        'fa fa-check success-icon icon-right input-icon':\n                          _vm.Interpretacija(\n                            _vm.vise.labassay.analit,\n                            test.rezultat_f,\n                            test.jedinice_f,\n                            _vm.vise.refd,\n                            _vm.vise.refg,\n                            _vm.$store.state.site,\n                            _vm.vise.interp,\n                            _vm.vise.extend,\n                            _vm.spec\n                          )[5] === 'Green',\n                      }})])])}))])])])]),_vm._v(\" \"),_c('vuestic-modal-error',{ref:\"staticModalError\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s(\"\")+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"404: Not Found\"))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s(\"Greška prilikom čitanja nalaza.\"))])])]),_vm._v(\" \"),_c('vuestic-modal-error',{ref:\"staticModalVerifyPrivilege\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s(\"\")+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"401: Not Authorized\"))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s(\"Nemate odgovarajuće privilegije.\"))])])]),_vm._v(\" \"),_c('vuestic-modal-exclamation',{ref:\"staticModalExclamation\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s(\"\")+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.warning.analiza))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s(_vm.warning.control))]),_vm._v(\" \"),_c('p',[_vm._v(_vm._s(_vm.warning.text))])])]),_vm._v(\" \"),_c('vuestic-modal-reference',{ref:\"staticModalReference\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s(\"Referentne vrijednosti: \")+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.reference.naziv)+\" (\"+_vm._s(_vm.reference.opis)+\")\")])]),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-2\"},[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.dref),expression:\"reference.dref\"}],staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"required\":\"\"},domProps:{\"value\":(_vm.reference.dref)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"dref\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(\"\\n                    \"+_vm._s(\"Donja\")+\"\\n                  \")]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-2\"},[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.gref),expression:\"reference.gref\"}],staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"required\":\"\"},domProps:{\"value\":(_vm.reference.gref)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"gref\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(\"\\n                    \"+_vm._s(\"Gornja\")+\"\\n                  \")]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},[(_vm.$store.state.access.level < 1)?_c('vuestic-simple-select',{staticStyle:{\"font-size\":\"14px\"},attrs:{\"label\":\"Interpretacija\",\"title\":\" \",\"options\":_vm.interpretacije},model:{value:(_vm.reference.interp),callback:function ($$v) {_vm.$set(_vm.reference, \"interp\", $$v)},expression:\"reference.interp\"}}):_vm._e(),_vm._v(\" \"),(_vm.$store.state.access.level > 0)?_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.interp),expression:\"reference.interp\"}],attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"required\":\"\",\"disabled\":true},domProps:{\"value\":(_vm.reference.interp)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"interp\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(\"\\n                    \"+_vm._s(_vm.reference.interp)+\"\\n                  \")]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])]):_vm._e()],1),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"})]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-2\"},[_c('vuestic-simple-select',{staticStyle:{\"font-size\":\"14px\"},attrs:{\"label\":\"Jedinica\",\"title\":\" \",\"options\":_vm.jedinice},model:{value:(_vm.reference.jedinica),callback:function ($$v) {_vm.$set(_vm.reference, \"jedinica\", $$v)},expression:\"reference.jedinica\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-7\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.reference.interp != 'spec'),expression:\"reference.interp != 'spec'\"}],staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.extend),expression:\"reference.extend\"}],staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"required\":\"\"},domProps:{\"value\":(_vm.reference.extend)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"extend\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(\"\\n                    \"+_vm._s(\"Proširena referentna vrijednost\")+\"\\n                  \")]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.reference.interp === 'spec'),expression:\"reference.interp === 'spec'\"}],staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.extend),expression:\"reference.extend\"}],staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"type\":\"text\",\"id\":\"simple-textarea\",\"required\":\"\"},domProps:{\"value\":(_vm.reference.extend)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"extend\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"simple-textarea\"}},[_vm._v(\"\\n                    \"+_vm._s(\"Specifična interpretacija rezultata\")+\"\\n                  \")]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"})])])]),_vm._v(\" \"),_c('vuestic-modal-find',{ref:\"staticModalFind\",attrs:{\"show\":_vm.show,\"data_pid\":Number(_vm.data_pid),\"data_length\":Number(_vm.data_length),\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s(\"\")+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Redni broj pacijenta\"))])]),_vm._v(\" \"),_c('div',[_c('h5')])]),_vm._v(\" \"),_c('vuestic-modal-aparati',{ref:\"staticModalAparati\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s(\"Izbor analizatora: \")+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(\"\\n            \"+_vm._s(this.analiza.ime + \" (\" + this.analiza.analit + \")\")+\"\\n          \")])]),_vm._v(\" \"),_c('div',[_c('vuestic-accordion-obrada',_vm._l((_vm.analysers),function(element){return _c('vuestic-collapse-aparati',{key:element._id,attrs:{\"analyser\":element}},[_c('span',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_vm._v(\"\\n                \"+_vm._s(element.ime + \", \" + element.site.naziv)+\"\\n              \")]),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"body\"},slot:\"body\"},[_c('div',{staticClass:\"va-row\"})])])}))],1)]),_vm._v(\" \"),_c('vuestic-modal-results-multi',{ref:\"staticModalResultsMulti\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s(\"Izbor rezultata: \")+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.multi_test))])]),_vm._v(\" \"),_c('div')]),_vm._v(\" \"),_c('patient-evaluation-single',{ref:\"staticModalEvaluationSingle\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',[_vm._v(_vm._s(_vm.ime + \" \" + _vm.prezime))])]),_vm._v(\" \"),(_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped table-sm color-icon-label-table\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"REZULTAT\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"JEDINICA\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"REFERENCE\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"DATUM\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(\"VRIJEME\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"5%\",\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.Procjena),function(element,index){return _c('tr',{key:index,class:{\n                      'table-danger':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Red',\n                      'table-success':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Green',\n                      'table-warning':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Yellow',\n                    },attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.rezultat))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.jedinica))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(\"\\n                      \"+_vm._s(_vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[4])+\"\\n                    \")]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.datum))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(element.vrijeme))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"9%\",\"align\":\"middle\"}},[_c('i',{class:{\n                          'fa fa-exclamation-triangle icon-right input-icon error-icon':\n                            _vm.Interpretacija(\n                              element.analit,\n                              element.rezultat,\n                              element.jedinica,\n                              element.refd,\n                              element.refg,\n                              _vm.$store.state.site,\n                              element.interp,\n                              element.extend,\n                              _vm.spec\n                            )[5] === 'Red',\n                        }}),_vm._v(\" \"),_c('i',{class:{\n                          'fa fa-check success-icon icon-right input-icon':\n                            _vm.Interpretacija(\n                              element.analit,\n                              element.rezultat,\n                              element.jedinica,\n                              element.refd,\n                              element.refg,\n                              _vm.$store.state.site,\n                              element.interp,\n                              element.extend,\n                              _vm.spec\n                            )[5] === 'Green',\n                        }})])])}))]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('span',{staticClass:\"circle badge-info\"}),_vm._v(\"\\n                \"+_vm._s(_vm.table_header)+\"\\n              \")])])])]):_vm._e(),_vm._v(\" \"),(_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('line-chart',{attrs:{\"options\":_vm.optionsLineChart,\"data\":_vm.dataLineChart,\"type\":\"line\"}})],1)]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])])]):_vm._e()]),_vm._v(\" \"),_c('patient-evaluation-single',{ref:\"staticModalLabAssayEvalSingle\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(\"\\n            \"+_vm._s(_vm.analiza_eval.ime + \" (\" + _vm.analiza_eval.analit + \")\")+\"\\n          \")]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(\" - Rezultati analize u zadnjih 14 dana\"))])]),_vm._v(\" \"),(_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped table-sm color-icon-label-table\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"REZULTAT\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"JEDINICA\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"REFERENCE\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"DATUM\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(\"VRIJEME\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"5%\",\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.Procjena),function(element,index){return _c('tr',{key:index,class:{\n                      'table-danger':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Red',\n                      'table-success':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Green',\n                      'table-warning':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Yellow',\n                    },attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.rezultat))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.jedinica))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(\"\\n                      \"+_vm._s(_vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[4])+\"\\n                    \")]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.datum))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(element.vrijeme))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"9%\",\"align\":\"middle\"}},[_c('i',{class:{\n                          'fa fa-exclamation-triangle icon-right input-icon error-icon':\n                            _vm.Interpretacija(\n                              element.analit,\n                              element.rezultat,\n                              element.jedinica,\n                              element.refd,\n                              element.refg,\n                              _vm.$store.state.site,\n                              element.interp,\n                              element.extend,\n                              _vm.spec\n                            )[5] === 'Red',\n                        }}),_vm._v(\" \"),_c('i',{class:{\n                          'fa fa-check success-icon icon-right input-icon':\n                            _vm.Interpretacija(\n                              element.analit,\n                              element.rezultat,\n                              element.jedinica,\n                              element.refd,\n                              element.refg,\n                              _vm.$store.state.site,\n                              element.interp,\n                              element.extend,\n                              _vm.spec\n                            )[5] === 'Green',\n                        }})])])}))]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('span',{staticClass:\"circle badge-info\"}),_vm._v(\"\\n                \"+_vm._s(_vm.table_header)+\"\\n              \")])])])]):_vm._e(),_vm._v(\" \"),(_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('line-chart',{attrs:{\"options\":_vm.optionsLineChart,\"data\":_vm.dataLineChart,\"type\":\"line\"}})],1)]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])])]):_vm._e()]),_vm._v(\" \"),_c('patient-evaluation-multi',{ref:\"staticModalEvaluationMulti\",attrs:{\"show\":_vm.show,\"multiparam_izbor\":_vm.multiparam_izbor,\"multiparam_izbornik\":_vm.multiparam_izbornik,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',[_vm._v(_vm._s(_vm.ime + \" \" + _vm.prezime))])]),_vm._v(\" \"),(_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped table-sm color-icon-label-table\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"REZULTAT\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"JEDINICA\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"REFERENCE\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"DATUM\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(\"VRIJEME\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"5%\",\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.Procjena),function(element,index){return _c('tr',{key:index,class:{\n                      'table-danger':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Red',\n                      'table-success':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Green',\n                      'table-warning':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Yellow',\n                    },attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.rezultat))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.jedinica))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(\"\\n                      \"+_vm._s(_vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[4])+\"\\n                    \")]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.datum))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(element.vrijeme))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"9%\",\"align\":\"middle\"}},[_c('i',{class:{\n                          'fa fa-exclamation-triangle icon-right input-icon error-icon':\n                            _vm.Interpretacija(\n                              element.analit,\n                              element.rezultat,\n                              element.jedinica,\n                              element.refd,\n                              element.refg,\n                              _vm.$store.state.site,\n                              element.interp,\n                              element.extend,\n                              _vm.spec\n                            )[5] === 'Red',\n                        }}),_vm._v(\" \"),_c('i',{class:{\n                          'fa fa-check success-icon icon-right input-icon':\n                            _vm.Interpretacija(\n                              element.analit,\n                              element.rezultat,\n                              element.jedinica,\n                              element.refd,\n                              element.refg,\n                              _vm.$store.state.site,\n                              element.interp,\n                              element.extend,\n                              _vm.spec\n                            )[5] === 'Green',\n                        }})])])}))]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('span',{staticClass:\"circle badge-info\"}),_vm._v(\"\\n                \"+_vm._s(_vm.table_header)+\"\\n              \")])])])]):_vm._e(),_vm._v(\" \"),(!_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])])]):_vm._e(),_vm._v(\" \"),(_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('line-chart',{attrs:{\"options\":_vm.optionsLineChart,\"data\":_vm.dataLineChart,\"type\":\"line\"}})],1)]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[(!_vm.showLineChart && !_vm.spinner)?_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.spinner)?_c('div',{staticClass:\"col-md-12\",staticStyle:{\"min-height\":\"400px\"}},[_c('div',{staticStyle:{\"display\":\"flex\",\"flex-direction\":\"row\",\"justify-content\":\"center\",\"align-items\":\"center\"}},[_c('div',{staticStyle:{\"float\":\"left\"}}),_vm._v(\" \"),_c('span',{staticStyle:{\"vertical-align\":\"middle\"}},[_c('atom-spinner',{staticStyle:{\"opacity\":\"0.25\"},attrs:{\"animation-duration\":1000,\"size\":300,\"color\":'#4ae387'}})],1)])]):_vm._e()]):_vm._e()]),_vm._v(\" \"),_c('patient-evaluation-multi',{ref:\"staticModalLabAssayEvalMulti\",attrs:{\"show\":_vm.show,\"multiparam_izbor\":_vm.multiparam_izbor,\"multiparam_izbornik\":_vm.multiparam_izbornik,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(\"\\n            \"+_vm._s(_vm.analiza_eval.ime + \" (\" + _vm.analiza_eval.analit + \")\")+\"\\n          \")]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(\" - Rezultati analize u zadnjih 14 dana\"))])]),_vm._v(\" \"),(_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped table-sm color-icon-label-table\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"REZULTAT\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"JEDINICA\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"REFERENCE\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"DATUM\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(\"VRIJEME\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"5%\",\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.Procjena),function(element,index){return _c('tr',{key:index,class:{\n                      'table-danger':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Red',\n                      'table-success':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Green',\n                      'table-warning':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Yellow',\n                    },attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.rezultat))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.jedinica))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(\"\\n                      \"+_vm._s(_vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[4])+\"\\n                    \")]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.datum))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(element.vrijeme))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"9%\",\"align\":\"middle\"}},[_c('i',{class:{\n                          'fa fa-exclamation-triangle icon-right input-icon error-icon':\n                            _vm.Interpretacija(\n                              element.analit,\n                              element.rezultat,\n                              element.jedinica,\n                              element.refd,\n                              element.refg,\n                              _vm.$store.state.site,\n                              element.interp,\n                              element.extend,\n                              _vm.spec\n                            )[5] === 'Red',\n                        }}),_vm._v(\" \"),_c('i',{class:{\n                          'fa fa-check success-icon icon-right input-icon':\n                            _vm.Interpretacija(\n                              element.analit,\n                              element.rezultat,\n                              element.jedinica,\n                              element.refd,\n                              element.refg,\n                              _vm.$store.state.site,\n                              element.interp,\n                              element.extend,\n                              _vm.spec\n                            )[5] === 'Green',\n                        }})])])}))]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('span',{staticClass:\"circle badge-info\"}),_vm._v(\"\\n                \"+_vm._s(_vm.table_header)+\"\\n              \")])])])]):_vm._e(),_vm._v(\" \"),(!_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])])]):_vm._e(),_vm._v(\" \"),(_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('line-chart',{attrs:{\"options\":_vm.optionsLineChart,\"data\":_vm.dataLineChart,\"type\":\"line\"}})],1)]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[(!_vm.showLineChart && !_vm.spinner)?_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.spinner)?_c('div',{staticClass:\"col-md-12\",staticStyle:{\"min-height\":\"400px\"}},[_c('div',{staticStyle:{\"display\":\"flex\",\"flex-direction\":\"row\",\"justify-content\":\"center\",\"align-items\":\"center\"}},[_c('div',{staticStyle:{\"float\":\"left\"}}),_vm._v(\" \"),_c('span',{staticStyle:{\"vertical-align\":\"middle\"}},[_c('atom-spinner',{staticStyle:{\"opacity\":\"0.25\"},attrs:{\"animation-duration\":1000,\"size\":300,\"color\":'#4ae387'}})],1)])]):_vm._e()]):_vm._e()])],1):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"col-md-6\"},[_c('loading',{attrs:{\"active\":_vm.isLoading,\"can-cancel\":false,\"on-cancel\":_vm.onCancel,\"color\":\"#4ae387\",\"is-full-page\":_vm.fullPage},on:{\"update:active\":function($event){_vm.isLoading=$event}}})],1),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[(false)?_c('button',{on:{\"click\":function($event){$event.preventDefault();_vm.Test($event)}}},[_vm._v(_vm._s(\"Loading...\"))]):_vm._e()])])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ \"n0T6\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = __webpack_require__(\"Ibhu\");\nvar hiddenKeys = __webpack_require__(\"xnc9\").concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/18.9f1286dba663d5314e85.js","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-10b2afde\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Obrada.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Obrada.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-10b2afde\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Obrada.vue\"\n/* template functional */\n  var __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-10b2afde\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/obrada/Obrada.vue\n// module id = 0fl9\n// module chunks = 18","module.exports = {\r\n  None: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\")    \r\n    // (Interpretacija: \"none\")\r\n    return [\" \", \"No Class\"];\r\n  },\r\n\r\n  Standard: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"A\", \"ogtt\", \"insul\")\r\n    if (isNaN(rezultat) || rezultat === \"\" || (dref == \"0\" && gref == \"0\")) {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) < Number(Math.abs(dref))) {\r\n      return [\"L\", \"Red\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (Number(rezultat) === Number(Math.abs(dref)) || Number(rezultat) === Number(Math.abs(gref))) {\r\n      return [\" \", \"Yellow\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Less: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"less\")\r\n    if (rezultat.includes(\"pozitivan\") || rezultat.includes(\"pos\")) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) >= Number(Math.abs(gref))) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (rezultat.includes(\"pozitivan\") || rezultat.includes(\"pos\")) {\r\n      return [\"H\", \"Red\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  LessEqual: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\")   \r\n    // (Interpretacija: \"grte\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"L\", \"Red\"];\r\n    } else if (Number(rezultat) == Number(Math.abs(gref))) {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  LessPlus: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"less\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (isNaN(rezultat)){\r\n      return [\"H\", \"Red\"];\r\n    }else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\r\n      return [\" \", \"Yellow\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Greater: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\")   \r\n    // (Interpretacija: \"grt\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) < Number(Math.abs(gref))) {\r\n      return [\"L\", \"Red\"];\r\n    } else if (Number(rezultat) == Number(Math.abs(gref))) {\r\n      return [\" \", \"Yellow\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  GreaterNoInterp: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\")   \r\n    // (Interpretacija: \"grt\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) < Number(Math.abs(gref))) {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) == Number(Math.abs(gref))) {\r\n      return [\" \", \"No Class\"];\r\n    } else {\r\n      return [\" \", \"No Class\"];\r\n    }\r\n  },\r\n\r\n  GreaterEqual: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\")   \r\n    // (Interpretacija: \"grte\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) < Number(Math.abs(gref))) {\r\n      return [\"L\", \"Red\"];\r\n    } else if (Number(rezultat) == Number(Math.abs(gref))) {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Negativan: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"neg\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat.includes(\"pozitivan\") || rezultat.includes(\"pos\")) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (rezultat.includes(\"negativan\") || rezultat.includes(\"neg\")) {\r\n      return [\" \", \"Green\"];\r\n    } else if (rezultat.includes(\"graničan\")) {\r\n      return [\" \", \"Yellow\"];\r\n    } else {\r\n      return [\" \", \"Red\"];\r\n    }\r\n  },\r\n\r\n  Trag: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"neg\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat.includes(\"pozitivan\") || rezultat.includes(\"pos\")) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (rezultat.includes(\"negativan\") || rezultat.includes(\"neg\") || rezultat.includes(\"trag\")) {\r\n      return [\" \", \"Green\"];\r\n    } else if (rezultat.includes(\"graničan\")) {\r\n      return [\" \", \"Yellow\"];\r\n    } else {\r\n      return [\" \", \"Red\"];\r\n    }\r\n  },\r\n\r\n  Reaktivan: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"reakt\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat.includes(\"reaktivan\")) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (rezultat.includes(\"negativan\")) {\r\n      return [\" \", \"Green\"];\r\n    } else if (rezultat.includes(\"graničan\")) {\r\n      return [\" \", \"Yellow\"];\r\n    } else {\r\n      return [\" \", \"No Class\"];\r\n    }\r\n  },\r\n\r\n  Normalan: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"norm\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat.toLowerCase().includes(\"norm\") && !rezultat.toLowerCase().includes(\"nije\")) {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  Uredan: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"ured\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat.toLowerCase().includes(\"ured\") && !rezultat.toLowerCase().includes(\"nije\")) {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  Plus: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"ured\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat.trim() === \"+++\" || rezultat.trim() === \"+ + +\") {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n  \r\n\r\n\r\n  //\r\n\r\n\r\n\r\n  SpermKolicina: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"da\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat.trim() === \"da\" || rezultat.trim() === \"Da\") {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  SpermIzgled: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"norm\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat.toLowerCase() === \"uredan\" || rezultat.toLowerCase() === \"uredno\") {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  SpermBoja: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"norm\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat.toLowerCase() === \"sivo bijela\") {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  SpermLikvefakcija: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"norm\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat.toLowerCase() === \"uredna\") {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  SpermAglutinacija: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"norm\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat.toLowerCase() === \"nije prisutna\") {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n  \r\n\r\n\r\n  //\r\n\r\n\r\n\r\n  Infekcija: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"infekc\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"pasivna infekcija\", \"Green\"]; // pasivna infekcija\r\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\r\n      return [\"siva zona\", \"Yellow\"]; // siva zona\r\n    } else {\r\n      return [\"svježa infekcija\", \"Red\"]; // svježa infekcija\r\n    }\r\n  },\r\n\r\n  TSH: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"tsh\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"hipotireoza\", \"Red\"];\r\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\r\n      return [\"eutireoza\", \"Green\"];\r\n    } else {\r\n      return [\"hipertireoza\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  TRG: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"trg\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"visoko\", \"Red\"]; // visoko\r\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\r\n      return [\"granično\", \"Yellow\"]; // granično\r\n    } else {\r\n      return [\"idealno\", \"Green\"]; // idealno\r\n    }\r\n  },\r\n\r\n  HOL: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"hol\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"visoko\", \"Red\"]; // visoko\r\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\r\n      return [\"granično\", \"Yellow\"]; // granično\r\n    } else {\r\n      return [\"idealno\", \"Green\"]; // idealno\r\n    }\r\n  },\r\n\r\n  HDL: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"hdl\")    \r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"nema rizika\", \"Green\"]; // nema rizika\r\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\r\n      return [\"rizik\", \"Yellow\"]; // rizik\r\n    } else {\r\n      return [\"visok rizik\", \"Red\"]; // visok rizik\r\n    }\r\n  },\r\n\r\n  LDL: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"ldl\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"visok rizik\", \"Red\"]; // visok rizik\r\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\r\n      return [\"granično\", \"Yellow\"]; // granično\r\n    } else {\r\n      return [\"optimalno\", \"Green\"]; // optimalno\r\n    }\r\n  },\r\n\r\n  fPSA: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\")  \r\n    // (Interpretacija: \"fpsa\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"benigni proces\", \"Green\"]; // benigni proces\r\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\r\n      return [\"siva zona\", \"Yellow\"]; // siva zona\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  Sedimentacija: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"sediment\")\r\n    if (rezultat.includes(\"/\")) {\r\n      var rez1 = rezultat.split(\"/\")[0].trim();\r\n      var rez2 = rezultat.split(\"/\")[1].trim();\r\n    }else{\r\n      var rez1 = rezultat.trim();\r\n      var rez2 = rezultat.trim();\r\n    }\r\n\r\n    if (isNaN(rez1) || rez1 === \"\" || isNaN(rez2) || rez2 === \"\" ) {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rez1) > Number(Math.abs(gref))) { // } else if (Number(rez1) > Number(Math.abs(gref)) || Number(rez2) > Number(Math.abs(gref))) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (Number(rez1) === Number(Math.abs(gref))) { // } else if (Number(rez1) === Number(Math.abs(gref)) || Number(rez2) === Number(Math.abs(gref))) {\r\n      return [\" \", \"Yellow\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Bistar: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"bistar\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat === \"bistar\") {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  Boja: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"boja\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat === \"svjetlo žut\" || rezultat === \"žut\") {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  BojaSpermiogram: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"boja\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat === \"blijedo žut\") {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  Nesto: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"nesto\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat.includes(\"masa\") || rezultat.includes(\"dosta\") || rezultat.includes(\"malo\")) {\r\n      return [\"H\", \"Red\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Exists: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"exists\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else {      \r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  Prisutno: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"prisutno\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(gref)) {\r\n      return [\"H\", \"Red\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Gljivice: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"gljivice\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(gref)) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (isNaN(rezultat)) {\r\n      return [\"H\", \"Red\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  LeuEr: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"leuer\")\r\n    if (rezultat.toUpperCase().includes(\"DOSTA\")) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(gref)) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (Number(rezultat) === Number(gref)) {\r\n      return [\" \", \"Yellow\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Nema: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"exists\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else {      \r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  Blasti: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // DKS: Blasti (Interpretacija: \"blst\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) < Number(Math.abs(dref))) {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (Number(rezultat) === Number(Math.abs(dref)) || Number(rezultat) === Number(Math.abs(gref))) {\r\n      return [\" \", \"No Class\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Morf: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // Spermiogram: Uredne morfološke forme (Interpretacija: \"morf\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) === Number(Math.abs(dref)) || Number(rezultat) === Number(Math.abs(gref))) {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  LeuErc: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // Sediment: Leukociti, Eritrociti (Interpretacija: \"leu\")\r\n    if (rezultat.includes(\"-\")) {\r\n      var rez = rezultat.split(\"-\")[1].trim();      \r\n    }else{\r\n      var rez = rezultat.trim();      \r\n    }\r\n    \r\n    if (rez === \"\") {     \r\n      return [\" \", \"No Class\"];\r\n    } else if (isNaN(rez)) {      \r\n      return [\"H\", \"Red\"];\r\n    } else if (Number(rez) > Number(gref)) {      \r\n      return [\"H\", \"Red\"];\r\n    } else if (Number(rez) === Number(gref)) {      \r\n      return [\" \", \"Yellow\"];\r\n    } else {      \r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Titar: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"titar\")\r\n    if (rezultat.includes(\":\")) {\r\n      var rez1 = rezultat.split(\":\")[0].trim();\r\n      var rez2 = rezultat.split(\":\")[1].trim();\r\n    }else{\r\n      var rez1 = rezultat.trim();\r\n      var rez2 = \"\";\r\n    }\r\n\r\n    if (isNaN(rez1) || rez1 === \"\" || rez1 != \"1\" || isNaN(rez2) || rez2 === \"\" ) {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rez2) > Number(Math.abs(gref))) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (Number(rez2) === Number(Math.abs(gref))) {\r\n      return [\" \", \"Yellow\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Specific: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"spec\")\r\n    return [\" \", \"No Class\"];\r\n  },\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/obrada/functions/interpretacija.js","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-0a28fd12\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./BadgeColumn.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"7a538c38\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/vue-style-loader!./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-0a28fd12\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/sass-loader/lib/loader.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/obrada/BadgeColumn.vue\n// module id = 6LuA\n// module chunks = 18 25 43 55","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-10b2afde\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Obrada.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"f13fe6f6\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/vue-style-loader!./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-10b2afde\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/sass-loader/lib/loader.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/obrada/Obrada.vue\n// module id = 83zh\n// module chunks = 18","let data = {\r\n  test: [\"\", \"test\"]\r\n};\r\n\r\nlet rez = {\r\n  neg: [\"\", \"negativan\", \"graničan\", \"pozitivan\"],\r\n  reakt: [\"\", \"negativan\", \"graničan\", \"reaktivan\"]\r\n};\r\n\r\nexport default {\r\n  data,\r\n  rez\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/obrada/data-izbornik/izbornik.js","// 19.1.2.7 Object.getOwnPropertyNames(O)\nrequire('./_object-sap')('getOwnPropertyNames', function () {\n  return require('./_object-gopn-ext').f;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.object.get-own-property-names.js\n// module id = G5/o\n// module chunks = 18","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"circle\",class:_vm.classObject})}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-0a28fd12\",\"hasScoped\":true,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/obrada/BadgeColumn.vue\n// module id = GXRP\n// module chunks = 18 25 43 55","<template>\r\n  <div class=\"collapse-page\">\r\n    <div v-if=\"show\" class=\"flex md12\">\r\n      <!-- Prikaz nalaza -->\r\n\r\n      <div v-show=\"!main && pdf\">\r\n        <div class=\"btn-container\">\r\n          <button\r\n            v-show=\"verificiran\"\r\n            class=\"btn btn-secondary btn-sm\"\r\n            @click.prevent=\"Nazad()\"\r\n          >\r\n            <span class=\"fa fa-step-backward\"></span>\r\n            {{ \" NAZAD\" }}\r\n          </button>\r\n          <button\r\n            v-show=\"!verificiran\"\r\n            class=\"btn btn-secondary-danger btn-sm\"\r\n            @click.prevent=\"Nazad()\"\r\n          >\r\n            <span class=\"fa fa-step-backward\"></span>\r\n            {{ \" NAZAD\" }}\r\n          </button>\r\n          <button\r\n            v-show=\"email_button && verificiran\"\r\n            class=\"btn btn-secondary btn-sm pull-right\"\r\n            :disabled=\"!Email(email)\"\r\n            @click.prevent=\"MailDialog()\"\r\n          >\r\n            <span class=\"glyphicon glyphicon-send\"></span>\r\n            {{ \" Pošalji\" }}\r\n          </button>\r\n          <div\r\n            v-show=\"email_button && verificiran\"\r\n            class=\"form-group with-icon-left pull-right\"\r\n          >\r\n            <div class=\"input-group\">\r\n              <input\r\n                size=\"40\"\r\n                id=\"input-icon-left\"\r\n                name=\"input-icon-left\"\r\n                v-model=\"email\"\r\n                title=\" \"\r\n                required\r\n              />\r\n              <i class=\"fa fa-envelope-o icon-left input-icon\"></i>\r\n              <label class=\"control-label\" for=\"input-icon-left\">\r\n                {{ \"Email adresa\" }}\r\n              </label>\r\n              <i class=\"bar\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n\r\n        <!-- PDFObject -->\r\n\r\n        <div id=\"pdf-container\"></div>\r\n      </div>\r\n\r\n      <!-- Prikaz rezultata (Main screen) -->\r\n\r\n      <vuestic-widget\r\n        v-show=\"main\"\r\n        :headerText=\"header\"\r\n        :pagination=\"pagination\"\r\n        :main=\"main\"\r\n        :data_pid=\"Number(data_pid)\"\r\n        :data_length=\"Number(data_length)\"\r\n        :rezultati_length=\"Results.length\"\r\n        :spol=\"data_spol\"\r\n        :data_min=\"Number(data_min)\"\r\n        :datum=\"query_date\"\r\n        :today=\"today_date\"\r\n        :forward_disabled=\"forward_disabled\"\r\n        :backward_disabled=\"backward_disabled\"\r\n      >\r\n\r\n\r\n      <div class=\"ui-grid row\">\r\n          <div class=\"col-md-12\">\r\n            <vuestic-widget\r\n              style=\"color: #e34a4a\"\r\n              headerText=\"Informacije o pacijentu\"\r\n            >\r\n              <div class=\"row\">\r\n                <div class=\"col\">\r\n                  <div>\r\n                    &nbsp;\r\n                    <span style=\"color: #000000\"\r\n                      >{{ \"Datum rođenja: \" }}\r\n                      <strong style=\"color: #e34a4a\">\r\n                        {{ datumRodjenja }}</strong\r\n                      ></span\r\n                    >\r\n                    <br />\r\n                    <span style=\"color: #000000\"\r\n                      >&nbsp;&nbsp;{{ \"Ime jednog roditelja: \" }}\r\n                      <strong style=\"color: #e34a4a\">\r\n                        {{ imeRoditelja }}</strong\r\n                      ></span\r\n                    >\r\n                    <br />\r\n                    <span style=\"color: #000000\"\r\n                      >&nbsp;&nbsp;{{ \"Adresa stanovanja: \" }}\r\n                      <strong style=\"color: #e34a4a\">\r\n                        {{ adresaStanovanja }}</strong\r\n                      ></span\r\n                    >\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </vuestic-widget>\r\n          </div>\r\n          <div style=\"min-height: 10px\"></div>\r\n        </div>\r\n\r\n        <vuestic-accordion-obrada>\r\n          <vuestic-collapse-obrada\r\n            v-for=\"uzorak in uzorci\"\r\n            v-show=\"!uzorak.removed\"\r\n            :id=\"uzorak.sid\"\r\n            :key=\"uzorak.sid\"\r\n            :sample=\"uzorak\"\r\n            :retest=\"save_retest\"\r\n          >\r\n            <span :id=\"uzorak.sid\" slot=\"header\">{{ uzorak.sid }}</span>\r\n            <div slot=\"body\">\r\n              <div style=\"line-height: 10px;\">&nbsp;</div>\r\n\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!-- \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Table\r\n\r\n\r\n\r\n\r\n\r\n              -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n\r\n              <div v-if=\"uzorak.tip.includes('Mikrobiologija')\" class=\"va-row\">\r\n                <div v-show=\"show_table\" class=\"table-responsive\">\r\n                  <table class=\"table table-striped first-td-padding\">\r\n                    <thead>\r\n                      <tr align=\"middle\">\r\n                        <td\r\n                          v-if=\"\r\n                            uzorak.status != 'ODOBREN' &&\r\n                            uzorak.status != 'VERIFICIRAN'\r\n                          \"\r\n                        ></td>\r\n                        <td>{{ \"ANALIZA\" }}</td>\r\n                        <td>{{ \"REZULTAT\" }}</td>\r\n                        <td>{{ \"JEDINICA\" }}</td>\r\n                        <td>{{ \"REFERENCE\" }}</td>\r\n                        <td\r\n                          v-if=\"\r\n                            uzorak.status != 'ODOBREN' &&\r\n                            uzorak.status != 'VERIFICIRAN'\r\n                          \"\r\n                        ></td>\r\n                        <td\r\n                          v-if=\"\r\n                            uzorak.status != 'ODOBREN' &&\r\n                            uzorak.status != 'VERIFICIRAN' &&\r\n                            MicrobiologyScenario != 'MAIBPoR'\r\n                          \"\r\n                        >\r\n                          {{ \"PONOVI\" }}\r\n                        </td>\r\n                        <td\r\n                          v-if=\"MicrobiologyScenario === 'MAIBPoR'\"\r\n                          style=\"text-transform: none;\"\r\n                        >\r\n                          {{ \"Bakterije\" }}\r\n                        </td>\r\n                        <td></td>\r\n                      </tr>\r\n                    </thead>\r\n\r\n                    <!-- Table Body -->\r\n\r\n                    <tbody>\r\n                      <tr\r\n                        align=\"middle\"\r\n                        v-for=\"(test, index) in rezultati\"\r\n                        v-show=\"index < 1\"\r\n                        :key=\"test.labassay_id\"\r\n                        v-bind:class=\"{\r\n                          'table-danger':\r\n                            test.rezultat_m.length &&\r\n                            test.rezultat_m[0].pozitivan,\r\n                          'table-success':\r\n                            test.rezultat_m.length &&\r\n                            test.rezultat_m[0].negativan,\r\n                          'table-warning': false,\r\n                        }\"\r\n                      >\r\n                        <td\r\n                          v-if=\"\r\n                            uzorak.status != 'ODOBREN' &&\r\n                            uzorak.status != 'VERIFICIRAN'\r\n                          \"\r\n                        >\r\n                          <button\r\n                            style=\"padding: 0.4px; padding-left: 2px;\"\r\n                            v-if=\"uzorak.status === 'ZAPRIMLJEN'\"\r\n                            @click.prevent=\"MicroResultSelect($event)\"\r\n                            class=\"btn btn-secondary-danger btn-micro\"\r\n                          >\r\n                            <i\r\n                              class=\"fa fa-bug\"\r\n                              @click.prevent=\"MicroResultSelect($event)\"\r\n                            ></i>\r\n                          </button>\r\n                          <button\r\n                            style=\"\r\n                              padding: 0.6px;\r\n                              padding-right: 1px;\r\n                              padding-left: 1.2px;\r\n                            \"\r\n                            v-if=\"uzorak.status != 'ZAPRIMLJEN'\"\r\n                            @click.prevent=\"ResetSample($event)\"\r\n                            class=\"btn btn-secondary-danger btn-micro\"\r\n                          >\r\n                            <i\r\n                              class=\"fa fa-backward\"\r\n                              @click.prevent=\"ResetSample($event)\"\r\n                            ></i>\r\n                          </button>\r\n                        </td>\r\n\r\n                        <!-- ANALIZA -->\r\n\r\n                        <td :title=\"test.analit\">\r\n                          <span>{{ test.ime }}</span>\r\n                        </td>\r\n\r\n                        <!-- REZULTAT -->\r\n\r\n                        <td v-if=\"test.rezultat_m.length > 0\">\r\n                          <button\r\n                            :id=\"test.labassay_id\"\r\n                            class=\"btn btn-primary btn-micro\"\r\n                            @click.prevent=\"OpenMicro($event, test)\"\r\n                          >\r\n                            <span\r\n                              :id=\"test.labassay_id\"\r\n                              class=\"glyphicon glyphicon-search\"\r\n                            ></span>\r\n                            {{ \"VIŠE\" }}\r\n                          </button>\r\n                        </td>\r\n                        <td v-if=\"test.rezultat_m.length < 1\">\r\n                          <button\r\n                            :id=\"test.labassay_id\"\r\n                            class=\"btn btn-pale btn-micro\"\r\n                          >\r\n                            <span\r\n                              :id=\"test.labassay_id\"\r\n                              class=\"glyphicon glyphicon-ban-circle\"\r\n                            ></span>\r\n                            {{ \"VIŠE\" }}\r\n                          </button>\r\n                        </td>\r\n\r\n                        <!-- JEDINICA -->\r\n\r\n                        <td>{{ test.unit }}</td>\r\n\r\n                        <!-- REFERENCE -->\r\n\r\n                        <td>{{ \"/\" }}</td>\r\n                        <td\r\n                          v-if=\"\r\n                            uzorak.status != 'ODOBREN' &&\r\n                            uzorak.status != 'VERIFICIRAN'\r\n                          \"\r\n                        >\r\n                          <i\r\n                            style=\"font-size: 15px; color: #f7cc36; opacity: 0;\"\r\n                            class=\"glyphicon glyphicon-stats\"\r\n                            id=\"reference\"\r\n                            title=\" \"\r\n                          ></i>\r\n                        </td>\r\n\r\n                        <!-- PONOVI -->\r\n\r\n                        <td\r\n                          v-if=\"\r\n                            uzorak.status != 'ODOBREN' &&\r\n                            uzorak.status != 'VERIFICIRAN' &&\r\n                            MicrobiologyScenario != 'MAIBPoR'\r\n                          \"\r\n                        >\r\n                          <button class=\"btn btn-pale btn-micro\">\r\n                            <span class=\"glyphicon glyphicon-ban-circle\"></span>\r\n                          </button>\r\n                        </td>\r\n\r\n                        <td v-if=\"MicrobiologyScenario === 'MAIBPoR'\">\r\n                          <button\r\n                            @click.prevent=\"OpenMicroSelect($event, test)\"\r\n                            class=\"btn btn-primary btn-micro\"\r\n                          >\r\n                            <span class=\"fa fa-bug\"></span>\r\n                          </button>\r\n                        </td>\r\n\r\n                        <!--  -->\r\n\r\n                        <td>\r\n                          <i\r\n                            @click.prevent=\"Exclamation(test)\"\r\n                            v-bind:class=\"{\r\n                              'fa fa-exclamation-triangle icon-right input-icon error-icon': false,\r\n                            }\"\r\n                          ></i>\r\n                          <i\r\n                            v-bind:class=\"{\r\n                              'fa fa-check success-icon icon-right input-icon': false,\r\n                            }\"\r\n                          ></i>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!-- \r\n\r\n\r\n\r\n\r\n\r\nEND of Microbiology Table |\r\n\r\n\r\n\r\n\r\n\r\n              -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n\r\n              <!-- Uzorci | Default Table -->\r\n\r\n              <div v-if=\"!uzorak.tip.includes('Mikrobiologija')\" class=\"va-row\">\r\n                <div v-show=\"show_table\" class=\"table-responsive\">\r\n                  <table class=\"table table-striped first-td-padding\">\r\n                    <thead>\r\n                      <tr align=\"middle\">\r\n                        <td\r\n                          v-if=\"\r\n                            uzorak.status != 'ODOBREN' &&\r\n                            uzorak.status != 'VERIFICIRAN'\r\n                          \"\r\n                        ></td>\r\n                        <td>{{ \"ANALIZA\" }}</td>\r\n                        <td>{{ \"REZULTAT\" }}</td>\r\n                        <td>{{ \"JEDINICA\" }}</td>\r\n                        <td>{{ \"REFERENCE\" }}</td>\r\n                        <td\r\n                          v-if=\"\r\n                            uzorak.status != 'ODOBREN' &&\r\n                            uzorak.status != 'VERIFICIRAN'\r\n                          \"\r\n                        ></td>\r\n                        <td\r\n                          v-if=\"\r\n                            uzorak.status != 'ODOBREN' &&\r\n                            uzorak.status != 'VERIFICIRAN' &&\r\n                            calculated\r\n                          \"\r\n                        >\r\n                          {{ \"AKCIJA\" }}\r\n                        </td>\r\n                        <td\r\n                          v-if=\"\r\n                            uzorak.status != 'ODOBREN' &&\r\n                            uzorak.status != 'VERIFICIRAN'\r\n                          \"\r\n                        >\r\n                          {{ \"PONOVI\" }}\r\n                        </td>\r\n                        <td></td>\r\n                      </tr>\r\n                    </thead>\r\n\r\n                    <!-- Table Body -->\r\n\r\n                    <tbody>\r\n                      <tr\r\n                        align=\"middle\"\r\n                        v-for=\"test in rezultati\"\r\n                        :key=\"test.labassay_id\"\r\n                        v-bind:class=\"{\r\n                          'table-danger':\r\n                            Interpretacija(\r\n                              test.analit,\r\n                              test.rezultat,\r\n                              test.unit,\r\n                              test.dRef,\r\n                              test.gRef,\r\n                              $store.state.site,\r\n                              test.interp,\r\n                              test.extend,\r\n                              spec\r\n                            )[5] === 'Red' && !test.multidata,\r\n                          'table-success':\r\n                            Interpretacija(\r\n                              test.analit,\r\n                              test.rezultat,\r\n                              test.unit,\r\n                              test.dRef,\r\n                              test.gRef,\r\n                              $store.state.site,\r\n                              test.interp,\r\n                              test.extend,\r\n                              spec\r\n                            )[5] === 'Green' && !test.multidata,\r\n                          'table-warning':\r\n                            Interpretacija(\r\n                              test.analit,\r\n                              test.rezultat,\r\n                              test.unit,\r\n                              test.dRef,\r\n                              test.gRef,\r\n                              $store.state.site,\r\n                              test.interp,\r\n                              test.extend,\r\n                              spec\r\n                            )[5] === 'Yellow' && !test.multidata,\r\n                        }\"\r\n                      >\r\n                        <td\r\n                          v-if=\"\r\n                            uzorak.status != 'ODOBREN' &&\r\n                            uzorak.status != 'VERIFICIRAN'\r\n                          \"\r\n                        >\r\n                          <i\r\n                            v-if=\"!test.multidata\"\r\n                            @click.prevent=\"SelectAnalyser(test)\"\r\n                            style=\"color: #4ae387;\"\r\n                            class=\"glyphicon glyphicon-object-align-bottom\"\r\n                          ></i>\r\n\r\n                          <span\r\n                            v-if=\"test.multidata\"\r\n                            style=\"color: #d9d9d9;\"\r\n                            class=\"glyphicon glyphicon-object-align-bottom\"\r\n                          ></span>\r\n                        </td>\r\n\r\n                        <!-- ANALIZA -->\r\n\r\n                        <td :title=\"test.analit\">\r\n                          <span\r\n                            @contextmenu=\"LabAssayEval($event, test)\"\r\n                            @click.prevent=\"Evaluation(test)\"\r\n                            >{{ test.ime }}</span\r\n                          >\r\n                        </td>\r\n\r\n                        <!-- REZULTAT -->\r\n\r\n                        <td v-if=\"!test.multidata\">\r\n                          <div\r\n                            v-show=\"test.edit == false\"\r\n                            style=\"\r\n                              display: inline;\r\n                              font-size: 14px;\r\n                              line-height: 4.5px;\r\n                            \"\r\n                          >\r\n                            <label>\r\n                              <strong>{{ test.rezultat }}</strong>\r\n                            </label>\r\n                          </div>\r\n                          <div\r\n                            v-show=\"test.edit == true\"\r\n                            style=\"display: inline; line-height: 5px;\"\r\n                          >\r\n                            <select\r\n                              v-if=\"test.select_options != undefined\"\r\n                              style=\"width: 110px;\"\r\n                              v-model=\"test.rezultat\"\r\n                            >\r\n                              <option\r\n                                v-for=\"option in test.select_options\"\r\n                                :key=\"option\"\r\n                                >{{ option }}</option\r\n                              >\r\n                            </select>\r\n                          </div>\r\n                          <div\r\n                            v-show=\"test.edit == true\"\r\n                            style=\"display: inline;\"\r\n                          >\r\n                            <input\r\n                              v-if=\"test.select_options === undefined\"\r\n                              v-model=\"test.rezultat\"\r\n                              style=\"\r\n                                width: 110px;\r\n                                font-size: 12px;\r\n                                line-height: 7px;\r\n                              \"\r\n                            />\r\n                          </div>\r\n                          <sup\r\n                            v-show=\"test.vise > 2\"\r\n                            @click.prevent=\"GetResults(test, uzorak.status)\"\r\n                          >\r\n                            <i\r\n                              style=\"font-size: 5px; color: #e34a4a;\"\r\n                              class=\"fa fa-star\"\r\n                              id=\"star\"\r\n                              title=\" \"\r\n                            ></i>\r\n                          </sup>\r\n                          <sup v-show=\"test.vise < 3\">\r\n                            <i\r\n                              style=\"font-size: 5px; opacity: 0;\"\r\n                              class=\"fa fa-star-o\"\r\n                              id=\"star\"\r\n                              title=\" \"\r\n                            ></i>\r\n                          </sup>\r\n                        </td>\r\n                        <td v-if=\"test.multidata && test.realizovan\">\r\n                          <button\r\n                            :id=\"test.labassay_id\"\r\n                            class=\"btn btn-primary btn-micro\"\r\n                            @click.prevent=\"\r\n                              MultiGet(\r\n                                $event,\r\n                                test.ime,\r\n                                test.analit,\r\n                                test.rezultat,\r\n                                test.odobren\r\n                              )\r\n                            \"\r\n                          >\r\n                            <span\r\n                              :id=\"test.labassay_id\"\r\n                              @click.prevent=\"\r\n                                MultiGet(\r\n                                  $event,\r\n                                  test.ime,\r\n                                  test.analit,\r\n                                  test.rezultat,\r\n                                  test.odobren\r\n                                )\r\n                              \"\r\n                              class=\"glyphicon glyphicon-search\"\r\n                            ></span>\r\n                            {{ \"VIŠE\" }}\r\n                          </button>\r\n                          <sup\r\n                            v-show=\"test.multi_count > 2\"\r\n                            @click.prevent=\"\r\n                              GetResultsMulti(test, uzorak.status)\r\n                            \"\r\n                          >\r\n                            <i\r\n                              style=\"font-size: 5px; color: #e34a4a;\"\r\n                              class=\"fa fa-star\"\r\n                              id=\"star\"\r\n                              title=\" \"\r\n                            ></i>\r\n                          </sup>\r\n                          <sup v-show=\"test.multi_count < 3\">\r\n                            <i\r\n                              style=\"font-size: 5px; opacity: 0;\"\r\n                              class=\"fa fa-star-o\"\r\n                              id=\"star\"\r\n                              title=\" \"\r\n                            ></i>\r\n                          </sup>\r\n                        </td>\r\n                        <td v-if=\"test.multidata && !test.realizovan\">\r\n                          <button\r\n                            :id=\"test.labassay_id\"\r\n                            class=\"btn btn-warning btn-micro\"\r\n                            @click.prevent=\"\r\n                              MultiGet(\r\n                                $event,\r\n                                test.ime,\r\n                                test.analit,\r\n                                test.rezultat,\r\n                                test.odobren\r\n                              )\r\n                            \"\r\n                          >\r\n                            <span\r\n                              :id=\"test.labassay_id\"\r\n                              @click.prevent=\"\r\n                                MultiGet(\r\n                                  $event,\r\n                                  test.ime,\r\n                                  test.analit,\r\n                                  test.rezultat,\r\n                                  test.odobren\r\n                                )\r\n                              \"\r\n                              class=\"glyphicon glyphicon-search\"\r\n                            ></span>\r\n                            {{ \"VIŠE\" }}\r\n                          </button>\r\n                          <sup\r\n                            v-show=\"test.multi_count > 2\"\r\n                            @click.prevent=\"\r\n                              GetResultsMulti(test, uzorak.status)\r\n                            \"\r\n                          >\r\n                            <i\r\n                              style=\"font-size: 5px; color: #e34a4a;\"\r\n                              class=\"fa fa-star\"\r\n                              id=\"star\"\r\n                              title=\" \"\r\n                            ></i>\r\n                          </sup>\r\n                          <sup v-show=\"test.multi_count < 3\">\r\n                            <i\r\n                              style=\"font-size: 5px; opacity: 0;\"\r\n                              class=\"fa fa-star-o\"\r\n                              id=\"star\"\r\n                              title=\" \"\r\n                            ></i>\r\n                          </sup>\r\n                        </td>\r\n\r\n                        <!-- JEDINICA -->\r\n\r\n                        <td>{{ test.unit }}</td>\r\n\r\n                        <!-- REFERENCE -->\r\n\r\n                        <td v-if=\"!test.multidata\">\r\n                          {{\r\n                            Interpretacija(\r\n                              test.analit,\r\n                              test.rezultat,\r\n                              test.unit,\r\n                              test.dRef,\r\n                              test.gRef,\r\n                              $store.state.site,\r\n                              test.interp,\r\n                              test.extend,\r\n                              spec\r\n                            )[4]\r\n                          }}\r\n                        </td>\r\n                        <td v-if=\"test.multidata\">{{ \"/\" }}</td>\r\n                        <td\r\n                          v-if=\"\r\n                            uzorak.status != 'ODOBREN' &&\r\n                            uzorak.status != 'VERIFICIRAN'\r\n                          \"\r\n                        >\r\n                          <i\r\n                            v-if=\"!test.multidata\"\r\n                            @click.prevent=\"Reference($event, test)\"\r\n                            style=\"font-size: 15px; color: #f7cc36;\"\r\n                            class=\"glyphicon glyphicon-stats\"\r\n                            id=\"reference\"\r\n                            title=\" \"\r\n                          ></i>\r\n                          <i\r\n                            v-if=\"test.multidata\"\r\n                            style=\"font-size: 15px; color: #f7cc36; opacity: 0;\"\r\n                            class=\"glyphicon glyphicon-stats\"\r\n                            id=\"reference\"\r\n                            title=\" \"\r\n                          ></i>\r\n                        </td>\r\n\r\n                        <!-- AKCIJA -->\r\n\r\n                        <td\r\n                          v-if=\"\r\n                            uzorak.status != 'ODOBREN' &&\r\n                            uzorak.status != 'VERIFICIRAN' &&\r\n                            calculated &&\r\n                            !test.calculated\r\n                          \"\r\n                        >\r\n                          <button class=\"btn btn-pale btn-micro\">\r\n                            <span class=\"glyphicon glyphicon-ban-circle\"></span>\r\n                          </button>\r\n                        </td>\r\n                        <td\r\n                          v-if=\"\r\n                            uzorak.status != 'ODOBREN' &&\r\n                            uzorak.status != 'VERIFICIRAN' &&\r\n                            calculated &&\r\n                            test.calculated\r\n                          \"\r\n                        >\r\n                          <button\r\n                            @click.prevent=\"\r\n                              Calculate(\r\n                                $event,\r\n                                test.labassay_id,\r\n                                test.ime,\r\n                                test.id\r\n                              )\r\n                            \"\r\n                            :id=\"test.test\"\r\n                            class=\"btn btn-primary btn-micro\"\r\n                          >\r\n                            <span\r\n                              :id=\"test.test\"\r\n                              class=\"fa fa-calculator\"\r\n                            ></span>\r\n                          </button>\r\n                        </td>\r\n\r\n                        <!-- PONOVI -->\r\n\r\n                        <td\r\n                          v-if=\"\r\n                            uzorak.status != 'ODOBREN' &&\r\n                            uzorak.status != 'VERIFICIRAN' &&\r\n                            (test.rezultat === '' ||\r\n                              test.manual ||\r\n                              test.calculated)\r\n                          \"\r\n                        >\r\n                          <button class=\"btn btn-pale btn-micro\">\r\n                            <span class=\"glyphicon glyphicon-ban-circle\"></span>\r\n                          </button>\r\n                        </td>\r\n                        <td\r\n                          v-if=\"\r\n                            uzorak.status != 'ODOBREN' &&\r\n                            uzorak.status != 'VERIFICIRAN' &&\r\n                            test.rezultat != '' &&\r\n                            !test.manual &&\r\n                            !test.calculated\r\n                          \"\r\n                        >\r\n                          <button\r\n                            v-if=\"!test.retest\"\r\n                            :id=\"test.test\"\r\n                            class=\"btn btn-primary btn-micro\"\r\n                            @click.prevent=\"RetestEnable($event)\"\r\n                          >\r\n                            <span :id=\"test.test\" class=\"fa fa-refresh\"></span>\r\n                          </button>\r\n                          <button\r\n                            v-if=\"test.retest\"\r\n                            :id=\"test.test\"\r\n                            class=\"btn btn-info btn-micro\"\r\n                            @click.prevent=\"RetestDisable($event)\"\r\n                          >\r\n                            <span\r\n                              :id=\"test.test\"\r\n                              class=\"glyphicon glyphicon-duplicate\"\r\n                            ></span>\r\n                          </button>\r\n                        </td>\r\n\r\n                        <!--  -->\r\n\r\n                        <td>\r\n                          <i\r\n                            @click.prevent=\"Exclamation(test)\"\r\n                            v-bind:class=\"{\r\n                              'fa fa-exclamation-triangle icon-right input-icon error-icon':\r\n                                Interpretacija(\r\n                                  test.analit,\r\n                                  test.rezultat,\r\n                                  test.unit,\r\n                                  test.dRef,\r\n                                  test.gRef,\r\n                                  $store.state.site,\r\n                                  test.interp,\r\n                                  test.extend,\r\n                                  spec\r\n                                )[5] === 'Red' && !test.multidata,\r\n                            }\"\r\n                          ></i>\r\n                          <i\r\n                            v-bind:class=\"{\r\n                              'fa fa-check success-icon icon-right input-icon':\r\n                                Interpretacija(\r\n                                  test.analit,\r\n                                  test.rezultat,\r\n                                  test.unit,\r\n                                  test.dRef,\r\n                                  test.gRef,\r\n                                  $store.state.site,\r\n                                  test.interp,\r\n                                  test.extend,\r\n                                  spec\r\n                                )[5] === 'Green' && !test.multidata,\r\n                            }\"\r\n                          ></i>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- END of Uzorci | Default Table -->\r\n            </div>\r\n          </vuestic-collapse-obrada>\r\n        </vuestic-accordion-obrada>\r\n\r\n        <div style=\"min-height: 10px;\"></div>\r\n\r\n        <!-- Nalaz -->\r\n\r\n        <div v-if=\"verificiran\" class=\"va-row\">\r\n          <div class=\"flex md12\">\r\n            <vuestic-collapse-nalaz\r\n              :final=\"verificiran\"\r\n              :final_pdf=\"final_pdf\"\r\n              :samples=\"samples\"\r\n              :pdf=\"link\"\r\n              :pacijent=\"ime + ' ' + prezime\"\r\n            >\r\n              <span slot=\"header\">Nalaz</span>\r\n              <div slot=\"body\">\r\n                <div class=\"va-row\"></div>\r\n              </div>\r\n            </vuestic-collapse-nalaz>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <hr />\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-md-3\"></div>\r\n          <div class=\"col-md-6\">\r\n            <div class=\"btn-container\">\r\n              <button\r\n                class=\"btn btn-secondary btn-sm wizard-back pull-left\"\r\n                @click.prevent=\"Povratak()\"\r\n              >\r\n                <span class=\"fa fa-backward\"></span>\r\n                {{ \" POVRATAK\" }}\r\n              </button>\r\n              <button\r\n                style=\"text-transform: none; color: #e34a4a;\"\r\n                v-if=\"partials_condition && !verificiran\"\r\n                class=\"btn btn-secondary-warning btn-sm wizard-back pull-right\"\r\n                @click.prevent=\"Partials()\"\r\n              >\r\n                <span style=\"color: #e34a4a;\" class=\"fa fa-file-pdf-o\"></span>\r\n                {{ \" Djelimični nalaz\" }}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </vuestic-widget>\r\n\r\n      <!-- Modals -->\r\n\r\n      <!-- Prikaz Analita za Multi Testove -->\r\n\r\n      <vuestic-modal-multi\r\n        :show.sync=\"show\"\r\n        :sample=\"sample\"\r\n        ref=\"largeModalMulti\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">{{ naslov }}</div>\r\n        <div class=\"table-responsive\">\r\n          <table class=\"table table-striped first-td-padding\">\r\n            <thead>\r\n              <tr align=\"middle\">\r\n                <td width=\"10%\"></td>\r\n                <td width=\"20%\">{{ \"ANALIT\" }}</td>\r\n                <td width=\"30%\">{{ \"REZULTAT\" }}</td>\r\n                <td width=\"10%\">{{ \"JEDINICA\" }}</td>\r\n                <td width=\"20%\">{{ \"REFERENCE\" }}</td>\r\n                <td width=\"10%\"></td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr\r\n                align=\"middle\"\r\n                v-for=\"test in analiti\"\r\n                :key=\"test.labID\"\r\n                v-bind:class=\"{\r\n                  'table-danger':\r\n                    Interpretacija(\r\n                      test.opis,\r\n                      test.rezultat,\r\n                      test.jedinica,\r\n                      test.refd,\r\n                      test.refg,\r\n                      $store.state.site,\r\n                      test.interp,\r\n                      test.extend,\r\n                      spec\r\n                    )[5] === 'Red' && !test.rezultat_multiple.length,\r\n                  'table-success':\r\n                    Interpretacija(\r\n                      test.opis,\r\n                      test.rezultat,\r\n                      test.jedinica,\r\n                      test.refd,\r\n                      test.refg,\r\n                      $store.state.site,\r\n                      test.interp,\r\n                      test.extend,\r\n                      spec\r\n                    )[5] === 'Green' && !test.rezultat_multiple.length,\r\n                  'table-warning':\r\n                    Interpretacija(\r\n                      test.opis,\r\n                      test.rezultat,\r\n                      test.jedinica,\r\n                      test.refd,\r\n                      test.refg,\r\n                      $store.state.site,\r\n                      test.interp,\r\n                      test.extend,\r\n                      spec\r\n                    )[5] === 'Yellow' && !test.rezultat_multiple.length,\r\n                }\"\r\n              >\r\n                <td v-if=\"test.flag != ''\">{{ test.flag }}</td>\r\n                <td v-if=\"test.flag === ''\">&nbsp;</td>\r\n                <td :title=\"test.opis\">{{ test.naziv }}</td>\r\n                <td :id=\"test.analit\">\r\n                  <div v-show=\"test.edit == false\">\r\n                    <label>\r\n                      <strong>{{ test.rezultat }}</strong>\r\n                    </label>\r\n                  </div>\r\n                  <select\r\n                    multiple\r\n                    :size=\"test.select_options.length\"\r\n                    v-if=\"\r\n                      test.select_options != undefined &&\r\n                      (test.kod === 's03' ||\r\n                        test.kod === 's04' ||\r\n                        test.kod === 's08' ||\r\n                        test.kod === 's09')\r\n                    \"\r\n                    style=\"min-width: 200px;\"\r\n                    v-show=\"test.edit == true\"\r\n                    v-model=\"test.rezultat_multiple\"\r\n                  >\r\n                    <option\r\n                      v-for=\"option in test.select_options\"\r\n                      :key=\"option\"\r\n                      >{{ option }}</option\r\n                    >\r\n                  </select>\r\n                  <select\r\n                    v-if=\"test.select_options != undefined && (test.kod != 's03' && test.kod != 's04' && test.kod != 's08' && test.kod != 's09')\"\r\n                    style=\"width: 200px;\"\r\n                    v-show=\"test.edit == true\"\r\n                    v-model=\"test.rezultat\"\r\n                  >\r\n                    <option\r\n                      v-for=\"option in test.select_options\"\r\n                      :key=\"option\"\r\n                      >{{ option }}</option\r\n                    >\r\n                  </select>\r\n                  <input\r\n                    v-if=\"test.select_options === undefined\"\r\n                    style=\"width: 200px;\"\r\n                    v-show=\"test.edit == true\"\r\n                    v-model=\"test.rezultat\"\r\n                  />\r\n                </td>\r\n                <td>\r\n                  {{\r\n                    Interpretacija(\r\n                      test.opis,\r\n                      test.rezultat,\r\n                      test.jedinica,\r\n                      test.refd,\r\n                      test.refg,\r\n                      $store.state.site,\r\n                      test.interp,\r\n                      test.extend,\r\n                      spec\r\n                    )[3]\r\n                  }}\r\n                </td>\r\n                <td>\r\n                  {{\r\n                    Interpretacija(\r\n                      test.opis,\r\n                      test.rezultat,\r\n                      test.jedinica,\r\n                      test.refd,\r\n                      test.refg,\r\n                      $store.state.site,\r\n                      test.interp,\r\n                      test.extend,\r\n                      spec\r\n                    )[4]\r\n                  }}\r\n                </td>\r\n                <td>\r\n                  <i\r\n                    @click.prevent=\"ExclamationMulti(test)\"\r\n                    v-bind:class=\"{\r\n                      'fa fa-exclamation-triangle icon-right input-icon error-icon':\r\n                        Interpretacija(\r\n                          test.opis,\r\n                          test.rezultat,\r\n                          test.jedinica,\r\n                          test.refd,\r\n                          test.refg,\r\n                          $store.state.site,\r\n                          test.interp,\r\n                          test.extend,\r\n                          spec\r\n                        )[5] === 'Red' && !test.rezultat_multiple.length,\r\n                    }\"\r\n                  ></i>\r\n                  <i\r\n                    v-bind:class=\"{\r\n                      'fa fa-check success-icon icon-right input-icon':\r\n                        Interpretacija(\r\n                          test.opis,\r\n                          test.rezultat,\r\n                          test.jedinica,\r\n                          test.refd,\r\n                          test.refg,\r\n                          $store.state.site,\r\n                          test.interp,\r\n                          test.extend,\r\n                          spec\r\n                        )[5] === 'Green' && !test.rezultat_multiple.length,\r\n                    }\"\r\n                  ></i>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </vuestic-modal-multi>\r\n\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!-- \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Modal\r\n\r\n\r\n\r\n\r\n\r\n      -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n\r\n      <vuestic-modal-micro-reset\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalResetSample\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          <span style=\"color: #acb5be;\">{{ \"Brisanje rezultata: \" }}</span>\r\n          <span style=\"color: #e34a4a;\">{{ CurrentTest }}</span>\r\n        </div>\r\n        <div>\r\n          <h5>{{ \"Jeste li sigurni da želite obrisati rezultat?\" }}</h5>\r\n        </div>\r\n      </vuestic-modal-micro-reset>\r\n\r\n      <vuestic-modal-micro-bactery\r\n        :show.sync=\"show\"\r\n        :large=\"true\"\r\n        :sample=\"sample\"\r\n        :select=\"true\"\r\n        :update=\"\r\n          !ShowAntibiotics &&\r\n          !ShowBacteries &&\r\n          MicrobiologyScenario === 'MAIBPoR'\r\n        \"\r\n        :povratak=\"ShowAntibiotics || ShowBacteries\"\r\n        :empty=\"\r\n          TemporaryAntibiotics.length > 0 || TemporaryBacteriesAdd.length > 0\r\n        \"\r\n        ref=\"staticModalMicroBacterySelect\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\" v-if=\"!ShowAntibiotics && !ShowBacteries\">\r\n          <span style=\"color: #acb5be;\">{{ \"Rezultat analize: \" }}</span>\r\n          <span style=\"color: #e34a4a;\">{{ CurrentTest }}</span>\r\n        </div>\r\n        <div slot=\"title\" v-if=\"ShowAntibiotics && !ShowBacteries\">\r\n          <span style=\"color: #acb5be;\">{{ \"Antibiotici | \" }}</span>\r\n          <span style=\"color: #e34a4a;\">{{ \"Izbornik\" }}</span>\r\n        </div>\r\n        <div slot=\"title\" v-if=\"!ShowAntibiotics && ShowBacteries\">\r\n          <span style=\"color: #acb5be;\">{{ \"Bakterije | \" }}</span>\r\n          <span style=\"color: #e34a4a;\">{{ \"Izbornik\" }}</span>\r\n        </div>\r\n        <div>\r\n          <!--  -->\r\n\r\n          <div class=\"row\" v-if=\"show_table\">\r\n            <div\r\n              class=\"col-md-1\"\r\n              v-if=\"\r\n                MicrobiologyScenario === 'MAIBPoR' &&\r\n                ShowBacteries &&\r\n                !ShowAntibiotics\r\n              \"\r\n            ></div>\r\n            <div\r\n              class=\"col-md-10\"\r\n              v-if=\"\r\n                MicrobiologyScenario === 'MAIBPoR' &&\r\n                ShowBacteries &&\r\n                !ShowAntibiotics\r\n              \"\r\n            >\r\n              <div class=\"col-md-12\" v-if=\"TemporaryBacteries.length\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-4\">\r\n                    <div\r\n                      class=\"form-check abc-checkbox abc-checkbox-primary\"\r\n                      v-for=\"bactery in filteredBacteries(1, 3)\"\r\n                      :key=\"bactery._id\"\r\n                    >\r\n                      <input\r\n                        class=\"form-check-input\"\r\n                        :id=\"bactery._id\"\r\n                        type=\"checkbox\"\r\n                        v-model=\"bactery.chosen\"\r\n                        @click=\"AddBacteries(bactery)\"\r\n                        :disabled=\"bactery.disabled\"\r\n                      />\r\n                      <label class=\"form-check-label\" :for=\"bactery._id\">\r\n                        <span\r\n                          v-if=\"!bactery.chosen\"\r\n                          style=\"color: #e34a4a;\"\r\n                          class=\"abc-label-text\"\r\n                          >{{ bactery.opis }}</span\r\n                        >\r\n                        <span\r\n                          v-if=\"bactery.chosen\"\r\n                          style=\"color: #4ae387;\"\r\n                          class=\"abc-label-text\"\r\n                          >{{ bactery.opis }}</span\r\n                        >\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div\r\n                      class=\"form-check abc-checkbox abc-checkbox-primary\"\r\n                      v-for=\"bactery in filteredBacteries(2, 3)\"\r\n                      :key=\"bactery._id\"\r\n                    >\r\n                      <input\r\n                        class=\"form-check-input\"\r\n                        :id=\"bactery._id\"\r\n                        type=\"checkbox\"\r\n                        v-model=\"bactery.chosen\"\r\n                        @click=\"AddBacteries(bactery)\"\r\n                        :disabled=\"bactery.disabled\"\r\n                      />\r\n                      <label class=\"form-check-label\" :for=\"bactery._id\">\r\n                        <span\r\n                          v-if=\"!bactery.chosen\"\r\n                          style=\"color: #e34a4a;\"\r\n                          class=\"abc-label-text\"\r\n                          >{{ bactery.opis }}</span\r\n                        >\r\n                        <span\r\n                          v-if=\"bactery.chosen\"\r\n                          style=\"color: #4ae387;\"\r\n                          class=\"abc-label-text\"\r\n                          >{{ bactery.opis }}</span\r\n                        >\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div\r\n                      class=\"form-check abc-checkbox abc-checkbox-primary\"\r\n                      v-for=\"bactery in filteredBacteries(3, 3)\"\r\n                      :key=\"bactery._id\"\r\n                    >\r\n                      <input\r\n                        class=\"form-check-input\"\r\n                        :id=\"bactery._id\"\r\n                        type=\"checkbox\"\r\n                        v-model=\"bactery.chosen\"\r\n                        @click=\"AddBacteries(bactery)\"\r\n                        :disabled=\"bactery.disabled\"\r\n                      />\r\n                      <label class=\"form-check-label\" :for=\"bactery._id\">\r\n                        <span\r\n                          v-if=\"!bactery.chosen\"\r\n                          style=\"color: #e34a4a;\"\r\n                          class=\"abc-label-text\"\r\n                          >{{ bactery.opis }}</span\r\n                        >\r\n                        <span\r\n                          v-if=\"bactery.chosen\"\r\n                          style=\"color: #4ae387;\"\r\n                          class=\"abc-label-text\"\r\n                          >{{ bactery.opis }}</span\r\n                        >\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              class=\"col-md-1\"\r\n              v-if=\"\r\n                MicrobiologyScenario === 'MAIBPoR' &&\r\n                ShowAntibiotics &&\r\n                !ShowBacteries\r\n              \"\r\n            ></div>\r\n            <div\r\n              class=\"col-md-10\"\r\n              v-if=\"\r\n                MicrobiologyScenario === 'MAIBPoR' &&\r\n                ShowAntibiotics &&\r\n                !ShowBacteries\r\n              \"\r\n            >\r\n              <div class=\"col-md-12\" v-if=\"Antibiotics.length\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-4\">\r\n                    <div\r\n                      class=\"form-check abc-checkbox abc-checkbox-primary\"\r\n                      v-for=\"antibiotik in filteredAntibiotics(1, 3)\"\r\n                      :key=\"antibiotik._id\"\r\n                    >\r\n                      <input\r\n                        class=\"form-check-input\"\r\n                        :id=\"antibiotik._id\"\r\n                        type=\"checkbox\"\r\n                        v-model=\"antibiotik.chosen\"\r\n                        @click=\"AddAntibiotics(antibiotik)\"\r\n                        :disabled=\"antibiotik.disabled\"\r\n                      />\r\n                      <label class=\"form-check-label\" :for=\"antibiotik._id\">\r\n                        <span\r\n                          v-if=\"!antibiotik.chosen\"\r\n                          style=\"color: #e34a4a;\"\r\n                          class=\"abc-label-text\"\r\n                          >{{ antibiotik.opis }}</span\r\n                        >\r\n                        <span\r\n                          v-if=\"antibiotik.chosen\"\r\n                          style=\"color: #4ae387;\"\r\n                          class=\"abc-label-text\"\r\n                          >{{ antibiotik.opis }}</span\r\n                        >\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div\r\n                      class=\"form-check abc-checkbox abc-checkbox-primary\"\r\n                      v-for=\"antibiotik in filteredAntibiotics(2, 3)\"\r\n                      :key=\"antibiotik._id\"\r\n                    >\r\n                      <input\r\n                        class=\"form-check-input\"\r\n                        :id=\"antibiotik._id\"\r\n                        type=\"checkbox\"\r\n                        v-model=\"antibiotik.chosen\"\r\n                        @click=\"AddAntibiotics(antibiotik)\"\r\n                        :disabled=\"antibiotik.disabled\"\r\n                      />\r\n                      <label class=\"form-check-label\" :for=\"antibiotik._id\">\r\n                        <span\r\n                          v-if=\"!antibiotik.chosen\"\r\n                          style=\"color: #e34a4a;\"\r\n                          class=\"abc-label-text\"\r\n                          >{{ antibiotik.opis }}</span\r\n                        >\r\n                        <span\r\n                          v-if=\"antibiotik.chosen\"\r\n                          style=\"color: #4ae387;\"\r\n                          class=\"abc-label-text\"\r\n                          >{{ antibiotik.opis }}</span\r\n                        >\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div\r\n                      class=\"form-check abc-checkbox abc-checkbox-primary\"\r\n                      v-for=\"antibiotik in filteredAntibiotics(3, 3)\"\r\n                      :key=\"antibiotik._id\"\r\n                    >\r\n                      <input\r\n                        class=\"form-check-input\"\r\n                        :id=\"antibiotik._id\"\r\n                        type=\"checkbox\"\r\n                        v-model=\"antibiotik.chosen\"\r\n                        @click=\"AddAntibiotics(antibiotik)\"\r\n                        :disabled=\"antibiotik.disabled\"\r\n                      />\r\n                      <label class=\"form-check-label\" :for=\"antibiotik._id\">\r\n                        <span\r\n                          v-if=\"!antibiotik.chosen\"\r\n                          style=\"color: #e34a4a;\"\r\n                          class=\"abc-label-text\"\r\n                          >{{ antibiotik.opis }}</span\r\n                        >\r\n                        <span\r\n                          v-if=\"antibiotik.chosen\"\r\n                          style=\"color: #4ae387;\"\r\n                          class=\"abc-label-text\"\r\n                          >{{ antibiotik.opis }}</span\r\n                        >\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              class=\"col-md-1\"\r\n              v-if=\"\r\n                MicrobiologyScenario === 'MAIBPoR' &&\r\n                !ShowAntibiotics &&\r\n                !ShowBacteries\r\n              \"\r\n            ></div>\r\n            <div\r\n              class=\"col-md-10\"\r\n              v-if=\"\r\n                MicrobiologyScenario === 'MAIBPoR' &&\r\n                !ShowAntibiotics &&\r\n                !ShowBacteries\r\n              \"\r\n            >\r\n              <vuestic-tabs-bactery\r\n                v-if=\"SelectedBacteries.length\"\r\n                :names=\"BacteryTabs\"\r\n                :tab=\"CurrentTab\"\r\n                :id=\"CurrentTab\"\r\n                :prikazi=\"\r\n                  sample.status != 'VERIFICIRAN' && sample.status != 'ODOBREN'\r\n                \"\r\n                ref=\"tabs\"\r\n              >\r\n                <div\r\n                  :slot=\"CurrentTab\"\r\n                  v-for=\"test in SelectedBacteries\"\r\n                  :key=\"test._id\"\r\n                >\r\n                  <div class=\"row\" v-show=\"test.opis === CurrentTab\">\r\n                    <!-- Antibiogram -->\r\n\r\n                    <div class=\"table-responsive\">\r\n                      <table class=\"table table-striped first-td-padding\">\r\n                        <thead>\r\n                          <tr align=\"left\">\r\n                            <td style=\"text-transform: none;\" width=\"30%\">\r\n                              {{ test.antibiogram.opis }}\r\n                            </td>\r\n                            <td width=\"10%\">{{ \"\" }}</td>\r\n                            <td width=\"20%\">{{ \"\" }}</td>\r\n                            <td width=\"20%\">{{ \"\" }}</td>\r\n                            <td width=\"20%\">{{ \"\" }}</td>\r\n                          </tr>\r\n                        </thead>\r\n\r\n                        <!-- Table Body -->\r\n\r\n                        <tbody>\r\n                          <tr\r\n                            align=\"left\"\r\n                            v-for=\"abtk in test.antibiogram.antibiotici\"\r\n                            :key=\"abtk._id\"\r\n                            v-bind:class=\"{\r\n                              'table-danger': false,\r\n                              'table-success': false,\r\n                              'table-warning': false,\r\n                            }\"\r\n                          >\r\n                            <!-- ANALIZA -->\r\n\r\n                            <td :title=\"abtk.opis\">{{ abtk.opis }}</td>\r\n                            <td>\r\n                              <bactery-radio-button\r\n                                :disabled=\"\r\n                                  sample.status === 'ODOBREN' ||\r\n                                  sample.status === 'VERIFICIRAN'\r\n                                \"\r\n                                :label=\"''\"\r\n                                :value=\"''\"\r\n                                :id=\"'' + test._id + abtk._id\"\r\n                                :name=\"test._id + abtk._id\"\r\n                                v-model=\"abtk.rezultat\"\r\n                              />\r\n                            </td>\r\n                            <td>\r\n                              <postavke-radio-button\r\n                                :disabled=\"\r\n                                  sample.status === 'ODOBREN' ||\r\n                                  sample.status === 'VERIFICIRAN'\r\n                                \"\r\n                                :label=\"'Senzitivan'\"\r\n                                :value=\"'S'\"\r\n                                :id=\"'S' + test._id + abtk._id\"\r\n                                :name=\"test._id + abtk._id\"\r\n                                v-model=\"abtk.rezultat\"\r\n                              />\r\n                            </td>\r\n                            <td>\r\n                              <postavke-radio-button\r\n                                :disabled=\"\r\n                                  sample.status === 'ODOBREN' ||\r\n                                  sample.status === 'VERIFICIRAN'\r\n                                \"\r\n                                :label=\"'Intermedijaran'\"\r\n                                :value=\"'I'\"\r\n                                :id=\"'I' + test._id + abtk._id\"\r\n                                :name=\"test._id + abtk._id\"\r\n                                v-model=\"abtk.rezultat\"\r\n                              />\r\n                            </td>\r\n                            <td>\r\n                              <postavke-radio-button\r\n                                :disabled=\"\r\n                                  sample.status === 'ODOBREN' ||\r\n                                  sample.status === 'VERIFICIRAN'\r\n                                \"\r\n                                :label=\"'Rezistentan'\"\r\n                                :value=\"'R'\"\r\n                                :id=\"'R' + test._id + abtk._id\"\r\n                                :name=\"test._id + abtk._id\"\r\n                                v-model=\"abtk.rezultat\"\r\n                              />\r\n                            </td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n\r\n                    <!-- END of Antibiogram -->\r\n                  </div>\r\n                </div>\r\n              </vuestic-tabs-bactery>\r\n            </div>\r\n\r\n            <div\r\n              class=\"col-md-12\"\r\n              v-if=\"\r\n                MicrobiologyScenario === 'MANBNeR' ||\r\n                MicrobiologyScenario === 'MANBPoR' ||\r\n                MicrobiologyScenario === 'MAIBNeR'\r\n              \"\r\n            >\r\n              <div v-show=\"show_table\" class=\"table-responsive\">\r\n                <table class=\"table table-striped first-td-padding\">\r\n                  <thead>\r\n                    <tr align=\"left\">\r\n                      <td>{{ \"REZULTAT\" }}</td>\r\n                    </tr>\r\n                  </thead>\r\n\r\n                  <!-- Table Body -->\r\n\r\n                  <tbody>\r\n                    <tr\r\n                      align=\"left\"\r\n                      v-for=\"(test, index) in rezultati\"\r\n                      v-show=\"index < 1\"\r\n                      :key=\"test.labassay_id\"\r\n                      v-bind:class=\"{\r\n                        'table-danger':\r\n                          test.rezultat_m.length &&\r\n                          test.rezultat_m[0].pozitivan,\r\n                        'table-success':\r\n                          test.rezultat_m.length &&\r\n                          test.rezultat_m[0].negativan,\r\n                        'table-warning': false,\r\n                      }\"\r\n                    >\r\n                      <td\r\n                        v-if=\"\r\n                          sample.status != 'ODOBREN' &&\r\n                          sample.status != 'VERIFICIRAN'\r\n                        \"\r\n                      >\r\n                        <div class=\"form-group\">\r\n                          <div class=\"input-group\">\r\n                            <textarea\r\n                              type=\"text\"\r\n                              id=\"simple-textarea\"\r\n                              v-model=\"test.rezultat\"\r\n                              required\r\n                            ></textarea>\r\n                            <label\r\n                              class=\"control-label\"\r\n                              for=\"simple-textarea\"\r\n                              >{{ \"\" }}</label\r\n                            >\r\n                            <i class=\"bar\"></i>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td\r\n                        v-if=\"\r\n                          sample.status === 'ODOBREN' ||\r\n                          sample.status === 'VERIFICIRAN'\r\n                        \"\r\n                      >\r\n                        <div class=\"form-group\">\r\n                          <div class=\"input-group\">\r\n                            <input\r\n                              id=\"input-icon-left\"\r\n                              title=\" \"\r\n                              name=\"input-icon-left\"\r\n                              disabled\r\n                            />\r\n                            <label\r\n                              v-if=\"test.rezultat.length\"\r\n                              class=\"control-label\"\r\n                              for=\"input-icon-left\"\r\n                              >{{ test.rezultat }}</label\r\n                            >\r\n                            <label\r\n                              v-if=\"!test.rezultat.length\"\r\n                              class=\"control-label\"\r\n                              for=\"input-icon-left\"\r\n                              >{{ \"Nema podataka.\" }}</label\r\n                            >\r\n                            <i class=\"bar\"></i>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </vuestic-modal-micro-bactery>\r\n\r\n      <vuestic-modal-micro-bactery\r\n        :show.sync=\"show\"\r\n        :large=\"true\"\r\n        :sample=\"sample\"\r\n        ref=\"staticModalMicroBactery\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          <span style=\"color: #acb5be;\">{{ \"Rezultat analize: \" }}</span>\r\n          <span style=\"color: #e34a4a;\">{{ CurrentTest }}</span>\r\n        </div>\r\n\r\n        <div>\r\n          <!--  -->\r\n\r\n          <div class=\"row\" v-if=\"show_table\">\r\n            <div class=\"col-md-12\" v-if=\"true\">\r\n              <div v-show=\"show_table\" class=\"table-responsive\">\r\n                <table class=\"table table-striped first-td-padding\">\r\n                  <thead>\r\n                    <tr align=\"left\">\r\n                      <td>{{ \"REZULTAT\" }}</td>\r\n                    </tr>\r\n                  </thead>\r\n\r\n                  <!-- Table Body -->\r\n\r\n                  <tbody>\r\n                    <tr\r\n                      align=\"left\"\r\n                      v-for=\"(test, index) in rezultati\"\r\n                      v-show=\"index < 1\"\r\n                      :key=\"test.labassay_id\"\r\n                      v-bind:class=\"{\r\n                        'table-danger':\r\n                          test.rezultat_m.length &&\r\n                          test.rezultat_m[0].pozitivan,\r\n                        'table-success':\r\n                          test.rezultat_m.length &&\r\n                          test.rezultat_m[0].negativan,\r\n                        'table-warning': false,\r\n                      }\"\r\n                    >\r\n                      <td\r\n                        v-if=\"\r\n                          sample.status != 'ODOBREN' &&\r\n                          sample.status != 'VERIFICIRAN'\r\n                        \"\r\n                      >\r\n                        <div class=\"form-group\">\r\n                          <div class=\"input-group\">\r\n                            <textarea\r\n                              type=\"text\"\r\n                              id=\"simple-textarea\"\r\n                              v-model=\"test.rezultat\"\r\n                              required\r\n                            ></textarea>\r\n                            <label\r\n                              class=\"control-label\"\r\n                              for=\"simple-textarea\"\r\n                              >{{ \"\" }}</label\r\n                            >\r\n                            <i class=\"bar\"></i>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td\r\n                        v-if=\"\r\n                          sample.status === 'ODOBREN' ||\r\n                          sample.status === 'VERIFICIRAN'\r\n                        \"\r\n                      >\r\n                        <div class=\"form-group\">\r\n                          <div class=\"input-group\">\r\n                            <input\r\n                              id=\"input-icon-left\"\r\n                              title=\" \"\r\n                              name=\"input-icon-left\"\r\n                              disabled\r\n                            />\r\n                            <label\r\n                              v-if=\"test.rezultat.length\"\r\n                              class=\"control-label\"\r\n                              for=\"input-icon-left\"\r\n                              >{{ test.rezultat }}</label\r\n                            >\r\n                            <label\r\n                              v-if=\"!test.rezultat.length\"\r\n                              class=\"control-label\"\r\n                              for=\"input-icon-left\"\r\n                              >{{ \"Nema podataka.\" }}</label\r\n                            >\r\n                            <i class=\"bar\"></i>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </vuestic-modal-micro-bactery>\r\n\r\n      <vuestic-modal-micro-result\r\n        :show.sync=\"show\"\r\n        :sample=\"sample\"\r\n        :large=\"ShowAllBacteries\"\r\n        :neg=\"ModalNegative\"\r\n        :pos=\"ModalPositive\"\r\n        :selected=\"ModalPositiveCondition\"\r\n        ref=\"staticModalSelectResult\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          <span style=\"color: #acb5be;\">{{ MicrobiologyModalHeader }} |</span>\r\n          <span style=\"color: #e34a4a;\">{{ \"Izbornik\" }}</span>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"!ModalNegative && !ModalPositive\">\r\n          <div class=\"col-md-6\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-3\"></div>\r\n              <div class=\"col-md-6\">\r\n                <button\r\n                  style=\"text-transform: none; border: 0px;\"\r\n                  class=\"btn btn-secondary btn-sm wizard-back pull-left\"\r\n                  @click=\"\r\n                    ModalNegative = true;\r\n                    ModalPositive = false;\r\n                  \"\r\n                >\r\n                  {{ \"Negativan\" }}\r\n                </button>\r\n              </div>\r\n              <div class=\"col-md-3\"></div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-2\"></div>\r\n              <div class=\"col-md-6\">\r\n                <button\r\n                  style=\"text-transform: none; border: 0px;\"\r\n                  class=\"btn btn-secondary-danger btn-sm wizard-next pull-right\"\r\n                  @click=\"\r\n                    ModalPositive = true;\r\n                    ModalNegative = false;\r\n                  \"\r\n                >\r\n                  {{ \"Pozitivan\" }}\r\n                </button>\r\n              </div>\r\n              <div class=\"col-md-4\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"ModalNegative && !ModalPositive\">\r\n          <div class=\"col-md-1\"></div>\r\n          <div class=\"col-md-11\">\r\n            <vuestic-radio-button\r\n              v-for=\"(desc, index) in MicrobiologyResult.NegativeDescriptions\"\r\n              :key=\"index\"\r\n              :label=\"MicrobiologyResult.NegativeDescriptions[index]\"\r\n              :id=\"MicrobiologyResult.NegativeDescriptions[index]\"\r\n              :value=\"MicrobiologyResult.NegativeDescriptions[index]\"\r\n              :name=\"MicrobiologyResult.NegativeDescriptions[index]\"\r\n              :disabled=\"false\"\r\n              v-model=\"NegativeResultSelection\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          class=\"row\"\r\n          v-if=\"\r\n            !ModalNegative &&\r\n            ModalPositive &&\r\n            !MicrobiologyResult.DefaultBacteries.length\r\n          \"\r\n        >\r\n          <div class=\"col-md-1\"></div>\r\n          <div class=\"col-md-11\">\r\n            <vuestic-radio-button\r\n              v-for=\"(desc, index) in MicrobiologyResult.PositiveDescriptions\"\r\n              :key=\"index\"\r\n              :label=\"MicrobiologyResult.PositiveDescriptions[index]\"\r\n              :id=\"MicrobiologyResult.PositiveDescriptions[index]\"\r\n              :value=\"MicrobiologyResult.PositiveDescriptions[index]\"\r\n              :name=\"MicrobiologyResult.PositiveDescriptions[index]\"\r\n              :disabled=\"false\"\r\n              v-model=\"PositiveResultSelection\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          class=\"row\"\r\n          v-if=\"\r\n            !ModalNegative &&\r\n            ModalPositive &&\r\n            MicrobiologyResult.DefaultBacteries.length\r\n          \"\r\n        >\r\n          <div class=\"col-md-6\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-2\"></div>\r\n              <div class=\"col-md-10\">\r\n                <div\r\n                  class=\"form-check abc-checkbox abc-checkbox-primary\"\r\n                  v-for=\"(bakt, index) in MicrobiologyResult.DefaultBacteries\"\r\n                  :key=\"index\"\r\n                >\r\n                  <input\r\n                    class=\"form-check-input\"\r\n                    :id=\"bakt._id\"\r\n                    type=\"checkbox\"\r\n                    v-model=\"bakt.chosen\"\r\n                    @click=\"SelectBactery(bakt, index)\"\r\n                  />\r\n                  <label class=\"form-check-label\" :for=\"bakt._id\">\r\n                    <span style=\"color: #e34a4a;\" class=\"abc-label-text\">\r\n                      {{ bakt.opis }}\r\n                    </span>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-md-6\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-1\"></div>\r\n              <div class=\"col-md-6\">\r\n                <a\r\n                  v-if=\"!ShowAllBacteries\"\r\n                  href=\"#\"\r\n                  @click.prevent=\"ShowAllBacteries = true\"\r\n                  style=\"font-size: 16px; color: #4ae387;\"\r\n                  >Prikaži više</a\r\n                >\r\n              </div>\r\n              <div class=\"col-md-5\"></div>\r\n            </div>\r\n\r\n            <div class=\"row\" v-if=\"ShowAllBacteries\">\r\n              <div class=\"col-md-1\"></div>\r\n              <div class=\"col-md-10\">\r\n                <div\r\n                  class=\"form-check abc-checkbox abc-checkbox-primary\"\r\n                  v-for=\"(bakt, index) in MicrobiologyResult.RemainingBacteries\"\r\n                  :key=\"index\"\r\n                >\r\n                  <input\r\n                    class=\"form-check-input\"\r\n                    :id=\"bakt._id\"\r\n                    type=\"checkbox\"\r\n                    v-model=\"bakt.chosen\"\r\n                    @click=\"SelectBactery(bakt, index)\"\r\n                  />\r\n                  <label class=\"form-check-label\" :for=\"bakt._id\">\r\n                    <span style=\"color: #e34a4a;\" class=\"abc-label-text\">\r\n                      {{ bakt.opis }}\r\n                    </span>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </vuestic-modal-micro-result>\r\n\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!-- \r\n\r\n\r\n\r\n\r\n\r\nEnd of Microbiology Modal |\r\n\r\n\r\n\r\n\r\n\r\n      -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n\r\n      <!-- Brisanje uzorka -->\r\n\r\n      <vuestic-modal-delete\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalDeleteSample\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          <span style=\"color: #acb5be;\">{{ \"Brisanje uzorka: \" }}</span>\r\n          <span style=\"color: #e34a4a;\">{{ sid }}</span>\r\n        </div>\r\n        <div>\r\n          <h5>{{ \"Jeste li sigurni da želite obrisati uzorak?\" }}</h5>\r\n        </div>\r\n      </vuestic-modal-delete>\r\n\r\n      <!-- Unos komentara -->\r\n\r\n      <vuestic-modal-comment\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalComment\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">{{ \"Unos komentara za uzorak: \" + sid }}</div>\r\n        <div>\r\n          <h5></h5>\r\n        </div>\r\n      </vuestic-modal-comment>\r\n\r\n      <!-- Uređivanje uzorka -->\r\n\r\n      <vuestic-modal-edit\r\n        :show.sync=\"show\"\r\n        :sample=\"sid\"\r\n        action=\"Edit\"\r\n        ref=\"staticModalEditSample\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">{{ \"Uređivanje uzorka: \" + sid }}</div>\r\n        <div>\r\n          <h5></h5>\r\n        </div>\r\n      </vuestic-modal-edit>\r\n\r\n      <!-- Email Send -->\r\n\r\n      <vuestic-modal-mail\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalSendMail\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{ \"Slanje nalaza na adresu: \" }}\r\n          <span style=\"color: #4ae387;\">{{ email }}</span>\r\n        </div>\r\n        <div>\r\n          <h5>{{ \"Jeste li sigurni da želite poslati nalaz?\" }}</h5>\r\n        </div>\r\n      </vuestic-modal-mail>\r\n\r\n      <!--  -->\r\n\r\n      <vuestic-modal-all-results\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalAllResults\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{ \"Izbor rezultata: \" }}\r\n          <span style=\"color: #e34a4a;\">{{ labassay }}</span>\r\n        </div>\r\n        <div>\r\n          <div class=\"table-responsive\">\r\n            <table class=\"table table-striped first-td-padding\">\r\n              <thead>\r\n                <tr>\r\n                  <!-- <td width=\"20%\"></td> -->\r\n\r\n                  <td>analizator</td>\r\n                  <td>vrijeme</td>\r\n                  <td>rezultat</td>\r\n                  <td>jedinica</td>\r\n                  <td>reference</td>\r\n                  <td\r\n                    v-if=\"\r\n                      sample_status != 'ODOBREN' &&\r\n                      sample_status != 'VERIFICIRAN'\r\n                    \"\r\n                  >\r\n                    izbor\r\n                  </td>\r\n                  <td align=\"middle\"></td>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr\r\n                  v-for=\"test in vise.rezultat\"\r\n                  v-show=\"test.rezultat_f != ''\"\r\n                  :key=\"test._id\"\r\n                  v-bind:class=\"{\r\n                    'table-danger':\r\n                      Interpretacija(\r\n                        vise.labassay.analit,\r\n                        test.rezultat_f,\r\n                        test.jedinice_f,\r\n                        vise.refd,\r\n                        vise.refg,\r\n                        $store.state.site,\r\n                        vise.interp,\r\n                        vise.extend,\r\n                        spec\r\n                      )[5] === 'Red' && !test.multidata,\r\n                    'table-success':\r\n                      Interpretacija(\r\n                        vise.labassay.analit,\r\n                        test.rezultat_f,\r\n                        test.jedinice_f,\r\n                        vise.refd,\r\n                        vise.refg,\r\n                        $store.state.site,\r\n                        vise.interp,\r\n                        vise.extend,\r\n                        spec\r\n                      )[5] === 'Green' && !test.multidata,\r\n                    'table-warning':\r\n                      Interpretacija(\r\n                        vise.labassay.analit,\r\n                        test.rezultat_f,\r\n                        test.jedinice_f,\r\n                        vise.refd,\r\n                        vise.refg,\r\n                        $store.state.site,\r\n                        vise.interp,\r\n                        vise.extend,\r\n                        spec\r\n                      )[5] === 'Yellow' && !test.multidata,\r\n                  }\"\r\n                >\r\n                  <td>{{ test.anaassay.aparat.ime }}</td>\r\n\r\n                  <td>\r\n                    {{\r\n                      JSON.stringify(test.updated_at).slice(9, 11) +\r\n                      \".\" +\r\n                      JSON.stringify(test.updated_at).slice(6, 8) +\r\n                      \".\" +\r\n                      JSON.stringify(test.updated_at).slice(1, 5) +\r\n                      \" | \"\r\n                    }}\r\n                    <sub>{{\r\n                      JSON.stringify(test.updated_at).slice(12, 20)\r\n                    }}</sub>\r\n                  </td>\r\n                  <td>{{ test.rezultat_f }}</td>\r\n                  <td>{{ test.jedinice_f }}</td>\r\n                  <td>\r\n                    {{\r\n                      Interpretacija(\r\n                        vise.labassay.analit,\r\n                        test.rezultat_f,\r\n                        test.jedinice_f,\r\n                        vise.refd,\r\n                        vise.refg,\r\n                        $store.state.site,\r\n                        vise.interp,\r\n                        vise.extend,\r\n                        spec\r\n                      )[4]\r\n                    }}\r\n                  </td>\r\n                  <td\r\n                    v-if=\"\r\n                      sample_status != 'ODOBREN' &&\r\n                      sample_status != 'VERIFICIRAN'\r\n                    \"\r\n                  >\r\n                    <i\r\n                      v-if=\"!test.izabran\"\r\n                      @click.prevent=\"IzborTesta(vise, test)\"\r\n                      style=\"font-size: 18px; color: #e34a4a;\"\r\n                      class=\"glyphicon glyphicon-unchecked\"\r\n                    ></i>\r\n\r\n                    <i\r\n                      v-if=\"test.izabran\"\r\n                      style=\"font-size: 18px; color: #4ae387;\"\r\n                      class=\"glyphicon glyphicon-check\"\r\n                    ></i>\r\n                  </td>\r\n                  <td>\r\n                    <i\r\n                      v-bind:class=\"{\r\n                        'fa fa-exclamation-triangle icon-right input-icon error-icon':\r\n                          Interpretacija(\r\n                            vise.labassay.analit,\r\n                            test.rezultat_f,\r\n                            test.jedinice_f,\r\n                            vise.refd,\r\n                            vise.refg,\r\n                            $store.state.site,\r\n                            vise.interp,\r\n                            vise.extend,\r\n                            spec\r\n                          )[5] === 'Red',\r\n                      }\"\r\n                    ></i>\r\n                    <i\r\n                      v-bind:class=\"{\r\n                        'fa fa-check success-icon icon-right input-icon':\r\n                          Interpretacija(\r\n                            vise.labassay.analit,\r\n                            test.rezultat_f,\r\n                            test.jedinice_f,\r\n                            vise.refd,\r\n                            vise.refg,\r\n                            $store.state.site,\r\n                            vise.interp,\r\n                            vise.extend,\r\n                            spec\r\n                          )[5] === 'Green',\r\n                      }\"\r\n                    ></i>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n\r\n            <!-- END OF DRUGA TABELA -->\r\n          </div>\r\n        </div>\r\n      </vuestic-modal-all-results>\r\n\r\n      <vuestic-modal-error\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalError\"\r\n        cancelText=\"ZATVORI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{ \"\" }}\r\n          <span style=\"color: #e34a4a;\">{{ \"404: Not Found\" }}</span>\r\n        </div>\r\n        <div>\r\n          <h5>{{ \"Greška prilikom čitanja nalaza.\" }}</h5>\r\n        </div>\r\n      </vuestic-modal-error>\r\n\r\n      <vuestic-modal-error\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalVerifyPrivilege\"\r\n        cancelText=\"ZATVORI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{ \"\" }}\r\n          <span style=\"color: #e34a4a;\">{{ \"401: Not Authorized\" }}</span>\r\n        </div>\r\n        <div>\r\n          <h5>{{ \"Nemate odgovarajuće privilegije.\" }}</h5>\r\n        </div>\r\n      </vuestic-modal-error>\r\n\r\n      <vuestic-modal-exclamation\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalExclamation\"\r\n        cancelText=\"ZATVORI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{ \"\" }}\r\n          <span style=\"color: #e34a4a;\">{{ warning.analiza }}</span>\r\n        </div>\r\n        <div>\r\n          <h5>{{ warning.control }}</h5>\r\n          <p>{{ warning.text }}</p>\r\n        </div>\r\n\r\n        <!-- <div v-if=\"warning.napomena !=''\">\r\n          <h5>{{\"Napomena\"}}</h5>\r\n          <p>{{warning.napomena}}</p>\r\n        </div>-->\r\n      </vuestic-modal-exclamation>\r\n\r\n      <vuestic-modal-reference\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalReference\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{ \"Referentne vrijednosti: \" }}\r\n          <span style=\"color: #e34a4a;\"\r\n            >{{ reference.naziv }} ({{ reference.opis }})</span\r\n          >\r\n        </div>\r\n        <div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-1\"></div>\r\n            <div class=\"col-md-2\">\r\n              <div class=\"form-group\">\r\n                <div class=\"input-group\">\r\n                  <input\r\n                    style=\"color: #e34a4a;\"\r\n                    id=\"input-icon-left\"\r\n                    title=\" \"\r\n                    v-model=\"reference.dref\"\r\n                    name=\"input-icon-left\"\r\n                    required\r\n                  />\r\n\r\n                  <!-- <i class=\"glyphicon glyphicon-pencil icon-left input-icon\"></i> -->\r\n\r\n                  <label class=\"control-label\" for=\"input-icon-left\">\r\n                    {{ \"Donja\" }}\r\n                  </label>\r\n                  <i class=\"bar\"></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-1\"></div>\r\n            <div class=\"col-md-2\">\r\n              <div class=\"form-group\">\r\n                <div class=\"input-group\">\r\n                  <input\r\n                    style=\"color: #e34a4a;\"\r\n                    id=\"input-icon-left\"\r\n                    title=\" \"\r\n                    v-model=\"reference.gref\"\r\n                    name=\"input-icon-left\"\r\n                    required\r\n                  />\r\n\r\n                  <!-- <i class=\"glyphicon glyphicon-pencil icon-left input-icon\"></i> -->\r\n\r\n                  <label class=\"control-label\" for=\"input-icon-left\">\r\n                    {{ \"Gornja\" }}\r\n                  </label>\r\n                  <i class=\"bar\"></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-1\"></div>\r\n            <div class=\"col-md-4\">\r\n              <vuestic-simple-select\r\n                v-if=\"$store.state.access.level < 1\"\r\n                style=\"font-size: 14px;\"\r\n                label=\"Interpretacija\"\r\n                v-model=\"reference.interp\"\r\n                title=\" \"\r\n                v-bind:options=\"interpretacije\"\r\n              ></vuestic-simple-select>\r\n\r\n              <div v-if=\"$store.state.access.level > 0\" class=\"form-group\">\r\n                <div class=\"input-group\">\r\n                  <input\r\n                    id=\"input-icon-left\"\r\n                    title=\" \"\r\n                    v-model=\"reference.interp\"\r\n                    name=\"input-icon-left\"\r\n                    required\r\n                    :disabled=\"true\"\r\n                  />\r\n\r\n                  <!-- <i class=\"glyphicon glyphicon-pencil icon-left input-icon\"></i> -->\r\n\r\n                  <label class=\"control-label\" for=\"input-icon-left\">\r\n                    {{ reference.interp }}\r\n                  </label>\r\n                  <i class=\"bar\"></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-1\"></div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-1\"></div>\r\n            <div class=\"col-md-2\">\r\n              <vuestic-simple-select\r\n                style=\"font-size: 14px;\"\r\n                label=\"Jedinica\"\r\n                v-model=\"reference.jedinica\"\r\n                title=\" \"\r\n                v-bind:options=\"jedinice\"\r\n              ></vuestic-simple-select>\r\n            </div>\r\n            <div class=\"col-md-1\"></div>\r\n\r\n            <div class=\"col-md-7\">\r\n              <div class=\"form-group\" v-show=\"reference.interp != 'spec'\">\r\n                <div class=\"input-group\">\r\n                  <input\r\n                    style=\"color: #e34a4a;\"\r\n                    id=\"input-icon-left\"\r\n                    title=\" \"\r\n                    v-model=\"reference.extend\"\r\n                    name=\"input-icon-left\"\r\n                    required\r\n                  />\r\n\r\n                  <label class=\"control-label\" for=\"input-icon-left\">\r\n                    {{ \"Proširena referentna vrijednost\" }}\r\n                  </label>\r\n                  <i class=\"bar\"></i>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group\" v-show=\"reference.interp === 'spec'\">\r\n                <div class=\"input-group\">\r\n                  <textarea\r\n                    v-model=\"reference.extend\"\r\n                    type=\"text\"\r\n                    style=\"color: #e34a4a;\"\r\n                    id=\"simple-textarea\"\r\n                    required\r\n                  ></textarea>\r\n\r\n                  <label class=\"control-label\" for=\"simple-textarea\">\r\n                    {{ \"Specifična interpretacija rezultata\" }}\r\n                  </label>\r\n                  <i class=\"bar\"></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-1\"></div>\r\n          </div>\r\n        </div>\r\n      </vuestic-modal-reference>\r\n\r\n      <vuestic-modal-find\r\n        :show.sync=\"show\"\r\n        :data_pid=\"Number(data_pid)\"\r\n        :data_length=\"Number(data_length)\"\r\n        ref=\"staticModalFind\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{ \"\" }}\r\n          <span style=\"color: #e34a4a;\">{{ \"Redni broj pacijenta\" }}</span>\r\n        </div>\r\n        <div>\r\n          <h5></h5>\r\n        </div>\r\n      </vuestic-modal-find>\r\n\r\n      <vuestic-modal-aparati\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalAparati\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{ \"Izbor analizatora: \" }}\r\n          <span style=\"color: #e34a4a;\">\r\n            {{ this.analiza.ime + \" (\" + this.analiza.analit + \")\" }}\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <vuestic-accordion-obrada>\r\n            <vuestic-collapse-aparati\r\n              v-for=\"element in analysers\"\r\n              :key=\"element._id\"\r\n              :analyser=\"element\"\r\n            >\r\n              <span slot=\"header\">\r\n                {{ element.ime + \", \" + element.site.naziv }}\r\n              </span>\r\n              <div slot=\"body\">\r\n                <div class=\"va-row\"></div>\r\n              </div>\r\n            </vuestic-collapse-aparati>\r\n          </vuestic-accordion-obrada>\r\n        </div>\r\n      </vuestic-modal-aparati>\r\n\r\n      <!--  -->\r\n\r\n      <vuestic-modal-results-multi\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalResultsMulti\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{ \"Izbor rezultata: \" }}\r\n          <span style=\"color: #e34a4a;\">{{ multi_test }}</span>\r\n        </div>\r\n        <div></div>\r\n      </vuestic-modal-results-multi>\r\n\r\n      <!-- Patient evaluation, Single -->\r\n\r\n      <patient-evaluation-single\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalEvaluationSingle\"\r\n        cancelText=\"ZATVORI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          <span>{{ ime + \" \" + prezime }}</span>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"Procjena.length && !graph\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"table-responsive\">\r\n              <table\r\n                class=\"table table-striped table-sm color-icon-label-table\"\r\n              >\r\n                <thead>\r\n                  <tr align=\"middle\">\r\n                    <td width=\"20%\">{{ \"REZULTAT\" }}</td>\r\n                    <td width=\"20%\">{{ \"JEDINICA\" }}</td>\r\n                    <td width=\"20%\">{{ \"REFERENCE\" }}</td>\r\n                    <td width=\"20%\">{{ \"DATUM\" }}</td>\r\n                    <td width=\"15%\">{{ \"VRIJEME\" }}</td>\r\n                    <td width=\"5%\" align=\"middle\"></td>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <!--  -->\r\n\r\n                  <tr\r\n                    align=\"middle\"\r\n                    v-for=\"(element, index) in Procjena\"\r\n                    :key=\"index\"\r\n                    v-bind:class=\"{\r\n                      'table-danger':\r\n                        Interpretacija(\r\n                          element.analit,\r\n                          element.rezultat,\r\n                          element.jedinica,\r\n                          element.refd,\r\n                          element.refg,\r\n                          $store.state.site,\r\n                          element.interp,\r\n                          element.extend,\r\n                          spec\r\n                        )[5] === 'Red',\r\n                      'table-success':\r\n                        Interpretacija(\r\n                          element.analit,\r\n                          element.rezultat,\r\n                          element.jedinica,\r\n                          element.refd,\r\n                          element.refg,\r\n                          $store.state.site,\r\n                          element.interp,\r\n                          element.extend,\r\n                          spec\r\n                        )[5] === 'Green',\r\n                      'table-warning':\r\n                        Interpretacija(\r\n                          element.analit,\r\n                          element.rezultat,\r\n                          element.jedinica,\r\n                          element.refd,\r\n                          element.refg,\r\n                          $store.state.site,\r\n                          element.interp,\r\n                          element.extend,\r\n                          spec\r\n                        )[5] === 'Yellow',\r\n                    }\"\r\n                  >\r\n                    <td width=\"19%\">{{ element.rezultat }}</td>\r\n                    <td width=\"19%\">{{ element.jedinica }}</td>\r\n                    <td width=\"19%\">\r\n                      {{\r\n                        Interpretacija(\r\n                          element.analit,\r\n                          element.rezultat,\r\n                          element.jedinica,\r\n                          element.refd,\r\n                          element.refg,\r\n                          $store.state.site,\r\n                          element.interp,\r\n                          element.extend,\r\n                          spec\r\n                        )[4]\r\n                      }}\r\n                    </td>\r\n                    <td width=\"19%\">{{ element.datum }}</td>\r\n                    <td width=\"15%\">{{ element.vrijeme }}</td>\r\n                    <td width=\"9%\" align=\"middle\">\r\n                      <i\r\n                        v-bind:class=\"{\r\n                          'fa fa-exclamation-triangle icon-right input-icon error-icon':\r\n                            Interpretacija(\r\n                              element.analit,\r\n                              element.rezultat,\r\n                              element.jedinica,\r\n                              element.refd,\r\n                              element.refg,\r\n                              $store.state.site,\r\n                              element.interp,\r\n                              element.extend,\r\n                              spec\r\n                            )[5] === 'Red',\r\n                        }\"\r\n                      ></i>\r\n                      <i\r\n                        v-bind:class=\"{\r\n                          'fa fa-check success-icon icon-right input-icon':\r\n                            Interpretacija(\r\n                              element.analit,\r\n                              element.rezultat,\r\n                              element.jedinica,\r\n                              element.refd,\r\n                              element.refg,\r\n                              $store.state.site,\r\n                              element.interp,\r\n                              element.extend,\r\n                              spec\r\n                            )[5] === 'Green',\r\n                        }\"\r\n                      ></i>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <div style=\"text-align: center;\">\r\n                <span class=\"circle badge-info\"></span>\r\n                {{ table_header }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!--  <div class=\"row\" v-if=\"showLineChart\">\r\n          <div class=\"col-md-12\">\r\n            <hr>\r\n          </div>\r\n        </div>-->\r\n\r\n        <div class=\"row\" v-if=\"showLineChart && graph\">\r\n          <div class=\"col-md-12\">\r\n            <line-chart\r\n              :options=\"optionsLineChart\"\r\n              :data=\"dataLineChart\"\r\n              type=\"line\"\r\n            ></line-chart>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\" v-if=\"!showLineChart && graph\">\r\n          <div class=\"col-md-12\">\r\n            <!-- <div style=\"text-align:center;\"> -->\r\n\r\n            <div>\r\n              <span style=\"color: #e34a4a;\">{{ \"Nema podataka.\" }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </patient-evaluation-single>\r\n\r\n      <!-- LabAssay evaluation, Single -->\r\n\r\n      <patient-evaluation-single\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalLabAssayEvalSingle\"\r\n        cancelText=\"ZATVORI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          <span style=\"color: #4ae387;\">\r\n            {{ analiza_eval.ime + \" (\" + analiza_eval.analit + \")\" }}\r\n          </span>\r\n          <span>{{ \" - Rezultati analize u zadnjih 14 dana\" }}</span>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"Procjena.length && !graph\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"table-responsive\">\r\n              <table\r\n                class=\"table table-striped table-sm color-icon-label-table\"\r\n              >\r\n                <thead>\r\n                  <tr align=\"middle\">\r\n                    <td width=\"20%\">{{ \"REZULTAT\" }}</td>\r\n                    <td width=\"20%\">{{ \"JEDINICA\" }}</td>\r\n                    <td width=\"20%\">{{ \"REFERENCE\" }}</td>\r\n                    <td width=\"20%\">{{ \"DATUM\" }}</td>\r\n                    <td width=\"15%\">{{ \"VRIJEME\" }}</td>\r\n                    <td width=\"5%\" align=\"middle\"></td>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <!--  -->\r\n\r\n                  <tr\r\n                    align=\"middle\"\r\n                    v-for=\"(element, index) in Procjena\"\r\n                    :key=\"index\"\r\n                    v-bind:class=\"{\r\n                      'table-danger':\r\n                        Interpretacija(\r\n                          element.analit,\r\n                          element.rezultat,\r\n                          element.jedinica,\r\n                          element.refd,\r\n                          element.refg,\r\n                          $store.state.site,\r\n                          element.interp,\r\n                          element.extend,\r\n                          spec\r\n                        )[5] === 'Red',\r\n                      'table-success':\r\n                        Interpretacija(\r\n                          element.analit,\r\n                          element.rezultat,\r\n                          element.jedinica,\r\n                          element.refd,\r\n                          element.refg,\r\n                          $store.state.site,\r\n                          element.interp,\r\n                          element.extend,\r\n                          spec\r\n                        )[5] === 'Green',\r\n                      'table-warning':\r\n                        Interpretacija(\r\n                          element.analit,\r\n                          element.rezultat,\r\n                          element.jedinica,\r\n                          element.refd,\r\n                          element.refg,\r\n                          $store.state.site,\r\n                          element.interp,\r\n                          element.extend,\r\n                          spec\r\n                        )[5] === 'Yellow',\r\n                    }\"\r\n                  >\r\n                    <td width=\"19%\">{{ element.rezultat }}</td>\r\n                    <td width=\"19%\">{{ element.jedinica }}</td>\r\n                    <td width=\"19%\">\r\n                      {{\r\n                        Interpretacija(\r\n                          element.analit,\r\n                          element.rezultat,\r\n                          element.jedinica,\r\n                          element.refd,\r\n                          element.refg,\r\n                          $store.state.site,\r\n                          element.interp,\r\n                          element.extend,\r\n                          spec\r\n                        )[4]\r\n                      }}\r\n                    </td>\r\n                    <td width=\"19%\">{{ element.datum }}</td>\r\n                    <td width=\"15%\">{{ element.vrijeme }}</td>\r\n                    <td width=\"9%\" align=\"middle\">\r\n                      <i\r\n                        v-bind:class=\"{\r\n                          'fa fa-exclamation-triangle icon-right input-icon error-icon':\r\n                            Interpretacija(\r\n                              element.analit,\r\n                              element.rezultat,\r\n                              element.jedinica,\r\n                              element.refd,\r\n                              element.refg,\r\n                              $store.state.site,\r\n                              element.interp,\r\n                              element.extend,\r\n                              spec\r\n                            )[5] === 'Red',\r\n                        }\"\r\n                      ></i>\r\n                      <i\r\n                        v-bind:class=\"{\r\n                          'fa fa-check success-icon icon-right input-icon':\r\n                            Interpretacija(\r\n                              element.analit,\r\n                              element.rezultat,\r\n                              element.jedinica,\r\n                              element.refd,\r\n                              element.refg,\r\n                              $store.state.site,\r\n                              element.interp,\r\n                              element.extend,\r\n                              spec\r\n                            )[5] === 'Green',\r\n                        }\"\r\n                      ></i>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <div style=\"text-align: center;\">\r\n                <span class=\"circle badge-info\"></span>\r\n                {{ table_header }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!--  <div class=\"row\" v-if=\"showLineChart\">\r\n          <div class=\"col-md-12\">\r\n            <hr>\r\n          </div>\r\n        </div>-->\r\n\r\n        <div class=\"row\" v-if=\"showLineChart && graph\">\r\n          <div class=\"col-md-12\">\r\n            <line-chart\r\n              :options=\"optionsLineChart\"\r\n              :data=\"dataLineChart\"\r\n              type=\"line\"\r\n            ></line-chart>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\" v-if=\"!showLineChart && graph\">\r\n          <div class=\"col-md-12\">\r\n            <!-- <div style=\"text-align:center;\"> -->\r\n            <div>\r\n              <span style=\"color: #e34a4a;\">{{ \"Nema podataka.\" }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </patient-evaluation-single>\r\n\r\n      <!-- Patient evaluation, Multi -->\r\n\r\n      <patient-evaluation-multi\r\n        :show.sync=\"show\"\r\n        :multiparam_izbor=\"multiparam_izbor\"\r\n        :multiparam_izbornik=\"multiparam_izbornik\"\r\n        ref=\"staticModalEvaluationMulti\"\r\n        cancelText=\"ZATVORI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          <span>{{ ime + \" \" + prezime }}</span>\r\n        </div>\r\n\r\n        <!--  -->\r\n\r\n        <div class=\"row\" v-if=\"Procjena.length && !graph\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"table-responsive\">\r\n              <table\r\n                class=\"table table-striped table-sm color-icon-label-table\"\r\n              >\r\n                <thead>\r\n                  <tr align=\"middle\">\r\n                    <td width=\"20%\">{{ \"REZULTAT\" }}</td>\r\n                    <td width=\"20%\">{{ \"JEDINICA\" }}</td>\r\n                    <td width=\"20%\">{{ \"REFERENCE\" }}</td>\r\n                    <td width=\"20%\">{{ \"DATUM\" }}</td>\r\n                    <td width=\"15%\">{{ \"VRIJEME\" }}</td>\r\n                    <td width=\"5%\" align=\"middle\"></td>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr\r\n                    align=\"middle\"\r\n                    v-for=\"(element, index) in Procjena\"\r\n                    :key=\"index\"\r\n                    v-bind:class=\"{\r\n                      'table-danger':\r\n                        Interpretacija(\r\n                          element.analit,\r\n                          element.rezultat,\r\n                          element.jedinica,\r\n                          element.refd,\r\n                          element.refg,\r\n                          $store.state.site,\r\n                          element.interp,\r\n                          element.extend,\r\n                          spec\r\n                        )[5] === 'Red',\r\n                      'table-success':\r\n                        Interpretacija(\r\n                          element.analit,\r\n                          element.rezultat,\r\n                          element.jedinica,\r\n                          element.refd,\r\n                          element.refg,\r\n                          $store.state.site,\r\n                          element.interp,\r\n                          element.extend,\r\n                          spec\r\n                        )[5] === 'Green',\r\n                      'table-warning':\r\n                        Interpretacija(\r\n                          element.analit,\r\n                          element.rezultat,\r\n                          element.jedinica,\r\n                          element.refd,\r\n                          element.refg,\r\n                          $store.state.site,\r\n                          element.interp,\r\n                          element.extend,\r\n                          spec\r\n                        )[5] === 'Yellow',\r\n                    }\"\r\n                  >\r\n                    <td width=\"19%\">{{ element.rezultat }}</td>\r\n                    <td width=\"19%\">{{ element.jedinica }}</td>\r\n                    <td width=\"19%\">\r\n                      {{\r\n                        Interpretacija(\r\n                          element.analit,\r\n                          element.rezultat,\r\n                          element.jedinica,\r\n                          element.refd,\r\n                          element.refg,\r\n                          $store.state.site,\r\n                          element.interp,\r\n                          element.extend,\r\n                          spec\r\n                        )[4]\r\n                      }}\r\n                    </td>\r\n                    <td width=\"19%\">{{ element.datum }}</td>\r\n                    <td width=\"15%\">{{ element.vrijeme }}</td>\r\n                    <td width=\"9%\" align=\"middle\">\r\n                      <i\r\n                        v-bind:class=\"{\r\n                          'fa fa-exclamation-triangle icon-right input-icon error-icon':\r\n                            Interpretacija(\r\n                              element.analit,\r\n                              element.rezultat,\r\n                              element.jedinica,\r\n                              element.refd,\r\n                              element.refg,\r\n                              $store.state.site,\r\n                              element.interp,\r\n                              element.extend,\r\n                              spec\r\n                            )[5] === 'Red',\r\n                        }\"\r\n                      ></i>\r\n                      <i\r\n                        v-bind:class=\"{\r\n                          'fa fa-check success-icon icon-right input-icon':\r\n                            Interpretacija(\r\n                              element.analit,\r\n                              element.rezultat,\r\n                              element.jedinica,\r\n                              element.refd,\r\n                              element.refg,\r\n                              $store.state.site,\r\n                              element.interp,\r\n                              element.extend,\r\n                              spec\r\n                            )[5] === 'Green',\r\n                        }\"\r\n                      ></i>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <div style=\"text-align: center;\">\r\n                <span class=\"circle badge-info\"></span>\r\n                {{ table_header }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"!Procjena.length && !graph\">\r\n          <div class=\"col-md-12\">\r\n            <div>\r\n              <span style=\"color: #e34a4a;\">{{ \"Nema podataka.\" }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"showLineChart && graph\">\r\n          <div class=\"col-md-12\">\r\n            <line-chart\r\n              :options=\"optionsLineChart\"\r\n              :data=\"dataLineChart\"\r\n              type=\"line\"\r\n            ></line-chart>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\" v-if=\"!showLineChart && graph\">\r\n          <div v-if=\"!showLineChart && !spinner\" class=\"col-md-12\">\r\n            <div>\r\n              <span style=\"color: #e34a4a;\">{{ \"Nema podataka.\" }}</span>\r\n            </div>\r\n          </div>\r\n          <div\r\n            style=\"min-height: 400px;\"\r\n            v-if=\"!showLineChart && spinner\"\r\n            class=\"col-md-12\"\r\n          >\r\n            <div\r\n              style=\"\r\n                display: flex;\r\n                flex-direction: row;\r\n                justify-content: center;\r\n                align-items: center;\r\n              \"\r\n            >\r\n              <div style=\"float: left;\"></div>\r\n              <span style=\"vertical-align: middle;\">\r\n                <atom-spinner\r\n                  style=\"opacity: 0.25;\"\r\n                  :animation-duration=\"1000\"\r\n                  :size=\"300\"\r\n                  :color=\"'#4ae387'\"\r\n                />\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </patient-evaluation-multi>\r\n\r\n      <!-- LabAssay evaluation, Multi -->\r\n\r\n      <patient-evaluation-multi\r\n        :show.sync=\"show\"\r\n        :multiparam_izbor=\"multiparam_izbor\"\r\n        :multiparam_izbornik=\"multiparam_izbornik\"\r\n        ref=\"staticModalLabAssayEvalMulti\"\r\n        cancelText=\"ZATVORI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          <span style=\"color: #4ae387;\">\r\n            {{ analiza_eval.ime + \" (\" + analiza_eval.analit + \")\" }}\r\n          </span>\r\n          <span>{{ \" - Rezultati analize u zadnjih 14 dana\" }}</span>\r\n        </div>\r\n\r\n        <!--  -->\r\n\r\n        <div class=\"row\" v-if=\"Procjena.length && !graph\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"table-responsive\">\r\n              <table\r\n                class=\"table table-striped table-sm color-icon-label-table\"\r\n              >\r\n                <thead>\r\n                  <tr align=\"middle\">\r\n                    <td width=\"20%\">{{ \"REZULTAT\" }}</td>\r\n                    <td width=\"20%\">{{ \"JEDINICA\" }}</td>\r\n                    <td width=\"20%\">{{ \"REFERENCE\" }}</td>\r\n                    <td width=\"20%\">{{ \"DATUM\" }}</td>\r\n                    <td width=\"15%\">{{ \"VRIJEME\" }}</td>\r\n                    <td width=\"5%\" align=\"middle\"></td>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr\r\n                    align=\"middle\"\r\n                    v-for=\"(element, index) in Procjena\"\r\n                    :key=\"index\"\r\n                    v-bind:class=\"{\r\n                      'table-danger':\r\n                        Interpretacija(\r\n                          element.analit,\r\n                          element.rezultat,\r\n                          element.jedinica,\r\n                          element.refd,\r\n                          element.refg,\r\n                          $store.state.site,\r\n                          element.interp,\r\n                          element.extend,\r\n                          spec\r\n                        )[5] === 'Red',\r\n                      'table-success':\r\n                        Interpretacija(\r\n                          element.analit,\r\n                          element.rezultat,\r\n                          element.jedinica,\r\n                          element.refd,\r\n                          element.refg,\r\n                          $store.state.site,\r\n                          element.interp,\r\n                          element.extend,\r\n                          spec\r\n                        )[5] === 'Green',\r\n                      'table-warning':\r\n                        Interpretacija(\r\n                          element.analit,\r\n                          element.rezultat,\r\n                          element.jedinica,\r\n                          element.refd,\r\n                          element.refg,\r\n                          $store.state.site,\r\n                          element.interp,\r\n                          element.extend,\r\n                          spec\r\n                        )[5] === 'Yellow',\r\n                    }\"\r\n                  >\r\n                    <td width=\"19%\">{{ element.rezultat }}</td>\r\n                    <td width=\"19%\">{{ element.jedinica }}</td>\r\n                    <td width=\"19%\">\r\n                      {{\r\n                        Interpretacija(\r\n                          element.analit,\r\n                          element.rezultat,\r\n                          element.jedinica,\r\n                          element.refd,\r\n                          element.refg,\r\n                          $store.state.site,\r\n                          element.interp,\r\n                          element.extend,\r\n                          spec\r\n                        )[4]\r\n                      }}\r\n                    </td>\r\n                    <td width=\"19%\">{{ element.datum }}</td>\r\n                    <td width=\"15%\">{{ element.vrijeme }}</td>\r\n                    <td width=\"9%\" align=\"middle\">\r\n                      <i\r\n                        v-bind:class=\"{\r\n                          'fa fa-exclamation-triangle icon-right input-icon error-icon':\r\n                            Interpretacija(\r\n                              element.analit,\r\n                              element.rezultat,\r\n                              element.jedinica,\r\n                              element.refd,\r\n                              element.refg,\r\n                              $store.state.site,\r\n                              element.interp,\r\n                              element.extend,\r\n                              spec\r\n                            )[5] === 'Red',\r\n                        }\"\r\n                      ></i>\r\n                      <i\r\n                        v-bind:class=\"{\r\n                          'fa fa-check success-icon icon-right input-icon':\r\n                            Interpretacija(\r\n                              element.analit,\r\n                              element.rezultat,\r\n                              element.jedinica,\r\n                              element.refd,\r\n                              element.refg,\r\n                              $store.state.site,\r\n                              element.interp,\r\n                              element.extend,\r\n                              spec\r\n                            )[5] === 'Green',\r\n                        }\"\r\n                      ></i>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <div style=\"text-align: center;\">\r\n                <span class=\"circle badge-info\"></span>\r\n                {{ table_header }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"!Procjena.length && !graph\">\r\n          <div class=\"col-md-12\">\r\n            <div>\r\n              <span style=\"color: #e34a4a;\">{{ \"Nema podataka.\" }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"showLineChart && graph\">\r\n          <div class=\"col-md-12\">\r\n            <line-chart\r\n              :options=\"optionsLineChart\"\r\n              :data=\"dataLineChart\"\r\n              type=\"line\"\r\n            ></line-chart>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\" v-if=\"!showLineChart && graph\">\r\n          <div v-if=\"!showLineChart && !spinner\" class=\"col-md-12\">\r\n            <div>\r\n              <span style=\"color: #e34a4a;\">{{ \"Nema podataka.\" }}</span>\r\n            </div>\r\n          </div>\r\n          <div\r\n            style=\"min-height: 400px;\"\r\n            v-if=\"!showLineChart && spinner\"\r\n            class=\"col-md-12\"\r\n          >\r\n            <div\r\n              style=\"\r\n                display: flex;\r\n                flex-direction: row;\r\n                justify-content: center;\r\n                align-items: center;\r\n              \"\r\n            >\r\n              <div style=\"float: left;\"></div>\r\n              <span style=\"vertical-align: middle;\">\r\n                <atom-spinner\r\n                  style=\"opacity: 0.25;\"\r\n                  :animation-duration=\"1000\"\r\n                  :size=\"300\"\r\n                  :color=\"'#4ae387'\"\r\n                />\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </patient-evaluation-multi>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"col-md-6\">\r\n          <loading\r\n            :active.sync=\"isLoading\"\r\n            :can-cancel=\"false\"\r\n            :on-cancel=\"onCancel\"\r\n            color=\"#4ae387\"\r\n            :is-full-page=\"fullPage\"\r\n          ></loading>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n          <button v-if=\"false\" @click.prevent=\"Test\">{{ \"Loading...\" }}</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Vue from \"vue\";\r\nimport router from \"../../router\";\r\nimport store from \"vuex-store\";\r\nimport utils from \"services/utils\";\r\nimport { http } from \"../../../config/config.js\";\r\nimport { barcode } from \"../../../config/config.js\";\r\nimport BadgeColumn from \"./BadgeColumn.vue\";\r\nimport { bus } from \"../../main\";\r\nimport { server } from \"../../../config/config.js\";\r\nimport { Interpretation } from \"./functions/reference.js\";\r\nimport izbornik from \"./data-izbornik/izbornik\";\r\n\r\nimport Loading from \"vue-loading-overlay\";\r\nimport \"vue-loading-overlay/dist/vue-loading.css\";\r\n\r\nimport LineChart from \"../vuestic-components/vuestic-chart/chart-types/LineChart\";\r\nimport { AtomSpinner } from \"epic-spinners\";\r\nimport PDFObject from \"pdfobject\";\r\n\r\nVue.component(\"line-chart\", LineChart);\r\nVue.component(\"badge-column\", BadgeColumn);\r\n\r\nexport default {\r\n  name: \"collapse-obrada\",\r\n\r\n  data() {\r\n    return {\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Data\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n\r\n      AllowGetSample: true,\r\n      MicrobiologyOrder: false,\r\n      MicrobiologySample: false,\r\n      ModalNegative: false,\r\n      ModalPositive: false,\r\n      ModalPositiveCondition: false,\r\n      ShowAllBacteries: false,\r\n      ShowAntibiotics: false,\r\n      ShowBacteries: false,\r\n      BacteryTabs: [\"\"],\r\n      CurrentTab: \"\",\r\n      CurrentTest: \"\",\r\n      MicrobiologyModalHeader: \"Predefinisani rezultati\",\r\n      SelectedBacteries: [],\r\n      NegativeResultSelection: \"\",\r\n      PositiveResultSelection: \"\",\r\n      MicrobiologyScenario: \"Unknown\",\r\n      Antibiotics: [],\r\n      TemporaryAntibiotics: [],\r\n      TemporaryBacteries: [],\r\n      TemporaryBacteriesAdd: [],\r\n      Antibiograms: [],\r\n      Bacteries: [],\r\n\r\n      MicrobiologyResult: {\r\n        negative: null,\r\n        positive: null,\r\n        BUG: null,\r\n        F_RESULT: \"\",\r\n        M_RESULT: [],\r\n        DefaultBacteries: [],\r\n        RemainingBacteries: [],\r\n        NegativeDescriptions: [],\r\n        PositiveDescriptions: [],\r\n      },\r\n\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* \r\n\r\n\r\n\r\n\r\n\r\nEnd of Microbiology Data |\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n\r\n      // Patient evaluation, Multi\r\n\r\n      datumRodjenja: \"\",\r\n      imeRoditelja: \"\",\r\n      adresaStanovanja: \"\",\r\n\r\n      save_retest: false,\r\n      multiparam_izbor: \"\",\r\n      klijent: null,\r\n      multiparam_id: \"\",\r\n      analit: {},\r\n      multiparams: [],\r\n      Response: {},\r\n      spinner: false,\r\n      multiparam_izbornik: [],\r\n      warning: { analiza: \"\", text: \"\", control: \"\" },\r\n      main: false,\r\n      show: true,\r\n      pdf: false,\r\n      header: \"\",\r\n      lokacija: {},\r\n      timestamp: \"\",\r\n      pacijent: \"\",\r\n      ime: \"\",\r\n      prezime: \"\",\r\n      jmbg: \"\",\r\n      pid: \"\",\r\n      sid: \"\",\r\n      email: \"\",\r\n      email_tmp: \"\",\r\n      verificiran: false,\r\n      email_button: false,\r\n      final_pdf: false,\r\n      odobren: false,\r\n      approved: 0,\r\n      verified: 0,\r\n      partials: [],\r\n      partials_condition: false,\r\n      count: 0,\r\n      nalaz: {},\r\n      report: {},\r\n      path: \"\",\r\n      url: \"\",\r\n      uzorci: [],\r\n      vise: [],\r\n      samples: [],\r\n      sample_status: \"\",\r\n      labassay: \"\",\r\n      multi_test: \"\",\r\n      multi_rezultati: [],\r\n      check: \"\",\r\n      link: \"\",\r\n      spec: \"*\",\r\n      testovi: [],\r\n      rezultati: [],\r\n      analysers: [],\r\n      analyser: {},\r\n      analiza: {},\r\n      analyser_selected: {},\r\n      analyser_patient: {},\r\n      analitiprikaz: [],\r\n      analiti: [],\r\n      naslov: \"\",\r\n      calculated: false,\r\n      show_table: false,\r\n      sample: {},\r\n      resdata: {},\r\n      email_changed: false,\r\n      Previous: { pid: null },\r\n      Next: { pid: null },\r\n      Results: [],\r\n      Datum: { today: null, query: null, next: null, previous: null },\r\n      pagination: false,\r\n      forward_disabled: false,\r\n      backward_disabled: false,\r\n      data_length: 0,\r\n      data_min: 1,\r\n      data_pid: 0,\r\n      data_spol: \"\",\r\n      query_date: \"\",\r\n      today_date: \"\",\r\n      starost: \"\",\r\n      reference: {},\r\n      interpretacije: [\r\n        \"none\",\r\n        \"A\",\r\n        \"ogtt\",\r\n        \"insul\",\r\n        \"less\",\r\n        \"lesseq\",\r\n        \"lesspl\",\r\n        \"infekc\",\r\n        \"grt\",\r\n        \"grtpl\",\r\n        \"grtepl\",\r\n        \"grtno\",\r\n        \"grte\",\r\n        \"neg\",\r\n        \"nema\",\r\n        \"urbl\",\r\n        \"reakt\",\r\n        \"e0x\",\r\n        \"e02\",\r\n        \"e04\",\r\n        \"e05\",\r\n        \"e07\",\r\n        \"e08\",\r\n        \"norm\",\r\n        \"norma\",\r\n        \"ured\",\r\n        \"plus\",\r\n        \"prisutno\",\r\n        \"gljivice\",\r\n        \"leuer\",\r\n        \"morf\",\r\n        \"titar\",\r\n        \"tsh\",\r\n        \"trag\",\r\n        \"trg\",\r\n        \"hol\",\r\n        \"hdl\",\r\n        \"ldl\",\r\n        \"fpsa\",\r\n        \"sediment\",\r\n        \"bistar\",\r\n        \"boja\",\r\n        \"bojasp\",\r\n        \"nesto\",\r\n        \"exists\",\r\n        \"blst\",\r\n        \"leu\",\r\n        \"spec\",\r\n      ],\r\n\r\n      // Toasts\r\n\r\n      toastText: \"\",\r\n      toastIcon: \"\",\r\n      toastPosition: \"\",\r\n      toastDuration: 2500,\r\n      isToastFullWidth: false,\r\n      className: \"\",\r\n\r\n      isLoading: false,\r\n      fullPage: true,\r\n\r\n      // Evaluation\r\n\r\n      analiza_eval: {},\r\n      showLineChart: false,\r\n      optionsLineChart: {},\r\n      dataLineChart: {},\r\n      Procjena: [],\r\n\r\n      // Settings\r\n\r\n      jedinica: \"\",\r\n      jedinice: [],\r\n      graph: false,\r\n      table_header: \"\",\r\n    };\r\n  },\r\n  components: {\r\n    Loading,\r\n    AtomSpinner,\r\n  },\r\n\r\n  watch: {\r\n    email: function () {\r\n      if (this.email.trim() != this.email_tmp.trim()) {\r\n        this.email_changed = true;\r\n      }\r\n    },\r\n\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Watch\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n\r\n    ModalNegative: function () {\r\n      if (this.ModalNegative) {\r\n        console.log(\"Izbor: negativan\");\r\n\r\n        this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\r\n        if (this.MicrobiologyScenario.includes(\"MANB\")) {\r\n          this.ModalPositiveCondition = true;\r\n        } else {\r\n          this.ModalPositiveCondition = false;\r\n        }\r\n      }\r\n    },\r\n\r\n    ModalPositive: function () {\r\n      if (this.ModalPositive) {\r\n        console.log(\"Izbor: pozitivan\");\r\n\r\n        if (this.MicrobiologyScenario === \"MAIBNoR\") {\r\n          this.MicrobiologyModalHeader = \"Bakterije\";\r\n        } else {\r\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\r\n        }\r\n\r\n        if (this.MicrobiologyScenario.includes(\"MANB\")) {\r\n          this.ModalPositiveCondition = true;\r\n        } else {\r\n          this.ModalPositiveCondition = false;\r\n        }\r\n      }\r\n    },\r\n\r\n    MicrobiologyScenario: function () {\r\n      switch (this.MicrobiologyScenario) {\r\n        case \"MAIBNoR\":\r\n          // Ima definisan skup bakterija - Nema Rezultat\r\n          this.ModalNegative = false;\r\n          this.ModalPositive = false;\r\n          this.ModalPositiveCondition = false;\r\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\r\n          this.NegativeResultSelection = \"\";\r\n          this.PositiveResultSelection = \"\";\r\n          this.SelectedBacteries = [];\r\n          this.ShowAllBacteries = false;\r\n\r\n          break;\r\n\r\n        case \"MAIBNeR\":\r\n          // Ima definisan skup bakterija - Negativan Rezultat\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        case \"MAIBPoR\":\r\n          // Ima definisan skup bakterija - Pozitivan Rezultat\r\n          break;\r\n\r\n        case \"MANBNoR\":\r\n          // Nema definisan skup bakterija - Nema Rezultat\r\n          this.ModalNegative = false;\r\n          this.ModalPositive = false;\r\n          this.ModalPositiveCondition = false;\r\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\r\n          this.NegativeResultSelection = \"\";\r\n          this.PositiveResultSelection = \"\";\r\n          this.SelectedBacteries = [];\r\n          this.ShowAllBacteries = false;\r\n\r\n          break;\r\n\r\n        case \"MANBNeR\":\r\n          // Nema definisan skup bakterija - Negativan Rezultat\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        case \"MANBPoR\":\r\n          // Nema definisan skup bakterija - Pozitivan Rezultat\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        default:\r\n          // console.warn(\"Nije Mikrobiološka analiza.\");\r\n          break;\r\n      }\r\n    },\r\n\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* \r\n\r\n\r\n\r\n\r\n\r\nEnd of Microbiology Watch |\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n  },\r\n  beforeCreate() {\r\n    http\r\n      .get(\r\n        \"postavke/jedinice/mount/list?token=\" +\r\n          this.$store.state.token +\r\n          \"&site=\" +\r\n          this.$store.state.site,\r\n        {}\r\n      )\r\n      .then((res) => {\r\n        this.jedinice = res.data.jedinica;\r\n      });\r\n  },\r\n  mounted() {\r\n    bus.$on(\"Parametar\", (data) => {\r\n      // bus.$emit(\"Switch\");\r\n\r\n      this.spinner = true;\r\n\r\n      this.analit = {};\r\n\r\n      this.multiparams.forEach((element) => {\r\n        if (element.opis === data) {\r\n          this.analit = element;\r\n          this.multiparam_id = element._id;\r\n          this.multiparam_izbor = data;\r\n        }\r\n      });\r\n\r\n      if (_.isEmpty(this.analit)) {\r\n        // console.warn(\"Empty object.\");\r\n      } else {\r\n        if (!_.isEmpty(this.Response)) {\r\n          this.showLineChart = false;\r\n          let palette = store.getters.palette;\r\n\r\n          this.Procjena = [];\r\n\r\n          var obj = {};\r\n          var count = 0;\r\n\r\n          this.Response.Multi.forEach((element) => {\r\n            count++;\r\n            element.multi.forEach((param) => {\r\n              if (\r\n                this.multiparam_id == param.labassay &&\r\n                param.rezultat[0].rezultat_f.trim() != \"\"\r\n              ) {\r\n                obj.rezultat = param.rezultat[0].rezultat_f;\r\n                obj.jedinica = param.rezultat[0].jedinice_f;\r\n                obj.analit = \"Nema podataka\";\r\n                obj.interp = param.interp;\r\n                obj.extend = param.extend;\r\n                obj.refd = param.refd;\r\n                obj.refg = param.refg;\r\n                obj.sid = \"Nema podataka\";\r\n                obj.updated_at = new Date(param.rezultat[0].updated_at);\r\n\r\n                var datum =\r\n                  JSON.stringify(new Date(param.rezultat[0].updated_at)).slice(\r\n                    9,\r\n                    11\r\n                  ) +\r\n                  \".\" +\r\n                  JSON.stringify(new Date(param.rezultat[0].updated_at)).slice(\r\n                    6,\r\n                    8\r\n                  ) +\r\n                  \".\" +\r\n                  JSON.stringify(new Date(param.rezultat[0].updated_at)).slice(\r\n                    1,\r\n                    5\r\n                  );\r\n                var time = JSON.stringify(\r\n                  new Date(\r\n                    new Date(param.rezultat[0].updated_at).getTime() -\r\n                      new Date(\r\n                        param.rezultat[0].updated_at\r\n                      ).getTimezoneOffset() *\r\n                        60000\r\n                  ).toISOString()\r\n                ).substring(12, 17);\r\n                obj.datum = datum;\r\n                obj.vrijeme = time;\r\n                obj.kontrola = this.Interpretacija(\r\n                  \"\",\r\n                  obj.rezultat,\r\n                  obj.jedinica,\r\n                  obj.refd,\r\n                  obj.refg,\r\n                  this.$store.state.site,\r\n                  obj.interp,\r\n                  obj.extend,\r\n                  this.spec\r\n                )[5];\r\n\r\n                this.Procjena.push(obj);\r\n                obj = {};\r\n              }\r\n            });\r\n\r\n            if (count == this.Response.Multi.length) {\r\n              this.Procjena.sort(function (a, b) {\r\n                return Date.parse(a.updated_at) == Date.parse(b.updated_at)\r\n                  ? 0\r\n                  : +(Date.parse(a.updated_at) < Date.parse(b.updated_at)) ||\r\n                      -1;\r\n              });\r\n\r\n              // Line Chart\r\n\r\n              var data = [];\r\n\r\n              if (this.Procjena.length) {\r\n                this.optionsLineChart = {\r\n                  responsive: true,\r\n                  maintainAspectRatio: false,\r\n                  title: {\r\n                    display: true,\r\n                    text: \"\",\r\n                  },\r\n                  scales: {\r\n                    xAxes: [\r\n                      {\r\n                        display: true,\r\n                        gridLines: {\r\n                          display: true,\r\n                          color: \"#eee\",\r\n                        },\r\n                      },\r\n                    ],\r\n                    yAxes: [\r\n                      {\r\n                        display: true,\r\n                        gridLines: {\r\n                          display: true,\r\n                          color: \"#eee\",\r\n                        },\r\n                      },\r\n                    ],\r\n                  },\r\n                };\r\n\r\n                var labels = [];\r\n                var kontrola = [];\r\n                var temp = \"\";\r\n\r\n                this.Procjena.forEach((element) => {\r\n                  if (!isNaN(element.rezultat.trim())) {\r\n                    switch (element.kontrola) {\r\n                      case \"Red\":\r\n                        kontrola.push(palette.danger);\r\n                        break;\r\n                      case \"Green\":\r\n                        kontrola.push(palette.primary);\r\n                        break;\r\n                      case \"Yellow\":\r\n                        kontrola.push(palette.warning);\r\n                        break;\r\n\r\n                      default:\r\n                        kontrola.push(palette.info);\r\n                        break;\r\n                    }\r\n\r\n                    labels.push(element.datum);\r\n                    data.push(element.rezultat);\r\n                  }\r\n                });\r\n\r\n                this.dataLineChart = {\r\n                  labels: labels,\r\n                  datasets: [\r\n                    {\r\n                      label: this.table_header,\r\n                      backgroundColor: utils.hex2rgb(palette.info, 0.5).css,\r\n                      pointBorderColor: kontrola,\r\n                      pointBackgroundColor: kontrola,\r\n                      borderColor: palette.transparent,\r\n                      data: data,\r\n                    },\r\n                  ],\r\n                };\r\n\r\n                if (data.length) {\r\n                  setTimeout(() => {\r\n                    this.showLineChart = true;\r\n                  }, 500);\r\n                }\r\n              } else {\r\n                // console.warn(\"No data.\");\r\n\r\n                this.spinner = false;\r\n              }\r\n            }\r\n          });\r\n        } else {\r\n          // console.warn(\"Response not loaded.\");\r\n        }\r\n      }\r\n    });\r\n\r\n    bus.$on(\"graph\", () => {\r\n      this.Procjena.sort(function (a, b) {\r\n        return Date.parse(a.updated_at) == Date.parse(b.updated_at)\r\n          ? 0\r\n          : +(Date.parse(a.updated_at) < Date.parse(b.updated_at)) || -1;\r\n      });\r\n\r\n      var data = [];\r\n\r\n      if (this.Procjena.length) {\r\n        let palette = store.getters.palette;\r\n        this.optionsLineChart = {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          title: {\r\n            display: true,\r\n            text: \"\",\r\n          },\r\n          scales: {\r\n            xAxes: [\r\n              {\r\n                display: true,\r\n                gridLines: {\r\n                  display: true,\r\n                  color: \"#eee\",\r\n                },\r\n              },\r\n            ],\r\n            yAxes: [\r\n              {\r\n                display: true,\r\n                gridLines: {\r\n                  display: true,\r\n                  color: \"#eee\",\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        };\r\n\r\n        var labels = [];\r\n        var kontrola = [];\r\n        var temp = \"\";\r\n\r\n        this.Procjena.forEach((element) => {\r\n          if (!isNaN(element.rezultat.trim())) {\r\n            switch (element.kontrola) {\r\n              case \"Red\":\r\n                kontrola.push(palette.danger);\r\n                break;\r\n              case \"Green\":\r\n                kontrola.push(palette.primary);\r\n                break;\r\n              case \"Yellow\":\r\n                kontrola.push(palette.warning);\r\n                break;\r\n\r\n              default:\r\n                kontrola.push(palette.info);\r\n                break;\r\n            }\r\n\r\n            labels.push(element.datum);\r\n            data.push(element.rezultat);\r\n          }\r\n        });\r\n\r\n        this.dataLineChart = {\r\n          labels: labels,\r\n          datasets: [\r\n            {\r\n              label: this.analiza_eval.ime + \" | \" + this.analiza_eval.analit,\r\n              backgroundColor: utils.hex2rgb(palette.info, 0.5).css,\r\n              pointBorderColor: kontrola,\r\n              pointBackgroundColor: kontrola,\r\n              borderColor: palette.transparent,\r\n              data: data,\r\n            },\r\n          ],\r\n        };\r\n\r\n        if (data.length) {\r\n          this.showLineChart = true;\r\n        }\r\n      } else {\r\n        // console.warn(\"No data.\");\r\n      }\r\n      this.graph = false;\r\n    });\r\n\r\n    bus.$on(\"table\", () => {\r\n      this.Procjena.sort(function (a, b) {\r\n        return Date.parse(a.updated_at) == Date.parse(b.updated_at)\r\n          ? 0\r\n          : +(Date.parse(a.updated_at) > Date.parse(b.updated_at)) || -1;\r\n      });\r\n\r\n      var data = [];\r\n\r\n      if (this.Procjena.length) {\r\n        let palette = store.getters.palette;\r\n        this.optionsLineChart = {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          title: {\r\n            display: true,\r\n            text: \"\",\r\n          },\r\n          scales: {\r\n            xAxes: [\r\n              {\r\n                display: true,\r\n                gridLines: {\r\n                  display: true,\r\n                  color: \"#eee\",\r\n                },\r\n              },\r\n            ],\r\n            yAxes: [\r\n              {\r\n                display: true,\r\n                gridLines: {\r\n                  display: true,\r\n                  color: \"#eee\",\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        };\r\n\r\n        var labels = [];\r\n        var kontrola = [];\r\n        var temp = \"\";\r\n\r\n        this.Procjena.forEach((element) => {\r\n          if (!isNaN(element.rezultat.trim())) {\r\n            switch (element.kontrola) {\r\n              case \"Red\":\r\n                kontrola.push(palette.danger);\r\n                break;\r\n              case \"Green\":\r\n                kontrola.push(palette.primary);\r\n                break;\r\n              case \"Yellow\":\r\n                kontrola.push(palette.warning);\r\n                break;\r\n\r\n              default:\r\n                kontrola.push(palette.info);\r\n                break;\r\n            }\r\n\r\n            labels.push(element.datum);\r\n            data.push(element.rezultat);\r\n          }\r\n        });\r\n\r\n        this.dataLineChart = {\r\n          labels: labels,\r\n          datasets: [\r\n            {\r\n              label: this.analiza_eval.ime + \" | \" + this.analiza_eval.analit,\r\n              backgroundColor: utils.hex2rgb(palette.info, 0.5).css,\r\n              pointBorderColor: kontrola,\r\n              pointBackgroundColor: kontrola,\r\n              borderColor: palette.transparent,\r\n              data: data,\r\n            },\r\n          ],\r\n        };\r\n\r\n        if (data.length) {\r\n          this.showLineChart = true;\r\n        }\r\n      } else {\r\n        // console.warn(\"No data.\");\r\n      }\r\n      this.graph = true;\r\n    });\r\n\r\n    bus.$on(\"trash\", (data) => {\r\n      this.sid = data.sid;\r\n      this.$refs.staticModalDeleteSample.open();\r\n    });\r\n\r\n    bus.$on(\"edit\", (data) => {\r\n      this.sid = data.sid;\r\n      this.$refs.staticModalEditSample.open();\r\n    });\r\n\r\n    bus.$on(\"comment\", (data) => {\r\n      this.sid = data.sid;\r\n      this.$refs.staticModalComment.open();\r\n    });\r\n\r\n    bus.$on(\"barcode\", (data) => {\r\n      this.BarcodePrint(data);\r\n    });\r\n\r\n    bus.$on(\"save\", (data) => {\r\n      this.SaveResults(this.rezultati, \"save\");\r\n    });\r\n\r\n    bus.$on(\"check\", (data) => {\r\n      this.Approve(this.rezultati);\r\n    });\r\n\r\n    bus.$on(\"verify\", (data) => {\r\n      this.Verify(data, \"verify\");\r\n    });\r\n\r\n    bus.$on(\"undo\", (data) => {\r\n      this.Disapprove(this.rezultati, \"undo\");\r\n    });\r\n\r\n    bus.$on(\"unlock\", (data) => {\r\n      this.UnVerify(data, \"unlock\");\r\n    });\r\n\r\n    bus.$on(\"Nalaz\", (data) => {\r\n      if (!data.final_pdf) {\r\n        this.$refs.staticModalError.open();\r\n      } else {\r\n        this.path = this.timestamp + \".pdf\";\r\n\r\n        this.url = server + \"nalazi/\" + this.path;\r\n\r\n        var options = {\r\n          width: \"100%\",\r\n          height: \"800px\",\r\n        };\r\n        PDFObject.embed(this.url, \"#pdf-container\", options);\r\n\r\n        this.email_button = true;\r\n        this.main = false;\r\n        this.pdf = true;\r\n      }\r\n    });\r\n\r\n    bus.$on(\"pdf\", (data) => {\r\n      if (!data.pdf_exists) {\r\n        this.$refs.staticModalError.open();\r\n      } else {\r\n        this.path = \"samples/\" + data.sid + \".pdf\";\r\n\r\n        this.url = server + \"nalazi/samples/\" + data.sid + \".pdf\";\r\n\r\n        var options = {\r\n          width: \"100%\",\r\n          height: \"800px\",\r\n        };\r\n        PDFObject.embed(this.url, \"#pdf-container\", options);\r\n\r\n        this.main = false;\r\n        this.pdf = true;\r\n      }\r\n    });\r\n\r\n    bus.$on(\"Sample\", (data) => {\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Get Sample Check\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n\r\n      if (data.tip.includes(\"Mikrobiologija\")) {\r\n        this.MicrobiologySample = true;\r\n      } else {\r\n        this.MicrobiologySample = false;\r\n      }\r\n\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* \r\n\r\n\r\n\r\n\r\n\r\nEnd of Microbiology Get Sample Check |\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      this.$store.dispatch(\"SetSample\", data.sid);\r\n      this.GetSingleSample(data);\r\n    });\r\n\r\n    bus.$on(\"Deleted\", (data) => {\r\n      this.DeletedSample(data);\r\n    });\r\n\r\n    bus.$on(\"Edited\", (data) => {\r\n      this.EditSample(data);\r\n    });\r\n\r\n    bus.$on(\"SaveMulti\", (data) => {\r\n      this.SaveMultiResults(this.analiti, data);\r\n    });\r\n\r\n    bus.$on(\"Mail\", () => {\r\n      this.SendMail(this.email);\r\n    });\r\n\r\n    bus.$on(\"Error\", () => {\r\n      // Generate new Report\r\n      console.warn(\"Greška prilikom čitanja nalaza.\");\r\n    });\r\n\r\n    bus.$on(\"Analyser\", (data) => {\r\n      this.AnalyserSelected(data);\r\n    });\r\n\r\n    bus.$on(\"Sljedeci\", () => {\r\n      this.Sljedeci();\r\n    });\r\n\r\n    bus.$on(\"Prethodni\", () => {\r\n      this.Prethodni();\r\n    });\r\n\r\n    bus.$on(\"Search\", () => {\r\n      this.$refs.staticModalFind.open();\r\n    });\r\n\r\n    bus.$on(\"Push\", (data) => {\r\n      if (this.$route.params.id != data) {\r\n        this.Results.forEach((element) => {\r\n          if (element.pid == data) {\r\n            router.push(\r\n              \"/obrada/rezultati/\" +\r\n                element.patient +\r\n                \"/\" +\r\n                element.pid +\r\n                \"?date=\" +\r\n                element.date\r\n            );\r\n          }\r\n        });\r\n      } else {\r\n        // console.warn(\"No change required.\");\r\n      }\r\n    });\r\n\r\n    bus.$on(\"Reference\", () => {\r\n      this.reference.dref = Math.abs(\r\n        this.reference.dref.replace(/,/g, \".\").trim()\r\n      );\r\n      this.reference.gref = Math.abs(\r\n        this.reference.gref.replace(/,/g, \".\").trim()\r\n      );\r\n\r\n      if (this.reference.interp != \"spec\") {\r\n        this.reference.extend = this.reference.extend.replace(\r\n          /(\\r\\n|\\n|\\r)/gm,\r\n          \" \"\r\n        );\r\n      }\r\n\r\n      if (\r\n        isNaN(this.reference.dref) ||\r\n        isNaN(this.reference.gref) ||\r\n        this.reference.dref === \"\" ||\r\n        this.reference.gref === \"\" ||\r\n        this.reference.dref > this.reference.gref\r\n      ) {\r\n        // console.warn(\"Invalid value.\");\r\n      } else {\r\n        document.getElementById(this.$store.state.sid).click();\r\n\r\n        http\r\n          .post(\"/rezultati/odobravanje/reference/\", {\r\n            email: this.$store.state.userId,\r\n            token: this.$store.state.token,\r\n            site: this.$store.state.site,\r\n            reference: this.reference,\r\n          })\r\n          .then((res) => {\r\n            setTimeout(() => {\r\n              document.getElementById(this.$store.state.sid).click();\r\n            }, 500);\r\n          });\r\n      }\r\n    });\r\n\r\n    bus.$on(\"retest\", (data) => {\r\n      this.RetestSave(data);\r\n    });\r\n\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Bus from Modal\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n\r\n    bus.$on(\"Antibiotik\", (data) => {\r\n      // console.log(\"Prikaz izbornika antibiotika.\");\r\n      if (\r\n        this.sample.status != \"ODOBREN\" &&\r\n        this.sample.status != \"VERIFICIRAN\"\r\n      ) {\r\n        this.TemporaryAntibiotics = [];\r\n        this.TemporaryBacteries = [];\r\n        this.TemporaryBacteriesAdd = [];\r\n\r\n        this.Antibiotics.forEach((element) => {\r\n          element.chosen = false;\r\n          element.disabled = false;\r\n        });\r\n\r\n        this.SelectedBacteries.forEach((selected) => {\r\n          // Bacteria name must be Unique.\r\n          if (selected.opis == data) {\r\n            selected.antibiogram.antibiotici.forEach((ant) => {\r\n              this.Antibiotics.forEach((antibiotik) => {\r\n                if (antibiotik._id == ant._id) {\r\n                  antibiotik.disabled = true;\r\n                  antibiotik.chosen = true;\r\n                  antibiotik.rezultat = ant.rezultat;\r\n                }\r\n              });\r\n            });\r\n          }\r\n        });\r\n\r\n        this.ShowAntibiotics = true;\r\n      }\r\n    });\r\n\r\n    bus.$on(\"tabChanged\", (data) => {\r\n      // console.log(\"Tab changed.\");\r\n      this.CurrentTab = data;\r\n      // console.log(\"Active tab: \" + this.CurrentTab)\r\n    });\r\n\r\n    bus.$on(\"AllowClick\", (data) => {\r\n      if (this.MicrobiologySample) {\r\n        if (data) {\r\n          this.AllowGetSample = false;\r\n          // console.log(\"Close sample.\")\r\n        } else {\r\n          this.AllowGetSample = true;\r\n          // console.log(\"Open sample.\");\r\n        }\r\n      }\r\n    });\r\n\r\n    bus.$on(\"MicroReset\", () => {\r\n      console.log(\"Reset: \" + this.$store.state.sid);\r\n      var Scenario = this.MicrobiologyScenario;\r\n\r\n      this.rezultati[0].rezultat = \"\";\r\n      this.rezultati[0].rezultat_m = [];\r\n      this.rezultati[0].realizovan = false;\r\n\r\n      this.MicrobiologyResult.DefaultBacteries.forEach((element) => {\r\n        element.chosen = false;\r\n      });\r\n\r\n      this.MicrobiologyResult.RemainingBacteries.forEach((element) => {\r\n        element.chosen = false;\r\n      });\r\n\r\n      this.SelectedBacteries = [];\r\n      this.ShowAllBacteries = false;\r\n\r\n      if (this.MicrobiologyScenario.includes(\"MAIB\")) {\r\n        this.main = false;\r\n        // console.log(this.rezultati)\r\n\r\n        http\r\n          .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n            email: this.$store.state.userId,\r\n            token: this.$store.state.token,\r\n            site: this.$store.state.site,\r\n            rezultati: this.rezultati,\r\n          })\r\n          .then((res) => {\r\n            http\r\n              .get(\r\n                \"rezultati/odobravanje/samples/\" +\r\n                  this.$route.params.patient +\r\n                  \"/\" +\r\n                  this.$route.params.id +\r\n                  \"?token=\" +\r\n                  this.$store.state.token +\r\n                  \"&site=\" +\r\n                  this.$store.state.site +\r\n                  \"&date=\" +\r\n                  this.$route.query.date,\r\n                {}\r\n              )\r\n              .then((res) => {\r\n                // console.log(res.data)\r\n                this.uzorci = [];\r\n\r\n                res.data.results.forEach((element) => {\r\n                  if (this.$store.state.sid === element.id) {\r\n                    console.log(element.rezultati[0].rezultat[0]);\r\n                  }\r\n\r\n                  var check = 0;\r\n                  var zaprimljen = 0;\r\n                  var realizovan = 0;\r\n\r\n                  if (element.verificiran) {\r\n                    var status_uzorka = \"VERIFICIRAN\";\r\n                  } else {\r\n                    var status_uzorka = element.status;\r\n                  }\r\n\r\n                  element.rezultati.forEach((test) => {\r\n                    check++;\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                    ) {\r\n                      zaprimljen++;\r\n                    }\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                    ) {\r\n                      realizovan++;\r\n                    }\r\n\r\n                    if (check === element.rezultati.length) {\r\n                      // console.log(\"Provjera: Reset sample\")\r\n\r\n                      if (status_uzorka === \"VERIFICIRAN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"VERIFICIRAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      } else if (status_uzorka === \"ODOBREN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"ODOBREN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      } else if (zaprimljen < 1) {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"REALIZOVAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      } else if (realizovan < 1) {\r\n                        var stat = \"ZAPRIMLJEN\";\r\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                          if (\r\n                            element.rezultati[0].rezultat[0].rezultat_m.length\r\n                          ) {\r\n                            stat = \"REALIZOVAN\";\r\n                          }\r\n                        }\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: stat,\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      } else {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"U OBRADI\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      }\r\n                    }\r\n                  });\r\n                });\r\n\r\n                this.uzorci = this.uzorci.sort(function (a, b) {\r\n                  return a.sid.localeCompare(b.sid, undefined, {\r\n                    numeric: true,\r\n                    sensitivity: \"base\",\r\n                  });\r\n                });\r\n              })\r\n              .then((res) => {\r\n                this.MicrobiologyScenario = \"MAIBNoR\";\r\n                console.log(\r\n                  \"Scenario: \" + Scenario + \" - > \" + this.MicrobiologyScenario\r\n                );\r\n                this.main = true;\r\n                bus.$emit(\"CloseMicroReset\");\r\n              });\r\n          });\r\n      } else if (this.MicrobiologyScenario.includes(\"MANB\")) {\r\n        this.main = false;\r\n\r\n        http\r\n          .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n            email: this.$store.state.userId,\r\n            token: this.$store.state.token,\r\n            site: this.$store.state.site,\r\n            rezultati: this.rezultati,\r\n          })\r\n          .then((res) => {\r\n            http\r\n              .get(\r\n                \"rezultati/odobravanje/samples/\" +\r\n                  this.$route.params.patient +\r\n                  \"/\" +\r\n                  this.$route.params.id +\r\n                  \"?token=\" +\r\n                  this.$store.state.token +\r\n                  \"&site=\" +\r\n                  this.$store.state.site +\r\n                  \"&date=\" +\r\n                  this.$route.query.date,\r\n                {}\r\n              )\r\n              .then((res) => {\r\n                // console.log(res.data)\r\n                this.uzorci = [];\r\n\r\n                res.data.results.forEach((element) => {\r\n                  if (this.$store.state.sid === element.id) {\r\n                    console.log(element.rezultati[0].rezultat[0]);\r\n                  }\r\n\r\n                  var check = 0;\r\n                  var zaprimljen = 0;\r\n                  var realizovan = 0;\r\n\r\n                  if (element.verificiran) {\r\n                    var status_uzorka = \"VERIFICIRAN\";\r\n                  } else {\r\n                    var status_uzorka = element.status;\r\n                  }\r\n\r\n                  element.rezultati.forEach((test) => {\r\n                    check++;\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                    ) {\r\n                      zaprimljen++;\r\n                    }\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                    ) {\r\n                      realizovan++;\r\n                    }\r\n\r\n                    if (check === element.rezultati.length) {\r\n                      if (status_uzorka === \"VERIFICIRAN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"VERIFICIRAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      } else if (status_uzorka === \"ODOBREN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"ODOBREN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      } else if (zaprimljen < 1) {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"REALIZOVAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      } else if (realizovan < 1) {\r\n                        var stat = \"ZAPRIMLJEN\";\r\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                          if (\r\n                            element.rezultati[0].rezultat[0].rezultat_m.length\r\n                          ) {\r\n                            stat = \"REALIZOVAN\";\r\n                          }\r\n                        }\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: stat,\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      } else {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"U OBRADI\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      }\r\n                    }\r\n                  });\r\n                });\r\n\r\n                this.uzorci = this.uzorci.sort(function (a, b) {\r\n                  return a.sid.localeCompare(b.sid, undefined, {\r\n                    numeric: true,\r\n                    sensitivity: \"base\",\r\n                  });\r\n                });\r\n              })\r\n              .then((res) => {\r\n                this.MicrobiologyScenario = \"MANBNoR\";\r\n                console.log(\r\n                  \"Scenario: \" + Scenario + \" - > \" + this.MicrobiologyScenario\r\n                );\r\n                this.main = true;\r\n                bus.$emit(\"CloseMicroReset\");\r\n              });\r\n          });\r\n      } else {\r\n        // Error\r\n      }\r\n    });\r\n\r\n    bus.$on(\"MicroResult\", () => {\r\n      console.log(\"Defining result...\");\r\n\r\n      var Scenario = this.MicrobiologyScenario;\r\n\r\n      switch (this.MicrobiologyScenario) {\r\n        case \"MAIBNoR\":\r\n          // Ima definisan skup bakterija\r\n          this.rezultati[0].rezultat_m = [];\r\n          this.rezultati[0].rezultat_m.push({\r\n            bakterija: false,\r\n            negativan: this.ModalNegative,\r\n            pozitivan: this.ModalPositive,\r\n            _id: null,\r\n            naziv: null,\r\n            opis: null,\r\n            antibiogram: {\r\n              _id: null,\r\n              naziv: null,\r\n              opis: null,\r\n              antibiotici: [\r\n                {\r\n                  _id: null,\r\n                  rbr_a: null,\r\n                  naziv: null,\r\n                  opis: null,\r\n                  rezultat: null,\r\n                },\r\n              ],\r\n            },\r\n          });\r\n\r\n          if (this.ModalNegative) {\r\n            this.rezultati[0].rezultat = this.NegativeResultSelection;\r\n            this.isLoading = true;\r\n            this.main = false;\r\n\r\n            http\r\n              .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n                email: this.$store.state.userId,\r\n                token: this.$store.state.token,\r\n                site: this.$store.state.site,\r\n                rezultati: this.rezultati,\r\n              })\r\n              .then((res) => {\r\n                http\r\n                  .get(\r\n                    \"rezultati/odobravanje/samples/\" +\r\n                      this.$route.params.patient +\r\n                      \"/\" +\r\n                      this.$route.params.id +\r\n                      \"?token=\" +\r\n                      this.$store.state.token +\r\n                      \"&site=\" +\r\n                      this.$store.state.site +\r\n                      \"&date=\" +\r\n                      this.$route.query.date,\r\n                    {}\r\n                  )\r\n                  .then((res) => {\r\n                    this.uzorci = [];\r\n\r\n                    res.data.results.forEach((element) => {\r\n                      if (this.$store.state.sid === element.id) {\r\n                        console.log(element.rezultati[0].rezultat[0]);\r\n                      }\r\n\r\n                      var check = 0;\r\n                      var zaprimljen = 0;\r\n                      var realizovan = 0;\r\n\r\n                      if (element.verificiran) {\r\n                        var status_uzorka = \"VERIFICIRAN\";\r\n                      } else {\r\n                        var status_uzorka = element.status;\r\n                      }\r\n\r\n                      element.rezultati.forEach((test) => {\r\n                        check++;\r\n\r\n                        if (\r\n                          test.rezultat[test.rezultat.length - 1].rezultat_f ===\r\n                          \"\"\r\n                        ) {\r\n                          zaprimljen++;\r\n                        }\r\n\r\n                        if (\r\n                          test.rezultat[test.rezultat.length - 1].rezultat_f !=\r\n                          \"\"\r\n                        ) {\r\n                          realizovan++;\r\n                        }\r\n\r\n                        if (check === element.rezultati.length) {\r\n                          if (status_uzorka === \"VERIFICIRAN\") {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"VERIFICIRAN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false,\r\n                            });\r\n                          } else if (status_uzorka === \"ODOBREN\") {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"ODOBREN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false,\r\n                            });\r\n                          } else if (zaprimljen < 1) {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"REALIZOVAN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false,\r\n                            });\r\n                          } else if (realizovan < 1) {\r\n                            var stat = \"ZAPRIMLJEN\";\r\n                            if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                              if (\r\n                                element.rezultati[0].rezultat[0].rezultat_m\r\n                                  .length\r\n                              ) {\r\n                                stat = \"REALIZOVAN\";\r\n                              }\r\n                            }\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: stat,\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false,\r\n                            });\r\n                          } else {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"U OBRADI\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false,\r\n                            });\r\n                          }\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    this.uzorci = this.uzorci.sort(function (a, b) {\r\n                      return a.sid.localeCompare(b.sid, undefined, {\r\n                        numeric: true,\r\n                        sensitivity: \"base\",\r\n                      });\r\n                    });\r\n                  })\r\n                  .then((res) => {\r\n                    bus.$emit(\"CloseMicroResult\");\r\n                    this.rezultati[0].realizovan = true;\r\n                    this.MicrobiologyScenario = \"MAIBNeR\";\r\n                    console.log(\r\n                      \"Scenario: \" +\r\n                        Scenario +\r\n                        \" - > \" +\r\n                        this.MicrobiologyScenario\r\n                    );\r\n                    this.main = true;\r\n                    this.isLoading = false;\r\n                  });\r\n              });\r\n          } else {\r\n            this.PositiveResultSelection = \"\";\r\n            this.SelectedBacteries.forEach((element) => {\r\n              this.PositiveResultSelection =\r\n                this.PositiveResultSelection + element.opis + \"\\n\";\r\n              var Antibiotici = [];\r\n              var antibiotik = {};\r\n\r\n              this.Antibiotics.forEach((antibiotik) => {\r\n                element.antibiogram.antibiotici.forEach((ant) => {\r\n                  if (antibiotik._id == ant) {\r\n                    antibiotik = {\r\n                      _id: antibiotik._id,\r\n                      rbr_a: antibiotik.rbr_a,\r\n                      naziv: antibiotik.naziv,\r\n                      opis: antibiotik.opis,\r\n                      disabled: false,\r\n                      rezultat: \"\",\r\n                    };\r\n                    Antibiotici.push(antibiotik);\r\n                    antibiotik = {};\r\n                  }\r\n                });\r\n              });\r\n\r\n              this.rezultati[0].rezultat_m.push({\r\n                bakterija: true,\r\n                negativan: this.largeModalneg,\r\n                pozitivan: this.largeModalpos,\r\n                _id: element._id,\r\n                naziv: element.naziv,\r\n                opis: element.opis,\r\n                antibiogram: {\r\n                  _id: element.antibiogram._id,\r\n                  naziv: element.antibiogram.naziv,\r\n                  opis: element.antibiogram.opis,\r\n                  antibiotici: [...Antibiotici],\r\n                },\r\n              });\r\n            });\r\n\r\n            this.rezultati[0].rezultat = this.PositiveResultSelection.trim();\r\n            this.isLoading = true;\r\n            this.main = false;\r\n\r\n            http\r\n              .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n                email: this.$store.state.userId,\r\n                token: this.$store.state.token,\r\n                site: this.$store.state.site,\r\n                rezultati: this.rezultati,\r\n              })\r\n              .then((res) => {\r\n                http\r\n                  .get(\r\n                    \"rezultati/odobravanje/samples/\" +\r\n                      this.$route.params.patient +\r\n                      \"/\" +\r\n                      this.$route.params.id +\r\n                      \"?token=\" +\r\n                      this.$store.state.token +\r\n                      \"&site=\" +\r\n                      this.$store.state.site +\r\n                      \"&date=\" +\r\n                      this.$route.query.date,\r\n                    {}\r\n                  )\r\n                  .then((res) => {\r\n                    this.uzorci = [];\r\n\r\n                    res.data.results.forEach((element) => {\r\n                      if (this.$store.state.sid === element.id) {\r\n                        console.log(element.rezultati[0].rezultat[0]);\r\n                      }\r\n\r\n                      var check = 0;\r\n                      var zaprimljen = 0;\r\n                      var realizovan = 0;\r\n\r\n                      if (element.verificiran) {\r\n                        var status_uzorka = \"VERIFICIRAN\";\r\n                      } else {\r\n                        var status_uzorka = element.status;\r\n                      }\r\n\r\n                      element.rezultati.forEach((test) => {\r\n                        check++;\r\n\r\n                        if (\r\n                          test.rezultat[test.rezultat.length - 1].rezultat_f ===\r\n                          \"\"\r\n                        ) {\r\n                          zaprimljen++;\r\n                        }\r\n\r\n                        if (\r\n                          test.rezultat[test.rezultat.length - 1].rezultat_f !=\r\n                          \"\"\r\n                        ) {\r\n                          realizovan++;\r\n                        }\r\n\r\n                        if (check === element.rezultati.length) {\r\n                          if (status_uzorka === \"VERIFICIRAN\") {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"VERIFICIRAN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false,\r\n                            });\r\n                          } else if (status_uzorka === \"ODOBREN\") {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"ODOBREN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false,\r\n                            });\r\n                          } else if (zaprimljen < 1) {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"REALIZOVAN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false,\r\n                            });\r\n                          } else if (realizovan < 1) {\r\n                            var stat = \"ZAPRIMLJEN\";\r\n                            if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                              if (\r\n                                element.rezultati[0].rezultat[0].rezultat_m\r\n                                  .length\r\n                              ) {\r\n                                stat = \"REALIZOVAN\";\r\n                              }\r\n                            }\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: stat,\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false,\r\n                            });\r\n                          } else {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"U OBRADI\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false,\r\n                            });\r\n                          }\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    this.uzorci = this.uzorci.sort(function (a, b) {\r\n                      return a.sid.localeCompare(b.sid, undefined, {\r\n                        numeric: true,\r\n                        sensitivity: \"base\",\r\n                      });\r\n                    });\r\n                  })\r\n                  .then((res) => {\r\n                    bus.$emit(\"CloseMicroResult\");\r\n                    this.rezultati[0].realizovan = true;\r\n                    this.MicrobiologyScenario = \"MAIBPoR\";\r\n                    console.log(\r\n                      \"Scenario: \" +\r\n                        Scenario +\r\n                        \" - > \" +\r\n                        this.MicrobiologyScenario\r\n                    );\r\n                    this.main = true;\r\n                    this.isLoading = false;\r\n                  });\r\n              });\r\n          }\r\n\r\n          break;\r\n\r\n        case \"MANBNoR\":\r\n          // Nema definisan skup bakterija\r\n          this.rezultati[0].rezultat_m = [\r\n            {\r\n              bakterija: false,\r\n              negativan: this.ModalNegative,\r\n              pozitivan: this.ModalPositive,\r\n              _id: null,\r\n              naziv: null,\r\n              opis: null,\r\n              antibiogram: {\r\n                _id: null,\r\n                naziv: null,\r\n                opis: null,\r\n                antibiotici: [\r\n                  {\r\n                    _id: null,\r\n                    rbr_a: null,\r\n                    naziv: null,\r\n                    opis: null,\r\n                    rezultat: null,\r\n                  },\r\n                ],\r\n              },\r\n            },\r\n          ];\r\n\r\n          if (this.ModalNegative) {\r\n            this.rezultati[0].rezultat = this.NegativeResultSelection;\r\n            this.isLoading = true;\r\n            this.main = false;\r\n\r\n            http\r\n              .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n                email: this.$store.state.userId,\r\n                token: this.$store.state.token,\r\n                site: this.$store.state.site,\r\n                rezultati: this.rezultati,\r\n              })\r\n              .then((res) => {\r\n                http\r\n                  .get(\r\n                    \"rezultati/odobravanje/samples/\" +\r\n                      this.$route.params.patient +\r\n                      \"/\" +\r\n                      this.$route.params.id +\r\n                      \"?token=\" +\r\n                      this.$store.state.token +\r\n                      \"&site=\" +\r\n                      this.$store.state.site +\r\n                      \"&date=\" +\r\n                      this.$route.query.date,\r\n                    {}\r\n                  )\r\n                  .then((res) => {\r\n                    this.uzorci = [];\r\n\r\n                    res.data.results.forEach((element) => {\r\n                      if (this.$store.state.sid === element.id) {\r\n                        console.log(element.rezultati[0].rezultat[0]);\r\n                      }\r\n\r\n                      var check = 0;\r\n                      var zaprimljen = 0;\r\n                      var realizovan = 0;\r\n\r\n                      if (element.verificiran) {\r\n                        var status_uzorka = \"VERIFICIRAN\";\r\n                      } else {\r\n                        var status_uzorka = element.status;\r\n                      }\r\n\r\n                      element.rezultati.forEach((test) => {\r\n                        check++;\r\n\r\n                        if (\r\n                          test.rezultat[test.rezultat.length - 1].rezultat_f ===\r\n                          \"\"\r\n                        ) {\r\n                          zaprimljen++;\r\n                        }\r\n\r\n                        if (\r\n                          test.rezultat[test.rezultat.length - 1].rezultat_f !=\r\n                          \"\"\r\n                        ) {\r\n                          realizovan++;\r\n                        }\r\n\r\n                        if (check === element.rezultati.length) {\r\n                          if (status_uzorka === \"VERIFICIRAN\") {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"VERIFICIRAN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false,\r\n                            });\r\n                          } else if (status_uzorka === \"ODOBREN\") {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"ODOBREN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false,\r\n                            });\r\n                          } else if (zaprimljen < 1) {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"REALIZOVAN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false,\r\n                            });\r\n                          } else if (realizovan < 1) {\r\n                            var stat = \"ZAPRIMLJEN\";\r\n                            if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                              if (\r\n                                element.rezultati[0].rezultat[0].rezultat_m\r\n                                  .length\r\n                              ) {\r\n                                stat = \"REALIZOVAN\";\r\n                              }\r\n                            }\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: stat,\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false,\r\n                            });\r\n                          } else {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"U OBRADI\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false,\r\n                            });\r\n                          }\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    this.uzorci = this.uzorci.sort(function (a, b) {\r\n                      return a.sid.localeCompare(b.sid, undefined, {\r\n                        numeric: true,\r\n                        sensitivity: \"base\",\r\n                      });\r\n                    });\r\n                  })\r\n                  .then((res) => {\r\n                    bus.$emit(\"CloseMicroResult\");\r\n                    this.rezultati[0].realizovan = true;\r\n                    this.MicrobiologyScenario = \"MANBNeR\";\r\n                    console.log(\r\n                      \"Scenario: \" +\r\n                        Scenario +\r\n                        \" - > \" +\r\n                        this.MicrobiologyScenario\r\n                    );\r\n                    this.main = true;\r\n                    this.isLoading = false;\r\n                  });\r\n              });\r\n          } else {\r\n            this.rezultati[0].rezultat = this.PositiveResultSelection;\r\n            this.isLoading = true;\r\n            this.main = false;\r\n\r\n            http\r\n              .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n                email: this.$store.state.userId,\r\n                token: this.$store.state.token,\r\n                site: this.$store.state.site,\r\n                rezultati: this.rezultati,\r\n              })\r\n              .then((res) => {\r\n                http\r\n                  .get(\r\n                    \"rezultati/odobravanje/samples/\" +\r\n                      this.$route.params.patient +\r\n                      \"/\" +\r\n                      this.$route.params.id +\r\n                      \"?token=\" +\r\n                      this.$store.state.token +\r\n                      \"&site=\" +\r\n                      this.$store.state.site +\r\n                      \"&date=\" +\r\n                      this.$route.query.date,\r\n                    {}\r\n                  )\r\n                  .then((res) => {\r\n                    this.uzorci = [];\r\n\r\n                    res.data.results.forEach((element) => {\r\n                      if (this.$store.state.sid === element.id) {\r\n                        console.log(element.rezultati[0].rezultat[0]);\r\n                      }\r\n\r\n                      var check = 0;\r\n                      var zaprimljen = 0;\r\n                      var realizovan = 0;\r\n\r\n                      if (element.verificiran) {\r\n                        var status_uzorka = \"VERIFICIRAN\";\r\n                      } else {\r\n                        var status_uzorka = element.status;\r\n                      }\r\n\r\n                      element.rezultati.forEach((test) => {\r\n                        check++;\r\n\r\n                        if (\r\n                          test.rezultat[test.rezultat.length - 1].rezultat_f ===\r\n                          \"\"\r\n                        ) {\r\n                          zaprimljen++;\r\n                        }\r\n\r\n                        if (\r\n                          test.rezultat[test.rezultat.length - 1].rezultat_f !=\r\n                          \"\"\r\n                        ) {\r\n                          realizovan++;\r\n                        }\r\n\r\n                        if (check === element.rezultati.length) {\r\n                          if (status_uzorka === \"VERIFICIRAN\") {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"VERIFICIRAN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false,\r\n                            });\r\n                          } else if (status_uzorka === \"ODOBREN\") {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"ODOBREN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false,\r\n                            });\r\n                          } else if (zaprimljen < 1) {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"REALIZOVAN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false,\r\n                            });\r\n                          } else if (realizovan < 1) {\r\n                            var stat = \"ZAPRIMLJEN\";\r\n                            if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                              if (\r\n                                element.rezultati[0].rezultat[0].rezultat_m\r\n                                  .length\r\n                              ) {\r\n                                stat = \"REALIZOVAN\";\r\n                              }\r\n                            }\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: stat,\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false,\r\n                            });\r\n                          } else {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"U OBRADI\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false,\r\n                            });\r\n                          }\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    this.uzorci = this.uzorci.sort(function (a, b) {\r\n                      return a.sid.localeCompare(b.sid, undefined, {\r\n                        numeric: true,\r\n                        sensitivity: \"base\",\r\n                      });\r\n                    });\r\n                  })\r\n                  .then((res) => {\r\n                    bus.$emit(\"CloseMicroResult\");\r\n                    this.rezultati[0].realizovan = true;\r\n                    this.MicrobiologyScenario = \"MANBPoR\";\r\n                    console.log(\r\n                      \"Scenario: \" +\r\n                        Scenario +\r\n                        \" - > \" +\r\n                        this.MicrobiologyScenario\r\n                    );\r\n                    this.main = true;\r\n                    this.isLoading = false;\r\n                  });\r\n              });\r\n          }\r\n\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n\r\n    bus.$on(\"ResetResultSelection\", () => {\r\n      // console.log('Clearing...');\r\n      switch (this.MicrobiologyScenario) {\r\n        case \"MAIBNoR\":\r\n          this.ModalNegative = false;\r\n          this.ModalPositive = false;\r\n          this.ModalPositiveCondition = false;\r\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\r\n          this.NegativeResultSelection = \"\";\r\n          this.PositiveResultSelection = \"\";\r\n          this.SelectedBacteries = [];\r\n          this.ShowAllBacteries = false;\r\n\r\n          break;\r\n\r\n        case \"MAIBNeR\":\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        case \"MAIBPoR\":\r\n          break;\r\n\r\n        case \"MANBNoR\":\r\n          this.ModalNegative = false;\r\n          this.ModalPositive = false;\r\n          this.ModalPositiveCondition = false;\r\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\r\n          this.NegativeResultSelection = \"\";\r\n          this.PositiveResultSelection = \"\";\r\n          this.SelectedBacteries = [];\r\n          this.ShowAllBacteries = false;\r\n\r\n          break;\r\n\r\n        case \"MANBNeR\":\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        case \"MANBPoR\":\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n\r\n      this.MicrobiologyResult.DefaultBacteries.forEach((element) => {\r\n        element.chosen = false;\r\n      });\r\n\r\n      this.MicrobiologyResult.RemainingBacteries.forEach((element) => {\r\n        element.chosen = false;\r\n      });\r\n\r\n      this.SelectedBacteries = [];\r\n      this.ShowAllBacteries = false;\r\n    });\r\n\r\n    bus.$on(\"CancelMicroResult\", () => {\r\n      switch (this.MicrobiologyScenario) {\r\n        case \"MAIBNoR\":\r\n          this.ModalNegative = false;\r\n          this.ModalPositive = false;\r\n          this.ModalPositiveCondition = false;\r\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\r\n          this.NegativeResultSelection = \"\";\r\n          this.PositiveResultSelection = \"\";\r\n          this.SelectedBacteries = [];\r\n          this.ShowAllBacteries = false;\r\n\r\n          break;\r\n\r\n        case \"MAIBNeR\":\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        case \"MAIBPoR\":\r\n          break;\r\n\r\n        case \"MANBNoR\":\r\n          this.ModalNegative = false;\r\n          this.ModalPositive = false;\r\n          this.ModalPositiveCondition = false;\r\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\r\n          this.NegativeResultSelection = \"\";\r\n          this.PositiveResultSelection = \"\";\r\n          this.SelectedBacteries = [];\r\n          this.ShowAllBacteries = false;\r\n\r\n          break;\r\n\r\n        case \"MANBNeR\":\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        case \"MANBPoR\":\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n\r\n      this.MicrobiologyResult.DefaultBacteries.forEach((element) => {\r\n        element.chosen = false;\r\n      });\r\n\r\n      this.MicrobiologyResult.RemainingBacteries.forEach((element) => {\r\n        element.chosen = false;\r\n      });\r\n\r\n      this.SelectedBacteries = [];\r\n      this.ShowAllBacteries = false;\r\n    });\r\n\r\n    bus.$on(\"MicroBactery\", () => {\r\n      console.log(\"Saving main result...\");\r\n\r\n      this.isLoading = true;\r\n      this.main = false;\r\n\r\n      http\r\n        .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n          email: this.$store.state.userId,\r\n          token: this.$store.state.token,\r\n          site: this.$store.state.site,\r\n          rezultati: this.rezultati,\r\n        })\r\n        .then((res) => {\r\n          http\r\n            .get(\r\n              \"rezultati/odobravanje/samples/\" +\r\n                this.$route.params.patient +\r\n                \"/\" +\r\n                this.$route.params.id +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&date=\" +\r\n                this.$route.query.date,\r\n              {}\r\n            )\r\n            .then((res) => {\r\n              this.uzorci = [];\r\n\r\n              res.data.results.forEach((element) => {\r\n                if (this.$store.state.sid === element.id) {\r\n                  console.log(element.rezultati[0].rezultat[0]);\r\n                }\r\n\r\n                var check = 0;\r\n                var zaprimljen = 0;\r\n                var realizovan = 0;\r\n\r\n                if (element.verificiran) {\r\n                  var status_uzorka = \"VERIFICIRAN\";\r\n                } else {\r\n                  var status_uzorka = element.status;\r\n                }\r\n\r\n                element.rezultati.forEach((test) => {\r\n                  check++;\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                  ) {\r\n                    zaprimljen++;\r\n                  }\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                  ) {\r\n                    realizovan++;\r\n                  }\r\n\r\n                  if (check === element.rezultati.length) {\r\n                    if (status_uzorka === \"VERIFICIRAN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"VERIFICIRAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else if (status_uzorka === \"ODOBREN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"ODOBREN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else if (zaprimljen < 1) {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"REALIZOVAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else if (realizovan < 1) {\r\n                      var stat = \"ZAPRIMLJEN\";\r\n                      if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                        if (\r\n                          element.rezultati[0].rezultat[0].rezultat_m.length\r\n                        ) {\r\n                          stat = \"REALIZOVAN\";\r\n                        }\r\n                      }\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: stat,\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"U OBRADI\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    }\r\n                  }\r\n                });\r\n              });\r\n\r\n              this.uzorci = this.uzorci.sort(function (a, b) {\r\n                return a.sid.localeCompare(b.sid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\",\r\n                });\r\n              });\r\n            })\r\n            .then((res) => {\r\n              this.main = true;\r\n              this.isLoading = false;\r\n              bus.$emit(\"CloseMicroBactery\");\r\n            });\r\n        });\r\n    });\r\n\r\n    bus.$on(\"CancelMicroBactery\", () => {});\r\n\r\n    bus.$on(\"PovratakMicroBactery\", () => {\r\n      this.ShowAntibiotics = false;\r\n      this.ShowBacteries = false;\r\n    });\r\n\r\n    bus.$on(\"SpasiMicroBactery\", () => {\r\n      if (this.TemporaryBacteriesAdd.length) {\r\n        console.log(\"Dodavanje bakterija...\");\r\n        var bakterija = {};\r\n        var antibiogram = {};\r\n        var antibiotik = {};\r\n\r\n        this.TemporaryBacteriesAdd.forEach((element) => {\r\n          this.Antibiograms.forEach((antibgr) => {\r\n            if (\r\n              JSON.stringify(element.antibiogram._id) ===\r\n              JSON.stringify(antibgr._id)\r\n            ) {\r\n              antibiogram = antibgr;\r\n            }\r\n          });\r\n\r\n          antibiogram.antibiotici.forEach((antbtk) => {\r\n            antbtk.disabled = false;\r\n            antbtk.rezultat = \"\";\r\n          });\r\n\r\n          bakterija.bakterija = true;\r\n          bakterija._id = element._id;\r\n          bakterija.naziv = element.naziv;\r\n          bakterija.opis = element.opis;\r\n          bakterija.antibiogram = antibiogram;\r\n\r\n          console.log(bakterija);\r\n\r\n          this.SelectedBacteries.push(bakterija);\r\n          this.BacteryTabs.push(bakterija.opis);\r\n          this.rezultati[0].rezultat_m.push(bakterija);\r\n          this.rezultati[0].rezultat =\r\n            this.rezultati[0].rezultat + \"\\n\" + bakterija.opis;\r\n          bakterija = {};\r\n          antibiogram = {};\r\n        });\r\n\r\n        /* var element = {\r\n          chosen: true,\r\n          disabled: false,\r\n          _id: \"5d95cfe793a77e0fec61aa6a\",\r\n          naziv: \"Bakterija 3\",\r\n          opis: \"Bakterija 3\",\r\n          antibiogram: {\r\n            antibiotici: [\r\n              \"5d90ae5e89d972109c76c1b1\",\r\n              \"5d90aed589d972109c76c1b3\",\r\n              \"5d90af2389d972109c76c1b4\",\r\n              \"5d90ae8289d972109c76c1b2\",\r\n              \"5d90afe089d972109c76c1b8\",\r\n              \"5d90b00f89d972109c76c1b9\",\r\n              \"5d90b02289d972109c76c1ba\"\r\n            ],\r\n            _id: \"5d94750593a77e0fec61a8e9\",\r\n            naziv: \"Antibiogram 2\",\r\n            opis: \"Antibiogram 2\",\r\n            __v: 0\r\n          },\r\n          __v: 0\r\n        }; */\r\n\r\n        /* var bakterija = {\r\n          bakterija: true,\r\n          _id: \"5d94751193a77e0fec61a8ea\",\r\n          naziv: \"Bakterija 1\",\r\n          opis: \"Bakterija 1\",\r\n          antibiogram: {\r\n            _id: \"5d9474f893a77e0fec61a8e8\",\r\n            naziv: \"Antibiogram 1\",\r\n            opis: \"Antibiogram 1\",\r\n            antibiotici: [\r\n              {\r\n                _id: \"5d90ae3489d972109c76c1b0\",\r\n                rbr_a: \"0\",\r\n                naziv: \"FOX\",\r\n                opis: \"Cefoxitin\",\r\n                disabled: false,\r\n                rezultat: \"S\"\r\n              },\r\n              {\r\n                _id: \"5d90ae8289d972109c76c1b2\",\r\n                rbr_a: \"0\",\r\n                naziv: \"Cd\",\r\n                opis: \"Clindamycin\",\r\n                disabled: false,\r\n                rezultat: \"\"\r\n              },\r\n              {\r\n                _id: \"5d90af2389d972109c76c1b4\",\r\n                rbr_a: \"0\",\r\n                naziv: \"C\",\r\n                opis: \"Chloramphenicol \",\r\n                disabled: false,\r\n                rezultat: \"\"\r\n              },\r\n              {\r\n                _id: \"5d90af6e89d972109c76c1b6\",\r\n                rbr_a: \"0\",\r\n                naziv: \"TE\",\r\n                opis: \"Tetracycline\",\r\n                disabled: false,\r\n                rezultat: \"\"\r\n              }\r\n            ]\r\n          }\r\n        }; */\r\n      } else {\r\n        console.log(\"Dodavanje antibiotika...\");\r\n      }\r\n\r\n      if (\r\n        this.TemporaryAntibiotics.length ||\r\n        this.TemporaryBacteriesAdd.length\r\n      ) {\r\n        this.TemporaryAntibiotics.forEach((element) => {\r\n          this.rezultati[0].rezultat_m.forEach((selected) => {\r\n            if (selected.opis == this.CurrentTab) {\r\n              selected.antibiogram.antibiotici.push(element);\r\n            }\r\n          });\r\n        });\r\n\r\n        // this.show_table = false;\r\n        this.isLoading = true;\r\n        this.main = false;\r\n\r\n        http\r\n          .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n            email: this.$store.state.userId,\r\n            token: this.$store.state.token,\r\n            site: this.$store.state.site,\r\n            rezultati: this.rezultati,\r\n          })\r\n          .then((res) => {\r\n            http\r\n              .get(\r\n                \"rezultati/odobravanje/samples/\" +\r\n                  this.$route.params.patient +\r\n                  \"/\" +\r\n                  this.$route.params.id +\r\n                  \"?token=\" +\r\n                  this.$store.state.token +\r\n                  \"&site=\" +\r\n                  this.$store.state.site +\r\n                  \"&date=\" +\r\n                  this.$route.query.date,\r\n                {}\r\n              )\r\n              .then((res) => {\r\n                this.uzorci = [];\r\n\r\n                res.data.results.forEach((element) => {\r\n                  if (this.$store.state.sid === element.id) {\r\n                    console.log(element.rezultati[0].rezultat[0]);\r\n                  }\r\n\r\n                  var check = 0;\r\n                  var zaprimljen = 0;\r\n                  var realizovan = 0;\r\n\r\n                  if (element.verificiran) {\r\n                    var status_uzorka = \"VERIFICIRAN\";\r\n                  } else {\r\n                    var status_uzorka = element.status;\r\n                  }\r\n\r\n                  element.rezultati.forEach((test) => {\r\n                    check++;\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                    ) {\r\n                      zaprimljen++;\r\n                    }\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                    ) {\r\n                      realizovan++;\r\n                    }\r\n\r\n                    if (check === element.rezultati.length) {\r\n                      if (status_uzorka === \"VERIFICIRAN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"VERIFICIRAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      } else if (status_uzorka === \"ODOBREN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"ODOBREN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      } else if (zaprimljen < 1) {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"REALIZOVAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      } else if (realizovan < 1) {\r\n                        var stat = \"ZAPRIMLJEN\";\r\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                          if (\r\n                            element.rezultati[0].rezultat[0].rezultat_m.length\r\n                          ) {\r\n                            stat = \"REALIZOVAN\";\r\n                          }\r\n                        }\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: stat,\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      } else {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"U OBRADI\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      }\r\n                    }\r\n                  });\r\n                });\r\n\r\n                this.uzorci = this.uzorci.sort(function (a, b) {\r\n                  return a.sid.localeCompare(b.sid, undefined, {\r\n                    numeric: true,\r\n                    sensitivity: \"base\",\r\n                  });\r\n                });\r\n              })\r\n              .then((res) => {\r\n                this.MicrobiologyScenario = \"MAIBPoR\";\r\n                this.ShowAntibiotics = false;\r\n                this.ShowBacteries = false;\r\n                // this.show_table = true;\r\n                this.main = true;\r\n                this.isLoading = false;\r\n\r\n                if (this.TemporaryBacteriesAdd.length) {\r\n                  this.CurrentTab = this.BacteryTabs[\r\n                    this.BacteryTabs.length - 1\r\n                  ];\r\n                }\r\n              });\r\n          });\r\n      } else {\r\n        this.MicrobiologyScenario = \"MAIBPoR\";\r\n        this.ShowAntibiotics = false;\r\n        this.ShowBacteries = false;\r\n      }\r\n    });\r\n\r\n    bus.$on(\"UpdateMicroBactery\", (data) => {\r\n      if (\r\n        !this.ShowAntibiotics &&\r\n        !this.ShowBacteries &&\r\n        this.MicrobiologyScenario === \"MAIBPoR\"\r\n      ) {\r\n        if (\r\n          this.sample.status != \"ODOBREN\" &&\r\n          this.sample.status != \"VERIFICIRAN\"\r\n        ) {\r\n          this.TemporaryAntibiotics = [];\r\n          this.TemporaryBacteries = [];\r\n          this.TemporaryBacteriesAdd = [];\r\n          var obj = {};\r\n\r\n          this.Bacteries.forEach((element) => {\r\n            obj.chosen = false;\r\n            obj.disabled = false;\r\n            obj._id = element._id;\r\n            obj.naziv = element.naziv;\r\n            obj.opis = element.opis;\r\n            obj.antibiogram = element.antibiogram;\r\n            obj.__v = element.__v;\r\n            obj.chosen = element.chosen;\r\n            this.TemporaryBacteries.push(obj);\r\n            obj = {};\r\n          });\r\n\r\n          this.TemporaryBacteries.forEach((element) => {\r\n            this.SelectedBacteries.forEach((selected) => {\r\n              if (selected._id == element._id) {\r\n                element.chosen = true;\r\n                element.disabled = true;\r\n              }\r\n            });\r\n          });\r\n\r\n          this.ShowBacteries = true;\r\n        }\r\n      }\r\n    });\r\n\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* \r\n\r\n\r\n\r\n\r\n\r\nEnd of | Microbiology Bus from Modal\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n  },\r\n\r\n  beforeDestroy() {\r\n    bus.$off(\"Parametar\");\r\n    bus.$off(\"trash\");\r\n    bus.$off(\"edit\");\r\n    bus.$off(\"comment\");\r\n    bus.$off(\"barcode\");\r\n    bus.$off(\"save\");\r\n    bus.$off(\"check\");\r\n    bus.$off(\"verify\");\r\n    bus.$off(\"undo\");\r\n    bus.$off(\"unlock\");\r\n    bus.$off(\"Nalaz\");\r\n    bus.$off(\"pdf\");\r\n    bus.$off(\"Sample\");\r\n    bus.$off(\"Deleted\");\r\n    bus.$off(\"Edited\");\r\n    bus.$off(\"SaveMulti\");\r\n    bus.$off(\"Mail\");\r\n    bus.$off(\"Error\");\r\n    bus.$off(\"Analyser\");\r\n    bus.$off(\"Sljedeci\");\r\n    bus.$off(\"Prethodni\");\r\n    bus.$off(\"Search\");\r\n    bus.$off(\"Push\");\r\n    bus.$off(\"Reference\");\r\n    bus.$off(\"graph\");\r\n    bus.$off(\"table\");\r\n    bus.$off(\"retest\");\r\n\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Bus Off\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n\r\n    // VuesticTabsBactery\r\n    bus.$off(\"tabChanged\");\r\n    bus.$off(\"Antibiotik\");\r\n\r\n    // VuesticModalMicroResult, bus.$emit(\"CloseMicroResult\")\r\n    bus.$off(\"MicroResult\");\r\n    bus.$off(\"ResetResultSelection\");\r\n    bus.$off(\"CancelMicroResult\");\r\n\r\n    // VuesticModalMicroReset\r\n    bus.$off(\"MicroReset\");\r\n\r\n    // VuesticCollapseObrada\r\n    bus.$off(\"AllowClick\");\r\n\r\n    // VuesticModalMicroBactery, bus.$emit(\"CloseMicroBactery\")\r\n    bus.$off(\"MicroBactery\");\r\n    bus.$off(\"CancelMicroBactery\");\r\n    bus.$off(\"PovratakMicroBactery\");\r\n    bus.$off(\"SpasiMicroBactery\");\r\n    bus.$off(\"UpdateMicroBactery\");\r\n\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* \r\n\r\n\r\n\r\n\r\n\r\nEnd of Microbiology Bus Off |\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n  },\r\n\r\n  destroyed() {\r\n    // console.log(\"Component is being destroyed...\");\r\n    // this.$destroy();\r\n  },\r\n\r\n  created() {\r\n    this.Created();\r\n\r\n    this.Previous.pid = Number(this.$route.params.id) - 1;\r\n    this.Next.pid = Number(this.$route.params.id) + 1;\r\n    this.query_date =\r\n      this.$route.query.date.substring(8, 10) +\r\n      \".\" +\r\n      this.$route.query.date.substring(5, 7) +\r\n      \".\" +\r\n      this.$route.query.date.substring(0, 4);\r\n\r\n    this.Datum.today = new Date(\r\n      JSON.stringify(\r\n        new Date(new Date().setDate(new Date().getDate()))\r\n      ).substring(1, 11) + \"T00:00:00\"\r\n    );\r\n\r\n    this.today_date =\r\n      JSON.stringify(new Date(new Date().setDate(new Date().getDate())))\r\n        .substring(1, 11)\r\n        .substring(8, 10) +\r\n      \".\" +\r\n      JSON.stringify(new Date(new Date().setDate(new Date().getDate())))\r\n        .substring(1, 11)\r\n        .substring(5, 7) +\r\n      \".\" +\r\n      JSON.stringify(new Date(new Date().setDate(new Date().getDate())))\r\n        .substring(1, 11)\r\n        .substring(0, 4);\r\n\r\n    this.Datum.query = new Date(\r\n      this.$route.query.date.substring(0, 10) + \"T00:00:00\"\r\n    );\r\n\r\n    this.Datum.next = new Date(\r\n      new Date(this.$route.query.date.substring(0, 10) + \"T00:00:00\").setDate(\r\n        this.Datum.query.getDate() + 1\r\n      )\r\n    );\r\n\r\n    this.Datum.previous = new Date(\r\n      new Date(this.$route.query.date.substring(0, 10) + \"T00:00:00\").setDate(\r\n        this.Datum.query.getDate() - 1\r\n      )\r\n    );\r\n\r\n    if (new Date(this.Datum.today) > new Date(this.Datum.query)) {\r\n      this.pagination = false;\r\n    } else if (new Date(this.Datum.today) < new Date(this.Datum.query)) {\r\n      this.pagination = false;\r\n    } else {\r\n      this.pagination = true;\r\n    }\r\n\r\n    this.interpretacije = this.interpretacije.sort(function (a, b) {\r\n      return a.localeCompare(b, undefined, {\r\n        numeric: true,\r\n        sensitivity: \"base\",\r\n      });\r\n    });\r\n  },\r\n\r\n  methods: {\r\n    RetestSave(data) {\r\n      this.isLoading = true;\r\n\r\n      // console.log(this.rezultati)\r\n\r\n      http\r\n        .post(\"rezultati/odobravanje/retest/save/\", {\r\n          sid: this.$store.state.sid,\r\n          rezultati: this.rezultati,\r\n          site: this.$store.state.site,\r\n          token: this.$store.state.token,\r\n        })\r\n        .then((res) => {\r\n          if (res.data.success) {\r\n            this.isLoading = false;\r\n            this.save_retest = false;\r\n          } else {\r\n          }\r\n        });\r\n    },\r\n\r\n    ExclamationMulti(test) {\r\n      this.warning = { analiza: \"\", text: \"\", napomena: \"\", control: \"\" };\r\n      var rezultat = test.rezultat\r\n        .replace(/,/g, \".\")\r\n        .replace(/</g, \"\")\r\n        .replace(/>/g, \"\");\r\n\r\n      var m_interp = {};\r\n      var m_opis = \"\";\r\n\r\n      // console.log(test.analit)\r\n\r\n      this.analitiprikaz.forEach((element) => {\r\n        element.labassay.multiparam.forEach((param) => {\r\n          if (JSON.stringify(param._id) == JSON.stringify(test.analit)) {\r\n            // console.log(element)\r\n            // console.log(param)\r\n\r\n            m_interp = param.interpretacija;\r\n            m_opis = param.opis;\r\n          }\r\n        });\r\n      });\r\n\r\n      switch (\r\n        this.Interpretacija(\r\n          test.opis,\r\n          rezultat,\r\n          test.jedinica,\r\n          test.refd,\r\n          test.refg,\r\n          this.$store.state.site,\r\n          test.interp,\r\n          \"\",\r\n          this.spec\r\n        )[2]\r\n      ) {\r\n        case \"L\":\r\n          this.warning = {\r\n            analiza: m_opis,\r\n            text: m_interp.snizeno.text.trim(),\r\n            napomena: m_interp.napomena.trim(),\r\n            control: \"Sniženo\",\r\n          };\r\n          break;\r\n\r\n        case \"H\":\r\n          switch (test.interp) {\r\n            case \"neg\":\r\n              this.warning = {\r\n                analiza: m_opis,\r\n                text: m_interp.poviseno.text.trim(),\r\n                napomena: m_interp.napomena.trim(),\r\n                control: \"Pozitivan\",\r\n              };\r\n              break;\r\n\r\n            default:\r\n              this.warning = {\r\n                analiza: m_opis,\r\n                text: m_interp.poviseno.text.trim(),\r\n                napomena: m_interp.napomena.trim(),\r\n                control: \"Povišeno\",\r\n              };\r\n              break;\r\n          }\r\n\r\n          break;\r\n\r\n        default:\r\n          this.warning = { analiza: \"\", text: \"\", napomena: \"\", control: \"\" };\r\n          break;\r\n      }\r\n\r\n      if (this.warning.text && this.warning.text != \"\") {\r\n        // console.log(this.warning.analiza + \" | \" + this.warning.control + \" - \" + this.warning.text);\r\n        // this.$refs.staticModalExclamation.open();\r\n      }\r\n    },\r\n\r\n    Exclamation(test) {\r\n      this.warning = { analiza: \"\", text: \"\", napomena: \"\", control: \"\" };\r\n      var rezultat = test.rezultat\r\n        .replace(/,/g, \".\")\r\n        .replace(/</g, \"\")\r\n        .replace(/>/g, \"\");\r\n\r\n      switch (\r\n        this.Interpretacija(\r\n          test.opis,\r\n          rezultat,\r\n          test.jedinica,\r\n          test.dRef,\r\n          test.gRef,\r\n          this.$store.state.site,\r\n          test.interp,\r\n          test.extend,\r\n          this.spec\r\n        )[2]\r\n      ) {\r\n        case \"L\":\r\n          this.warning = {\r\n            analiza: test.analit,\r\n            text: test.interpretacija.snizeno.text.trim(),\r\n            napomena: test.interpretacija.napomena.trim(),\r\n            control: \"Sniženo\",\r\n          };\r\n          break;\r\n\r\n        case \"H\":\r\n          switch (test.interp) {\r\n            case \"neg\":\r\n              this.warning = {\r\n                analiza: test.analit,\r\n                text: test.interpretacija.poviseno.text.trim(),\r\n                napomena: test.interpretacija.napomena.trim(),\r\n                control: \"Pozitivan\",\r\n              };\r\n              break;\r\n\r\n            default:\r\n              this.warning = {\r\n                analiza: test.analit,\r\n                text: test.interpretacija.poviseno.text.trim(),\r\n                napomena: test.interpretacija.napomena.trim(),\r\n                control: \"Povišeno\",\r\n              };\r\n              break;\r\n          }\r\n\r\n          break;\r\n\r\n        default:\r\n          this.warning = { analiza: \"\", text: \"\", napomena: \"\", control: \"\" };\r\n          break;\r\n      }\r\n\r\n      if (this.warning.text && this.warning.text != \"\") {\r\n        this.$refs.staticModalExclamation.open();\r\n      }\r\n    },\r\n\r\n    LabAssayEval(e, test) {\r\n      this.analiza_eval = test;\r\n      e.preventDefault();\r\n      this.spinner = false;\r\n      this.showLineChart = false;\r\n      let palette = store.getters.palette;\r\n      this.table_header = test.ime + \" | \" + test.analit;\r\n      if (!test.multidata) {\r\n        this.isLoading = true;\r\n        this.Procjena = [];\r\n\r\n        http\r\n          .get(\r\n            \"/labassay/evaluation/single\" +\r\n              \"?token=\" +\r\n              this.$store.state.token +\r\n              \"&site=\" +\r\n              this.$store.state.site +\r\n              \"&range=\" +\r\n              \"14\",\r\n            {}\r\n          )\r\n          .then((response) => {\r\n            if (response.data.Results.length) {\r\n              var obj = {};\r\n              var count = 0;\r\n\r\n              response.data.Results.forEach((element) => {\r\n                count++;\r\n                element.rezultati.forEach((rez) => {\r\n                  if (\r\n                    rez.labassay === test.labassay_id &&\r\n                    element.verificiran &&\r\n                    rez.rezultat[rez.rezultat.length - 1].rezultat_f.trim() !=\r\n                      \"\"\r\n                  ) {\r\n                    obj.rezultat =\r\n                      rez.rezultat[rez.rezultat.length - 1].rezultat_f;\r\n                    obj.jedinica =\r\n                      rez.rezultat[rez.rezultat.length - 1].jedinice_f;\r\n                    obj.analit = \"\";\r\n                    obj.interp = rez.interp;\r\n                    obj.extend = rez.extend;\r\n                    obj.refd = rez.refd;\r\n                    obj.refg = rez.refg;\r\n                    obj.sid = element.id;\r\n                    obj.updated_at =\r\n                      rez.rezultat[rez.rezultat.length - 1].updated_at;\r\n\r\n                    var datum =\r\n                      JSON.stringify(\r\n                        rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                      ).slice(9, 11) +\r\n                      \".\" +\r\n                      JSON.stringify(\r\n                        rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                      ).slice(6, 8) +\r\n                      \".\" +\r\n                      JSON.stringify(\r\n                        rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                      ).slice(1, 5);\r\n                    var time = JSON.stringify(\r\n                      new Date(\r\n                        new Date(\r\n                          rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                        ).getTime() -\r\n                          new Date(\r\n                            rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                          ).getTimezoneOffset() *\r\n                            60000\r\n                      ).toISOString()\r\n                    ).substring(12, 17);\r\n\r\n                    obj.datum = datum;\r\n                    obj.vrijeme = time;\r\n                    obj.kontrola = this.Interpretacija(\r\n                      \"\",\r\n                      obj.rezultat,\r\n                      obj.jedinica,\r\n                      obj.refd,\r\n                      obj.refg,\r\n                      this.$store.state.site,\r\n                      obj.interp,\r\n                      obj.extend,\r\n                      this.spec\r\n                    )[5];\r\n\r\n                    this.Procjena.push(obj);\r\n                    obj = {};\r\n                  }\r\n                });\r\n\r\n                if (count == response.data.Results.length) {\r\n                  this.Procjena.sort(function (a, b) {\r\n                    return Date.parse(a.updated_at) == Date.parse(b.updated_at)\r\n                      ? 0\r\n                      : +(\r\n                          Date.parse(a.updated_at) < Date.parse(b.updated_at)\r\n                        ) || -1;\r\n                  });\r\n\r\n                  // Line Chart\r\n\r\n                  var data = [];\r\n\r\n                  if (this.Procjena.length) {\r\n                    this.optionsLineChart = {\r\n                      responsive: true,\r\n                      maintainAspectRatio: false,\r\n                      title: {\r\n                        display: true,\r\n                        text: \"\",\r\n                      },\r\n                      scales: {\r\n                        xAxes: [\r\n                          {\r\n                            display: true,\r\n                            gridLines: {\r\n                              display: true,\r\n                              color: \"#eee\",\r\n                            },\r\n                          },\r\n                        ],\r\n                        yAxes: [\r\n                          {\r\n                            display: true,\r\n                            gridLines: {\r\n                              display: true,\r\n                              color: \"#eee\",\r\n                            },\r\n                          },\r\n                        ],\r\n                      },\r\n                    };\r\n\r\n                    var labels = [];\r\n                    var kontrola = [];\r\n                    var temp = \"\";\r\n\r\n                    this.Procjena.forEach((element) => {\r\n                      if (!isNaN(element.rezultat.trim())) {\r\n                        switch (element.kontrola) {\r\n                          case \"Red\":\r\n                            kontrola.push(palette.danger);\r\n                            break;\r\n                          case \"Green\":\r\n                            kontrola.push(palette.primary);\r\n                            break;\r\n                          case \"Yellow\":\r\n                            kontrola.push(palette.warning);\r\n                            break;\r\n\r\n                          default:\r\n                            kontrola.push(palette.info);\r\n                            break;\r\n                        }\r\n\r\n                        labels.push(element.datum);\r\n                        data.push(element.rezultat);\r\n                      }\r\n                    });\r\n\r\n                    this.dataLineChart = {\r\n                      labels: labels,\r\n                      datasets: [\r\n                        {\r\n                          label: test.ime + \" | \" + test.analit,\r\n                          backgroundColor: utils.hex2rgb(palette.info, 0.5).css,\r\n                          pointBorderColor: kontrola,\r\n                          pointBackgroundColor: kontrola,\r\n                          borderColor: palette.transparent,\r\n                          data: data,\r\n                        },\r\n                      ],\r\n                    };\r\n\r\n                    if (data.length) {\r\n                      this.showLineChart = true;\r\n                    }\r\n\r\n                    // console.warn(\"Zadnjih 14 dana.\");\r\n\r\n                    this.$refs.staticModalLabAssayEvalSingle.open();\r\n                  } else {\r\n                    // console.warn(\"No data.\");\r\n                  }\r\n                }\r\n              });\r\n            } else {\r\n              // console.warn(\"No data.\");\r\n            }\r\n            this.isLoading = false;\r\n          });\r\n      } else {\r\n        // console.warn(test.ime + \" | \" + test.analit);\r\n\r\n        this.multiparam_izbor = test.multiparam[0].opis;\r\n        this.multiparam_id = test.multiparam[0]._id;\r\n\r\n        this.multiparams = [];\r\n\r\n        this.multiparam_izbornik = [];\r\n\r\n        test.multiparam.forEach((element) => {\r\n          this.multiparam_izbornik.push(element.opis);\r\n          this.multiparams.push(element);\r\n        });\r\n\r\n        this.isLoading = true;\r\n        this.Procjena = [];\r\n\r\n        http\r\n          .get(\r\n            \"/labassay/evaluation/multi\" +\r\n              \"?token=\" +\r\n              this.$store.state.token +\r\n              \"&site=\" +\r\n              this.$store.state.site +\r\n              \"&labassay=\" +\r\n              test.labassay_id +\r\n              \"&range=\" +\r\n              \"14\",\r\n            {}\r\n          )\r\n          .then((response) => {\r\n            if (response.data.Multi.length) {\r\n              this.Response = response.data;\r\n\r\n              var obj = {};\r\n              var count = 0;\r\n\r\n              response.data.Multi.forEach((element) => {\r\n                count++;\r\n                element.multi.forEach((param) => {\r\n                  if (\r\n                    this.multiparam_id == param.labassay &&\r\n                    param.rezultat[0].rezultat_f.trim() != \"\"\r\n                  ) {\r\n                    obj.rezultat = param.rezultat[0].rezultat_f;\r\n                    obj.jedinica = param.rezultat[0].jedinice_f;\r\n                    obj.analit = \"Nema podataka\";\r\n                    obj.interp = param.interp;\r\n                    obj.extend = param.extend;\r\n                    obj.refd = param.refd;\r\n                    obj.refg = param.refg;\r\n                    obj.sid = \"Nema podataka\";\r\n                    obj.updated_at = new Date(param.rezultat[0].updated_at);\r\n\r\n                    var datum =\r\n                      JSON.stringify(\r\n                        new Date(param.rezultat[0].updated_at)\r\n                      ).slice(9, 11) +\r\n                      \".\" +\r\n                      JSON.stringify(\r\n                        new Date(param.rezultat[0].updated_at)\r\n                      ).slice(6, 8) +\r\n                      \".\" +\r\n                      JSON.stringify(\r\n                        new Date(param.rezultat[0].updated_at)\r\n                      ).slice(1, 5);\r\n                    var time = JSON.stringify(\r\n                      new Date(\r\n                        new Date(param.rezultat[0].updated_at).getTime() -\r\n                          new Date(\r\n                            param.rezultat[0].updated_at\r\n                          ).getTimezoneOffset() *\r\n                            60000\r\n                      ).toISOString()\r\n                    ).substring(12, 17);\r\n                    obj.datum = datum;\r\n                    obj.vrijeme = time;\r\n                    obj.kontrola = this.Interpretacija(\r\n                      \"\",\r\n                      obj.rezultat,\r\n                      obj.jedinica,\r\n                      obj.refd,\r\n                      obj.refg,\r\n                      this.$store.state.site,\r\n                      obj.interp,\r\n                      obj.extend,\r\n                      this.spec\r\n                    )[5];\r\n\r\n                    this.Procjena.push(obj);\r\n                    obj = {};\r\n                  }\r\n                });\r\n\r\n                if (count == response.data.Multi.length) {\r\n                  this.Procjena.sort(function (a, b) {\r\n                    return Date.parse(a.updated_at) == Date.parse(b.updated_at)\r\n                      ? 0\r\n                      : +(\r\n                          Date.parse(a.updated_at) < Date.parse(b.updated_at)\r\n                        ) || -1;\r\n                  });\r\n\r\n                  // Line Chart\r\n\r\n                  var data = [];\r\n\r\n                  if (this.Procjena.length) {\r\n                    this.optionsLineChart = {\r\n                      responsive: true,\r\n                      maintainAspectRatio: false,\r\n                      title: {\r\n                        display: true,\r\n                        text: \"\",\r\n                      },\r\n                      scales: {\r\n                        xAxes: [\r\n                          {\r\n                            display: true,\r\n                            gridLines: {\r\n                              display: true,\r\n                              color: \"#eee\",\r\n                            },\r\n                          },\r\n                        ],\r\n                        yAxes: [\r\n                          {\r\n                            display: true,\r\n                            gridLines: {\r\n                              display: true,\r\n                              color: \"#eee\",\r\n                            },\r\n                          },\r\n                        ],\r\n                      },\r\n                    };\r\n\r\n                    var labels = [];\r\n                    var kontrola = [];\r\n                    var temp = \"\";\r\n\r\n                    this.Procjena.forEach((element) => {\r\n                      if (!isNaN(element.rezultat.trim())) {\r\n                        switch (element.kontrola) {\r\n                          case \"Red\":\r\n                            kontrola.push(palette.danger);\r\n                            break;\r\n                          case \"Green\":\r\n                            kontrola.push(palette.primary);\r\n                            break;\r\n                          case \"Yellow\":\r\n                            kontrola.push(palette.warning);\r\n                            break;\r\n\r\n                          default:\r\n                            kontrola.push(palette.info);\r\n                            break;\r\n                        }\r\n\r\n                        labels.push(element.datum);\r\n                        data.push(element.rezultat);\r\n                      }\r\n                    });\r\n\r\n                    this.dataLineChart = {\r\n                      labels: labels,\r\n                      datasets: [\r\n                        {\r\n                          label: test.ime + \" | \" + test.analit,\r\n                          backgroundColor: utils.hex2rgb(palette.info, 0.5).css,\r\n                          pointBorderColor: kontrola,\r\n                          pointBackgroundColor: kontrola,\r\n                          borderColor: palette.transparent,\r\n                          data: data,\r\n                        },\r\n                      ],\r\n                    };\r\n\r\n                    if (data.length) {\r\n                      this.showLineChart = true;\r\n                    }\r\n\r\n                    this.$refs.staticModalLabAssayEvalMulti.open();\r\n                  } else {\r\n                    // console.warn(\"No data.\");\r\n                  }\r\n                }\r\n              });\r\n            } else {\r\n              // console.warn(\"No data.\");\r\n            }\r\n            this.isLoading = false;\r\n          });\r\n      }\r\n    },\r\n\r\n    Evaluation(test) {\r\n      this.analiza_eval = test;\r\n      this.spinner = false;\r\n      if (true) {\r\n        this.showLineChart = false;\r\n        let palette = store.getters.palette;\r\n        this.table_header = test.ime + \" | \" + test.analit;\r\n\r\n        if (test.multidata) {\r\n          this.multiparam_izbor = test.multiparam[0].opis;\r\n          this.multiparam_id = test.multiparam[0]._id;\r\n\r\n          this.multiparams = [];\r\n\r\n          this.multiparam_izbornik = [];\r\n\r\n          test.multiparam.forEach((element) => {\r\n            this.multiparam_izbornik.push(element.opis);\r\n            this.multiparams.push(element);\r\n          });\r\n\r\n          this.isLoading = true;\r\n          this.Procjena = [];\r\n\r\n          http\r\n            .get(\r\n              \"/patient/evaluation/multi\" +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&patient=\" +\r\n                this.pacijent +\r\n                \"&labassay=\" +\r\n                test.labassay_id,\r\n              {}\r\n            )\r\n            .then((response) => {\r\n              if (response.data.Multi.length) {\r\n                this.Response = response.data;\r\n\r\n                var obj = {};\r\n                var count = 0;\r\n\r\n                response.data.Multi.forEach((element) => {\r\n                  count++;\r\n                  element.multi.forEach((param) => {\r\n                    if (\r\n                      this.multiparam_id == param.labassay &&\r\n                      param.rezultat[0].rezultat_f.trim() != \"\"\r\n                    ) {\r\n                      obj.rezultat = param.rezultat[0].rezultat_f;\r\n                      obj.jedinica = param.rezultat[0].jedinice_f;\r\n                      obj.analit = \"Nema podataka\";\r\n                      obj.interp = param.interp;\r\n                      obj.extend = param.extend;\r\n                      obj.refd = param.refd;\r\n                      obj.refg = param.refg;\r\n                      obj.sid = \"Nema podataka\";\r\n                      obj.updated_at = new Date(param.rezultat[0].updated_at);\r\n\r\n                      var datum =\r\n                        JSON.stringify(\r\n                          new Date(param.rezultat[0].updated_at)\r\n                        ).slice(9, 11) +\r\n                        \".\" +\r\n                        JSON.stringify(\r\n                          new Date(param.rezultat[0].updated_at)\r\n                        ).slice(6, 8) +\r\n                        \".\" +\r\n                        JSON.stringify(\r\n                          new Date(param.rezultat[0].updated_at)\r\n                        ).slice(1, 5);\r\n                      var time = JSON.stringify(\r\n                        new Date(\r\n                          new Date(param.rezultat[0].updated_at).getTime() -\r\n                            new Date(\r\n                              param.rezultat[0].updated_at\r\n                            ).getTimezoneOffset() *\r\n                              60000\r\n                        ).toISOString()\r\n                      ).substring(12, 17);\r\n                      obj.datum = datum;\r\n                      obj.vrijeme = time;\r\n                      obj.kontrola = this.Interpretacija(\r\n                        \"\",\r\n                        obj.rezultat,\r\n                        obj.jedinica,\r\n                        obj.refd,\r\n                        obj.refg,\r\n                        this.$store.state.site,\r\n                        obj.interp,\r\n                        obj.extend,\r\n                        this.spec\r\n                      )[5];\r\n\r\n                      this.Procjena.push(obj);\r\n                      obj = {};\r\n                    }\r\n                  });\r\n\r\n                  if (count == response.data.Multi.length) {\r\n                    this.Procjena.sort(function (a, b) {\r\n                      return Date.parse(a.updated_at) ==\r\n                        Date.parse(b.updated_at)\r\n                        ? 0\r\n                        : +(\r\n                            Date.parse(a.updated_at) < Date.parse(b.updated_at)\r\n                          ) || -1;\r\n                    });\r\n\r\n                    // Line Chart\r\n\r\n                    var data = [];\r\n\r\n                    if (this.Procjena.length) {\r\n                      this.optionsLineChart = {\r\n                        responsive: true,\r\n                        maintainAspectRatio: false,\r\n                        title: {\r\n                          display: true,\r\n                          text: \"\",\r\n                        },\r\n                        scales: {\r\n                          xAxes: [\r\n                            {\r\n                              display: true,\r\n                              gridLines: {\r\n                                display: true,\r\n                                color: \"#eee\",\r\n                              },\r\n                            },\r\n                          ],\r\n                          yAxes: [\r\n                            {\r\n                              display: true,\r\n                              gridLines: {\r\n                                display: true,\r\n                                color: \"#eee\",\r\n                              },\r\n                            },\r\n                          ],\r\n                        },\r\n                      };\r\n\r\n                      var labels = [];\r\n                      var kontrola = [];\r\n                      var temp = \"\";\r\n\r\n                      this.Procjena.forEach((element) => {\r\n                        if (!isNaN(element.rezultat.trim())) {\r\n                          switch (element.kontrola) {\r\n                            case \"Red\":\r\n                              kontrola.push(palette.danger);\r\n                              break;\r\n                            case \"Green\":\r\n                              kontrola.push(palette.primary);\r\n                              break;\r\n                            case \"Yellow\":\r\n                              kontrola.push(palette.warning);\r\n                              break;\r\n\r\n                            default:\r\n                              kontrola.push(palette.info);\r\n                              break;\r\n                          }\r\n\r\n                          labels.push(element.datum);\r\n                          data.push(element.rezultat);\r\n                        }\r\n                      });\r\n\r\n                      this.dataLineChart = {\r\n                        labels: labels,\r\n                        datasets: [\r\n                          {\r\n                            label: test.ime + \" | \" + test.analit,\r\n                            backgroundColor: utils.hex2rgb(palette.info, 0.5)\r\n                              .css,\r\n                            pointBorderColor: kontrola,\r\n                            pointBackgroundColor: kontrola,\r\n                            borderColor: palette.transparent,\r\n                            data: data,\r\n                          },\r\n                        ],\r\n                      };\r\n\r\n                      if (data.length) {\r\n                        this.showLineChart = true;\r\n                      }\r\n\r\n                      this.$refs.staticModalEvaluationMulti.open();\r\n                    } else {\r\n                      // console.warn(\"No data.\");\r\n                    }\r\n                  }\r\n                });\r\n              } else {\r\n                // console.warn(\"No data.\");\r\n              }\r\n              this.isLoading = false;\r\n            });\r\n        } else {\r\n          this.isLoading = true;\r\n          this.Procjena = [];\r\n\r\n          http\r\n            .get(\r\n              \"/patient/evaluation/single\" +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&patient=\" +\r\n                this.pacijent,\r\n              {}\r\n            )\r\n            .then((response) => {\r\n              if (response.data.Results.length) {\r\n                var obj = {};\r\n                var count = 0;\r\n\r\n                response.data.Results.forEach((element) => {\r\n                  count++;\r\n                  element.rezultati.forEach((rez) => {\r\n                    if (\r\n                      rez.labassay === test.labassay_id &&\r\n                      element.verificiran &&\r\n                      rez.rezultat[rez.rezultat.length - 1].rezultat_f.trim() !=\r\n                        \"\"\r\n                    ) {\r\n                      obj.rezultat =\r\n                        rez.rezultat[rez.rezultat.length - 1].rezultat_f;\r\n                      obj.jedinica =\r\n                        rez.rezultat[rez.rezultat.length - 1].jedinice_f;\r\n                      obj.analit = \"\";\r\n                      obj.interp = rez.interp;\r\n                      obj.extend = rez.extend;\r\n                      obj.refd = rez.refd;\r\n                      obj.refg = rez.refg;\r\n                      obj.sid = element.id;\r\n                      obj.updated_at =\r\n                        rez.rezultat[rez.rezultat.length - 1].updated_at;\r\n\r\n                      var datum =\r\n                        JSON.stringify(\r\n                          rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                        ).slice(9, 11) +\r\n                        \".\" +\r\n                        JSON.stringify(\r\n                          rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                        ).slice(6, 8) +\r\n                        \".\" +\r\n                        JSON.stringify(\r\n                          rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                        ).slice(1, 5);\r\n                      var time = JSON.stringify(\r\n                        new Date(\r\n                          new Date(\r\n                            rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                          ).getTime() -\r\n                            new Date(\r\n                              rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                            ).getTimezoneOffset() *\r\n                              60000\r\n                        ).toISOString()\r\n                      ).substring(12, 17);\r\n\r\n                      obj.datum = datum;\r\n                      obj.vrijeme = time;\r\n                      obj.kontrola = this.Interpretacija(\r\n                        \"\",\r\n                        obj.rezultat,\r\n                        obj.jedinica,\r\n                        obj.refd,\r\n                        obj.refg,\r\n                        this.$store.state.site,\r\n                        obj.interp,\r\n                        obj.extend,\r\n                        this.spec\r\n                      )[5];\r\n\r\n                      this.Procjena.push(obj);\r\n                      obj = {};\r\n                    }\r\n                  });\r\n\r\n                  if (count == response.data.Results.length) {\r\n                    this.Procjena.sort(function (a, b) {\r\n                      return Date.parse(a.updated_at) ==\r\n                        Date.parse(b.updated_at)\r\n                        ? 0\r\n                        : +(\r\n                            Date.parse(a.updated_at) < Date.parse(b.updated_at)\r\n                          ) || -1;\r\n                    });\r\n\r\n                    // Line Chart\r\n\r\n                    var data = [];\r\n\r\n                    if (this.Procjena.length) {\r\n                      this.optionsLineChart = {\r\n                        responsive: true,\r\n                        maintainAspectRatio: false,\r\n                        title: {\r\n                          display: true,\r\n                          text: \"\",\r\n                        },\r\n                        scales: {\r\n                          xAxes: [\r\n                            {\r\n                              display: true,\r\n                              gridLines: {\r\n                                display: true,\r\n                                color: \"#eee\",\r\n                              },\r\n                            },\r\n                          ],\r\n                          yAxes: [\r\n                            {\r\n                              display: true,\r\n                              gridLines: {\r\n                                display: true,\r\n                                color: \"#eee\",\r\n                              },\r\n                            },\r\n                          ],\r\n                        },\r\n                      };\r\n\r\n                      var labels = [];\r\n                      var kontrola = [];\r\n                      var temp = \"\";\r\n\r\n                      this.Procjena.forEach((element) => {\r\n                        if (!isNaN(element.rezultat.trim())) {\r\n                          switch (element.kontrola) {\r\n                            case \"Red\":\r\n                              kontrola.push(palette.danger);\r\n                              break;\r\n                            case \"Green\":\r\n                              kontrola.push(palette.primary);\r\n                              break;\r\n                            case \"Yellow\":\r\n                              kontrola.push(palette.warning);\r\n                              break;\r\n\r\n                            default:\r\n                              kontrola.push(palette.info);\r\n                              break;\r\n                          }\r\n\r\n                          labels.push(element.datum);\r\n                          data.push(element.rezultat);\r\n                        }\r\n                      });\r\n\r\n                      this.dataLineChart = {\r\n                        labels: labels,\r\n                        datasets: [\r\n                          {\r\n                            label: test.ime + \" | \" + test.analit,\r\n                            backgroundColor: utils.hex2rgb(palette.info, 0.5)\r\n                              .css,\r\n                            pointBorderColor: kontrola,\r\n                            pointBackgroundColor: kontrola,\r\n                            borderColor: palette.transparent,\r\n                            data: data,\r\n                          },\r\n                        ],\r\n                      };\r\n\r\n                      if (data.length) {\r\n                        this.showLineChart = true;\r\n                      }\r\n\r\n                      this.$refs.staticModalEvaluationSingle.open();\r\n                    } else {\r\n                      // console.warn(\"No data.\");\r\n                    }\r\n                  }\r\n                });\r\n              } else {\r\n                // console.warn(\"No data.\");\r\n              }\r\n              this.isLoading = false;\r\n            });\r\n        }\r\n      }\r\n    },\r\n\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Methods\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n\r\n    filteredAntibiotics(column, columns) {\r\n      return this.Antibiotics.filter(\r\n        (item) => this.Antibiotics.indexOf(item) % columns === column - 1\r\n      );\r\n    },\r\n\r\n    filteredBacteries(column, columns) {\r\n      return this.TemporaryBacteries.filter(\r\n        (item) => this.TemporaryBacteries.indexOf(item) % columns === column - 1\r\n      );\r\n    },\r\n\r\n    AddAntibiotics(data) {\r\n      var obj = {};\r\n\r\n      if (!data.chosen) {\r\n        (obj._id = data._id),\r\n          (obj.rbr_a = data.rbr_a),\r\n          (obj.naziv = data.naziv),\r\n          (obj.opis = data.opis),\r\n          (obj.rezultat = \"\");\r\n        this.TemporaryAntibiotics.push(obj);\r\n      } else {\r\n        for (var i = 0; i < this.TemporaryAntibiotics.length; i++) {\r\n          if (this.TemporaryAntibiotics[i]._id === data._id) {\r\n            this.TemporaryAntibiotics.splice(i, 1);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    AddBacteries(data) {\r\n      if (!data.chosen) {\r\n        this.TemporaryBacteriesAdd.push(data);\r\n      } else {\r\n        for (var i = 0; i < this.TemporaryBacteriesAdd.length; i++) {\r\n          if (this.TemporaryBacteriesAdd[i]._id === data._id) {\r\n            this.TemporaryBacteriesAdd.splice(i, 1);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    OpenMicroSelect($event, test) {\r\n      console.log(\"Select Modal opening...\");\r\n\r\n      this.CurrentTab = \"\";\r\n      this.testovi = [];\r\n      this.rezultati = [];\r\n      this.analitiprikaz = [];\r\n      this.calculated = false;\r\n      this.show_table = false;\r\n      this.main = false;\r\n\r\n      var topcije = null;\r\n      topcije = izbornik.rez;\r\n\r\n      http\r\n        .get(\r\n          \"rezultati/showsingle/\" +\r\n            this.$store.state.sid +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site,\r\n          {}\r\n        )\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          var test = {};\r\n\r\n          if (res.data.data.length) {\r\n            res.data.data.sort(function (a, b) {\r\n              return a.testovi.labassay.grupa + a.testovi.labassay.grouporder ==\r\n                b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                ? 0\r\n                : +(\r\n                    a.testovi.labassay.grupa + a.testovi.labassay.grouporder >\r\n                    b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                  ) || -1;\r\n            });\r\n\r\n            this.testovi = res.data.data;\r\n            this.analitiprikaz = res.data.multidata;\r\n\r\n            res.data.data.forEach((element) => {\r\n              test = {};\r\n              test.realizovan = false;\r\n\r\n              test.ime = element.testovi.labassay.naziv;\r\n              test.test = element.testovi.labassay.sifra;\r\n              test.analit = element.testovi.labassay.analit;\r\n              test.IDE = element.testovi._id;\r\n              test.labassay_id = element.testovi.labassay._id;\r\n\r\n              test.multi_count = 0;\r\n              test.multi_rezultati = [];\r\n\r\n              res.data.multidata.forEach((multi) => {\r\n                if (multi.labassay._id === element.testovi.labassay._id) {\r\n                  test.multi_rezultati = multi.rezultat;\r\n                  test.multi_count = multi.rezultat[0].rezultat.length;\r\n                }\r\n              });\r\n\r\n              test.kategorija = element.testovi.labassay.kategorija;\r\n              test.analyser = element.testovi.labassay.analyser;\r\n              test.multiparam = element.testovi.labassay.multiparam;\r\n              test.vise = element.testovi.rezultat.length;\r\n              test.calculated = element.testovi.labassay.calculated;\r\n              test.manual = element.testovi.labassay.manual;\r\n\r\n              test.select_options = eval(\r\n                \"topcije.\" +\r\n                  element.testovi.interp\r\n                    .replace(\"%\", \"_\")\r\n                    .replace(\"/\", \"_\")\r\n                    .replace(\" \", \"_\")\r\n                    .replace(/-/g, \"_\")\r\n                    .replace(\"#\", \"_\")\r\n                    .replace(/^\\d+/, \"\")\r\n              );\r\n\r\n              element.testovi.rezultat.forEach((rezultat) => {\r\n                test.sekcija = rezultat.anaassay.sekcija;\r\n                test.rezultat = rezultat.rezultat_f;\r\n                test.result = rezultat;\r\n                test.anaassay = rezultat.anaassay;\r\n\r\n                if (rezultat.rezultat_f != \"\") {\r\n                  test.realizovan = true;\r\n                }\r\n\r\n                test.unit = rezultat.jedinice_f;\r\n\r\n                if (res.data.verificiran || res.data.status === \"ODOBREN\") {\r\n                  test.odobren = \"ODOBREN\";\r\n                  test.edit = false;\r\n                } else {\r\n                  test.odobren != \"ODOBREN\";\r\n                  test.edit = true;\r\n                }\r\n\r\n                test.jedinica = rezultat.jedinice_f;\r\n                test.id = rezultat._id;\r\n                test.multidata = element.testovi.labassay.multi;\r\n                test.rezultat_m = rezultat.rezultat_m;\r\n                test.bakterije = element.testovi.labassay.bakterije;\r\n                test.neg_description = element.testovi.labassay.neg_description;\r\n                test.pos_description = element.testovi.labassay.pos_description;\r\n                test.refSet = element.testovi.grupa;\r\n                test.dRef = element.testovi.refd;\r\n                test.gRef = element.testovi.refg;\r\n                test.interp = element.testovi.interp;\r\n                test.extend = element.testovi.extend;\r\n                test.retest = element.testovi.retest;\r\n                test.interpretacija = element.testovi.labassay.interpretacija;\r\n              });\r\n\r\n              if (\r\n                test.select_options != undefined &&\r\n                !test.select_options.includes(test.rezultat)\r\n              ) {\r\n                test.select_options.unshift(test.rezultat);\r\n              }\r\n              this.rezultati.push(test);\r\n            });\r\n\r\n            if (this.MicrobiologySample && this.AllowGetSample) {\r\n              // On open Modal\r\n              // console.log(\"Microbiology sample check.\");\r\n              var bakterioloski = false;\r\n              var negativan = false;\r\n              var pozitivan = false;\r\n              var bakterijed = [];\r\n              var bakterijei = [];\r\n              var neg_rezultati = [];\r\n              var poz_rezultati = [];\r\n\r\n              this.CurrentTest = this.rezultati[0].analit;\r\n\r\n              neg_rezultati = [...this.rezultati[0].neg_description];\r\n              poz_rezultati = [...this.rezultati[0].pos_description];\r\n\r\n              if (this.rezultati[0].bakterije.length) {\r\n                bakterioloski = true;\r\n\r\n                var counter = 0;\r\n                var ima = false;\r\n\r\n                this.Bacteries.forEach((element) => {\r\n                  element.chosen = false;\r\n                  counter = 0;\r\n                  ima = false;\r\n                  this.rezultati[0].bakterije.forEach((bakt) => {\r\n                    counter++;\r\n                    if (element._id == bakt) {\r\n                      ima = true;\r\n                    }\r\n\r\n                    if (\r\n                      counter === this.rezultati[0].bakterije.length &&\r\n                      !ima\r\n                    ) {\r\n                      bakterijed.push(element);\r\n                    }\r\n\r\n                    if (counter === this.rezultati[0].bakterije.length && ima) {\r\n                      bakterijei.push(element);\r\n                    }\r\n                  });\r\n                });\r\n\r\n                switch (this.rezultati[0].rezultat_m.length) {\r\n                  case 0:\r\n                    this.MicrobiologyScenario = \"MAIBNoR\";\r\n                    this.SelectedBacteries = [];\r\n                    break;\r\n                  case 1:\r\n                    this.MicrobiologyScenario = \"MAIBNeR\";\r\n                    this.SelectedBacteries = [];\r\n\r\n                    negativan = true;\r\n\r\n                    if (\r\n                      !neg_rezultati.includes(this.rezultati[0].rezultat.trim())\r\n                    ) {\r\n                      neg_rezultati.unshift(this.rezultati[0].rezultat.trim());\r\n                    }\r\n\r\n                    break;\r\n\r\n                  default:\r\n                    this.MicrobiologyScenario = \"MAIBPoR\";\r\n                    this.SelectedBacteries = [];\r\n                    this.BacteryTabs = [];\r\n\r\n                    this.rezultati[0].rezultat_m.forEach((element) => {\r\n                      // console.log(element)\r\n                      if (element.bakterija) {\r\n                        this.SelectedBacteries.push(element);\r\n                        this.BacteryTabs.push(element.opis);\r\n                      }\r\n                    });\r\n\r\n                    console.log(\"Izabrane bakterije:\");\r\n                    console.log(this.SelectedBacteries);\r\n\r\n                    let maxVal = this.SelectedBacteries.reduce((max, val) =>\r\n                      max.antibiogram.antibiotici.length >\r\n                      val.antibiogram.antibiotici.length\r\n                        ? max\r\n                        : val\r\n                    );\r\n\r\n                    if (this.CurrentTab == \"\") {\r\n                      // this.CurrentTab = maxVal.opis;\r\n                    }\r\n                    this.CurrentTab = this.SelectedBacteries[0].opis;\r\n\r\n                    bakterijed.forEach((element) => {\r\n                      this.SelectedBacteries.forEach((bact) => {\r\n                        if (element._id == bact._id) {\r\n                          element.chosen = true;\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    bakterijei.forEach((element) => {\r\n                      this.SelectedBacteries.forEach((bact) => {\r\n                        if (element._id == bact._id) {\r\n                          element.chosen = true;\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    pozitivan = true;\r\n                    if (\r\n                      !poz_rezultati.includes(this.rezultati[0].rezultat.trim())\r\n                    ) {\r\n                      poz_rezultati.unshift(this.rezultati[0].rezultat.trim());\r\n                    }\r\n\r\n                    break;\r\n                }\r\n              } else {\r\n                bakterioloski = false;\r\n                this.SelectedBacteries = [];\r\n\r\n                switch (this.rezultati[0].rezultat_m.length) {\r\n                  case 0:\r\n                    this.MicrobiologyScenario = \"MANBNoR\";\r\n                    neg_rezultati = this.rezultati[0].neg_description;\r\n                    poz_rezultati = this.rezultati[0].pos_description;\r\n\r\n                    break;\r\n\r\n                  case 1:\r\n                    if (this.rezultati[0].rezultat_m[0].negativan === true) {\r\n                      this.MicrobiologyScenario = \"MANBNeR\";\r\n\r\n                      negativan = true;\r\n\r\n                      if (\r\n                        !neg_rezultati.includes(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        )\r\n                      ) {\r\n                        neg_rezultati.unshift(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        );\r\n                      }\r\n                    } else {\r\n                      this.MicrobiologyScenario = \"MANBPoR\";\r\n\r\n                      pozitivan = true;\r\n\r\n                      if (\r\n                        !poz_rezultati.includes(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        )\r\n                      ) {\r\n                        poz_rezultati.unshift(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        );\r\n                      }\r\n                    }\r\n\r\n                    break;\r\n\r\n                  default:\r\n                    this.MicrobiologyScenario = \"Unknown\";\r\n\r\n                    break;\r\n                }\r\n              }\r\n\r\n              this.MicrobiologyResult = {\r\n                negative: negativan,\r\n                positive: pozitivan,\r\n                BUG: bakterioloski,\r\n                F_RESULT: this.rezultati[0].rezultat,\r\n                M_RESULT: [...this.rezultati[0].rezultat_m],\r\n                DefaultBacteries: [...bakterijei],\r\n                RemainingBacteries: [...bakterijed],\r\n                NegativeDescriptions: [...neg_rezultati],\r\n                PositiveDescriptions: [...poz_rezultati],\r\n              };\r\n            } else {\r\n              this.MicrobiologyScenario = \"Unknown\";\r\n\r\n              this.MicrobiologyResult = {\r\n                negative: null,\r\n                positive: null,\r\n                BUG: null,\r\n                F_RESULT: \"\",\r\n                M_RESULT: [],\r\n                DefaultBacteries: [],\r\n                RemainingBacteries: [],\r\n                NegativeDescriptions: [],\r\n                PositiveDescriptions: [],\r\n              };\r\n            }\r\n\r\n            this.rezultati.forEach((element) => {\r\n              if (element.calculated) {\r\n                this.calculated = true;\r\n              }\r\n            });\r\n          }\r\n        })\r\n        .then(() => {\r\n          this.ShowAntibiotics = false;\r\n          this.ShowBacteries = false;\r\n          this.show_table = true;\r\n          this.main = true;\r\n          this.$refs.staticModalMicroBacterySelect.open();\r\n        });\r\n    },\r\n\r\n    OpenMicro($event, test) {\r\n      console.log(\"Result Modal opening...\");\r\n      this.CurrentTab = \"\";\r\n      this.testovi = [];\r\n      this.rezultati = [];\r\n      this.analitiprikaz = [];\r\n      this.calculated = false;\r\n      this.show_table = false;\r\n      this.main = false;\r\n\r\n      var topcije = null;\r\n      topcije = izbornik.rez;\r\n\r\n      http\r\n        .get(\r\n          \"rezultati/showsingle/\" +\r\n            this.$store.state.sid +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site,\r\n          {}\r\n        )\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          var test = {};\r\n\r\n          if (res.data.data.length) {\r\n            res.data.data.sort(function (a, b) {\r\n              return a.testovi.labassay.grupa + a.testovi.labassay.grouporder ==\r\n                b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                ? 0\r\n                : +(\r\n                    a.testovi.labassay.grupa + a.testovi.labassay.grouporder >\r\n                    b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                  ) || -1;\r\n            });\r\n\r\n            this.testovi = res.data.data;\r\n            this.analitiprikaz = res.data.multidata;\r\n\r\n            res.data.data.forEach((element) => {\r\n              test = {};\r\n              test.realizovan = false;\r\n\r\n              test.ime = element.testovi.labassay.naziv;\r\n              test.test = element.testovi.labassay.sifra;\r\n              test.analit = element.testovi.labassay.analit;\r\n              test.IDE = element.testovi._id;\r\n              test.labassay_id = element.testovi.labassay._id;\r\n\r\n              test.multi_count = 0;\r\n              test.multi_rezultati = [];\r\n\r\n              res.data.multidata.forEach((multi) => {\r\n                if (multi.labassay._id === element.testovi.labassay._id) {\r\n                  test.multi_rezultati = multi.rezultat;\r\n                  test.multi_count = multi.rezultat[0].rezultat.length;\r\n                }\r\n              });\r\n\r\n              test.kategorija = element.testovi.labassay.kategorija;\r\n              test.analyser = element.testovi.labassay.analyser;\r\n              test.multiparam = element.testovi.labassay.multiparam;\r\n              test.vise = element.testovi.rezultat.length;\r\n              test.calculated = element.testovi.labassay.calculated;\r\n              test.manual = element.testovi.labassay.manual;\r\n\r\n              test.select_options = eval(\r\n                \"topcije.\" +\r\n                  element.testovi.interp\r\n                    .replace(\"%\", \"_\")\r\n                    .replace(\"/\", \"_\")\r\n                    .replace(\" \", \"_\")\r\n                    .replace(/-/g, \"_\")\r\n                    .replace(\"#\", \"_\")\r\n                    .replace(/^\\d+/, \"\")\r\n              );\r\n\r\n              element.testovi.rezultat.forEach((rezultat) => {\r\n                test.sekcija = rezultat.anaassay.sekcija;\r\n                test.rezultat = rezultat.rezultat_f;\r\n                test.result = rezultat;\r\n                test.anaassay = rezultat.anaassay;\r\n\r\n                if (rezultat.rezultat_f != \"\") {\r\n                  test.realizovan = true;\r\n                }\r\n\r\n                test.unit = rezultat.jedinice_f;\r\n\r\n                if (res.data.verificiran || res.data.status === \"ODOBREN\") {\r\n                  test.odobren = \"ODOBREN\";\r\n                  test.edit = false;\r\n                } else {\r\n                  test.odobren != \"ODOBREN\";\r\n                  test.edit = true;\r\n                }\r\n\r\n                test.jedinica = rezultat.jedinice_f;\r\n                test.id = rezultat._id;\r\n                test.multidata = element.testovi.labassay.multi;\r\n                test.rezultat_m = rezultat.rezultat_m;\r\n                test.bakterije = element.testovi.labassay.bakterije;\r\n                test.neg_description = element.testovi.labassay.neg_description;\r\n                test.pos_description = element.testovi.labassay.pos_description;\r\n                test.refSet = element.testovi.grupa;\r\n                test.dRef = element.testovi.refd;\r\n                test.gRef = element.testovi.refg;\r\n                test.interp = element.testovi.interp;\r\n                test.extend = element.testovi.extend;\r\n                test.retest = element.testovi.retest;\r\n                test.interpretacija = element.testovi.labassay.interpretacija;\r\n              });\r\n\r\n              if (\r\n                test.select_options != undefined &&\r\n                !test.select_options.includes(test.rezultat)\r\n              ) {\r\n                test.select_options.unshift(test.rezultat);\r\n              }\r\n              this.rezultati.push(test);\r\n            });\r\n\r\n            if (this.MicrobiologySample && this.AllowGetSample) {\r\n              // On open Modal\r\n              // console.log(\"Microbiology sample check.\");\r\n              var bakterioloski = false;\r\n              var negativan = false;\r\n              var pozitivan = false;\r\n              var bakterijed = [];\r\n              var bakterijei = [];\r\n              var neg_rezultati = [];\r\n              var poz_rezultati = [];\r\n\r\n              this.CurrentTest = this.rezultati[0].analit;\r\n\r\n              neg_rezultati = [...this.rezultati[0].neg_description];\r\n              poz_rezultati = [...this.rezultati[0].pos_description];\r\n\r\n              if (this.rezultati[0].bakterije.length) {\r\n                bakterioloski = true;\r\n\r\n                var counter = 0;\r\n                var ima = false;\r\n\r\n                this.Bacteries.forEach((element) => {\r\n                  element.chosen = false;\r\n                  counter = 0;\r\n                  ima = false;\r\n                  this.rezultati[0].bakterije.forEach((bakt) => {\r\n                    counter++;\r\n                    if (element._id == bakt) {\r\n                      ima = true;\r\n                    }\r\n\r\n                    if (\r\n                      counter === this.rezultati[0].bakterije.length &&\r\n                      !ima\r\n                    ) {\r\n                      bakterijed.push(element);\r\n                    }\r\n\r\n                    if (counter === this.rezultati[0].bakterije.length && ima) {\r\n                      bakterijei.push(element);\r\n                    }\r\n                  });\r\n                });\r\n\r\n                switch (this.rezultati[0].rezultat_m.length) {\r\n                  case 0:\r\n                    this.MicrobiologyScenario = \"MAIBNoR\";\r\n                    this.SelectedBacteries = [];\r\n                    break;\r\n                  case 1:\r\n                    this.MicrobiologyScenario = \"MAIBNeR\";\r\n                    this.SelectedBacteries = [];\r\n\r\n                    negativan = true;\r\n\r\n                    if (\r\n                      !neg_rezultati.includes(this.rezultati[0].rezultat.trim())\r\n                    ) {\r\n                      neg_rezultati.unshift(this.rezultati[0].rezultat.trim());\r\n                    }\r\n\r\n                    break;\r\n\r\n                  default:\r\n                    this.MicrobiologyScenario = \"MAIBPoR\";\r\n                    this.SelectedBacteries = [];\r\n                    this.BacteryTabs = [];\r\n\r\n                    this.rezultati[0].rezultat_m.forEach((element) => {\r\n                      // console.log(element)\r\n                      if (element.bakterija) {\r\n                        this.SelectedBacteries.push(element);\r\n                        this.BacteryTabs.push(element.opis);\r\n                      }\r\n                    });\r\n\r\n                    console.log(\"Izabrane bakterije:\");\r\n                    console.log(this.SelectedBacteries);\r\n\r\n                    let maxVal = this.SelectedBacteries.reduce((max, val) =>\r\n                      max.antibiogram.antibiotici.length >\r\n                      val.antibiogram.antibiotici.length\r\n                        ? max\r\n                        : val\r\n                    );\r\n\r\n                    if (this.CurrentTab == \"\") {\r\n                      // this.CurrentTab = maxVal.opis;\r\n                    }\r\n                    this.CurrentTab = this.SelectedBacteries[0].opis;\r\n\r\n                    bakterijed.forEach((element) => {\r\n                      this.SelectedBacteries.forEach((bact) => {\r\n                        if (element._id == bact._id) {\r\n                          element.chosen = true;\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    bakterijei.forEach((element) => {\r\n                      this.SelectedBacteries.forEach((bact) => {\r\n                        if (element._id == bact._id) {\r\n                          element.chosen = true;\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    pozitivan = true;\r\n                    if (\r\n                      !poz_rezultati.includes(this.rezultati[0].rezultat.trim())\r\n                    ) {\r\n                      poz_rezultati.unshift(this.rezultati[0].rezultat.trim());\r\n                    }\r\n\r\n                    break;\r\n                }\r\n              } else {\r\n                bakterioloski = false;\r\n                this.SelectedBacteries = [];\r\n\r\n                switch (this.rezultati[0].rezultat_m.length) {\r\n                  case 0:\r\n                    this.MicrobiologyScenario = \"MANBNoR\";\r\n                    neg_rezultati = this.rezultati[0].neg_description;\r\n                    poz_rezultati = this.rezultati[0].pos_description;\r\n\r\n                    break;\r\n\r\n                  case 1:\r\n                    if (this.rezultati[0].rezultat_m[0].negativan === true) {\r\n                      this.MicrobiologyScenario = \"MANBNeR\";\r\n\r\n                      negativan = true;\r\n\r\n                      if (\r\n                        !neg_rezultati.includes(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        )\r\n                      ) {\r\n                        neg_rezultati.unshift(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        );\r\n                      }\r\n                    } else {\r\n                      this.MicrobiologyScenario = \"MANBPoR\";\r\n\r\n                      pozitivan = true;\r\n\r\n                      if (\r\n                        !poz_rezultati.includes(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        )\r\n                      ) {\r\n                        poz_rezultati.unshift(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        );\r\n                      }\r\n                    }\r\n\r\n                    break;\r\n\r\n                  default:\r\n                    this.MicrobiologyScenario = \"Unknown\";\r\n\r\n                    break;\r\n                }\r\n              }\r\n\r\n              this.MicrobiologyResult = {\r\n                negative: negativan,\r\n                positive: pozitivan,\r\n                BUG: bakterioloski,\r\n                F_RESULT: this.rezultati[0].rezultat,\r\n                M_RESULT: [...this.rezultati[0].rezultat_m],\r\n                DefaultBacteries: [...bakterijei],\r\n                RemainingBacteries: [...bakterijed],\r\n                NegativeDescriptions: [...neg_rezultati],\r\n                PositiveDescriptions: [...poz_rezultati],\r\n              };\r\n            } else {\r\n              this.MicrobiologyScenario = \"Unknown\";\r\n\r\n              this.MicrobiologyResult = {\r\n                negative: null,\r\n                positive: null,\r\n                BUG: null,\r\n                F_RESULT: \"\",\r\n                M_RESULT: [],\r\n                DefaultBacteries: [],\r\n                RemainingBacteries: [],\r\n                NegativeDescriptions: [],\r\n                PositiveDescriptions: [],\r\n              };\r\n            }\r\n\r\n            this.rezultati.forEach((element) => {\r\n              if (element.calculated) {\r\n                this.calculated = true;\r\n              }\r\n            });\r\n          }\r\n        })\r\n        .then(() => {\r\n          this.ShowAntibiotics = false;\r\n          this.ShowBacteries = false;\r\n          this.show_table = true;\r\n          this.main = true;\r\n          this.$refs.staticModalMicroBactery.open();\r\n        });\r\n    },\r\n\r\n    SelectBactery(data) {\r\n      if (!data.chosen) {\r\n        this.SelectedBacteries.push(data);\r\n      } else {\r\n        for (var i = this.SelectedBacteries.length - 1; i >= 0; i--) {\r\n          if (this.SelectedBacteries[i]._id === data._id) {\r\n            this.SelectedBacteries.splice(i, 1);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (this.SelectedBacteries.length > 0) {\r\n        this.ModalPositiveCondition = true;\r\n      } else {\r\n        this.ModalPositiveCondition = false;\r\n      }\r\n    },\r\n\r\n    MicroResultSelect(event) {\r\n      this.uzorci.forEach((element) => {\r\n        if (element.sid === this.$store.state.sid) {\r\n          this.sample.status = \"ZAPRIMLJEN\";\r\n        }\r\n      });\r\n      this.$refs.staticModalSelectResult.open();\r\n    },\r\n\r\n    ResetSample(event) {\r\n      this.$refs.staticModalResetSample.open();\r\n    },\r\n\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* \r\n\r\n\r\n\r\n\r\n\r\nEnd of Microbiology Methods |\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n\r\n    onCancel() {},\r\n\r\n    Prethodni() {\r\n      this.pagination = false;\r\n\r\n      var check = 0;\r\n      var found = false;\r\n      this.Results.forEach((element) => {\r\n        check++;\r\n        if (element.pid == this.Previous.pid) {\r\n          found = true;\r\n          router.push(\r\n            \"/obrada/rezultati/\" +\r\n              element.patient +\r\n              \"/\" +\r\n              element.pid +\r\n              \"?date=\" +\r\n              element.date\r\n          );\r\n        }\r\n      });\r\n\r\n      if (check === this.Results.length) {\r\n        if (found) {\r\n          http\r\n            .get(\r\n              \"/rezultati/pagination\" +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&pid=\" +\r\n                this.Previous.pid.toString() +\r\n                \"&date=\" +\r\n                this.$route.query.date,\r\n              {}\r\n            )\r\n            .then((res) => {\r\n              res.data.rezultati = res.data.rezultati.sort(function (a, b) {\r\n                return a.pid.localeCompare(b.pid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\",\r\n                });\r\n              });\r\n\r\n              this.data_length =\r\n                res.data.rezultati[res.data.rezultati.length - 1].pid;\r\n              this.data_min = res.data.rezultati[0].pid;\r\n              if (Object.getOwnPropertyNames(res.data).length === 0) {\r\n                // console.warn(\"No data.\");\r\n\r\n                this.pagination = true;\r\n                this.backward_disabled = true;\r\n              } else {\r\n                this.data_pid = res.data.data.pid;\r\n                this.Results = res.data.rezultati;\r\n\r\n                router.push(\r\n                  \"/obrada/rezultati/\" +\r\n                    res.data.data.patient +\r\n                    \"/\" +\r\n                    res.data.data.pid +\r\n                    \"?date=\" +\r\n                    res.data.data.date\r\n                );\r\n              }\r\n            });\r\n        } else {\r\n          this.Previous.pid = this.Previous.pid - 1;\r\n          if (this.Previous.pid > 0) {\r\n            this.Prethodni();\r\n          } else {\r\n          }\r\n        }\r\n      } else {\r\n      }\r\n    },\r\n\r\n    Sljedeci() {\r\n      this.pagination = false;\r\n\r\n      var check = 0;\r\n      var found = false;\r\n      this.Results.forEach((element) => {\r\n        check++;\r\n        if (element.pid == this.Next.pid) {\r\n          found = true;\r\n          router.push(\r\n            \"/obrada/rezultati/\" +\r\n              element.patient +\r\n              \"/\" +\r\n              element.pid +\r\n              \"?date=\" +\r\n              element.date\r\n          );\r\n        }\r\n      });\r\n\r\n      if (check === this.Results.length) {\r\n        if (found) {\r\n          http\r\n            .get(\r\n              \"/rezultati/pagination\" +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&pid=\" +\r\n                this.Next.pid.toString() +\r\n                \"&date=\" +\r\n                this.$route.query.date,\r\n              {}\r\n            )\r\n            .then((res) => {\r\n              res.data.rezultati = res.data.rezultati.sort(function (a, b) {\r\n                return a.pid.localeCompare(b.pid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\",\r\n                });\r\n              });\r\n\r\n              this.data_length =\r\n                res.data.rezultati[res.data.rezultati.length - 1].pid;\r\n              this.data_min = res.data.rezultati[0].pid;\r\n              if (Object.getOwnPropertyNames(res.data).length === 0) {\r\n                // console.warn(\"No data.\");\r\n\r\n                this.pagination = true;\r\n                this.forward_disabled = true;\r\n              } else {\r\n                this.data_pid = res.data.data.pid;\r\n                this.Results = res.data.rezultati;\r\n\r\n                router.push(\r\n                  \"/obrada/rezultati/\" +\r\n                    res.data.data.patient +\r\n                    \"/\" +\r\n                    res.data.data.pid +\r\n                    \"?date=\" +\r\n                    res.data.data.date\r\n                );\r\n              }\r\n            });\r\n        } else {\r\n          this.Next.pid = this.Next.pid + 1;\r\n          this.Sljedeci();\r\n        }\r\n      } else {\r\n      }\r\n    },\r\n\r\n    Created() {\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Provjera\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n\r\n      this.MicrobiologyOrder = false;\r\n\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* \r\n\r\n\r\n\r\n\r\n\r\nEnd of Microbiology Provjera |\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n\r\n      http\r\n        .get(\r\n          \"rezultati/odobravanje/samples/\" +\r\n            this.$route.params.patient +\r\n            \"/\" +\r\n            this.$route.params.id +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site +\r\n            \"&date=\" +\r\n            this.$route.query.date,\r\n          {}\r\n        )\r\n        .then((res) => {\r\n          this.header =\r\n            // \"Obrada rezultata za pacijenta: \" +\r\n            res.data.results[0].patient.ime +\r\n            \" \" +\r\n            res.data.results[0].patient.prezime;\r\n\r\n            var datRodjenja =\r\n            res.data.results[0].patient.jmbg.substring(0, 2) +\r\n            \".\" +\r\n            res.data.results[0].patient.jmbg.substring(2, 4) +\r\n            \".\";\r\n\r\n          var godiste2 = res.data.results[0].patient.jmbg.substring(4, 7);\r\n\r\n          switch (godiste2[0]) {\r\n            case \"9\":\r\n              godiste2 = \"1\" + godiste2;\r\n              break;\r\n            case \"0\":\r\n              godiste2 = \"2\" + godiste2;\r\n              break;\r\n\r\n            default:\r\n              break;\r\n          }\r\n\r\n          if (datRodjenja.includes(\"01.01\") && godiste2 == \"1920\") {\r\n            this.datumRodjenja = \"Nema podataka\";\r\n          } else if (!datRodjenja.includes(\"00.00\")) {\r\n            this.datumRodjenja = datRodjenja + godiste2;\r\n          } else {\r\n            this.datumRodjenja = godiste2;\r\n          }\r\n\r\n          this.adresaStanovanja = res.data.results[0].patient.adresa;\r\n\r\n          this.imeRoditelja = res.data.results[0].patient.roditelj;\r\n\r\n\r\n          this.lokacija = res.data.lokacija;\r\n          this.klijent = res.data.results[0].customer;\r\n          console.log(this.klijent);\r\n          this.final_pdf = res.data.final_pdf;\r\n\r\n          this.analyser_patient = res.data.results[0].patient;\r\n\r\n          this.timestamp = res.data.results[0].timestamp;\r\n\r\n          this.pacijent = res.data.results[0].patient._id;\r\n          this.ime = res.data.results[0].patient.ime;\r\n          this.prezime = res.data.results[0].patient.prezime;\r\n          this.data_spol = res.data.results[0].patient.spol;\r\n          this.jmbg = res.data.results[0].patient.jmbg;\r\n          this.pid = res.data.results[0].sample.pid;\r\n\r\n          this.email = res.data.results[0].patient.email.trim();\r\n          this.email_tmp = res.data.results[0].patient.email.trim();\r\n\r\n          // Starost\r\n\r\n          var str = \"\";\r\n          var tmp = \"\";\r\n          var jmbgDan = this.jmbg.slice(0, 2);\r\n          var jmbgMjesec = this.jmbg.slice(2, 4);\r\n          var jmbgGodina = this.jmbg.slice(4, 7);\r\n\r\n          if (jmbgGodina[0] === \"9\") {\r\n            str = \"1\";\r\n            tmp = jmbgGodina;\r\n            jmbgGodina = str.concat(tmp);\r\n          } else if (jmbgGodina[0] === \"0\") {\r\n            str = \"2\";\r\n            tmp = jmbgGodina;\r\n            jmbgGodina = str.concat(tmp);\r\n          } else {\r\n            console.warn(\"Invalid year...\");\r\n          }\r\n\r\n          var date = jmbgGodina + \"-\" + jmbgMjesec + \"-\" + jmbgDan;\r\n          var jmbgObj = this.parse_date(date);\r\n          var zGodina = jmbgObj.years + 1;\r\n          this.starost = zGodina;\r\n\r\n          //\r\n\r\n          if (!this.Email(this.email)) {\r\n            this.email = \"\";\r\n            this.email_tmp = \"\";\r\n          }\r\n\r\n          this.count = res.data.results.length;\r\n          this.approved = 0;\r\n          this.verified = 0;\r\n\r\n          this.odobren = true;\r\n          this.verificiran = true;\r\n          this.partials = [];\r\n          this.partials_condition = false;\r\n\r\n          res.data.results.forEach((element) => {\r\n            if (element.verificiran) {\r\n              this.verified++;\r\n              this.partials.push(element._id);\r\n            }\r\n            if (\r\n              element.status === \"ODOBREN\" ||\r\n              element.status === \"VERIFICIRAN\"\r\n            ) {\r\n              this.approved++;\r\n            }\r\n            if (\r\n              element.status != \"ODOBREN\" &&\r\n              element.status != \"VERIFICIRAN\"\r\n            ) {\r\n              this.odobren = false;\r\n            }\r\n            if (!element.verificiran) {\r\n              this.verificiran = false;\r\n            }\r\n          });\r\n\r\n          if (this.count > this.verified && this.verified > 1) {\r\n            this.partials_condition = true;\r\n          }\r\n\r\n          this.uzorci = [];\r\n\r\n          this.nalaz.patient = res.data.results[0].patient._id;\r\n          this.nalaz.samples = [];\r\n\r\n          res.data.results.forEach((element) => {\r\n            var check = 0;\r\n            var zaprimljen = 0;\r\n            var realizovan = 0;\r\n\r\n            if (element.verificiran) {\r\n              var status_uzorka = \"VERIFICIRAN\";\r\n            } else {\r\n              var status_uzorka = element.status;\r\n            }\r\n\r\n            this.nalaz.samples.push(element._id);\r\n\r\n            element.rezultati.forEach((test) => {\r\n              check++;\r\n\r\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\r\n                zaprimljen++;\r\n              }\r\n\r\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\r\n                realizovan++;\r\n              }\r\n\r\n              if (check === element.rezultati.length) {\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n                /* \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Provjera\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n\r\n                if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                  this.MicrobiologyOrder = true;\r\n                }\r\n\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n                /* \r\n\r\n\r\n\r\n\r\n\r\nEnd of Microbiology Provjera |\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n\r\n                // console.log(\"Provjera: Created\")\r\n\r\n                if (status_uzorka === \"VERIFICIRAN\") {\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: \"VERIFICIRAN\",\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false,\r\n                  });\r\n                } else if (status_uzorka === \"ODOBREN\") {\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: \"ODOBREN\",\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false,\r\n                  });\r\n                } else if (zaprimljen < 1) {\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: \"REALIZOVAN\",\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false,\r\n                  });\r\n                } else if (realizovan < 1) {\r\n                  var stat = \"ZAPRIMLJEN\";\r\n                  if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                    if (element.rezultati[0].rezultat[0].rezultat_m.length) {\r\n                      stat = \"REALIZOVAN\";\r\n                    }\r\n                  }\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: stat,\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false,\r\n                  });\r\n                } else {\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: \"U OBRADI\",\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false,\r\n                  });\r\n                }\r\n              }\r\n            });\r\n          });\r\n\r\n          this.uzorci = this.uzorci.sort(function (a, b) {\r\n            return a.sid.localeCompare(b.sid, undefined, {\r\n              numeric: true,\r\n              sensitivity: \"base\",\r\n            });\r\n          });\r\n          this.main = true;\r\n\r\n          this.pagination = true;\r\n\r\n          http\r\n            .get(\r\n              \"/rezultati/pagination\" +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&pid=\" +\r\n                this.$route.params.id +\r\n                \"&date=\" +\r\n                this.$route.query.date,\r\n              {}\r\n            )\r\n            .then((res) => {\r\n              res.data.rezultati = res.data.rezultati.sort(function (a, b) {\r\n                return a.pid.localeCompare(b.pid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\",\r\n                });\r\n              });\r\n\r\n              this.data_length =\r\n                res.data.rezultati[res.data.rezultati.length - 1].pid;\r\n              this.data_min = res.data.rezultati[0].pid;\r\n              if (Object.getOwnPropertyNames(res.data).length === 0) {\r\n                // console.warn(\"No data.\");\r\n\r\n                this.pagination = true;\r\n              } else {\r\n                this.data_pid = res.data.data.pid;\r\n                this.Results = res.data.rezultati;\r\n              }\r\n\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n              /* \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Get Bakterije, Antibiograme i Antibiotike\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n\r\n              if (this.MicrobiologyOrder) {\r\n                http\r\n                  .get(\r\n                    \"mikrobiologija/bakterije/get?token=\" +\r\n                      this.$store.state.token +\r\n                      \"&site=\" +\r\n                      this.$store.state.site,\r\n                    {}\r\n                  )\r\n                  .then((res) => {\r\n                    this.Bacteries = res.data.bakterije;\r\n                    http\r\n                      .get(\r\n                        \"mikrobiologija/antibiogrami/get?token=\" +\r\n                          this.$store.state.token +\r\n                          \"&site=\" +\r\n                          this.$store.state.site,\r\n                        {}\r\n                      )\r\n                      .then((res) => {\r\n                        this.Antibiograms = res.data.antibiogrami;\r\n\r\n                        this.Antibiograms.sort(function (a, b) {\r\n                          return a.naziv.localeCompare(b.naziv, undefined, {\r\n                            numeric: true,\r\n                            sensitivity: \"base\",\r\n                          });\r\n                        });\r\n\r\n                        http\r\n                          .get(\r\n                            \"mikrobiologija/antibiotici/get?token=\" +\r\n                              this.$store.state.token +\r\n                              \"&site=\" +\r\n                              this.$store.state.site,\r\n                            {}\r\n                          )\r\n                          .then((res) => {\r\n                            res.data.antibiotici.sort(function (a, b) {\r\n                              return a.rbr_a.localeCompare(b.rbr_a, undefined, {\r\n                                numeric: true,\r\n                                sensitivity: \"base\",\r\n                              });\r\n                            });\r\n\r\n                            this.Antibiotics = [];\r\n\r\n                            res.data.antibiotici.forEach((element) => {\r\n                              element.chosen = false;\r\n                              element.disabled = false;\r\n                              this.Antibiotics.push(element);\r\n                            });\r\n                          });\r\n                      });\r\n                  });\r\n              }\r\n\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n              /* \r\n\r\n\r\n\r\n\r\n\r\nEnd of Microbiology Get Bakterije, Antibiograme i Antibiotike |\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n            });\r\n        });\r\n    },\r\n\r\n    Povratak() {\r\n      router.push(\"/obrada/pregled/\" + \"?sekcija=\" + \"SVE\");\r\n    },\r\n\r\n    Nazad() {\r\n      this.email_button = false;\r\n      this.main = true;\r\n      this.pdf = false;\r\n    },\r\n\r\n    Email: function (email) {\r\n      if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n\r\n    parse_date: function (date) {\r\n      // Takes one string parameter -- date in YYYY-MM-DD\r\n      date = date.split(\"-\");\r\n      var today = new Date();\r\n      var year = today.getFullYear();\r\n      var month = today.getMonth() + 1;\r\n      var day = today.getDate();\r\n      var yy = parseInt(date[0]);\r\n      var mm = parseInt(date[1]);\r\n      var dd = parseInt(date[2]);\r\n      var years, months, days;\r\n      // months\r\n      months = month - mm;\r\n      if (day < dd) {\r\n        months = months - 1;\r\n      }\r\n      // years\r\n      years = year - yy;\r\n      if (month * 100 + day < mm * 100 + dd) {\r\n        years = years - 1;\r\n        months = months + 12;\r\n      }\r\n      // days\r\n      days = Math.floor(\r\n        (today.getTime() -\r\n          new Date(yy + years, mm + months - 1, dd).getTime()) /\r\n          (24 * 60 * 60 * 1000)\r\n      );\r\n      //\r\n      return { years: years, months: months, days: days };\r\n    },\r\n\r\n    GetSingleSample(data) {\r\n      // \"_id\" : ObjectId(\"5f6ca517e4d760238841bba3\"), db.getCollection('LabAssays').find({\"naziv\" : \"Starost\"})\r\n\r\n      this.testovi = [];\r\n      this.rezultati = [];\r\n      this.analitiprikaz = [];\r\n      this.calculated = false;\r\n\r\n      var topcije = null;\r\n      topcije = izbornik.rez;\r\n\r\n      this.show_table = false;\r\n\r\n      http\r\n        .get(\r\n          \"rezultati/showsingle/\" +\r\n            data.sid +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site,\r\n          {}\r\n        )\r\n        .then((res) => {\r\n          var test = {};\r\n\r\n          if (res.data.data.length) {\r\n            res.data.data.sort(function (a, b) {\r\n              return a.testovi.labassay.grupa + a.testovi.labassay.grouporder ==\r\n                b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                ? 0\r\n                : +(\r\n                    a.testovi.labassay.grupa + a.testovi.labassay.grouporder >\r\n                    b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                  ) || -1;\r\n            });\r\n\r\n            this.testovi = res.data.data;\r\n            this.analitiprikaz = res.data.multidata;\r\n\r\n            // console.log(this.analitiprikaz);\r\n\r\n            res.data.data.forEach((element) => {\r\n              test = {};\r\n              test.realizovan = false;\r\n\r\n              test.ime = element.testovi.labassay.naziv;\r\n              test.test = element.testovi.labassay.sifra;\r\n              test.analit = element.testovi.labassay.analit;\r\n              test.IDE = element.testovi._id;\r\n              test.labassay_id = element.testovi.labassay._id;\r\n\r\n              test.multi_count = 0;\r\n              test.multi_rezultati = [];\r\n\r\n              res.data.multidata.forEach((multi) => {\r\n                if (multi.labassay._id === element.testovi.labassay._id) {\r\n                  test.multi_rezultati = multi.rezultat;\r\n                  test.multi_count = multi.rezultat[0].rezultat.length;\r\n                }\r\n              });\r\n\r\n              test.kategorija = element.testovi.labassay.kategorija;\r\n              test.analyser = element.testovi.labassay.analyser;\r\n              test.multiparam = element.testovi.labassay.multiparam;\r\n              test.vise = element.testovi.rezultat.length;\r\n              test.calculated = element.testovi.labassay.calculated;\r\n              test.manual = element.testovi.labassay.manual;\r\n\r\n              test.select_options = eval(\r\n                \"topcije.\" +\r\n                  element.testovi.interp\r\n                    .replace(\"%\", \"_\")\r\n                    .replace(\"/\", \"_\")\r\n                    .replace(\" \", \"_\")\r\n                    .replace(/-/g, \"_\")\r\n                    .replace(\"#\", \"_\")\r\n                    // .replace(/[0-9]/g, \"_\")\r\n                    .replace(/^\\d+/, \"\")\r\n              );\r\n\r\n              element.testovi.rezultat.forEach((rezultat) => {\r\n                test.sekcija = rezultat.anaassay.sekcija;\r\n\r\n                if (\r\n                  rezultat.anaassay.test === \"5f6ca517e4d760238841bba3\" &&\r\n                  rezultat.rezultat_f.trim() == \"\"\r\n                ) {\r\n                  console.log(\"Starost pacijenta: \" + this.starost);\r\n                  test.rezultat = JSON.stringify(this.starost);\r\n                } else {\r\n                  test.rezultat = rezultat.rezultat_f;\r\n                }\r\n\r\n                test.result = rezultat;\r\n                test.anaassay = rezultat.anaassay;\r\n\r\n                if (rezultat.rezultat_f != \"\") {\r\n                  test.realizovan = true;\r\n                }\r\n\r\n                test.unit = rezultat.jedinice_f;\r\n\r\n                if (res.data.verificiran || res.data.status === \"ODOBREN\") {\r\n                  test.odobren = \"ODOBREN\";\r\n                  test.edit = false;\r\n                } else {\r\n                  test.odobren != \"ODOBREN\";\r\n                  test.edit = true;\r\n                }\r\n\r\n                test.jedinica = rezultat.jedinice_f;\r\n                test.id = rezultat._id;\r\n                test.multidata = element.testovi.labassay.multi;\r\n                test.rezultat_m = rezultat.rezultat_m;\r\n                test.bakterije = element.testovi.labassay.bakterije;\r\n                test.neg_description = element.testovi.labassay.neg_description;\r\n                test.pos_description = element.testovi.labassay.pos_description;\r\n                test.refSet = element.testovi.grupa;\r\n                test.dRef = element.testovi.refd;\r\n                test.gRef = element.testovi.refg;\r\n                test.interp = element.testovi.interp;\r\n                test.extend = element.testovi.extend;\r\n                test.retest = element.testovi.retest;\r\n                test.interpretacija = element.testovi.labassay.interpretacija;\r\n              });\r\n\r\n              if (\r\n                test.select_options != undefined &&\r\n                !test.select_options.includes(test.rezultat)\r\n              ) {\r\n                test.select_options.unshift(test.rezultat);\r\n              }\r\n              this.rezultati.push(test);\r\n            });\r\n\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n            /* \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Sample Check\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n\r\n            // if (this.MicrobiologySample && this.AllowGetSample) {\r\n            if (this.MicrobiologySample) {\r\n              // On first Click\r\n              // console.warn(\"Microbiology sample check.\");\r\n\r\n              var bakterioloski = false;\r\n              var negativan = false;\r\n              var pozitivan = false;\r\n              var bakterijed = [];\r\n              var bakterijei = [];\r\n              var neg_rezultati = [];\r\n              var poz_rezultati = [];\r\n\r\n              this.CurrentTest = this.rezultati[0].analit;\r\n\r\n              neg_rezultati = [...this.rezultati[0].neg_description];\r\n              poz_rezultati = [...this.rezultati[0].pos_description];\r\n\r\n              if (this.rezultati[0].bakterije.length) {\r\n                console.log(\"Ima bakterije.\");\r\n\r\n                bakterioloski = true;\r\n\r\n                var counter = 0;\r\n                var ima = false;\r\n\r\n                this.Bacteries.forEach((element) => {\r\n                  element.chosen = false;\r\n                  counter = 0;\r\n                  ima = false;\r\n                  this.rezultati[0].bakterije.forEach((bakt) => {\r\n                    counter++;\r\n                    if (element._id == bakt) {\r\n                      ima = true;\r\n                    }\r\n\r\n                    if (\r\n                      counter === this.rezultati[0].bakterije.length &&\r\n                      !ima\r\n                    ) {\r\n                      bakterijed.push(element);\r\n                    }\r\n\r\n                    if (counter === this.rezultati[0].bakterije.length && ima) {\r\n                      bakterijei.push(element);\r\n                    }\r\n                  });\r\n                });\r\n\r\n                switch (this.rezultati[0].rezultat_m.length) {\r\n                  case 0:\r\n                    // Ima definisan skup bakterija - Nema Rezultat\r\n                    this.MicrobiologyScenario = \"MAIBNoR\";\r\n                    this.SelectedBacteries = [];\r\n                    break;\r\n                  case 1:\r\n                    // Ima definisan skup bakterija - Negativan Rezultat\r\n                    this.MicrobiologyScenario = \"MAIBNeR\";\r\n                    this.SelectedBacteries = [];\r\n\r\n                    negativan = true;\r\n\r\n                    if (\r\n                      !neg_rezultati.includes(this.rezultati[0].rezultat.trim())\r\n                    ) {\r\n                      neg_rezultati.unshift(this.rezultati[0].rezultat.trim());\r\n                    }\r\n\r\n                    break;\r\n\r\n                  default:\r\n                    // Ima definisan skup bakterija - Pozitivan Rezultat\r\n                    this.MicrobiologyScenario = \"MAIBPoR\";\r\n                    this.SelectedBacteries = [];\r\n                    this.BacteryTabs = [];\r\n\r\n                    this.rezultati[0].rezultat_m.forEach((element) => {\r\n                      // console.log(element)\r\n                      if (element.bakterija) {\r\n                        this.SelectedBacteries.push(element);\r\n                        this.BacteryTabs.push(element.opis);\r\n                      }\r\n                    });\r\n\r\n                    console.log(\"Izabrane bakterije:\");\r\n                    console.log(this.SelectedBacteries);\r\n\r\n                    let maxVal = this.SelectedBacteries.reduce((max, val) =>\r\n                      max.antibiogram.antibiotici.length >\r\n                      val.antibiogram.antibiotici.length\r\n                        ? max\r\n                        : val\r\n                    );\r\n\r\n                    if (this.CurrentTab == \"\") {\r\n                      // this.CurrentTab = maxVal.opis;\r\n                    }\r\n                    this.CurrentTab = this.SelectedBacteries[0].opis;\r\n\r\n                    bakterijed.forEach((element) => {\r\n                      this.SelectedBacteries.forEach((bact) => {\r\n                        if (element._id == bact._id) {\r\n                          element.chosen = true;\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    bakterijei.forEach((element) => {\r\n                      this.SelectedBacteries.forEach((bact) => {\r\n                        if (element._id == bact._id) {\r\n                          element.chosen = true;\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    pozitivan = true;\r\n                    if (\r\n                      !poz_rezultati.includes(this.rezultati[0].rezultat.trim())\r\n                    ) {\r\n                      poz_rezultati.unshift(this.rezultati[0].rezultat.trim());\r\n                    }\r\n\r\n                    break;\r\n                }\r\n              } else {\r\n                bakterioloski = false;\r\n\r\n                console.log(\"Nema bakterije.\");\r\n\r\n                this.SelectedBacteries = [];\r\n\r\n                switch (this.rezultati[0].rezultat_m.length) {\r\n                  case 0:\r\n                    // Nema definisan skup bakterija - Nema Rezultat\r\n                    this.MicrobiologyScenario = \"MANBNoR\";\r\n                    neg_rezultati = this.rezultati[0].neg_description;\r\n                    poz_rezultati = this.rezultati[0].pos_description;\r\n\r\n                    break;\r\n\r\n                  case 1:\r\n                    if (this.rezultati[0].rezultat_m[0].negativan === true) {\r\n                      // Nema definisan skup bakterija - Negativan Rezultat\r\n                      this.MicrobiologyScenario = \"MANBNeR\";\r\n\r\n                      negativan = true;\r\n\r\n                      if (\r\n                        !neg_rezultati.includes(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        )\r\n                      ) {\r\n                        neg_rezultati.unshift(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        );\r\n                      }\r\n                    } else {\r\n                      // Nema definisan skup bakterija - Pozitivan Rezultat\r\n                      this.MicrobiologyScenario = \"MANBPoR\";\r\n\r\n                      pozitivan = true;\r\n\r\n                      if (\r\n                        !poz_rezultati.includes(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        )\r\n                      ) {\r\n                        poz_rezultati.unshift(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        );\r\n                      }\r\n                    }\r\n\r\n                    break;\r\n\r\n                  default:\r\n                    // Error\r\n                    this.MicrobiologyScenario = \"Unknown\";\r\n\r\n                    break;\r\n                }\r\n              }\r\n\r\n              this.MicrobiologyResult = {\r\n                negative: negativan,\r\n                positive: pozitivan,\r\n                BUG: bakterioloski,\r\n                F_RESULT: this.rezultati[0].rezultat,\r\n                M_RESULT: [...this.rezultati[0].rezultat_m],\r\n                DefaultBacteries: [...bakterijei],\r\n                RemainingBacteries: [...bakterijed],\r\n                NegativeDescriptions: [...neg_rezultati],\r\n                PositiveDescriptions: [...poz_rezultati],\r\n              };\r\n              // console.log(this.MicrobiologyResult)\r\n            } else {\r\n              // console.log(\"Uzorak nije mikrobiološki || Sample closed\");\r\n\r\n              this.MicrobiologyScenario = \"Unknown\";\r\n\r\n              this.MicrobiologyResult = {\r\n                negative: null,\r\n                positive: null,\r\n                BUG: null,\r\n                F_RESULT: \"\",\r\n                M_RESULT: [],\r\n                DefaultBacteries: [],\r\n                RemainingBacteries: [],\r\n                NegativeDescriptions: [],\r\n                PositiveDescriptions: [],\r\n              };\r\n            }\r\n\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n            /* \r\n\r\n\r\n\r\n\r\n\r\nEnd of Microbiology Sample Check |\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n\r\n            this.rezultati.forEach((element) => {\r\n              if (element.calculated) {\r\n                this.calculated = true;\r\n              }\r\n            });\r\n\r\n            this.sample = data;\r\n            this.show_table = true;\r\n          }\r\n        })\r\n        .then(() => {\r\n          bus.$emit(\"SetClientHeight\", data.sid);\r\n        });\r\n    },\r\n\r\n    /* GetAnalysers() {\r\n      http\r\n        .get(\r\n          \"postavke/aparat/listall?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site,\r\n          {}\r\n        )\r\n        .then(res => {\r\n          if (res.data.success === false) {\r\n          } else {\r\n            res.data.aparati.forEach(element => {\r\n              if (element.tip === \"IMUNOHEMIJSKI\") {\r\n                element.selected = false;\r\n                this.analysers.push(element);\r\n              }\r\n            });\r\n          }\r\n        });\r\n    }, */\r\n\r\n    SelectAnalyser(test) {\r\n      http\r\n        .get(\r\n          \"rezultati/odobravanje/analysers\" +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site +\r\n            \"&test=\" +\r\n            test.labassay_id,\r\n          {}\r\n        )\r\n        .then((res) => {\r\n          this.analysers = [];\r\n\r\n          res.data.anaassays.forEach((element) => {\r\n            element.aparat.site = element.site;\r\n            this.analysers.push(element.aparat);\r\n          });\r\n\r\n          this.analysers.forEach((analyser) => {\r\n            analyser.selected = false;\r\n          });\r\n\r\n          this.analiza = test;\r\n\r\n          this.rezultati.forEach((element) => {\r\n            this.analysers.forEach((analyser) => {\r\n              if (\r\n                element.ime === this.analiza.ime &&\r\n                element.anaassay.aparat === analyser._id\r\n              ) {\r\n                analyser.selected = true;\r\n                this.analyser_selected = analyser;\r\n              }\r\n            });\r\n          });\r\n          this.$refs.staticModalAparati.open();\r\n        });\r\n    },\r\n\r\n    AnalyserSelected(analyser) {\r\n      this.analyser = analyser;\r\n\r\n      if (this.analyser_selected._id === analyser._id) {\r\n        this.$refs.staticModalAparati.close();\r\n\r\n        // console.warn(\"No change required.\");\r\n      } else {\r\n        http\r\n          .post(\"rezultati/odobravanje/references\", {\r\n            token: this.$store.state.token,\r\n            site: this.$store.state.site,\r\n            id: this.sample.sid,\r\n            pacijent: this.analyser_patient,\r\n            analiza: this.analiza,\r\n            analyser: this.analyser,\r\n          })\r\n          .then((res) => {\r\n            if (res.data.success) {\r\n              var data = {};\r\n\r\n              this.uzorci.forEach((element) => {\r\n                if (element.sid === this.$store.state.sid) {\r\n                  data = element;\r\n                }\r\n              });\r\n\r\n              this.testovi = [];\r\n              this.rezultati = [];\r\n              this.analitiprikaz = [];\r\n              this.calculated = false;\r\n\r\n              var topcije = null;\r\n              topcije = izbornik.rez;\r\n\r\n              this.show_table = false;\r\n\r\n              http\r\n                .get(\r\n                  \"rezultati/showsingle/\" +\r\n                    data.sid +\r\n                    \"?token=\" +\r\n                    this.$store.state.token +\r\n                    \"&site=\" +\r\n                    this.$store.state.site,\r\n                  {}\r\n                )\r\n                .then((res) => {\r\n                  var test = {};\r\n\r\n                  if (res.data.data.length) {\r\n                    res.data.data.sort(function (a, b) {\r\n                      return a.testovi.labassay.grupa +\r\n                        a.testovi.labassay.grouporder ==\r\n                        b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                        ? 0\r\n                        : +(\r\n                            a.testovi.labassay.grupa +\r\n                              a.testovi.labassay.grouporder >\r\n                            b.testovi.labassay.grupa +\r\n                              b.testovi.labassay.grouporder\r\n                          ) || -1;\r\n                    });\r\n\r\n                    this.testovi = res.data.data;\r\n                    this.analitiprikaz = res.data.multidata;\r\n\r\n                    res.data.data.forEach((element) => {\r\n                      test = {};\r\n                      test.realizovan = false;\r\n\r\n                      test.ime = element.testovi.labassay.naziv;\r\n                      test.test = element.testovi.labassay.sifra;\r\n                      test.analit = element.testovi.labassay.analit;\r\n                      test.IDE = element.testovi._id;\r\n                      test.labassay_id = element.testovi.labassay._id;\r\n\r\n                      test.multi_count = 0;\r\n                      test.multi_rezultati = [];\r\n\r\n                      res.data.multidata.forEach((multi) => {\r\n                        if (\r\n                          multi.labassay._id === element.testovi.labassay._id\r\n                        ) {\r\n                          test.multi_rezultati = multi.rezultat;\r\n                          test.multi_count = multi.rezultat[0].rezultat.length;\r\n                        }\r\n                      });\r\n\r\n                      test.kategorija = element.testovi.labassay.kategorija;\r\n                      test.analyser = element.testovi.labassay.analyser;\r\n                      test.multiparam = element.testovi.labassay.multiparam;\r\n                      test.vise = element.testovi.rezultat.length;\r\n                      test.calculated = element.testovi.labassay.calculated;\r\n                      test.manual = element.testovi.labassay.manual;\r\n\r\n                      test.select_options = eval(\r\n                        \"topcije.\" +\r\n                          element.testovi.interp\r\n                            .replace(\"%\", \"_\")\r\n                            .replace(\"/\", \"_\")\r\n                            .replace(\" \", \"_\")\r\n                            .replace(/-/g, \"_\")\r\n                            .replace(\"#\", \"_\")\r\n                            // .replace(/[0-9]/g, \"_\")\r\n                            .replace(/^\\d+/, \"\")\r\n                      );\r\n\r\n                      element.testovi.rezultat.forEach((rezultat) => {\r\n                        test.sekcija = rezultat.anaassay.sekcija;\r\n                        test.rezultat = rezultat.rezultat_f;\r\n                        test.result = rezultat;\r\n                        test.anaassay = rezultat.anaassay;\r\n\r\n                        if (rezultat.rezultat_f != \"\") {\r\n                          test.realizovan = true;\r\n                        }\r\n\r\n                        test.unit = rezultat.jedinice_f;\r\n\r\n                        if (\r\n                          res.data.verificiran ||\r\n                          res.data.status === \"ODOBREN\"\r\n                        ) {\r\n                          test.odobren = \"ODOBREN\";\r\n                          test.edit = false;\r\n                        } else {\r\n                          test.odobren != \"ODOBREN\";\r\n                          test.edit = true;\r\n                        }\r\n\r\n                        test.jedinica = rezultat.jedinice_f;\r\n                        test.id = rezultat._id;\r\n                        test.multidata = element.testovi.labassay.multi;\r\n                        test.rezultat_m = rezultat.rezultat_m;\r\n                        test.bakterije = element.testovi.labassay.bakterije;\r\n                        test.neg_description =\r\n                          element.testovi.labassay.neg_description;\r\n                        test.pos_description =\r\n                          element.testovi.labassay.pos_description;\r\n                        test.refSet = element.testovi.grupa;\r\n                        test.dRef = element.testovi.refd;\r\n                        test.gRef = element.testovi.refg;\r\n                        test.interp = element.testovi.interp;\r\n                        test.extend = element.testovi.extend;\r\n                        test.retest = element.testovi.retest;\r\n                        test.interpretacija =\r\n                          element.testovi.labassay.interpretacija;\r\n                      });\r\n\r\n                      if (\r\n                        test.select_options != undefined &&\r\n                        !test.select_options.includes(test.rezultat)\r\n                      ) {\r\n                        test.select_options.unshift(test.rezultat);\r\n                      }\r\n                      this.rezultati.push(test);\r\n                    });\r\n\r\n                    this.rezultati.forEach((element) => {\r\n                      if (element.calculated) {\r\n                        this.calculated = true;\r\n                      }\r\n                    });\r\n\r\n                    this.sample = data;\r\n                    this.show_table = true;\r\n                  }\r\n                });\r\n              this.$refs.staticModalAparati.close();\r\n            } else {\r\n              // console.warn(res.data.message);\r\n              // this.$refs.staticModalAparati.close();\r\n            }\r\n          });\r\n      }\r\n    },\r\n\r\n    Reference(event, test) {\r\n      this.reference = {\r\n        sample: this.$store.state.sid,\r\n        labassay: test.labassay_id,\r\n        naziv: test.ime,\r\n        opis: test.analit,\r\n        dref: test.dRef,\r\n        gref: test.gRef,\r\n        interp: test.interp,\r\n        extend: test.extend,\r\n        jedinica: test.jedinica,\r\n      };\r\n      this.$refs.staticModalReference.open();\r\n    },\r\n\r\n    BarcodePrint(data) {\r\n      var link = barcode + data.sid + \".png\";\r\n\r\n      http\r\n        .get(\r\n          \"uzorci/barcode/\" +\r\n            data.sid +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site,\r\n          {}\r\n        )\r\n        .then((res) => {\r\n          printEPL(\r\n            res.data.name + \" \" + res.data.surname,\r\n            this.sid,\r\n            res.data.pacijentRBr,\r\n            res.data.godiste,\r\n            res.data.datum,\r\n            link,\r\n            res.data.code,\r\n            this.$store.state.site,\r\n            undefined,\r\n            undefined\r\n          );\r\n        });\r\n    },\r\n\r\n    SaveResults(rezultati, from) {\r\n      // Vue Loading Overlay Component\r\n      this.isLoading = true;\r\n\r\n      if (!this.MicrobiologySample) {\r\n        rezultati.forEach((element) => {\r\n          element.rezultat = element.rezultat.replace(/,/g, \".\");\r\n        });\r\n\r\n        rezultati[0].rezultat_m = [];\r\n      }\r\n\r\n      http\r\n        .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n          email: this.$store.state.userId,\r\n          token: this.$store.state.token,\r\n          site: this.$store.state.site,\r\n          rezultati: rezultati,\r\n        })\r\n        .then((res) => {\r\n          http\r\n            .get(\r\n              \"rezultati/odobravanje/samples/\" +\r\n                this.$route.params.patient +\r\n                \"/\" +\r\n                this.$route.params.id +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&date=\" +\r\n                this.$route.query.date,\r\n              {}\r\n            )\r\n            .then((res) => {\r\n              this.uzorci = [];\r\n\r\n              res.data.results.forEach((element) => {\r\n                var check = 0;\r\n                var zaprimljen = 0;\r\n                var realizovan = 0;\r\n\r\n                if (element.verificiran) {\r\n                  var status_uzorka = \"VERIFICIRAN\";\r\n                } else {\r\n                  var status_uzorka = element.status;\r\n                }\r\n\r\n                element.rezultati.forEach((test) => {\r\n                  check++;\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                  ) {\r\n                    zaprimljen++;\r\n                  }\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                  ) {\r\n                    realizovan++;\r\n                  }\r\n\r\n                  if (check === element.rezultati.length) {\r\n                    // console.log(\"Provjera: Save (single)\")\r\n\r\n                    if (status_uzorka === \"VERIFICIRAN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"VERIFICIRAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else if (status_uzorka === \"ODOBREN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"ODOBREN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else if (zaprimljen < 1) {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"REALIZOVAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else if (realizovan < 1) {\r\n                      var stat = \"ZAPRIMLJEN\";\r\n                      if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                        if (\r\n                          element.rezultati[0].rezultat[0].rezultat_m.length\r\n                        ) {\r\n                          stat = \"REALIZOVAN\";\r\n                        }\r\n                      }\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: stat,\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"U OBRADI\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    }\r\n                  }\r\n                });\r\n              });\r\n\r\n              this.uzorci = this.uzorci.sort(function (a, b) {\r\n                return a.sid.localeCompare(b.sid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\",\r\n                });\r\n              });\r\n\r\n              // Vue Loading Overlay Component\r\n              this.isLoading = false;\r\n            });\r\n        });\r\n    },\r\n\r\n    DeletedSample(data) {\r\n      this.uzorci.forEach((element) => {\r\n        if (element.sid === data) {\r\n          element.removed = false;\r\n        }\r\n      });\r\n\r\n      for (var i = 0; i < this.uzorci.length; i++) {\r\n        if (this.uzorci[i].sid === data) {\r\n          this.uzorci.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (this.uzorci.length) {\r\n        this.show = false;\r\n        this.main = false;\r\n        http\r\n          .get(\r\n            \"rezultati/odobravanje/samples/\" +\r\n              this.$route.params.patient +\r\n              \"/\" +\r\n              this.$route.params.id +\r\n              \"?token=\" +\r\n              this.$store.state.token +\r\n              \"&site=\" +\r\n              this.$store.state.site +\r\n              \"&date=\" +\r\n              this.$route.query.date,\r\n            {}\r\n          )\r\n          .then((res) => {\r\n            this.count = res.data.results.length;\r\n            this.approved = 0;\r\n\r\n            this.odobren = true;\r\n            this.verificiran = true;\r\n\r\n            this.resdata = {};\r\n\r\n            this.resdata = res.data.results;\r\n\r\n            res.data.results.forEach((element) => {\r\n              if (\r\n                element.status === \"ODOBREN\" ||\r\n                element.status === \"VERIFICIRAN\"\r\n              ) {\r\n                this.approved++;\r\n              }\r\n              if (\r\n                element.status != \"ODOBREN\" &&\r\n                element.status != \"VERIFICIRAN\"\r\n              ) {\r\n                this.odobren = false;\r\n              }\r\n              if (!element.verificiran) {\r\n                this.verificiran = false;\r\n              }\r\n            });\r\n\r\n            if (this.count == this.approved) {\r\n              var report = [];\r\n\r\n              this.uzorci.forEach((element) => {\r\n                report.push(element._id);\r\n              });\r\n\r\n              http\r\n                .post(\"nalazi/create\", {\r\n                  token: this.$store.state.token,\r\n                  site: this.$store.state.site,\r\n                  type: \"multi\",\r\n                  uzorci: this.uzorci,\r\n                  samples: report,\r\n                  timestamp: this.timestamp,\r\n                  napomena: \"\",\r\n                  status: false,\r\n                  idNalaza: \"\",\r\n                  location: \"/\",\r\n                  klijent: this.klijent,\r\n                  naziv: this.timestamp,\r\n                })\r\n                .then((res) => {\r\n                  if (res.data.success) {\r\n                    http\r\n                      .post(\"nalazi/memo\", {\r\n                        token: this.$store.state.token,\r\n                        site: this.$store.state.site,\r\n                        timestamp: this.timestamp,\r\n                        height: res.data.memo,\r\n                        location: \"/\",\r\n                        naziv: this.timestamp,\r\n                      })\r\n                      .then((res) => {\r\n                        this.final_pdf = true;\r\n\r\n                        this.uzorci = [];\r\n\r\n                        this.resdata.forEach((element) => {\r\n                          var check = 0;\r\n                          var zaprimljen = 0;\r\n                          var realizovan = 0;\r\n\r\n                          if (element.verificiran) {\r\n                            var status_uzorka = \"VERIFICIRAN\";\r\n                          } else {\r\n                            var status_uzorka = element.status;\r\n                          }\r\n\r\n                          element.rezultati.forEach((test) => {\r\n                            check++;\r\n\r\n                            if (\r\n                              test.rezultat[test.rezultat.length - 1]\r\n                                .rezultat_f === \"\"\r\n                            ) {\r\n                              zaprimljen++;\r\n                            }\r\n\r\n                            if (\r\n                              test.rezultat[test.rezultat.length - 1]\r\n                                .rezultat_f != \"\"\r\n                            ) {\r\n                              realizovan++;\r\n                            }\r\n\r\n                            if (check === element.rezultati.length) {\r\n                              // console.log(\"Provjera: Sample Delete\")\r\n\r\n                              if (status_uzorka === \"VERIFICIRAN\") {\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: \"VERIFICIRAN\",\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false,\r\n                                });\r\n                              } else if (status_uzorka === \"ODOBREN\") {\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: \"ODOBREN\",\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false,\r\n                                });\r\n                              } else if (zaprimljen < 1) {\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: \"REALIZOVAN\",\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false,\r\n                                });\r\n                              } else if (realizovan < 1) {\r\n                                var stat = \"ZAPRIMLJEN\";\r\n                                if (\r\n                                  element.sample.tip.includes(\"Mikrobiologija\")\r\n                                ) {\r\n                                  if (\r\n                                    element.rezultati[0].rezultat[0].rezultat_m\r\n                                      .length\r\n                                  ) {\r\n                                    stat = \"REALIZOVAN\";\r\n                                  }\r\n                                }\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: stat,\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false,\r\n                                });\r\n                              } else {\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: \"U OBRADI\",\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false,\r\n                                });\r\n                              }\r\n                            }\r\n                          });\r\n                        });\r\n\r\n                        this.uzorci = this.uzorci.sort(function (a, b) {\r\n                          return a.sid.localeCompare(b.sid, undefined, {\r\n                            numeric: true,\r\n                            sensitivity: \"base\",\r\n                          });\r\n                        });\r\n\r\n                        this.main = true;\r\n                        this.show = true;\r\n                      });\r\n                  }\r\n                });\r\n            } else {\r\n              this.uzorci = [];\r\n\r\n              res.data.results.forEach((element) => {\r\n                var check = 0;\r\n                var zaprimljen = 0;\r\n                var realizovan = 0;\r\n\r\n                if (element.verificiran) {\r\n                  var status_uzorka = \"VERIFICIRAN\";\r\n                } else {\r\n                  var status_uzorka = element.status;\r\n                }\r\n\r\n                element.rezultati.forEach((test) => {\r\n                  check++;\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                  ) {\r\n                    zaprimljen++;\r\n                  }\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                  ) {\r\n                    realizovan++;\r\n                  }\r\n\r\n                  if (check === element.rezultati.length) {\r\n                    // console.log(\"Provjera: Sample Delete\")\r\n\r\n                    if (status_uzorka === \"VERIFICIRAN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"VERIFICIRAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else if (status_uzorka === \"ODOBREN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"ODOBREN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else if (zaprimljen < 1) {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"REALIZOVAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else if (realizovan < 1) {\r\n                      var stat = \"ZAPRIMLJEN\";\r\n                      if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                        if (\r\n                          element.rezultati[0].rezultat[0].rezultat_m.length\r\n                        ) {\r\n                          stat = \"REALIZOVAN\";\r\n                        }\r\n                      }\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: stat,\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"U OBRADI\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    }\r\n                  }\r\n                });\r\n              });\r\n\r\n              this.uzorci = this.uzorci.sort(function (a, b) {\r\n                return a.sid.localeCompare(b.sid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\",\r\n                });\r\n              });\r\n\r\n              this.main = true;\r\n              this.show = true;\r\n            }\r\n          });\r\n      } else {\r\n        router.push(\"/obrada/pregled\");\r\n      }\r\n    },\r\n\r\n    EditSample(data) {\r\n      document.getElementById(data).click();\r\n\r\n      http\r\n        .get(\r\n          \"rezultati/odobravanje/samples/\" +\r\n            this.$route.params.patient +\r\n            \"/\" +\r\n            this.$route.params.id +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site +\r\n            \"&date=\" +\r\n            this.$route.query.date,\r\n          {}\r\n        )\r\n        .then((res) => {\r\n          this.uzorci = [];\r\n\r\n          res.data.results.forEach((element) => {\r\n            var check = 0;\r\n            var zaprimljen = 0;\r\n            var realizovan = 0;\r\n\r\n            if (element.verificiran) {\r\n              var status_uzorka = \"VERIFICIRAN\";\r\n            } else {\r\n              var status_uzorka = element.status;\r\n            }\r\n\r\n            element.rezultati.forEach((test) => {\r\n              check++;\r\n\r\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\r\n                zaprimljen++;\r\n              }\r\n\r\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\r\n                realizovan++;\r\n              }\r\n\r\n              if (check === element.rezultati.length) {\r\n                // console.log(\"Provjera: Edit\")\r\n\r\n                if (status_uzorka === \"VERIFICIRAN\") {\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: \"VERIFICIRAN\",\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false,\r\n                  });\r\n                } else if (status_uzorka === \"ODOBREN\") {\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: \"ODOBREN\",\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false,\r\n                  });\r\n                } else if (zaprimljen < 1) {\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: \"REALIZOVAN\",\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false,\r\n                  });\r\n                } else if (realizovan < 1) {\r\n                  var stat = \"ZAPRIMLJEN\";\r\n                  if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                    if (element.rezultati[0].rezultat[0].rezultat_m.length) {\r\n                      stat = \"REALIZOVAN\";\r\n                    }\r\n                  }\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: stat,\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false,\r\n                  });\r\n                } else {\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: \"U OBRADI\",\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false,\r\n                  });\r\n                }\r\n              }\r\n            });\r\n          });\r\n\r\n          this.uzorci = this.uzorci.sort(function (a, b) {\r\n            return a.sid.localeCompare(b.sid, undefined, {\r\n              numeric: true,\r\n              sensitivity: \"base\",\r\n            });\r\n          });\r\n        })\r\n        .then(() => {\r\n          setTimeout(() => {\r\n            document.getElementById(this.$store.state.sid).click();\r\n          }, 500);\r\n        });\r\n    },\r\n\r\n    RetestEnable: function (event) {\r\n      this.rezultati.forEach((element) => {\r\n        if (element.test === event.target.id) {\r\n          element.retest = true;\r\n        }\r\n      });\r\n\r\n      this.save_retest = true;\r\n\r\n      http\r\n        .post(\"rezultati/odobravanje/retest/da/\", {\r\n          id_u: this.$store.state.sid,\r\n          id_t: event.target.id,\r\n          site: this.$store.state.site,\r\n          token: this.$store.state.token,\r\n        })\r\n        .then((res) => {\r\n          if (res.data.success) {\r\n            this.rezultati.forEach((element) => {\r\n              if (element.test === event.target.id) {\r\n                element.retest = true;\r\n              }\r\n            });\r\n          }\r\n        });\r\n    },\r\n\r\n    RetestDisable: function (event) {\r\n      this.rezultati.forEach((element) => {\r\n        if (element.test === event.target.id) {\r\n          element.retest = false;\r\n        }\r\n      });\r\n\r\n      this.save_retest = true;\r\n\r\n      http\r\n        .post(\"rezultati/odobravanje/retest/ne/\", {\r\n          id_u: this.$store.state.sid,\r\n          id_t: event.target.id,\r\n          site: this.$store.state.site,\r\n          token: this.$store.state.token,\r\n        })\r\n        .then((res) => {\r\n          if (res.data.success) {\r\n            this.rezultati.forEach((element) => {\r\n              if (element.test === event.target.id) {\r\n                element.retest = false;\r\n              }\r\n            });\r\n          }\r\n        });\r\n    },\r\n\r\n    MultiGet: function (event, naziv, ana, rezultat, odobren) {\r\n      // Sediment urina\r\n      // console.log(event.target.id)\r\n\r\n      this.naslov = \"Rezultati testa: \" + naziv + \" (\" + ana + \")\";\r\n      this.analiti = [];\r\n      var single = {};\r\n      var i = 0;\r\n      var kontrola = false;\r\n\r\n      this.uzorci.forEach((element) => {\r\n        if (element.sid === this.$store.state.sid) {\r\n          this.check = element.status;\r\n        }\r\n      });\r\n\r\n      this.analitiprikaz.forEach((element) => {\r\n        i++;\r\n        single = {};\r\n\r\n        var opcije = null;\r\n        opcije = izbornik.data;\r\n\r\n        var noResult = true;\r\n\r\n        if (event.target.id === element.labassay._id) {\r\n          console.log(element.labassay)\r\n          element.rezultat.forEach((analit) => {\r\n            if (analit.rezultat[0].rezultat_f.trim() != \"\") {\r\n              noResult = false;\r\n            }\r\n          });\r\n          console.log(noResult)\r\n        }\r\n\r\n        if (event.target.id === element.labassay._id) {\r\n          element.rezultat.forEach((analit) => {\r\n            single.kod = analit.rezultat[0].module_sn;\r\n\r\n            element.labassay.multiparam.forEach((mparam) => {\r\n              if (mparam.kod === single.kod) {\r\n                if (mparam.izbornik.length) {\r\n                  // console.log(mparam.kod);\r\n                  // console.log(mparam.izbornik);\r\n                  single.select_options = mparam.izbornik;\r\n                } else {\r\n                  single.select_options = undefined;\r\n                }\r\n              }\r\n            });\r\n\r\n            /* single.select_options = eval(\r\n              \"opcije.\" +\r\n                analit.rezultat[0].module_sn\r\n                  .replace(\"%\", \"_\")\r\n                  .replace(\"/\", \"_\")\r\n                  .replace(\" \", \"_\")\r\n                  .replace(/-/g, \"_\")\r\n                  .replace(\"#\", \"_\")\r\n                  // .replace(/[0-9]/g, \"_\")\r\n                  .replace(/^\\d+/, \"\")\r\n            ); */\r\n\r\n            var tmpOptionsAna = [];\r\n            if (single.select_options != undefined) {\r\n              tmpOptionsAna = single.select_options.slice();\r\n              single.select_options = tmpOptionsAna.slice();\r\n            }\r\n\r\n            if (\r\n              analit.rezultat[0].rezultat_f.trim() != \"\" &&\r\n              single.select_options != undefined &&\r\n              !single.select_options.includes(analit.rezultat[0].rezultat_f)\r\n            ) {\r\n              // Sediment urina (Epitelne ćelije, Kristali i Soli)\r\n              if (\r\n                single.kod != \"s03\" &&\r\n                single.kod != \"s04\" &&\r\n                single.kod != \"s08\" &&\r\n                single.kod != \"s09\"\r\n              ) {\r\n                single.select_options.unshift(analit.rezultat[0].rezultat_f);\r\n              }\r\n            }\r\n\r\n            single.refd = analit.refd;\r\n            single.labID = event.target.id;\r\n            single.refg = analit.refg;\r\n            single.interp = analit.interp;\r\n            single.interpretacija = null;\r\n            single.nazivTesta = naziv;\r\n            single.grupa = analit.grupa;\r\n            single.naziv = analit.rezultat[0].sn;\r\n            single.opis = analit.rezultat[0].dilucija;\r\n            single.jedinica = analit.rezultat[0].jedinice_f;\r\n            single.rezultat = analit.rezultat[0].rezultat_f;\r\n            single.flag = analit.rezultat[0].rezultat_i;\r\n            single.manual = element.labassay.manual;\r\n            single.odobren = odobren;\r\n\r\n            if (\r\n              single.select_options != undefined &&\r\n              (single.kod === \"s03\" ||\r\n                single.kod === \"s04\" ||\r\n                single.kod === \"s08\" ||\r\n                single.kod === \"s09\")\r\n            ) {\r\n              // Sediment urina (Epitelne ćelije, Kristali i Soli)\r\n              single.rezultat_multiple = single.rezultat.split(\";\");\r\n              for (var i = single.rezultat_multiple.length - 1; i >= 0; i--) {\r\n                single.rezultat_multiple[i] = single.rezultat_multiple[\r\n                  i\r\n                ].trim();\r\n                if (single.rezultat_multiple[i] === \"\") {\r\n                  single.rezultat_multiple.splice(i, 1);\r\n                }\r\n              }\r\n            } else {\r\n              single.rezultat_multiple = [];\r\n            }\r\n\r\n            if (this.check === \"ODOBREN\" || this.check === \"VERIFICIRAN\") {\r\n              single.edit = false;\r\n            } else {\r\n              single.edit = true;\r\n            }\r\n\r\n            if (\r\n              ana === \"Opšti pregled urina\" &&\r\n              this.check != \"ODOBREN\" &&\r\n              this.check != \"VERIFICIRAN\"\r\n            ) {\r\n              if (\r\n                analit.rezultat[0].rezultat_f === \"\" &&\r\n                single.select_options != undefined\r\n              ) {\r\n                if (noResult) {\r\n                  single.rezultat = single.select_options[1];\r\n                }\r\n              }\r\n            }\r\n\r\n            single.analit = analit.rezultat[0].anaassay;\r\n            single.izbor = ana;\r\n\r\n            // Opšti pregled urina (Urobilinogen)\r\n            if (single.kod === \"o12\" && single.rezultat.trim() === \"\") {\r\n              if (noResult) {\r\n                  single.rezultat = \"16\";\r\n                }\r\n              \r\n            }\r\n\r\n            this.analiti.push(single);\r\n\r\n            single = {};\r\n          });\r\n        }\r\n\r\n        if (i === this.analitiprikaz.length) {\r\n          kontrola = true;\r\n        }\r\n      });\r\n\r\n      if (kontrola) {\r\n        this.$refs.largeModalMulti.open();\r\n      }\r\n    },\r\n\r\n    Interpretacija: function (\r\n      test,\r\n      rezultat,\r\n      jedinica,\r\n      refd,\r\n      refg,\r\n      site,\r\n      interp,\r\n      extend,\r\n      spec\r\n    ) {\r\n      return Interpretation(\r\n        test,\r\n        rezultat,\r\n        jedinica,\r\n        refd,\r\n        refg,\r\n        site,\r\n        interp,\r\n        extend,\r\n        spec\r\n      );\r\n    },\r\n\r\n    MailDialog() {\r\n      this.$refs.staticModalSendMail.open();\r\n    },\r\n\r\n    SendMail(email) {\r\n      // Vue Loading Overlay Component\r\n      this.isLoading = true;\r\n\r\n      http\r\n        .post(\"nalazi/mail\", {\r\n          token: this.$store.state.token,\r\n          site: this.$store.state.site,\r\n          email: email,\r\n          timestamp: this.timestamp,\r\n          location: \"/\",\r\n          naziv: this.timestamp,\r\n        })\r\n        .then((res) => {\r\n          // Vue Loading Overlay Component\r\n          this.isLoading = false;\r\n\r\n          if (res.data.success) {\r\n            this.toastText = \"Nalaz uspješno poslan.\";\r\n            this.toastIcon = \"fa-check\";\r\n            this.toastPosition = \"top-right\";\r\n            this.className = \"vuestic-toast-primary\";\r\n\r\n            this.showToast(this.toastText, {\r\n              icon: this.toastIcon,\r\n              position: this.toastPosition,\r\n              duration: 2500,\r\n              fullWidth: this.false,\r\n              className: this.className,\r\n            });\r\n\r\n            if (this.email_changed) {\r\n              // http\r\n              //   .post(\"pacijenti/detalji/update/\" + this.pacijent, {\r\n              //     email: email.trim(),\r\n              //     token: this.$store.state.token,\r\n              //     site: this.$store.state.site,\r\n              //   })\r\n              //   .then((res) => {});\r\n            }\r\n          } else {\r\n            this.toastText = \"Greška prilikom slanja nalaza!\";\r\n            this.toastIcon = \"fa-remove\";\r\n            this.toastPosition = \"top-right\";\r\n            this.className = \"vuestic-toast-danger\";\r\n\r\n            this.showToast(this.toastText, {\r\n              icon: this.toastIcon,\r\n              position: this.toastPosition,\r\n              duration: 2500,\r\n              fullWidth: this.false,\r\n              className: this.className,\r\n            });\r\n          }\r\n        });\r\n    },\r\n\r\n    SaveMultiResults(analiti, data) {\r\n      analiti.forEach((analit) => {\r\n        analit.rezultat = analit.rezultat.replace(/,/g, \".\");\r\n\r\n        if (analit.rezultat_multiple.length) {\r\n          analit.rezultat = \"\";\r\n\r\n          analit.rezultat_multiple.forEach((element) => {\r\n            if (element === \"\") {\r\n            } else {\r\n              analit.rezultat = analit.rezultat + element + \";\";\r\n            }\r\n          });\r\n\r\n          analit.rezultat = analit.rezultat\r\n            .trim()\r\n            .slice(0, analit.rezultat.length - 1);\r\n        }\r\n      });\r\n\r\n      // Vue Loading Overlay Component\r\n      this.isLoading = true;\r\n\r\n      http\r\n        .post(\"/rezultati/odobravanje/analiti/\" + this.$store.state.sid, {\r\n          analiti: analiti,\r\n          site: this.$store.state.site,\r\n          token: this.$store.state.token,\r\n        })\r\n        .then((res) => {\r\n          http\r\n            .get(\r\n              \"rezultati/odobravanje/samples/\" +\r\n                this.$route.params.patient +\r\n                \"/\" +\r\n                this.$route.params.id +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&date=\" +\r\n                this.$route.query.date,\r\n              {}\r\n            )\r\n            .then((res) => {\r\n              this.uzorci = [];\r\n\r\n              res.data.results.forEach((element) => {\r\n                var check = 0;\r\n                var zaprimljen = 0;\r\n                var realizovan = 0;\r\n\r\n                if (element.verificiran) {\r\n                  var status_uzorka = \"VERIFICIRAN\";\r\n                } else {\r\n                  var status_uzorka = element.status;\r\n                }\r\n\r\n                element.rezultati.forEach((test) => {\r\n                  check++;\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                  ) {\r\n                    zaprimljen++;\r\n                  }\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                  ) {\r\n                    realizovan++;\r\n                  }\r\n\r\n                  if (check === element.rezultati.length) {\r\n                    // console.log(\"Provjera: Save (multi)\")\r\n\r\n                    if (status_uzorka === \"VERIFICIRAN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"VERIFICIRAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else if (status_uzorka === \"ODOBREN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"ODOBREN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else if (zaprimljen < 1) {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"REALIZOVAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else if (realizovan < 1) {\r\n                      var stat = \"ZAPRIMLJEN\";\r\n                      if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                        if (\r\n                          element.rezultati[0].rezultat[0].rezultat_m.length\r\n                        ) {\r\n                          stat = \"REALIZOVAN\";\r\n                        }\r\n                      }\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: stat,\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"U OBRADI\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    }\r\n                  }\r\n                });\r\n              });\r\n\r\n              this.uzorci = this.uzorci.sort(function (a, b) {\r\n                return a.sid.localeCompare(b.sid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\",\r\n                });\r\n              });\r\n\r\n              // Vue Loading Overlay Component\r\n              this.isLoading = false;\r\n            });\r\n        })\r\n        .then((res) => {\r\n          var data = {};\r\n\r\n          this.uzorci.forEach((element) => {\r\n            if (element.sid === this.$store.state.sid) {\r\n              data = element;\r\n            }\r\n          });\r\n\r\n          this.testovi = [];\r\n          this.rezultati = [];\r\n          this.analitiprikaz = [];\r\n          this.calculated = false;\r\n\r\n          var topcije = null;\r\n          topcije = izbornik.rez;\r\n\r\n          this.show_table = false;\r\n\r\n          http\r\n            .get(\r\n              \"rezultati/showsingle/\" +\r\n                data.sid +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site,\r\n              {}\r\n            )\r\n            .then((res) => {\r\n              var test = {};\r\n\r\n              if (res.data.data.length) {\r\n                res.data.data.sort(function (a, b) {\r\n                  return a.testovi.labassay.grupa +\r\n                    a.testovi.labassay.grouporder ==\r\n                    b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                    ? 0\r\n                    : +(\r\n                        a.testovi.labassay.grupa +\r\n                          a.testovi.labassay.grouporder >\r\n                        b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                      ) || -1;\r\n                });\r\n\r\n                this.testovi = res.data.data;\r\n                this.analitiprikaz = res.data.multidata;\r\n\r\n                res.data.data.forEach((element) => {\r\n                  test = {};\r\n                  test.realizovan = false;\r\n\r\n                  test.ime = element.testovi.labassay.naziv;\r\n                  test.test = element.testovi.labassay.sifra;\r\n                  test.analit = element.testovi.labassay.analit;\r\n                  test.IDE = element.testovi._id;\r\n                  test.labassay_id = element.testovi.labassay._id;\r\n\r\n                  test.multi_count = 0;\r\n                  test.multi_rezultati = [];\r\n\r\n                  res.data.multidata.forEach((multi) => {\r\n                    if (multi.labassay._id === element.testovi.labassay._id) {\r\n                      test.multi_rezultati = multi.rezultat;\r\n                      test.multi_count = multi.rezultat[0].rezultat.length;\r\n                    }\r\n                  });\r\n\r\n                  test.kategorija = element.testovi.labassay.kategorija;\r\n                  test.analyser = element.testovi.labassay.analyser;\r\n                  test.multiparam = element.testovi.labassay.multiparam;\r\n                  test.vise = element.testovi.rezultat.length;\r\n                  test.calculated = element.testovi.labassay.calculated;\r\n                  test.manual = element.testovi.labassay.manual;\r\n\r\n                  test.select_options = eval(\r\n                    \"topcije.\" +\r\n                      element.testovi.interp\r\n                        .replace(\"%\", \"_\")\r\n                        .replace(\"/\", \"_\")\r\n                        .replace(\" \", \"_\")\r\n                        .replace(/-/g, \"_\")\r\n                        .replace(\"#\", \"_\")\r\n                        // .replace(/[0-9]/g, \"_\")\r\n                        .replace(/^\\d+/, \"\")\r\n                  );\r\n\r\n                  element.testovi.rezultat.forEach((rezultat) => {\r\n                    test.sekcija = rezultat.anaassay.sekcija;\r\n                    test.rezultat = rezultat.rezultat_f;\r\n                    test.result = rezultat;\r\n                    test.anaassay = rezultat.anaassay;\r\n\r\n                    if (rezultat.rezultat_f != \"\") {\r\n                      test.realizovan = true;\r\n                    }\r\n\r\n                    test.unit = rezultat.jedinice_f;\r\n\r\n                    if (res.data.verificiran || res.data.status === \"ODOBREN\") {\r\n                      test.odobren = \"ODOBREN\";\r\n                      test.edit = false;\r\n                    } else {\r\n                      test.odobren != \"ODOBREN\";\r\n                      test.edit = true;\r\n                    }\r\n\r\n                    test.jedinica = rezultat.jedinice_f;\r\n                    test.id = rezultat._id;\r\n                    test.multidata = element.testovi.labassay.multi;\r\n                    test.rezultat_m = rezultat.rezultat_m;\r\n                    test.bakterije = element.testovi.labassay.bakterije;\r\n                    test.neg_description =\r\n                      element.testovi.labassay.neg_description;\r\n                    test.pos_description =\r\n                      element.testovi.labassay.pos_description;\r\n                    test.refSet = element.testovi.grupa;\r\n                    test.dRef = element.testovi.refd;\r\n                    test.gRef = element.testovi.refg;\r\n                    test.interp = element.testovi.interp;\r\n                    test.extend = element.testovi.extend;\r\n                    test.retest = element.testovi.retest;\r\n                    test.interpretacija =\r\n                      element.testovi.labassay.interpretacija;\r\n                  });\r\n\r\n                  if (\r\n                    test.select_options != undefined &&\r\n                    !test.select_options.includes(test.rezultat)\r\n                  ) {\r\n                    test.select_options.unshift(test.rezultat);\r\n                  }\r\n                  this.rezultati.push(test);\r\n                });\r\n\r\n                this.rezultati.forEach((element) => {\r\n                  if (element.calculated) {\r\n                    this.calculated = true;\r\n                  }\r\n                });\r\n\r\n                this.sample = data;\r\n                this.show_table = true;\r\n              }\r\n            });\r\n        });\r\n    },\r\n\r\n    Calculate: function (event, id, ime, edited) {\r\n      http\r\n        .post(\"/rezultati/odobravanje/calculate/\" + this.$store.state.sid, {\r\n          _id: id,\r\n          token: this.$store.state.token,\r\n          site: this.$store.state.site,\r\n          ime: ime,\r\n          pid: this.pid,\r\n        })\r\n        .then((res) => {\r\n          http\r\n            .get(\r\n              \"rezultati/odobravanje/samples/\" +\r\n                this.$route.params.patient +\r\n                \"/\" +\r\n                this.$route.params.id +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&date=\" +\r\n                this.$route.query.date,\r\n              {}\r\n            )\r\n            .then((res) => {\r\n              this.uzorci = [];\r\n\r\n              res.data.results.forEach((element) => {\r\n                var check = 0;\r\n                var zaprimljen = 0;\r\n                var realizovan = 0;\r\n\r\n                if (element.verificiran) {\r\n                  var status_uzorka = \"VERIFICIRAN\";\r\n                } else {\r\n                  var status_uzorka = element.status;\r\n                }\r\n\r\n                element.rezultati.forEach((test) => {\r\n                  check++;\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                  ) {\r\n                    zaprimljen++;\r\n                  }\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                  ) {\r\n                    realizovan++;\r\n                  }\r\n\r\n                  if (check === element.rezultati.length) {\r\n                    // console.log(\"Provjera: Calculate\")\r\n\r\n                    if (status_uzorka === \"VERIFICIRAN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"VERIFICIRAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else if (status_uzorka === \"ODOBREN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"ODOBREN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else if (zaprimljen < 1) {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"REALIZOVAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else if (realizovan < 1) {\r\n                      var stat = \"ZAPRIMLJEN\";\r\n                      if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                        if (\r\n                          element.rezultati[0].rezultat[0].rezultat_m.length\r\n                        ) {\r\n                          stat = \"REALIZOVAN\";\r\n                        }\r\n                      }\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: stat,\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"U OBRADI\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    }\r\n                  }\r\n                });\r\n              });\r\n\r\n              this.uzorci = this.uzorci.sort(function (a, b) {\r\n                return a.sid.localeCompare(b.sid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\",\r\n                });\r\n              });\r\n            });\r\n        })\r\n        .then((res) => {\r\n          var data = {};\r\n\r\n          this.uzorci.forEach((element) => {\r\n            if (element.sid === this.$store.state.sid) {\r\n              data = element;\r\n            }\r\n          });\r\n\r\n          this.testovi = [];\r\n          this.rezultati = [];\r\n          this.analitiprikaz = [];\r\n          this.calculated = false;\r\n\r\n          var topcije = null;\r\n          topcije = izbornik.rez;\r\n\r\n          http\r\n            .get(\r\n              \"rezultati/showsingle/\" +\r\n                data.sid +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site,\r\n              {}\r\n            )\r\n            .then((res) => {\r\n              var test = {};\r\n\r\n              if (res.data.data.length) {\r\n                res.data.data.sort(function (a, b) {\r\n                  return a.testovi.labassay.grupa +\r\n                    a.testovi.labassay.grouporder ==\r\n                    b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                    ? 0\r\n                    : +(\r\n                        a.testovi.labassay.grupa +\r\n                          a.testovi.labassay.grouporder >\r\n                        b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                      ) || -1;\r\n                });\r\n\r\n                this.testovi = res.data.data;\r\n                this.analitiprikaz = res.data.multidata;\r\n\r\n                res.data.data.forEach((element) => {\r\n                  test = {};\r\n                  test.realizovan = false;\r\n\r\n                  test.ime = element.testovi.labassay.naziv;\r\n                  test.test = element.testovi.labassay.sifra;\r\n                  test.analit = element.testovi.labassay.analit;\r\n                  test.IDE = element.testovi._id;\r\n                  test.labassay_id = element.testovi.labassay._id;\r\n\r\n                  test.multi_count = 0;\r\n                  test.multi_rezultati = [];\r\n\r\n                  res.data.multidata.forEach((multi) => {\r\n                    if (multi.labassay._id === element.testovi.labassay._id) {\r\n                      test.multi_rezultati = multi.rezultat;\r\n                      test.multi_count = multi.rezultat[0].rezultat.length;\r\n                    }\r\n                  });\r\n\r\n                  test.kategorija = element.testovi.labassay.kategorija;\r\n                  test.analyser = element.testovi.labassay.analyser;\r\n                  test.multiparam = element.testovi.labassay.multiparam;\r\n                  test.vise = element.testovi.rezultat.length;\r\n                  test.calculated = element.testovi.labassay.calculated;\r\n                  test.manual = element.testovi.labassay.manual;\r\n\r\n                  test.select_options = eval(\r\n                    \"topcije.\" +\r\n                      element.testovi.interp\r\n                        .replace(\"%\", \"_\")\r\n                        .replace(\"/\", \"_\")\r\n                        .replace(\" \", \"_\")\r\n                        .replace(/-/g, \"_\")\r\n                        .replace(\"#\", \"_\")\r\n                        // .replace(/[0-9]/g, \"_\")\r\n                        .replace(/^\\d+/, \"\")\r\n                  );\r\n\r\n                  element.testovi.rezultat.forEach((rezultat) => {\r\n                    test.sekcija = rezultat.anaassay.sekcija;\r\n                    test.rezultat = rezultat.rezultat_f;\r\n                    test.result = rezultat;\r\n                    test.anaassay = rezultat.anaassay;\r\n\r\n                    if (rezultat.rezultat_f != \"\") {\r\n                      test.realizovan = true;\r\n                    }\r\n\r\n                    test.unit = rezultat.jedinice_f;\r\n\r\n                    if (res.data.verificiran || res.data.status === \"ODOBREN\") {\r\n                      test.odobren = \"ODOBREN\";\r\n                      test.edit = false;\r\n                    } else {\r\n                      test.odobren != \"ODOBREN\";\r\n                      test.edit = true;\r\n                    }\r\n\r\n                    test.jedinica = rezultat.jedinice_f;\r\n                    test.id = rezultat._id;\r\n                    test.multidata = element.testovi.labassay.multi;\r\n                    test.rezultat_m = rezultat.rezultat_m;\r\n                    test.bakterije = element.testovi.labassay.bakterije;\r\n                    test.neg_description =\r\n                      element.testovi.labassay.neg_description;\r\n                    test.pos_description =\r\n                      element.testovi.labassay.pos_description;\r\n                    test.refSet = element.testovi.grupa;\r\n                    test.dRef = element.testovi.refd;\r\n                    test.gRef = element.testovi.refg;\r\n                    test.interp = element.testovi.interp;\r\n                    test.extend = element.testovi.extend;\r\n                    test.retest = element.testovi.retest;\r\n                    test.interpretacija =\r\n                      element.testovi.labassay.interpretacija;\r\n                  });\r\n\r\n                  if (\r\n                    test.select_options != undefined &&\r\n                    !test.select_options.includes(test.rezultat)\r\n                  ) {\r\n                    test.select_options.unshift(test.rezultat);\r\n                  }\r\n                  this.rezultati.push(test);\r\n                });\r\n\r\n                this.rezultati.forEach((element) => {\r\n                  if (element.calculated) {\r\n                    this.calculated = true;\r\n                  }\r\n                });\r\n\r\n                this.sample = data;\r\n              }\r\n            });\r\n        });\r\n    },\r\n\r\n    Approve(rezultati) {\r\n      this.rezultati.forEach((element) => {\r\n        element.edit = false;\r\n      });\r\n\r\n      this.calculated = false;\r\n\r\n      if (!this.MicrobiologySample) {\r\n        rezultati.forEach((element) => {\r\n          element.rezultat = element.rezultat.replace(/,/g, \".\");\r\n        });\r\n\r\n        rezultati[0].rezultat_m = [];\r\n      }\r\n\r\n      http\r\n        .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n          email: this.$store.state.userId,\r\n          token: this.$store.state.token,\r\n          site: this.$store.state.site,\r\n          rezultati: rezultati,\r\n        })\r\n        .then((res) => {\r\n          // Vue Loading Overlay Component\r\n          this.isLoading = true;\r\n\r\n          http\r\n            .post(\"/rezultati/odobravanje/odobri/\" + this.$store.state.sid, {\r\n              testovi: rezultati,\r\n              site: this.$store.state.site,\r\n              token: this.$store.state.token,\r\n            })\r\n            .then((res) => {\r\n              this.sample.status = \"ODOBREN\";\r\n\r\n              this.report = {};\r\n\r\n              this.uzorci.forEach((element) => {\r\n                if (element.sid === this.$store.state.sid) {\r\n                  this.report = element;\r\n                }\r\n              });\r\n\r\n              var sample = [];\r\n              sample.push(this.report._id);\r\n\r\n              http\r\n                .post(\"nalazi/create\", {\r\n                  token: this.$store.state.token,\r\n                  site: this.$store.state.site,\r\n                  type: \"single\",\r\n                  uzorci: this.uzorci,\r\n                  samples: sample,\r\n                  timestamp: this.timestamp,\r\n                  napomena: \"\",\r\n                  status: false,\r\n                  idNalaza: \"\",\r\n                  location: \"/samples\",\r\n                  klijent: this.klijent,\r\n                  naziv: this.report.sid,\r\n                })\r\n                .then((res) => {\r\n                  http\r\n                    .get(\r\n                      \"rezultati/odobravanje/samples/\" +\r\n                        this.$route.params.patient +\r\n                        \"/\" +\r\n                        this.$route.params.id +\r\n                        \"?token=\" +\r\n                        this.$store.state.token +\r\n                        \"&site=\" +\r\n                        this.$store.state.site +\r\n                        \"&date=\" +\r\n                        this.$route.query.date,\r\n                      {}\r\n                    )\r\n                    .then((res) => {\r\n                      this.final_pdf = res.data.final_pdf;\r\n\r\n                      this.count = res.data.results.length;\r\n                      this.approved = 0;\r\n\r\n                      this.odobren = true;\r\n                      this.verificiran = true;\r\n\r\n                      res.data.results.forEach((element) => {\r\n                        if (\r\n                          element.status === \"ODOBREN\" ||\r\n                          element.status === \"VERIFICIRAN\"\r\n                        ) {\r\n                          this.approved++;\r\n                        }\r\n                        if (\r\n                          element.status != \"ODOBREN\" &&\r\n                          element.status != \"VERIFICIRAN\"\r\n                        ) {\r\n                          this.odobren = false;\r\n                        }\r\n                        if (!element.verificiran) {\r\n                          this.verificiran = false;\r\n                        }\r\n                      });\r\n\r\n                      var response = res.data.results;\r\n\r\n                      if (this.count == this.approved) {\r\n                        // console.warn(\"Generate new Report.\");\r\n\r\n                        var report = [];\r\n\r\n                        this.uzorci.forEach((element) => {\r\n                          report.push(element._id);\r\n                        });\r\n\r\n                        http\r\n                          .post(\"nalazi/create\", {\r\n                            token: this.$store.state.token,\r\n                            site: this.$store.state.site,\r\n                            type: \"multi\",\r\n                            uzorci: this.uzorci,\r\n                            samples: report,\r\n                            timestamp: this.timestamp,\r\n                            napomena: \"\",\r\n                            status: false,\r\n                            idNalaza: \"\",\r\n                            location: \"/\",\r\n                            klijent: this.klijent,\r\n                            naziv: this.timestamp,\r\n                          })\r\n                          .then((res) => {\r\n                            if (res.data.success) {\r\n                              http\r\n                                .post(\"nalazi/memo\", {\r\n                                  token: this.$store.state.token,\r\n                                  site: this.$store.state.site,\r\n                                  timestamp: this.timestamp,\r\n                                  height: res.data.memo,\r\n                                  location: \"/\",\r\n                                  naziv: this.timestamp,\r\n                                })\r\n                                .then((res) => {\r\n                                  this.uzorci = [];\r\n\r\n                                  response.forEach((element) => {\r\n                                    var check = 0;\r\n                                    var zaprimljen = 0;\r\n                                    var realizovan = 0;\r\n\r\n                                    if (element.verificiran) {\r\n                                      var status_uzorka = \"VERIFICIRAN\";\r\n                                    } else {\r\n                                      var status_uzorka = element.status;\r\n                                    }\r\n\r\n                                    element.rezultati.forEach((test) => {\r\n                                      check++;\r\n\r\n                                      if (\r\n                                        test.rezultat[test.rezultat.length - 1]\r\n                                          .rezultat_f === \"\"\r\n                                      ) {\r\n                                        zaprimljen++;\r\n                                      }\r\n\r\n                                      if (\r\n                                        test.rezultat[test.rezultat.length - 1]\r\n                                          .rezultat_f != \"\"\r\n                                      ) {\r\n                                        realizovan++;\r\n                                      }\r\n\r\n                                      if (check === element.rezultati.length) {\r\n                                        // console.log(\"Provjera: Approve\")\r\n\r\n                                        if (status_uzorka === \"VERIFICIRAN\") {\r\n                                          this.uzorci.push({\r\n                                            sid: element.id,\r\n                                            status: \"VERIFICIRAN\",\r\n                                            pdf_exists: element.pdf_exists,\r\n                                            tip: element.sample.tip,\r\n                                            _id: element._id,\r\n                                            removed: false,\r\n                                          });\r\n                                        } else if (\r\n                                          status_uzorka === \"ODOBREN\"\r\n                                        ) {\r\n                                          this.uzorci.push({\r\n                                            sid: element.id,\r\n                                            status: \"ODOBREN\",\r\n                                            pdf_exists: element.pdf_exists,\r\n                                            tip: element.sample.tip,\r\n                                            _id: element._id,\r\n                                            removed: false,\r\n                                          });\r\n                                        } else if (zaprimljen < 1) {\r\n                                          this.uzorci.push({\r\n                                            sid: element.id,\r\n                                            status: \"REALIZOVAN\",\r\n                                            pdf_exists: element.pdf_exists,\r\n                                            tip: element.sample.tip,\r\n                                            _id: element._id,\r\n                                            removed: false,\r\n                                          });\r\n                                        } else if (realizovan < 1) {\r\n                                          var stat = \"ZAPRIMLJEN\";\r\n                                          if (\r\n                                            element.sample.tip.includes(\r\n                                              \"Mikrobiologija\"\r\n                                            )\r\n                                          ) {\r\n                                            if (\r\n                                              element.rezultati[0].rezultat[0]\r\n                                                .rezultat_m.length\r\n                                            ) {\r\n                                              stat = \"REALIZOVAN\";\r\n                                            }\r\n                                          }\r\n                                          this.uzorci.push({\r\n                                            sid: element.id,\r\n                                            status: stat,\r\n                                            pdf_exists: element.pdf_exists,\r\n                                            tip: element.sample.tip,\r\n                                            _id: element._id,\r\n                                            removed: false,\r\n                                          });\r\n                                        } else {\r\n                                          this.uzorci.push({\r\n                                            sid: element.id,\r\n                                            status: \"U OBRADI\",\r\n                                            pdf_exists: element.pdf_exists,\r\n                                            tip: element.sample.tip,\r\n                                            _id: element._id,\r\n                                            removed: false,\r\n                                          });\r\n                                        }\r\n                                      }\r\n                                    });\r\n                                  });\r\n\r\n                                  this.uzorci = this.uzorci.sort(function (\r\n                                    a,\r\n                                    b\r\n                                  ) {\r\n                                    return a.sid.localeCompare(\r\n                                      b.sid,\r\n                                      undefined,\r\n                                      {\r\n                                        numeric: true,\r\n                                        sensitivity: \"base\",\r\n                                      }\r\n                                    );\r\n                                  });\r\n\r\n                                  this.main = true;\r\n\r\n                                  // Vue Loading Overlay Component\r\n                                  this.isLoading = false;\r\n                                });\r\n                            }\r\n                          });\r\n                      } else {\r\n                        this.uzorci = [];\r\n\r\n                        res.data.results.forEach((element) => {\r\n                          var check = 0;\r\n                          var zaprimljen = 0;\r\n                          var realizovan = 0;\r\n\r\n                          if (element.verificiran) {\r\n                            var status_uzorka = \"VERIFICIRAN\";\r\n                          } else {\r\n                            var status_uzorka = element.status;\r\n                          }\r\n\r\n                          element.rezultati.forEach((test) => {\r\n                            check++;\r\n\r\n                            if (\r\n                              test.rezultat[test.rezultat.length - 1]\r\n                                .rezultat_f === \"\"\r\n                            ) {\r\n                              zaprimljen++;\r\n                            }\r\n\r\n                            if (\r\n                              test.rezultat[test.rezultat.length - 1]\r\n                                .rezultat_f != \"\"\r\n                            ) {\r\n                              realizovan++;\r\n                            }\r\n\r\n                            if (check === element.rezultati.length) {\r\n                              // console.log(\"Provjera: Approve\")\r\n\r\n                              if (status_uzorka === \"VERIFICIRAN\") {\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: \"VERIFICIRAN\",\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false,\r\n                                });\r\n                              } else if (status_uzorka === \"ODOBREN\") {\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: \"ODOBREN\",\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false,\r\n                                });\r\n                              } else if (zaprimljen < 1) {\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: \"REALIZOVAN\",\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false,\r\n                                });\r\n                              } else if (realizovan < 1) {\r\n                                var stat = \"ZAPRIMLJEN\";\r\n                                if (\r\n                                  element.sample.tip.includes(\"Mikrobiologija\")\r\n                                ) {\r\n                                  if (\r\n                                    element.rezultati[0].rezultat[0].rezultat_m\r\n                                      .length\r\n                                  ) {\r\n                                    stat = \"REALIZOVAN\";\r\n                                  }\r\n                                }\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: stat,\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false,\r\n                                });\r\n                              } else {\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: \"U OBRADI\",\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false,\r\n                                });\r\n                              }\r\n                            }\r\n                          });\r\n                        });\r\n\r\n                        this.uzorci = this.uzorci.sort(function (a, b) {\r\n                          return a.sid.localeCompare(b.sid, undefined, {\r\n                            numeric: true,\r\n                            sensitivity: \"base\",\r\n                          });\r\n                        });\r\n\r\n                        this.main = true;\r\n\r\n                        // Vue Loading Overlay Component\r\n                        this.isLoading = false;\r\n                      }\r\n                    })\r\n                    .then((res) => {});\r\n                });\r\n            });\r\n        });\r\n    },\r\n\r\n    Disapprove(rezultati, from) {\r\n      this.rezultati.forEach((element) => {\r\n        if (element.calculated) {\r\n          this.calculated = true;\r\n        }\r\n      });\r\n\r\n      http\r\n        .post(\"/rezultati/odobravanje/ukloni/\" + this.$store.state.sid, {\r\n          testovi: rezultati,\r\n          site: this.$store.state.site,\r\n          token: this.$store.state.token,\r\n        })\r\n        .then((res) => {\r\n          // Vue Loading Overlay Component\r\n          this.isLoading = true;\r\n\r\n          http\r\n            .get(\r\n              \"rezultati/odobravanje/samples/\" +\r\n                this.$route.params.patient +\r\n                \"/\" +\r\n                this.$route.params.id +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&date=\" +\r\n                this.$route.query.date,\r\n              {}\r\n            )\r\n            .then((res) => {\r\n              this.sample.status = \"REALIZOVAN\";\r\n\r\n              this.final_pdf = res.data.final_pdf;\r\n\r\n              this.count = res.data.results.length;\r\n              this.approved = 0;\r\n\r\n              this.odobren = true;\r\n              this.verificiran = true;\r\n\r\n              res.data.results.forEach((element) => {\r\n                if (\r\n                  element.status === \"ODOBREN\" ||\r\n                  element.status === \"VERIFICIRAN\"\r\n                ) {\r\n                  this.approved++;\r\n                }\r\n                if (\r\n                  element.status != \"ODOBREN\" &&\r\n                  element.status != \"VERIFICIRAN\"\r\n                ) {\r\n                  this.odobren = false;\r\n                }\r\n                if (!element.verificiran) {\r\n                  this.verificiran = false;\r\n                }\r\n              });\r\n\r\n              this.uzorci = [];\r\n\r\n              res.data.results.forEach((element) => {\r\n                var check = 0;\r\n                var zaprimljen = 0;\r\n                var realizovan = 0;\r\n\r\n                if (element.verificiran) {\r\n                  var status_uzorka = \"VERIFICIRAN\";\r\n                } else {\r\n                  var status_uzorka = element.status;\r\n                }\r\n\r\n                element.rezultati.forEach((test) => {\r\n                  check++;\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                  ) {\r\n                    zaprimljen++;\r\n                  }\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                  ) {\r\n                    realizovan++;\r\n                  }\r\n\r\n                  if (check === element.rezultati.length) {\r\n                    // console.log(\"Provjera: Disapprove\")\r\n\r\n                    if (status_uzorka === \"VERIFICIRAN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"VERIFICIRAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else if (status_uzorka === \"ODOBREN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"ODOBREN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else if (zaprimljen < 1) {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"REALIZOVAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else if (realizovan < 1) {\r\n                      var stat = \"ZAPRIMLJEN\";\r\n                      if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                        if (\r\n                          element.rezultati[0].rezultat[0].rezultat_m.length\r\n                        ) {\r\n                          stat = \"REALIZOVAN\";\r\n                        }\r\n                      }\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: stat,\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    } else {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"U OBRADI\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false,\r\n                      });\r\n                    }\r\n                  }\r\n                });\r\n              });\r\n\r\n              this.uzorci = this.uzorci.sort(function (a, b) {\r\n                return a.sid.localeCompare(b.sid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\",\r\n                });\r\n              });\r\n\r\n              this.main = true;\r\n            });\r\n\r\n          this.rezultati.forEach((element) => {\r\n            element.edit = true;\r\n          });\r\n\r\n          // Vue Loading Overlay Component\r\n          this.isLoading = false;\r\n        });\r\n    },\r\n\r\n    Verify(data) {\r\n      if (!this.$store.state.access.verify) {\r\n        this.$refs.staticModalVerifyPrivilege.open();\r\n      } else {\r\n        http\r\n          .post(\"/rezultati/obrada/verifikacija/\" + this.$store.state.sid, {\r\n            site: this.$store.state.site,\r\n            token: this.$store.state.token,\r\n            verify: true,\r\n          })\r\n          .then((res) => {\r\n            http\r\n              .get(\r\n                \"rezultati/odobravanje/samples/\" +\r\n                  this.$route.params.patient +\r\n                  \"/\" +\r\n                  this.$route.params.id +\r\n                  \"?token=\" +\r\n                  this.$store.state.token +\r\n                  \"&site=\" +\r\n                  this.$store.state.site +\r\n                  \"&date=\" +\r\n                  this.$route.query.date,\r\n                {}\r\n              )\r\n              .then((res) => {\r\n                this.sample.status = \"VERIFICIRAN\";\r\n\r\n                this.final_pdf = res.data.final_pdf;\r\n\r\n                this.count = res.data.results.length;\r\n                this.approved = 0;\r\n                this.verified = 0;\r\n\r\n                this.odobren = true;\r\n                this.verificiran = true;\r\n                this.partials = [];\r\n                this.partials_condition = false;\r\n\r\n                res.data.results.forEach((element) => {\r\n                  if (element.verificiran) {\r\n                    this.partials.push(element._id);\r\n                    this.verified++;\r\n                  }\r\n                  if (\r\n                    element.status === \"ODOBREN\" ||\r\n                    element.status === \"VERIFICIRAN\"\r\n                  ) {\r\n                    this.approved++;\r\n                  }\r\n                  if (\r\n                    element.status != \"ODOBREN\" &&\r\n                    element.status != \"VERIFICIRAN\"\r\n                  ) {\r\n                    this.odobren = false;\r\n                  }\r\n                  if (!element.verificiran) {\r\n                    this.verificiran = false;\r\n                  }\r\n                });\r\n\r\n                if (this.count > this.verified && this.verified > 1) {\r\n                  this.partials_condition = true;\r\n                }\r\n\r\n                this.uzorci = [];\r\n\r\n                res.data.results.forEach((element) => {\r\n                  var check = 0;\r\n                  var zaprimljen = 0;\r\n                  var realizovan = 0;\r\n\r\n                  if (element.verificiran) {\r\n                    var status_uzorka = \"VERIFICIRAN\";\r\n                  } else {\r\n                    var status_uzorka = element.status;\r\n                  }\r\n\r\n                  element.rezultati.forEach((test) => {\r\n                    check++;\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                    ) {\r\n                      zaprimljen++;\r\n                    }\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                    ) {\r\n                      realizovan++;\r\n                    }\r\n\r\n                    if (check === element.rezultati.length) {\r\n                      // console.log(\"Provjera: Verify\")\r\n\r\n                      if (status_uzorka === \"VERIFICIRAN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"VERIFICIRAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      } else if (status_uzorka === \"ODOBREN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"ODOBREN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      } else if (zaprimljen < 1) {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"REALIZOVAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      } else if (realizovan < 1) {\r\n                        var stat = \"ZAPRIMLJEN\";\r\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                          if (\r\n                            element.rezultati[0].rezultat[0].rezultat_m.length\r\n                          ) {\r\n                            stat = \"REALIZOVAN\";\r\n                          }\r\n                        }\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: stat,\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      } else {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"U OBRADI\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      }\r\n                    }\r\n                  });\r\n                });\r\n\r\n                this.uzorci = this.uzorci.sort(function (a, b) {\r\n                  return a.sid.localeCompare(b.sid, undefined, {\r\n                    numeric: true,\r\n                    sensitivity: \"base\",\r\n                  });\r\n                });\r\n\r\n                if (this.verificiran) {\r\n                  http\r\n                    .post(\"rezultati/nalazi/status\", {\r\n                      token: this.$store.state.token,\r\n                      site: this.$store.state.site,\r\n                      timestamp: this.timestamp,\r\n                      location: \"/\",\r\n                      naziv: this.timestamp,\r\n                      status: true,\r\n                    })\r\n                    .then((res) => {\r\n                      this.main = true;\r\n\r\n                      if (this.lokacija.sendEmail) {\r\n                        http\r\n                          .post(\"nalazi/mail\", {\r\n                            token: this.$store.state.token,\r\n                            site: this.$store.state.site,\r\n                            email: this.lokacija.email,\r\n                            timestamp: this.timestamp,\r\n                            location: \"/\",\r\n                            naziv: this.timestamp,\r\n                          })\r\n                          .then((res) => {\r\n                            if (res.data.success) {\r\n                            } else {\r\n                              this.toastText = \"Greška prilikom slanja nalaza!\";\r\n                              this.toastIcon = \"fa-remove\";\r\n                              this.toastPosition = \"top-right\";\r\n                              this.className = \"vuestic-toast-danger\";\r\n\r\n                              this.showToast(this.toastText, {\r\n                                icon: this.toastIcon,\r\n                                position: this.toastPosition,\r\n                                duration: 2500,\r\n                                fullWidth: this.false,\r\n                                className: this.className,\r\n                              });\r\n                            }\r\n                          });\r\n                      } else {\r\n                      }\r\n                    });\r\n                } else {\r\n                  this.main = true;\r\n                }\r\n              });\r\n          });\r\n      }\r\n    },\r\n\r\n    UnVerify(data) {\r\n      if (!this.$store.state.access.verify) {\r\n        this.$refs.staticModalVerifyPrivilege.open();\r\n      } else {\r\n        this.verificiran = false;\r\n        this.sid = data.sid;\r\n\r\n        http\r\n          .post(\"/rezultati/obrada/verifikacija/\" + data.sid, {\r\n            site: this.$store.state.site,\r\n            token: this.$store.state.token,\r\n            verify: false,\r\n          })\r\n          .then((res) => {\r\n            http\r\n              .get(\r\n                \"rezultati/odobravanje/samples/\" +\r\n                  this.$route.params.patient +\r\n                  \"/\" +\r\n                  this.$route.params.id +\r\n                  \"?token=\" +\r\n                  this.$store.state.token +\r\n                  \"&site=\" +\r\n                  this.$store.state.site +\r\n                  \"&date=\" +\r\n                  this.$route.query.date,\r\n                {}\r\n              )\r\n              .then((res) => {\r\n                this.sample.status = \"ODOBREN\";\r\n\r\n                this.final_pdf = res.data.final_pdf;\r\n\r\n                this.count = res.data.results.length;\r\n                this.approved = 0;\r\n\r\n                this.odobren = true;\r\n                this.verificiran = true;\r\n                this.verified = 0;\r\n                this.partials = [];\r\n                this.partials_condition = false;\r\n\r\n                res.data.results.forEach((element) => {\r\n                  if (element.verificiran) {\r\n                    this.verified++;\r\n                    this.partials.push(element._id);\r\n                  }\r\n                  if (\r\n                    element.status === \"ODOBREN\" ||\r\n                    element.status === \"VERIFICIRAN\"\r\n                  ) {\r\n                    this.approved++;\r\n                  }\r\n                  if (\r\n                    element.status != \"ODOBREN\" &&\r\n                    element.status != \"VERIFICIRAN\"\r\n                  ) {\r\n                    this.odobren = false;\r\n                  }\r\n                  if (!element.verificiran) {\r\n                    this.verificiran = false;\r\n                  }\r\n                });\r\n\r\n                if (this.count > this.verified && this.verified > 1) {\r\n                  this.partials_condition = true;\r\n                }\r\n\r\n                this.uzorci = [];\r\n\r\n                res.data.results.forEach((element) => {\r\n                  var check = 0;\r\n                  var zaprimljen = 0;\r\n                  var realizovan = 0;\r\n\r\n                  if (element.verificiran) {\r\n                    var status_uzorka = \"VERIFICIRAN\";\r\n                  } else {\r\n                    var status_uzorka = element.status;\r\n                  }\r\n\r\n                  element.rezultati.forEach((test) => {\r\n                    check++;\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                    ) {\r\n                      zaprimljen++;\r\n                    }\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                    ) {\r\n                      realizovan++;\r\n                    }\r\n\r\n                    if (check === element.rezultati.length) {\r\n                      // console.log(\"Provjera: Unverify\")\r\n\r\n                      if (status_uzorka === \"VERIFICIRAN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"VERIFICIRAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      } else if (status_uzorka === \"ODOBREN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"ODOBREN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      } else if (zaprimljen < 1) {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"REALIZOVAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      } else if (realizovan < 1) {\r\n                        var stat = \"ZAPRIMLJEN\";\r\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                          if (\r\n                            element.rezultati[0].rezultat[0].rezultat_m.length\r\n                          ) {\r\n                            stat = \"REALIZOVAN\";\r\n                          }\r\n                        }\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: stat,\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      } else {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"U OBRADI\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false,\r\n                        });\r\n                      }\r\n                    }\r\n                  });\r\n                });\r\n\r\n                this.uzorci = this.uzorci.sort(function (a, b) {\r\n                  return a.sid.localeCompare(b.sid, undefined, {\r\n                    numeric: true,\r\n                    sensitivity: \"base\",\r\n                  });\r\n                });\r\n\r\n                if (!this.verificiran) {\r\n                  http\r\n                    .post(\"rezultati/nalazi/status\", {\r\n                      token: this.$store.state.token,\r\n                      site: this.$store.state.site,\r\n                      timestamp: this.timestamp,\r\n                      location: \"/\",\r\n                      naziv: this.timestamp,\r\n                      status: false,\r\n                    })\r\n                    .then((res) => {\r\n                      this.main = true;\r\n                    });\r\n                } else {\r\n                  this.main = true;\r\n                }\r\n              });\r\n          });\r\n      }\r\n    },\r\n\r\n    GetResults(data, status) {\r\n      this.sample_status = status;\r\n      this.vise = [];\r\n      this.labassay = \"\";\r\n      http\r\n        .post(\r\n          \"/rezultati/odobravanje/results\" +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site,\r\n          {\r\n            id: this.sample.sid,\r\n            labassay: data.labassay_id,\r\n          }\r\n        )\r\n        .then((res) => {\r\n          if (res.data.success) {\r\n            this.vise = res.data.element;\r\n            this.labassay =\r\n              this.vise.labassay.naziv + \" (\" + this.vise.labassay.analit + \")\";\r\n\r\n            var i = 0;\r\n            res.data.element.rezultat.forEach((element) => {\r\n              i++;\r\n              if (res.data.element.rezultat.length == i) {\r\n                element.izabran = true;\r\n              } else {\r\n                element.izabran = false;\r\n              }\r\n            });\r\n\r\n            this.vise.rezultat.sort(function (a, b) {\r\n              return Date.parse(a.created_at) == Date.parse(b.created_at)\r\n                ? 0\r\n                : +(Date.parse(a.created_at) < Date.parse(b.created_at)) || -1;\r\n            });\r\n\r\n            this.$refs.staticModalAllResults.open();\r\n          }\r\n        });\r\n    },\r\n\r\n    GetResultsMulti(data, status) {\r\n      this.sample_status = status;\r\n\r\n      this.multi_rezultati = [];\r\n      this.multi_test = data.ime + \" (\" + data.analit + \")\";\r\n\r\n      // this.$refs.staticModalResultsMulti.open();\r\n\r\n      // this.multi_rezultati = data.multi_rezultati\r\n\r\n      data.multi_rezultati.forEach((element) => {\r\n        element.rezultat.forEach((rez) => {});\r\n      });\r\n    },\r\n\r\n    IzborTesta(vise, test) {\r\n      document.getElementById(this.sample.sid).click();\r\n\r\n      http\r\n        .post(\r\n          \"/rezultati/odobravanje/choose\" +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site,\r\n          {\r\n            id: this.sample.sid,\r\n            labassay: vise.labassay._id,\r\n            picked: test._id,\r\n          }\r\n        )\r\n        .then((res) => {\r\n          document.getElementById(this.sample.sid).click();\r\n          this.$refs.staticModalAllResults.close();\r\n        });\r\n    },\r\n\r\n    Partials() {\r\n      http\r\n        .post(\"nalazi/create\", {\r\n          token: this.$store.state.token,\r\n          site: this.$store.state.site,\r\n          type: \"partial\",\r\n          uzorci: this.uzorci,\r\n          samples: this.partials,\r\n          timestamp: this.timestamp,\r\n          napomena: \"\",\r\n          status: false,\r\n          idNalaza: \"\",\r\n          location: \"/partials\",\r\n          klijent: this.klijent,\r\n          naziv: this.timestamp,\r\n        })\r\n        .then((res) => {\r\n          if (res.data.success) {\r\n            if (!res.data.success) {\r\n              this.$refs.staticModalError.open();\r\n            } else {\r\n              this.path = this.timestamp + \".pdf\";\r\n\r\n              this.url = server + \"nalazi/partials/\" + this.path;\r\n\r\n              var options = {\r\n                width: \"100%\",\r\n                height: \"800px\",\r\n              };\r\n              PDFObject.embed(this.url, \"#pdf-container\", options);\r\n\r\n              this.email_button = true;\r\n              this.main = false;\r\n              this.pdf = true;\r\n            }\r\n          }\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.collapse-page {\r\n  &__content {\r\n    padding: 2rem;\r\n    &__title {\r\n      font-size: 1.375rem;\r\n      font-weight: bold;\r\n    }\r\n  }\r\n}\r\n\r\n.icon-bar a {\r\n  color: #fff;\r\n  text-decoration: none;\r\n}\r\n\r\n.icon-bar a:hover {\r\n  color: #4ae387;\r\n}\r\n\r\ni:hover {\r\n  color: #4ae387 !important;\r\n}\r\n\r\n.circle {\r\n  width: 1rem;\r\n  opacity: 0.5;\r\n  height: 1rem;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/obrada/Obrada.vue","<template>\r\n  <span class=\"circle\" :class=\"classObject\"></span>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"badgeColumn\",\r\n  props: {\r\n    rowData: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    rowIndex: {\r\n      type: Number\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      classObject: {\r\n        \"badge-warning\": this.rowIndex % 6 === 0,\r\n        \"badge-primary\": this.rowIndex % 6 === 1,\r\n        \"badge-danger\": this.rowIndex % 6 === 2,\r\n        \"badge-info\": this.rowIndex % 6 === 3,\r\n        \"badge-violet\": this.rowIndex % 6 === 4,\r\n        \"badge-dark-blue\": this.rowIndex % 6 === 5\r\n      }\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.circle {\r\n  width: 0.4rem;\r\n  height: 0.4rem;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/obrada/BadgeColumn.vue","// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = require('./_to-iobject');\nvar gOPN = require('./_object-gopn').f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-gopn-ext.js\n// module id = Rrel\n// module chunks = 18","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".circle[data-v-0a28fd12]{width:.4rem;height:.4rem;border-radius:50%;display:inline-block}\", \"\", {\"version\":3,\"sources\":[\"C:/Users/atom/Desktop/ATOM/26 - BIOLAB Laboratorij Sarajevo/bls_client/src/components/obrada/BadgeColumn.vue\"],\"names\":[],\"mappings\":\"AACA,yBACE,YAAc,AACd,aAAe,AACf,kBAAmB,AACnB,oBAAsB,CACvB\",\"file\":\"BadgeColumn.vue\",\"sourcesContent\":[\"\\n.circle[data-v-0a28fd12] {\\n  width: 0.4rem;\\n  height: 0.4rem;\\n  border-radius: 50%;\\n  display: inline-block;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-0a28fd12\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/sass-loader/lib/loader.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/obrada/BadgeColumn.vue\n// module id = S6Gs\n// module chunks = 18 25 43 55","/*global ActiveXObject, window, console, define, module, jQuery */\n//jshint unused:false, strict: false\n\n/*\n    PDFObject v2.1.1\n    https://github.com/pipwerks/PDFObject\n    Copyright (c) 2008-2018 Philip Hutchison\n    MIT-style license: http://pipwerks.mit-license.org/\n    UMD module pattern from https://github.com/umdjs/umd/blob/master/templates/returnExports.js\n*/\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], factory);\n    } else if (typeof module === 'object' && module.exports) {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    } else {\n        // Browser globals (root is window)\n        root.PDFObject = factory();\n  }\n}(this, function () {\n\n    \"use strict\";\n    //jshint unused:true\n\n    //PDFObject is designed for client-side (browsers), not server-side (node)\n    //Will choke on undefined navigator and window vars when run on server\n    //Return boolean false and exit function when running server-side\n\n    if(typeof window === \"undefined\" || typeof navigator === \"undefined\"){ return false; }\n\n    var pdfobjectversion = \"2.1.1\",\n        ua = window.navigator.userAgent,\n\n        //declare booleans\n        supportsPDFs,\n        isIE,\n        supportsPdfMimeType = (typeof navigator.mimeTypes['application/pdf'] !== \"undefined\"),\n        supportsPdfActiveX,\n        isModernBrowser = (function (){ return (typeof window.Promise !== \"undefined\"); })(),\n        isFirefox = (function (){ return (ua.indexOf(\"irefox\") !== -1); } )(),\n        isFirefoxWithPDFJS = (function (){\n            //Firefox started shipping PDF.js in Firefox 19.\n            //If this is Firefox 19 or greater, assume PDF.js is available\n            if(!isFirefox){ return false; }\n            //parse userAgent string to get release version (\"rv\")\n            //ex: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:57.0) Gecko/20100101 Firefox/57.0\n            return (parseInt(ua.split(\"rv:\")[1].split(\".\")[0], 10) > 18);\n        })(),\n        isIOS = (function (){ return (/iphone|ipad|ipod/i.test(ua.toLowerCase())); })(),\n\n        //declare functions\n        createAXO,\n        buildFragmentString,\n        log,\n        embedError,\n        embed,\n        getTargetElement,\n        generatePDFJSiframe,\n        generateEmbedElement;\n\n\n    /* ----------------------------------------------------\n       Supporting functions\n       ---------------------------------------------------- */\n\n    createAXO = function (type){\n        var ax;\n        try {\n            ax = new ActiveXObject(type);\n        } catch (e) {\n            ax = null; //ensure ax remains null\n        }\n        return ax;\n    };\n\n    //IE11 still uses ActiveX for Adobe Reader, but IE 11 doesn't expose\n    //window.ActiveXObject the same way previous versions of IE did\n    //window.ActiveXObject will evaluate to false in IE 11, but \"ActiveXObject\" in window evaluates to true\n    //so check the first one for older IE, and the second for IE11\n    //FWIW, MS Edge (replacing IE11) does not support ActiveX at all, both will evaluate false\n    //Constructed as a method (not a prop) to avoid unneccesarry overhead -- will only be evaluated if needed\n    isIE = function (){ return !!(window.ActiveXObject || \"ActiveXObject\" in window); };\n\n    //If either ActiveX support for \"AcroPDF.PDF\" or \"PDF.PdfCtrl\" are found, return true\n    //Constructed as a method (not a prop) to avoid unneccesarry overhead -- will only be evaluated if needed\n    supportsPdfActiveX = function (){ return !!(createAXO(\"AcroPDF.PDF\") || createAXO(\"PDF.PdfCtrl\")); };\n\n    //Determines whether PDF support is available\n    supportsPDFs = (\n        //as of iOS 12, inline PDF rendering is still not supported in Safari or native webview\n        //3rd-party browsers (eg Chrome, Firefox) use Apple's webview for rendering, and thus the same result as Safari\n        //Therefore if iOS, we shall assume that PDF support is not available\n        !isIOS && (\n            //Modern versions of Firefox come bundled with PDFJS\n            isFirefoxWithPDFJS || \n            //Browsers that still support the original MIME type check\n            supportsPdfMimeType || (\n                //Pity the poor souls still using IE\n                isIE() && supportsPdfActiveX()\n            )\n        )\n    );\n\n    //Create a fragment identifier for using PDF Open parameters when embedding PDF\n    buildFragmentString = function(pdfParams){\n\n        var string = \"\",\n            prop;\n\n        if(pdfParams){\n\n            for (prop in pdfParams) {\n                if (pdfParams.hasOwnProperty(prop)) {\n                    string += encodeURIComponent(prop) + \"=\" + encodeURIComponent(pdfParams[prop]) + \"&\";\n                }\n            }\n\n            //The string will be empty if no PDF Params found\n            if(string){\n\n                string = \"#\" + string;\n\n                //Remove last ampersand\n                string = string.slice(0, string.length - 1);\n\n            }\n\n        }\n\n        return string;\n\n    };\n\n    log = function (msg){\n        if(typeof console !== \"undefined\" && console.log){\n            console.log(\"[PDFObject] \" + msg);\n        }\n    };\n\n    embedError = function (msg){\n        log(msg);\n        return false;\n    };\n\n    getTargetElement = function (targetSelector){\n\n        //Default to body for full-browser PDF\n        var targetNode = document.body;\n\n        //If a targetSelector is specified, check to see whether\n        //it's passing a selector, jQuery object, or an HTML element\n\n        if(typeof targetSelector === \"string\"){\n\n            //Is CSS selector\n            targetNode = document.querySelector(targetSelector);\n\n        } else if (typeof jQuery !== \"undefined\" && targetSelector instanceof jQuery && targetSelector.length) {\n\n            //Is jQuery element. Extract HTML node\n            targetNode = targetSelector.get(0);\n\n        } else if (typeof targetSelector.nodeType !== \"undefined\" && targetSelector.nodeType === 1){\n\n            //Is HTML element\n            targetNode = targetSelector;\n\n        }\n\n        return targetNode;\n\n    };\n\n    generatePDFJSiframe = function (targetNode, url, pdfOpenFragment, PDFJS_URL, id){\n\n        var fullURL = PDFJS_URL + \"?file=\" + encodeURIComponent(url) + pdfOpenFragment;\n        var scrollfix = (isIOS) ? \"-webkit-overflow-scrolling: touch; overflow-y: scroll; \" : \"overflow: hidden; \";\n        var iframe = \"<div style='\" + scrollfix + \"position: absolute; top: 0; right: 0; bottom: 0; left: 0;'><iframe  \" + id + \" src='\" + fullURL + \"' style='border: none; width: 100%; height: 100%;' frameborder='0'></iframe></div>\";\n        targetNode.className += \" pdfobject-container\";\n        targetNode.style.position = \"relative\";\n        targetNode.style.overflow = \"auto\";\n        targetNode.innerHTML = iframe;\n        return targetNode.getElementsByTagName(\"iframe\")[0];\n\n    };\n\n    generateEmbedElement = function (targetNode, targetSelector, url, pdfOpenFragment, width, height, id){\n\n        var style = \"\";\n\n        if(targetSelector && targetSelector !== document.body){\n            style = \"width: \" + width + \"; height: \" + height + \";\";\n        } else {\n            style = \"position: absolute; top: 0; right: 0; bottom: 0; left: 0; width: 100%; height: 100%;\";\n        }\n\n        targetNode.className += \" pdfobject-container\";\n        targetNode.innerHTML = \"<embed \" + id + \" class='pdfobject' src='\" + url + pdfOpenFragment + \"' type='application/pdf' style='overflow: auto; \" + style + \"'/>\";\n\n        return targetNode.getElementsByTagName(\"embed\")[0];\n\n    };\n\n    embed = function(url, targetSelector, options){\n\n        //Ensure URL is available. If not, exit now.\n        if(typeof url !== \"string\"){ return embedError(\"URL is not valid\"); }\n\n        //If targetSelector is not defined, convert to boolean\n        targetSelector = (typeof targetSelector !== \"undefined\") ? targetSelector : false;\n\n        //Ensure options object is not undefined -- enables easier error checking below\n        options = (typeof options !== \"undefined\") ? options : {};\n\n        //Get passed options, or set reasonable defaults\n        var id = (options.id && typeof options.id === \"string\") ? \"id='\" + options.id + \"'\" : \"\",\n            page = (options.page) ? options.page : false,\n            pdfOpenParams = (options.pdfOpenParams) ? options.pdfOpenParams : {},\n            fallbackLink = (typeof options.fallbackLink !== \"undefined\") ? options.fallbackLink : true,\n            width = (options.width) ? options.width : \"100%\",\n            height = (options.height) ? options.height : \"100%\",\n            assumptionMode = (typeof options.assumptionMode === \"boolean\") ? options.assumptionMode : true,\n            forcePDFJS = (typeof options.forcePDFJS === \"boolean\") ? options.forcePDFJS : false,\n            PDFJS_URL = (options.PDFJS_URL) ? options.PDFJS_URL : false,\n            targetNode = getTargetElement(targetSelector),\n            fallbackHTML = \"\",\n            pdfOpenFragment = \"\",\n            fallbackHTML_default = \"<p>This browser does not support inline PDFs. Please download the PDF to view it: <a href='[url]'>Download PDF</a></p>\";\n\n        //If target element is specified but is not valid, exit without doing anything\n        if(!targetNode){ return embedError(\"Target element cannot be determined\"); }\n\n\n        //page option overrides pdfOpenParams, if found\n        if(page){\n            pdfOpenParams.page = page;\n        }\n\n        //Stringify optional Adobe params for opening document (as fragment identifier)\n        pdfOpenFragment = buildFragmentString(pdfOpenParams);\n\n        //Do the dance\n\n        //If the forcePDFJS option is invoked, skip everything else and embed as directed\n        if(forcePDFJS && PDFJS_URL){\n\n            return generatePDFJSiframe(targetNode, url, pdfOpenFragment, PDFJS_URL, id);\n\n        //If traditional support is provided, or if this is a modern browser and not iOS (see comment for supportsPDFs declaration)\n        } else if(supportsPDFs || (assumptionMode && isModernBrowser && !isIOS)){\n\n            return generateEmbedElement(targetNode, targetSelector, url, pdfOpenFragment, width, height, id);\n\n        //If everything else has failed and a PDFJS fallback is provided, try to use it\n        } else if(PDFJS_URL){\n\n            return generatePDFJSiframe(targetNode, url, pdfOpenFragment, PDFJS_URL, id);\n\n        } else {\n\n            //Display the fallback link if available\n            if(fallbackLink){\n\n                fallbackHTML = (typeof fallbackLink === \"string\") ? fallbackLink : fallbackHTML_default;\n                targetNode.innerHTML = fallbackHTML.replace(/\\[url\\]/g, url);\n\n            }\n\n            return embedError(\"This browser does not support embedded PDFs\");\n\n        }\n\n    };\n\n    return {\n        embed: function (a,b,c){ return embed(a,b,c); },\n        pdfobjectversion: (function () { return pdfobjectversion; })(),\n        supportsPDFs: (function (){ return supportsPDFs; })()\n    };\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfobject/pdfobject.js\n// module id = UqI+\n// module chunks = 18 34 44 45","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-0a28fd12\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./BadgeColumn.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./BadgeColumn.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0a28fd12\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./BadgeColumn.vue\"\n/* template functional */\n  var __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-0a28fd12\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/obrada/BadgeColumn.vue\n// module id = XMpX\n// module chunks = 18 25 43 55","module.exports = { \"default\": require(\"core-js/library/fn/object/get-own-property-names\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/object/get-own-property-names.js\n// module id = aFK5\n// module chunks = 18","var interpretacija = require(\"./interpretacija\");\r\n\r\nmodule.exports = {\r\n  Interpretation: function(test, result, jedinica, dref, gref, site, interp, extend, spec) {\r\n   \r\n    var rezultat = result.trim()\r\n\r\n    switch (interp) {\r\n     case \"none\":\r\n        return [test, rezultat, interpretacija.None(rezultat, dref, gref)[0], jedinica, \"/\", interpretacija.None(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"A\":\r\n        return [test, rezultat, interpretacija.Standard(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.Standard(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"ogtt\":        \r\n        if(dref == \"0\" && gref == \"0\"){\r\n          var reference = \"/\"\r\n          return [test, rezultat, interpretacija.Standard(rezultat, dref, gref)[0], jedinica, reference, interpretacija.Standard(rezultat, dref, gref)[1], extend];\r\n        }else if(dref == \"0\" && gref != \"0\"){\r\n          var reference = \"< \" + gref\r\n          return [test, rezultat, interpretacija.Less(rezultat, dref, gref)[0], jedinica, reference, interpretacija.Less(rezultat, dref, gref)[1], extend];\r\n        }else{\r\n          var reference = dref + \" - \" + gref\r\n          return [test, rezultat, interpretacija.Standard(rezultat, dref, gref)[0], jedinica, reference, interpretacija.Standard(rezultat, dref, gref)[1], extend];\r\n        }        \r\n        break;\r\n      case \"insul\":\r\n        if(dref == \"0\" && gref == \"0\"){\r\n          var reference = \"/\"\r\n        }else{\r\n          var reference = dref + \" - \" + gref\r\n        }\r\n        return [test, rezultat, interpretacija.Standard(rezultat, dref, gref)[0], jedinica, reference, interpretacija.Standard(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"less\":\r\n        return [test, rezultat, interpretacija.Less(rezultat, dref, gref)[0], jedinica, \" < \" + gref, interpretacija.Less(rezultat, dref, gref)[1], extend];              \r\n        break; \r\n      case \"lesseq\":\r\n        return [test, rezultat, interpretacija.LessEqual(rezultat, dref, gref)[0], jedinica, \" ≤ \" + gref, interpretacija.LessEqual(rezultat, dref, gref)[1], extend];             \r\n        break;\r\n      case \"lesspl\":\r\n          return [test, rezultat, interpretacija.LessPlus(rezultat, dref, gref)[0], jedinica, \" < \" + gref + \" x 10^6\", interpretacija.LessPlus(rezultat, dref, gref)[1], extend];             \r\n          break; \r\n      case \"infekc\":\r\n        return [test, rezultat, interpretacija.Infekcija(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.Infekcija(rezultat, dref, gref)[1], extend];             \r\n        break; \r\n      case \"grt\":\r\n        return [test, rezultat, interpretacija.Greater(rezultat, dref, gref)[0], jedinica, \" > \" + gref, interpretacija.Greater(rezultat, dref, gref)[1], extend];        \r\n        break; \r\n      case \"grtno\":\r\n          return [test, rezultat, interpretacija.GreaterNoInterp(rezultat, dref, gref)[0], jedinica, \" > \" + gref, interpretacija.GreaterNoInterp(rezultat, dref, gref)[1], extend];        \r\n          break; \r\n      case \"grtpl\":\r\n        return [test, rezultat, interpretacija.Greater(rezultat, dref, gref)[0], jedinica, \" > \" + gref + \" x 10^6\", interpretacija.Greater(rezultat, dref, gref)[1], extend];        \r\n        break; \r\n      case \"grtepl\":\r\n          return [test, rezultat, interpretacija.GreaterEqual(rezultat, dref, gref)[0], jedinica, \" ≥ \" + gref + \" x 10^6\", interpretacija.GreaterEqual(rezultat, dref, gref)[1], extend];        \r\n          break; \r\n      case \"grte\":\r\n        return [test, rezultat, interpretacija.GreaterEqual(rezultat, dref, gref)[0], jedinica, \" ≥ \" + gref, interpretacija.GreaterEqual(rezultat, dref, gref)[1], extend];        \r\n        break;  \r\n      case \"neg\":\r\n        return [test, rezultat, interpretacija.Negativan(rezultat, dref, gref)[0], jedinica, \"negativan\", interpretacija.Negativan(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"trag\":\r\n        return [test, rezultat, interpretacija.Trag(rezultat, dref, gref)[0], jedinica, \"trag\", interpretacija.Trag(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"reakt\":\r\n        return [test, rezultat, interpretacija.Reaktivan(rezultat, dref, gref)[0], jedinica, \"negativan\", interpretacija.Reaktivan(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"norm\":\r\n        return [test, rezultat, interpretacija.Normalan(rezultat, dref, gref)[0], jedinica, \"normalna\", interpretacija.Normalan(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"norma\":\r\n        return [test, rezultat, interpretacija.Normalan(rezultat, dref, gref)[0], jedinica, \"normalan\", interpretacija.Normalan(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"ured\":\r\n        return [test, rezultat, interpretacija.Uredan(rezultat, dref, gref)[0], jedinica, \"uredna\", interpretacija.Uredan(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"plus\":\r\n        return [test, rezultat, interpretacija.Plus(rezultat, dref, gref)[0], jedinica, \"+ + +\", interpretacija.Plus(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"morf\":\r\n        return [test, rezultat, interpretacija.Morf(rezultat, dref, gref)[0], jedinica, gref, interpretacija.Morf(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"titar\":\r\n          return [test, rezultat, interpretacija.Titar(rezultat, dref, gref)[0], jedinica, \"< \" + dref + \":\" + gref, interpretacija.Titar(rezultat, dref, gref)[1], extend];\r\n          break;\r\n      case \"tsh\":\r\n        return [test, rezultat, interpretacija.TSH(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.TSH(rezultat, dref, gref)[1], extend];\r\n        break; \r\n      case \"trg\":      \r\n        return [test, rezultat, interpretacija.TRG(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.TRG(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"hol\":      \r\n        return [test, rezultat, interpretacija.HOL(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.HOL(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"hdl\":      \r\n        return [test, rezultat, interpretacija.HDL(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.HDL(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"ldl\":      \r\n        return [test, rezultat, interpretacija.LDL(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.LDL(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"fpsa\":      \r\n        return [test, rezultat, interpretacija.fPSA(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.fPSA(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"sediment\":\r\n        return [test, rezultat, interpretacija.Sedimentacija(rezultat, dref, gref)[0], jedinica, \"< \" + gref, interpretacija.Sedimentacija(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"bistar\":\r\n        return [test, rezultat, interpretacija.Bistar(rezultat, dref, gref)[0], jedinica, \"bistar\", interpretacija.Bistar(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"boja\":\r\n        return [test, rezultat, interpretacija.Boja(rezultat, dref, gref)[0], jedinica, \"žut\", interpretacija.Boja(rezultat, dref, gref)[1], extend];\r\n        break;   \r\n      case \"bojasp\":\r\n          return [test, rezultat, interpretacija.BojaSpermiogram(rezultat, dref, gref)[0], jedinica, \"blijedo žut\", interpretacija.BojaSpermiogram(rezultat, dref, gref)[1], extend];\r\n          break;    \r\n      case \"nesto\":\r\n        return [test, rezultat, interpretacija.Nesto(rezultat, dref, gref)[0], jedinica, \"nešto\", interpretacija.Nesto(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"exists\":\r\n        return [test, rezultat, interpretacija.Exists(rezultat, dref, gref)[0], jedinica, \" \", interpretacija.Exists(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"prisutno\":\r\n        return [test, rezultat, interpretacija.Prisutno(rezultat, dref, gref)[0], jedinica, \"0\", interpretacija.Prisutno(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"gljivice\":\r\n        return [test, rezultat, interpretacija.Gljivice(rezultat, dref, gref)[0], jedinica, \"0\", interpretacija.Gljivice(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"leuer\":\r\n          return [test, rezultat, interpretacija.LeuEr(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.LeuEr(rezultat, dref, gref)[1], extend];\r\n          break;\r\n      case \"nema\":\r\n          return [test, rezultat, interpretacija.Nema(rezultat, dref, gref)[0], jedinica, \"nema\", interpretacija.Nema(rezultat, dref, gref)[1], extend];\r\n          break;\r\n      case \"blst\":\r\n        return [test, rezultat, interpretacija.Blasti(rezultat, dref, gref)[0], jedinica, gref, interpretacija.Blasti(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"leu\":      \r\n        return [test, rezultat, interpretacija.LeuErc(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.LeuErc(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"spec\":      \r\n        return [test, rezultat, interpretacija.Specific(rezultat, dref, gref)[0], jedinica, spec, interpretacija.Specific(rezultat, dref, gref)[1], extend];\r\n        break;   \r\n          \r\n        \r\n\r\n      //\r\n\r\n      \r\n\r\n      case \"e0x\":      \r\n        return [test, rezultat, interpretacija.None(rezultat, dref, gref)[0], jedinica, \"\", interpretacija.None(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"e02\":      \r\n        return [test, rezultat, interpretacija.SpermKolicina(rezultat, dref, gref)[0], jedinica, \"da\", interpretacija.SpermKolicina(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"e04\":      \r\n        return [test, rezultat, interpretacija.SpermIzgled(rezultat, dref, gref)[0], jedinica, \"uredan\", interpretacija.SpermIzgled(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"e05\":      \r\n        return [test, rezultat, interpretacija.SpermBoja(rezultat, dref, gref)[0], jedinica, \"sivo bijela\", interpretacija.SpermBoja(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"e07\":      \r\n        return [test, rezultat, interpretacija.SpermLikvefakcija(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.SpermLikvefakcija(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"e08\":      \r\n        return [test, rezultat, interpretacija.SpermAglutinacija(rezultat, dref, gref)[0], jedinica, \"nije prisutna\", interpretacija.SpermAglutinacija(rezultat, dref, gref)[1], extend];\r\n        break;\r\n        \r\n\r\n\r\n      //\r\n\r\n\r\n            \r\n      default:\r\n        return [test, rezultat, interpretacija.None(rezultat, dref, gref)[0], jedinica, \"/\", interpretacija.None(rezultat, dref, gref)[1], extend];\r\n        break;\r\n    }\r\n  }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/obrada/functions/reference.js","require('../../modules/es6.object.get-own-property-names');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function getOwnPropertyNames(it) {\n  return $Object.getOwnPropertyNames(it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/object/get-own-property-names.js\n// module id = gAsd\n// module chunks = 18","export default {\r\n  hex2rgb(hex, opacity) {\r\n    hex = (hex + \"\").trim();\r\n\r\n    let rgb = null;\r\n    let match = hex.match(/^#?(([0-9a-zA-Z]{3}){1,3})$/);\r\n\r\n    if (!match) {\r\n      return null;\r\n    }\r\n\r\n    rgb = {};\r\n\r\n    hex = match[1];\r\n\r\n    if (hex.length === 6) {\r\n      rgb.r = parseInt(hex.substring(0, 2), 16);\r\n      rgb.g = parseInt(hex.substring(2, 4), 16);\r\n      rgb.b = parseInt(hex.substring(4, 6), 16);\r\n    } else if (hex.length === 3) {\r\n      rgb.r = parseInt(hex.substring(0, 1) + hex.substring(0, 1), 16);\r\n      rgb.g = parseInt(hex.substring(1, 2) + hex.substring(1, 2), 16);\r\n      rgb.b = parseInt(hex.substring(2, 3) + hex.substring(2, 3), 16);\r\n    }\r\n\r\n    rgb.css = \"rgb\" + (opacity ? \"a\" : \"\") + \"(\";\r\n    rgb.css += rgb.r + \",\" + rgb.g + \",\" + rgb.b;\r\n    rgb.css += (opacity ? \",\" + opacity : \"\") + \")\";\r\n\r\n    return rgb;\r\n  }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/utils.js","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".collapse-page__content[data-v-10b2afde]{padding:2rem}.collapse-page__content__title[data-v-10b2afde]{font-size:1.375rem;font-weight:700}.icon-bar a[data-v-10b2afde]{color:#fff;text-decoration:none}.icon-bar a[data-v-10b2afde]:hover{color:#4ae387}i[data-v-10b2afde]:hover{color:#4ae387!important}.circle[data-v-10b2afde]{width:1rem;opacity:.5;height:1rem;border-radius:50%;display:inline-block}\", \"\", {\"version\":3,\"sources\":[\"C:/Users/atom/Desktop/ATOM/26 - BIOLAB Laboratorij Sarajevo/bls_client/src/components/obrada/Obrada.vue\"],\"names\":[],\"mappings\":\"AACA,yCACE,YAAc,CACf,AACD,gDACI,mBAAoB,AACpB,eAAkB,CACrB,AACD,6BACE,WAAY,AACZ,oBAAsB,CACvB,AACD,mCACE,aAAe,CAChB,AACD,yBACE,uBAA0B,CAC3B,AACD,yBACE,WAAY,AACZ,WAAa,AACb,YAAa,AACb,kBAAmB,AACnB,oBAAsB,CACvB\",\"file\":\"Obrada.vue\",\"sourcesContent\":[\"\\n.collapse-page__content[data-v-10b2afde] {\\n  padding: 2rem;\\n}\\n.collapse-page__content__title[data-v-10b2afde] {\\n    font-size: 1.375rem;\\n    font-weight: bold;\\n}\\n.icon-bar a[data-v-10b2afde] {\\n  color: #fff;\\n  text-decoration: none;\\n}\\n.icon-bar a[data-v-10b2afde]:hover {\\n  color: #4ae387;\\n}\\ni[data-v-10b2afde]:hover {\\n  color: #4ae387 !important;\\n}\\n.circle[data-v-10b2afde] {\\n  width: 1rem;\\n  opacity: 0.5;\\n  height: 1rem;\\n  border-radius: 50%;\\n  display: inline-block;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-10b2afde\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/sass-loader/lib/loader.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/obrada/Obrada.vue\n// module id = kyCW\n// module chunks = 18","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"collapse-page\"},[(_vm.show)?_c('div',{staticClass:\"flex md12\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.main && _vm.pdf),expression:\"!main && pdf\"}]},[_c('div',{staticClass:\"btn-container\"},[_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.verificiran),expression:\"verificiran\"}],staticClass:\"btn btn-secondary btn-sm\",on:{\"click\":function($event){$event.preventDefault();_vm.Nazad()}}},[_c('span',{staticClass:\"fa fa-step-backward\"}),_vm._v(\"\\n            \"+_vm._s(\" NAZAD\")+\"\\n          \")]),_vm._v(\" \"),_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.verificiran),expression:\"!verificiran\"}],staticClass:\"btn btn-secondary-danger btn-sm\",on:{\"click\":function($event){$event.preventDefault();_vm.Nazad()}}},[_c('span',{staticClass:\"fa fa-step-backward\"}),_vm._v(\"\\n            \"+_vm._s(\" NAZAD\")+\"\\n          \")]),_vm._v(\" \"),_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.email_button && _vm.verificiran),expression:\"email_button && verificiran\"}],staticClass:\"btn btn-secondary btn-sm pull-right\",attrs:{\"disabled\":!_vm.Email(_vm.email)},on:{\"click\":function($event){$event.preventDefault();_vm.MailDialog()}}},[_c('span',{staticClass:\"glyphicon glyphicon-send\"}),_vm._v(\"\\n            \"+_vm._s(\" Pošalji\")+\"\\n          \")]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.email_button && _vm.verificiran),expression:\"email_button && verificiran\"}],staticClass:\"form-group with-icon-left pull-right\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.email),expression:\"email\"}],attrs:{\"size\":\"40\",\"id\":\"input-icon-left\",\"name\":\"input-icon-left\",\"title\":\" \",\"required\":\"\"},domProps:{\"value\":(_vm.email)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.email=$event.target.value}}}),_vm._v(\" \"),_c('i',{staticClass:\"fa fa-envelope-o icon-left input-icon\"}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(\"\\n                \"+_vm._s(\"Email adresa\")+\"\\n              \")]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]),_vm._v(\" \"),_c('hr'),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"pdf-container\"}})]),_vm._v(\" \"),_c('vuestic-widget',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.main),expression:\"main\"}],attrs:{\"headerText\":_vm.header,\"pagination\":_vm.pagination,\"main\":_vm.main,\"data_pid\":Number(_vm.data_pid),\"data_length\":Number(_vm.data_length),\"rezultati_length\":_vm.Results.length,\"spol\":_vm.data_spol,\"data_min\":Number(_vm.data_min),\"datum\":_vm.query_date,\"today\":_vm.today_date,\"forward_disabled\":_vm.forward_disabled,\"backward_disabled\":_vm.backward_disabled}},[_c('div',{staticClass:\"ui-grid row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('vuestic-widget',{staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"headerText\":\"Informacije o pacijentu\"}},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col\"},[_c('div',[_vm._v(\"\\n                     \\n                    \"),_c('span',{staticStyle:{\"color\":\"#000000\"}},[_vm._v(_vm._s(\"Datum rođenja: \")+\"\\n                      \"),_c('strong',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(\"\\n                        \"+_vm._s(_vm.datumRodjenja))])]),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#000000\"}},[_vm._v(\"  \"+_vm._s(\"Ime jednog roditelja: \")+\"\\n                      \"),_c('strong',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(\"\\n                        \"+_vm._s(_vm.imeRoditelja))])]),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#000000\"}},[_vm._v(\"  \"+_vm._s(\"Adresa stanovanja: \")+\"\\n                      \"),_c('strong',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(\"\\n                        \"+_vm._s(_vm.adresaStanovanja))])])])])])])],1),_vm._v(\" \"),_c('div',{staticStyle:{\"min-height\":\"10px\"}})]),_vm._v(\" \"),_c('vuestic-accordion-obrada',_vm._l((_vm.uzorci),function(uzorak){return _c('vuestic-collapse-obrada',{directives:[{name:\"show\",rawName:\"v-show\",value:(!uzorak.removed),expression:\"!uzorak.removed\"}],key:uzorak.sid,attrs:{\"id\":uzorak.sid,\"sample\":uzorak,\"retest\":_vm.save_retest}},[_c('span',{attrs:{\"slot\":\"header\",\"id\":uzorak.sid},slot:\"header\"},[_vm._v(_vm._s(uzorak.sid))]),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"body\"},slot:\"body\"},[_c('div',{staticStyle:{\"line-height\":\"10px\"}},[_vm._v(\" \")]),_vm._v(\" \"),(uzorak.tip.includes('Mikrobiologija'))?_c('div',{staticClass:\"va-row\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_table),expression:\"show_table\"}],staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN'\n                          )?_c('td'):_vm._e(),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(\"ANALIZA\"))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(\"REZULTAT\"))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(\"JEDINICA\"))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(\"REFERENCE\"))]),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN'\n                          )?_c('td'):_vm._e(),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN' &&\n                            _vm.MicrobiologyScenario != 'MAIBPoR'\n                          )?_c('td',[_vm._v(\"\\n                          \"+_vm._s(\"PONOVI\")+\"\\n                        \")]):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR')?_c('td',{staticStyle:{\"text-transform\":\"none\"}},[_vm._v(\"\\n                          \"+_vm._s(\"Bakterije\")+\"\\n                        \")]):_vm._e(),_vm._v(\" \"),_c('td')])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.rezultati),function(test,index){return _c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(index < 1),expression:\"index < 1\"}],key:test.labassay_id,class:{\n                          'table-danger':\n                            test.rezultat_m.length &&\n                            test.rezultat_m[0].pozitivan,\n                          'table-success':\n                            test.rezultat_m.length &&\n                            test.rezultat_m[0].negativan,\n                          'table-warning': false,\n                        },attrs:{\"align\":\"middle\"}},[(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN'\n                          )?_c('td',[(uzorak.status === 'ZAPRIMLJEN')?_c('button',{staticClass:\"btn btn-secondary-danger btn-micro\",staticStyle:{\"padding\":\"0.4px\",\"padding-left\":\"2px\"},on:{\"click\":function($event){$event.preventDefault();_vm.MicroResultSelect($event)}}},[_c('i',{staticClass:\"fa fa-bug\",on:{\"click\":function($event){$event.preventDefault();_vm.MicroResultSelect($event)}}})]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ZAPRIMLJEN')?_c('button',{staticClass:\"btn btn-secondary-danger btn-micro\",staticStyle:{\"padding\":\"0.6px\",\"padding-right\":\"1px\",\"padding-left\":\"1.2px\"},on:{\"click\":function($event){$event.preventDefault();_vm.ResetSample($event)}}},[_c('i',{staticClass:\"fa fa-backward\",on:{\"click\":function($event){$event.preventDefault();_vm.ResetSample($event)}}})]):_vm._e()]):_vm._e(),_vm._v(\" \"),_c('td',{attrs:{\"title\":test.analit}},[_c('span',[_vm._v(_vm._s(test.ime))])]),_vm._v(\" \"),(test.rezultat_m.length > 0)?_c('td',[_c('button',{staticClass:\"btn btn-primary btn-micro\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();_vm.OpenMicro($event, test)}}},[_c('span',{staticClass:\"glyphicon glyphicon-search\",attrs:{\"id\":test.labassay_id}}),_vm._v(\"\\n                            \"+_vm._s(\"VIŠE\")+\"\\n                          \")])]):_vm._e(),_vm._v(\" \"),(test.rezultat_m.length < 1)?_c('td',[_c('button',{staticClass:\"btn btn-pale btn-micro\",attrs:{\"id\":test.labassay_id}},[_c('span',{staticClass:\"glyphicon glyphicon-ban-circle\",attrs:{\"id\":test.labassay_id}}),_vm._v(\"\\n                            \"+_vm._s(\"VIŠE\")+\"\\n                          \")])]):_vm._e(),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(test.unit))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(\"/\"))]),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN'\n                          )?_c('td',[_c('i',{staticClass:\"glyphicon glyphicon-stats\",staticStyle:{\"font-size\":\"15px\",\"color\":\"#f7cc36\",\"opacity\":\"0\"},attrs:{\"id\":\"reference\",\"title\":\" \"}})]):_vm._e(),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN' &&\n                            _vm.MicrobiologyScenario != 'MAIBPoR'\n                          )?_c('td',[_c('button',{staticClass:\"btn btn-pale btn-micro\"},[_c('span',{staticClass:\"glyphicon glyphicon-ban-circle\"})])]):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR')?_c('td',[_c('button',{staticClass:\"btn btn-primary btn-micro\",on:{\"click\":function($event){$event.preventDefault();_vm.OpenMicroSelect($event, test)}}},[_c('span',{staticClass:\"fa fa-bug\"})])]):_vm._e(),_vm._v(\" \"),_c('td',[_c('i',{class:{\n                              'fa fa-exclamation-triangle icon-right input-icon error-icon': false,\n                            },on:{\"click\":function($event){$event.preventDefault();_vm.Exclamation(test)}}}),_vm._v(\" \"),_c('i',{class:{\n                              'fa fa-check success-icon icon-right input-icon': false,\n                            }})])])}))])])]):_vm._e(),_vm._v(\" \"),(!uzorak.tip.includes('Mikrobiologija'))?_c('div',{staticClass:\"va-row\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_table),expression:\"show_table\"}],staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN'\n                          )?_c('td'):_vm._e(),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(\"ANALIZA\"))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(\"REZULTAT\"))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(\"JEDINICA\"))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(\"REFERENCE\"))]),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN'\n                          )?_c('td'):_vm._e(),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN' &&\n                            _vm.calculated\n                          )?_c('td',[_vm._v(\"\\n                          \"+_vm._s(\"AKCIJA\")+\"\\n                        \")]):_vm._e(),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN'\n                          )?_c('td',[_vm._v(\"\\n                          \"+_vm._s(\"PONOVI\")+\"\\n                        \")]):_vm._e(),_vm._v(\" \"),_c('td')])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.rezultati),function(test){return _c('tr',{key:test.labassay_id,class:{\n                          'table-danger':\n                            _vm.Interpretacija(\n                              test.analit,\n                              test.rezultat,\n                              test.unit,\n                              test.dRef,\n                              test.gRef,\n                              _vm.$store.state.site,\n                              test.interp,\n                              test.extend,\n                              _vm.spec\n                            )[5] === 'Red' && !test.multidata,\n                          'table-success':\n                            _vm.Interpretacija(\n                              test.analit,\n                              test.rezultat,\n                              test.unit,\n                              test.dRef,\n                              test.gRef,\n                              _vm.$store.state.site,\n                              test.interp,\n                              test.extend,\n                              _vm.spec\n                            )[5] === 'Green' && !test.multidata,\n                          'table-warning':\n                            _vm.Interpretacija(\n                              test.analit,\n                              test.rezultat,\n                              test.unit,\n                              test.dRef,\n                              test.gRef,\n                              _vm.$store.state.site,\n                              test.interp,\n                              test.extend,\n                              _vm.spec\n                            )[5] === 'Yellow' && !test.multidata,\n                        },attrs:{\"align\":\"middle\"}},[(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN'\n                          )?_c('td',[(!test.multidata)?_c('i',{staticClass:\"glyphicon glyphicon-object-align-bottom\",staticStyle:{\"color\":\"#4ae387\"},on:{\"click\":function($event){$event.preventDefault();_vm.SelectAnalyser(test)}}}):_vm._e(),_vm._v(\" \"),(test.multidata)?_c('span',{staticClass:\"glyphicon glyphicon-object-align-bottom\",staticStyle:{\"color\":\"#d9d9d9\"}}):_vm._e()]):_vm._e(),_vm._v(\" \"),_c('td',{attrs:{\"title\":test.analit}},[_c('span',{on:{\"contextmenu\":function($event){_vm.LabAssayEval($event, test)},\"click\":function($event){$event.preventDefault();_vm.Evaluation(test)}}},[_vm._v(_vm._s(test.ime))])]),_vm._v(\" \"),(!test.multidata)?_c('td',[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == false),expression:\"test.edit == false\"}],staticStyle:{\"display\":\"inline\",\"font-size\":\"14px\",\"line-height\":\"4.5px\"}},[_c('label',[_c('strong',[_vm._v(_vm._s(test.rezultat))])])]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"}],staticStyle:{\"display\":\"inline\",\"line-height\":\"5px\"}},[(test.select_options != undefined)?_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],staticStyle:{\"width\":\"110px\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(test, \"rezultat\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((test.select_options),function(option){return _c('option',{key:option},[_vm._v(_vm._s(option))])})):_vm._e()]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"}],staticStyle:{\"display\":\"inline\"}},[(test.select_options === undefined)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],staticStyle:{\"width\":\"110px\",\"font-size\":\"12px\",\"line-height\":\"7px\"},domProps:{\"value\":(test.rezultat)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(test, \"rezultat\", $event.target.value)}}}):_vm._e()]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.vise > 2),expression:\"test.vise > 2\"}],on:{\"click\":function($event){$event.preventDefault();_vm.GetResults(test, uzorak.status)}}},[_c('i',{staticClass:\"fa fa-star\",staticStyle:{\"font-size\":\"5px\",\"color\":\"#e34a4a\"},attrs:{\"id\":\"star\",\"title\":\" \"}})]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.vise < 3),expression:\"test.vise < 3\"}]},[_c('i',{staticClass:\"fa fa-star-o\",staticStyle:{\"font-size\":\"5px\",\"opacity\":\"0\"},attrs:{\"id\":\"star\",\"title\":\" \"}})])]):_vm._e(),_vm._v(\" \"),(test.multidata && test.realizovan)?_c('td',[_c('button',{staticClass:\"btn btn-primary btn-micro\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();\n                              _vm.MultiGet(\n                                $event,\n                                test.ime,\n                                test.analit,\n                                test.rezultat,\n                                test.odobren\n                              )\n                            }}},[_c('span',{staticClass:\"glyphicon glyphicon-search\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();\n                                _vm.MultiGet(\n                                  $event,\n                                  test.ime,\n                                  test.analit,\n                                  test.rezultat,\n                                  test.odobren\n                                )\n                              }}}),_vm._v(\"\\n                            \"+_vm._s(\"VIŠE\")+\"\\n                          \")]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.multi_count > 2),expression:\"test.multi_count > 2\"}],on:{\"click\":function($event){$event.preventDefault();\n                              _vm.GetResultsMulti(test, uzorak.status)\n                            }}},[_c('i',{staticClass:\"fa fa-star\",staticStyle:{\"font-size\":\"5px\",\"color\":\"#e34a4a\"},attrs:{\"id\":\"star\",\"title\":\" \"}})]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.multi_count < 3),expression:\"test.multi_count < 3\"}]},[_c('i',{staticClass:\"fa fa-star-o\",staticStyle:{\"font-size\":\"5px\",\"opacity\":\"0\"},attrs:{\"id\":\"star\",\"title\":\" \"}})])]):_vm._e(),_vm._v(\" \"),(test.multidata && !test.realizovan)?_c('td',[_c('button',{staticClass:\"btn btn-warning btn-micro\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();\n                              _vm.MultiGet(\n                                $event,\n                                test.ime,\n                                test.analit,\n                                test.rezultat,\n                                test.odobren\n                              )\n                            }}},[_c('span',{staticClass:\"glyphicon glyphicon-search\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();\n                                _vm.MultiGet(\n                                  $event,\n                                  test.ime,\n                                  test.analit,\n                                  test.rezultat,\n                                  test.odobren\n                                )\n                              }}}),_vm._v(\"\\n                            \"+_vm._s(\"VIŠE\")+\"\\n                          \")]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.multi_count > 2),expression:\"test.multi_count > 2\"}],on:{\"click\":function($event){$event.preventDefault();\n                              _vm.GetResultsMulti(test, uzorak.status)\n                            }}},[_c('i',{staticClass:\"fa fa-star\",staticStyle:{\"font-size\":\"5px\",\"color\":\"#e34a4a\"},attrs:{\"id\":\"star\",\"title\":\" \"}})]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.multi_count < 3),expression:\"test.multi_count < 3\"}]},[_c('i',{staticClass:\"fa fa-star-o\",staticStyle:{\"font-size\":\"5px\",\"opacity\":\"0\"},attrs:{\"id\":\"star\",\"title\":\" \"}})])]):_vm._e(),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(test.unit))]),_vm._v(\" \"),(!test.multidata)?_c('td',[_vm._v(\"\\n                          \"+_vm._s(_vm.Interpretacija(\n                              test.analit,\n                              test.rezultat,\n                              test.unit,\n                              test.dRef,\n                              test.gRef,\n                              _vm.$store.state.site,\n                              test.interp,\n                              test.extend,\n                              _vm.spec\n                            )[4])+\"\\n                        \")]):_vm._e(),_vm._v(\" \"),(test.multidata)?_c('td',[_vm._v(_vm._s(\"/\"))]):_vm._e(),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN'\n                          )?_c('td',[(!test.multidata)?_c('i',{staticClass:\"glyphicon glyphicon-stats\",staticStyle:{\"font-size\":\"15px\",\"color\":\"#f7cc36\"},attrs:{\"id\":\"reference\",\"title\":\" \"},on:{\"click\":function($event){$event.preventDefault();_vm.Reference($event, test)}}}):_vm._e(),_vm._v(\" \"),(test.multidata)?_c('i',{staticClass:\"glyphicon glyphicon-stats\",staticStyle:{\"font-size\":\"15px\",\"color\":\"#f7cc36\",\"opacity\":\"0\"},attrs:{\"id\":\"reference\",\"title\":\" \"}}):_vm._e()]):_vm._e(),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN' &&\n                            _vm.calculated &&\n                            !test.calculated\n                          )?_c('td',[_c('button',{staticClass:\"btn btn-pale btn-micro\"},[_c('span',{staticClass:\"glyphicon glyphicon-ban-circle\"})])]):_vm._e(),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN' &&\n                            _vm.calculated &&\n                            test.calculated\n                          )?_c('td',[_c('button',{staticClass:\"btn btn-primary btn-micro\",attrs:{\"id\":test.test},on:{\"click\":function($event){$event.preventDefault();\n                              _vm.Calculate(\n                                $event,\n                                test.labassay_id,\n                                test.ime,\n                                test.id\n                              )\n                            }}},[_c('span',{staticClass:\"fa fa-calculator\",attrs:{\"id\":test.test}})])]):_vm._e(),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN' &&\n                            (test.rezultat === '' ||\n                              test.manual ||\n                              test.calculated)\n                          )?_c('td',[_c('button',{staticClass:\"btn btn-pale btn-micro\"},[_c('span',{staticClass:\"glyphicon glyphicon-ban-circle\"})])]):_vm._e(),_vm._v(\" \"),(\n                            uzorak.status != 'ODOBREN' &&\n                            uzorak.status != 'VERIFICIRAN' &&\n                            test.rezultat != '' &&\n                            !test.manual &&\n                            !test.calculated\n                          )?_c('td',[(!test.retest)?_c('button',{staticClass:\"btn btn-primary btn-micro\",attrs:{\"id\":test.test},on:{\"click\":function($event){$event.preventDefault();_vm.RetestEnable($event)}}},[_c('span',{staticClass:\"fa fa-refresh\",attrs:{\"id\":test.test}})]):_vm._e(),_vm._v(\" \"),(test.retest)?_c('button',{staticClass:\"btn btn-info btn-micro\",attrs:{\"id\":test.test},on:{\"click\":function($event){$event.preventDefault();_vm.RetestDisable($event)}}},[_c('span',{staticClass:\"glyphicon glyphicon-duplicate\",attrs:{\"id\":test.test}})]):_vm._e()]):_vm._e(),_vm._v(\" \"),_c('td',[_c('i',{class:{\n                              'fa fa-exclamation-triangle icon-right input-icon error-icon':\n                                _vm.Interpretacija(\n                                  test.analit,\n                                  test.rezultat,\n                                  test.unit,\n                                  test.dRef,\n                                  test.gRef,\n                                  _vm.$store.state.site,\n                                  test.interp,\n                                  test.extend,\n                                  _vm.spec\n                                )[5] === 'Red' && !test.multidata,\n                            },on:{\"click\":function($event){$event.preventDefault();_vm.Exclamation(test)}}}),_vm._v(\" \"),_c('i',{class:{\n                              'fa fa-check success-icon icon-right input-icon':\n                                _vm.Interpretacija(\n                                  test.analit,\n                                  test.rezultat,\n                                  test.unit,\n                                  test.dRef,\n                                  test.gRef,\n                                  _vm.$store.state.site,\n                                  test.interp,\n                                  test.extend,\n                                  _vm.spec\n                                )[5] === 'Green' && !test.multidata,\n                            }})])])}))])])]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticStyle:{\"min-height\":\"10px\"}}),_vm._v(\" \"),(_vm.verificiran)?_c('div',{staticClass:\"va-row\"},[_c('div',{staticClass:\"flex md12\"},[_c('vuestic-collapse-nalaz',{attrs:{\"final\":_vm.verificiran,\"final_pdf\":_vm.final_pdf,\"samples\":_vm.samples,\"pdf\":_vm.link,\"pacijent\":_vm.ime + ' ' + _vm.prezime}},[_c('span',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_vm._v(\"Nalaz\")]),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"body\"},slot:\"body\"},[_c('div',{staticClass:\"va-row\"})])])],1)]):_vm._e(),_vm._v(\" \"),_c('div',[_c('hr')]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-3\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"btn-container\"},[_c('button',{staticClass:\"btn btn-secondary btn-sm wizard-back pull-left\",on:{\"click\":function($event){$event.preventDefault();_vm.Povratak()}}},[_c('span',{staticClass:\"fa fa-backward\"}),_vm._v(\"\\n                \"+_vm._s(\" POVRATAK\")+\"\\n              \")]),_vm._v(\" \"),(_vm.partials_condition && !_vm.verificiran)?_c('button',{staticClass:\"btn btn-secondary-warning btn-sm wizard-back pull-right\",staticStyle:{\"text-transform\":\"none\",\"color\":\"#e34a4a\"},on:{\"click\":function($event){$event.preventDefault();_vm.Partials()}}},[_c('span',{staticClass:\"fa fa-file-pdf-o\",staticStyle:{\"color\":\"#e34a4a\"}}),_vm._v(\"\\n                \"+_vm._s(\" Djelimični nalaz\")+\"\\n              \")]):_vm._e()])])])],1),_vm._v(\" \"),_c('vuestic-modal-multi',{ref:\"largeModalMulti\",attrs:{\"show\":_vm.show,\"sample\":_vm.sample,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(_vm._s(_vm.naslov))]),_vm._v(\" \"),_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"10%\"}}),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"ANALIT\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"30%\"}},[_vm._v(_vm._s(\"REZULTAT\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"10%\"}},[_vm._v(_vm._s(\"JEDINICA\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"REFERENCE\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"10%\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.analiti),function(test){return _c('tr',{key:test.labID,class:{\n                  'table-danger':\n                    _vm.Interpretacija(\n                      test.opis,\n                      test.rezultat,\n                      test.jedinica,\n                      test.refd,\n                      test.refg,\n                      _vm.$store.state.site,\n                      test.interp,\n                      test.extend,\n                      _vm.spec\n                    )[5] === 'Red' && !test.rezultat_multiple.length,\n                  'table-success':\n                    _vm.Interpretacija(\n                      test.opis,\n                      test.rezultat,\n                      test.jedinica,\n                      test.refd,\n                      test.refg,\n                      _vm.$store.state.site,\n                      test.interp,\n                      test.extend,\n                      _vm.spec\n                    )[5] === 'Green' && !test.rezultat_multiple.length,\n                  'table-warning':\n                    _vm.Interpretacija(\n                      test.opis,\n                      test.rezultat,\n                      test.jedinica,\n                      test.refd,\n                      test.refg,\n                      _vm.$store.state.site,\n                      test.interp,\n                      test.extend,\n                      _vm.spec\n                    )[5] === 'Yellow' && !test.rezultat_multiple.length,\n                },attrs:{\"align\":\"middle\"}},[(test.flag != '')?_c('td',[_vm._v(_vm._s(test.flag))]):_vm._e(),_vm._v(\" \"),(test.flag === '')?_c('td',[_vm._v(\" \")]):_vm._e(),_vm._v(\" \"),_c('td',{attrs:{\"title\":test.opis}},[_vm._v(_vm._s(test.naziv))]),_vm._v(\" \"),_c('td',{attrs:{\"id\":test.analit}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == false),expression:\"test.edit == false\"}]},[_c('label',[_c('strong',[_vm._v(_vm._s(test.rezultat))])])]),_vm._v(\" \"),(\n                      test.select_options != undefined &&\n                      (test.kod === 's03' ||\n                        test.kod === 's04' ||\n                        test.kod === 's08' ||\n                        test.kod === 's09')\n                    )?_c('select',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"},{name:\"model\",rawName:\"v-model\",value:(test.rezultat_multiple),expression:\"test.rezultat_multiple\"}],staticStyle:{\"min-width\":\"200px\"},attrs:{\"multiple\":\"\",\"size\":test.select_options.length},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(test, \"rezultat_multiple\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((test.select_options),function(option){return _c('option',{key:option},[_vm._v(_vm._s(option))])})):_vm._e(),_vm._v(\" \"),(test.select_options != undefined && (test.kod != 's03' && test.kod != 's04' && test.kod != 's08' && test.kod != 's09'))?_c('select',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"},{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],staticStyle:{\"width\":\"200px\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(test, \"rezultat\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((test.select_options),function(option){return _c('option',{key:option},[_vm._v(_vm._s(option))])})):_vm._e(),_vm._v(\" \"),(test.select_options === undefined)?_c('input',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"},{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],staticStyle:{\"width\":\"200px\"},domProps:{\"value\":(test.rezultat)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(test, \"rezultat\", $event.target.value)}}}):_vm._e()]),_vm._v(\" \"),_c('td',[_vm._v(\"\\n                  \"+_vm._s(_vm.Interpretacija(\n                      test.opis,\n                      test.rezultat,\n                      test.jedinica,\n                      test.refd,\n                      test.refg,\n                      _vm.$store.state.site,\n                      test.interp,\n                      test.extend,\n                      _vm.spec\n                    )[3])+\"\\n                \")]),_vm._v(\" \"),_c('td',[_vm._v(\"\\n                  \"+_vm._s(_vm.Interpretacija(\n                      test.opis,\n                      test.rezultat,\n                      test.jedinica,\n                      test.refd,\n                      test.refg,\n                      _vm.$store.state.site,\n                      test.interp,\n                      test.extend,\n                      _vm.spec\n                    )[4])+\"\\n                \")]),_vm._v(\" \"),_c('td',[_c('i',{class:{\n                      'fa fa-exclamation-triangle icon-right input-icon error-icon':\n                        _vm.Interpretacija(\n                          test.opis,\n                          test.rezultat,\n                          test.jedinica,\n                          test.refd,\n                          test.refg,\n                          _vm.$store.state.site,\n                          test.interp,\n                          test.extend,\n                          _vm.spec\n                        )[5] === 'Red' && !test.rezultat_multiple.length,\n                    },on:{\"click\":function($event){$event.preventDefault();_vm.ExclamationMulti(test)}}}),_vm._v(\" \"),_c('i',{class:{\n                      'fa fa-check success-icon icon-right input-icon':\n                        _vm.Interpretacija(\n                          test.opis,\n                          test.rezultat,\n                          test.jedinica,\n                          test.refd,\n                          test.refg,\n                          _vm.$store.state.site,\n                          test.interp,\n                          test.extend,\n                          _vm.spec\n                        )[5] === 'Green' && !test.rezultat_multiple.length,\n                    }})])])}))])])]),_vm._v(\" \"),_c('vuestic-modal-micro-reset',{ref:\"staticModalResetSample\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s(\"Brisanje rezultata: \"))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.CurrentTest))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s(\"Jeste li sigurni da želite obrisati rezultat?\"))])])]),_vm._v(\" \"),_c('vuestic-modal-micro-bactery',{ref:\"staticModalMicroBacterySelect\",attrs:{\"show\":_vm.show,\"large\":true,\"sample\":_vm.sample,\"select\":true,\"update\":!_vm.ShowAntibiotics &&\n          !_vm.ShowBacteries &&\n          _vm.MicrobiologyScenario === 'MAIBPoR',\"povratak\":_vm.ShowAntibiotics || _vm.ShowBacteries,\"empty\":_vm.TemporaryAntibiotics.length > 0 || _vm.TemporaryBacteriesAdd.length > 0,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[(!_vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s(\"Rezultat analize: \"))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.CurrentTest))])]):_vm._e(),_vm._v(\" \"),(_vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s(\"Antibiotici | \"))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Izbornik\"))])]):_vm._e(),_vm._v(\" \"),(!_vm.ShowAntibiotics && _vm.ShowBacteries)?_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s(\"Bakterije | \"))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Izbornik\"))])]):_vm._e(),_vm._v(\" \"),_c('div',[(_vm.show_table)?_c('div',{staticClass:\"row\"},[(\n                _vm.MicrobiologyScenario === 'MAIBPoR' &&\n                _vm.ShowBacteries &&\n                !_vm.ShowAntibiotics\n              )?_c('div',{staticClass:\"col-md-1\"}):_vm._e(),_vm._v(\" \"),(\n                _vm.MicrobiologyScenario === 'MAIBPoR' &&\n                _vm.ShowBacteries &&\n                !_vm.ShowAntibiotics\n              )?_c('div',{staticClass:\"col-md-10\"},[(_vm.TemporaryBacteries.length)?_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredBacteries(1, 3)),function(bactery){return _c('div',{key:bactery._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bactery.chosen),expression:\"bactery.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bactery._id,\"type\":\"checkbox\",\"disabled\":bactery.disabled},domProps:{\"checked\":Array.isArray(bactery.chosen)?_vm._i(bactery.chosen,null)>-1:(bactery.chosen)},on:{\"click\":function($event){_vm.AddBacteries(bactery)},\"change\":function($event){var $$a=bactery.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bactery.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bactery.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bactery, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":bactery._id}},[(!bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e(),_vm._v(\" \"),(bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredBacteries(2, 3)),function(bactery){return _c('div',{key:bactery._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bactery.chosen),expression:\"bactery.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bactery._id,\"type\":\"checkbox\",\"disabled\":bactery.disabled},domProps:{\"checked\":Array.isArray(bactery.chosen)?_vm._i(bactery.chosen,null)>-1:(bactery.chosen)},on:{\"click\":function($event){_vm.AddBacteries(bactery)},\"change\":function($event){var $$a=bactery.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bactery.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bactery.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bactery, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":bactery._id}},[(!bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e(),_vm._v(\" \"),(bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredBacteries(3, 3)),function(bactery){return _c('div',{key:bactery._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bactery.chosen),expression:\"bactery.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bactery._id,\"type\":\"checkbox\",\"disabled\":bactery.disabled},domProps:{\"checked\":Array.isArray(bactery.chosen)?_vm._i(bactery.chosen,null)>-1:(bactery.chosen)},on:{\"click\":function($event){_vm.AddBacteries(bactery)},\"change\":function($event){var $$a=bactery.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bactery.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bactery.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bactery, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":bactery._id}},[(!bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e(),_vm._v(\" \"),(bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e()])])}))])]):_vm._e()]):_vm._e(),_vm._v(\" \"),(\n                _vm.MicrobiologyScenario === 'MAIBPoR' &&\n                _vm.ShowAntibiotics &&\n                !_vm.ShowBacteries\n              )?_c('div',{staticClass:\"col-md-1\"}):_vm._e(),_vm._v(\" \"),(\n                _vm.MicrobiologyScenario === 'MAIBPoR' &&\n                _vm.ShowAntibiotics &&\n                !_vm.ShowBacteries\n              )?_c('div',{staticClass:\"col-md-10\"},[(_vm.Antibiotics.length)?_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredAntibiotics(1, 3)),function(antibiotik){return _c('div',{key:antibiotik._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(antibiotik.chosen),expression:\"antibiotik.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":antibiotik._id,\"type\":\"checkbox\",\"disabled\":antibiotik.disabled},domProps:{\"checked\":Array.isArray(antibiotik.chosen)?_vm._i(antibiotik.chosen,null)>-1:(antibiotik.chosen)},on:{\"click\":function($event){_vm.AddAntibiotics(antibiotik)},\"change\":function($event){var $$a=antibiotik.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(antibiotik.chosen=$$a.concat([$$v]))}else{$$i>-1&&(antibiotik.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(antibiotik, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":antibiotik._id}},[(!antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e(),_vm._v(\" \"),(antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredAntibiotics(2, 3)),function(antibiotik){return _c('div',{key:antibiotik._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(antibiotik.chosen),expression:\"antibiotik.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":antibiotik._id,\"type\":\"checkbox\",\"disabled\":antibiotik.disabled},domProps:{\"checked\":Array.isArray(antibiotik.chosen)?_vm._i(antibiotik.chosen,null)>-1:(antibiotik.chosen)},on:{\"click\":function($event){_vm.AddAntibiotics(antibiotik)},\"change\":function($event){var $$a=antibiotik.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(antibiotik.chosen=$$a.concat([$$v]))}else{$$i>-1&&(antibiotik.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(antibiotik, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":antibiotik._id}},[(!antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e(),_vm._v(\" \"),(antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredAntibiotics(3, 3)),function(antibiotik){return _c('div',{key:antibiotik._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(antibiotik.chosen),expression:\"antibiotik.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":antibiotik._id,\"type\":\"checkbox\",\"disabled\":antibiotik.disabled},domProps:{\"checked\":Array.isArray(antibiotik.chosen)?_vm._i(antibiotik.chosen,null)>-1:(antibiotik.chosen)},on:{\"click\":function($event){_vm.AddAntibiotics(antibiotik)},\"change\":function($event){var $$a=antibiotik.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(antibiotik.chosen=$$a.concat([$$v]))}else{$$i>-1&&(antibiotik.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(antibiotik, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":antibiotik._id}},[(!antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e(),_vm._v(\" \"),(antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e()])])}))])]):_vm._e()]):_vm._e(),_vm._v(\" \"),(\n                _vm.MicrobiologyScenario === 'MAIBPoR' &&\n                !_vm.ShowAntibiotics &&\n                !_vm.ShowBacteries\n              )?_c('div',{staticClass:\"col-md-1\"}):_vm._e(),_vm._v(\" \"),(\n                _vm.MicrobiologyScenario === 'MAIBPoR' &&\n                !_vm.ShowAntibiotics &&\n                !_vm.ShowBacteries\n              )?_c('div',{staticClass:\"col-md-10\"},[(_vm.SelectedBacteries.length)?_c('vuestic-tabs-bactery',{ref:\"tabs\",attrs:{\"names\":_vm.BacteryTabs,\"tab\":_vm.CurrentTab,\"id\":_vm.CurrentTab,\"prikazi\":_vm.sample.status != 'VERIFICIRAN' && _vm.sample.status != 'ODOBREN'}},_vm._l((_vm.SelectedBacteries),function(test){return _c('div',{key:test._id,attrs:{\"slot\":_vm.CurrentTab},slot:_vm.CurrentTab},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.opis === _vm.CurrentTab),expression:\"test.opis === CurrentTab\"}],staticClass:\"row\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"left\"}},[_c('td',{staticStyle:{\"text-transform\":\"none\"},attrs:{\"width\":\"30%\"}},[_vm._v(\"\\n                              \"+_vm._s(test.antibiogram.opis)+\"\\n                            \")]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"10%\"}},[_vm._v(_vm._s(\"\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"\"))])])]),_vm._v(\" \"),_c('tbody',_vm._l((test.antibiogram.antibiotici),function(abtk){return _c('tr',{key:abtk._id,class:{\n                              'table-danger': false,\n                              'table-success': false,\n                              'table-warning': false,\n                            },attrs:{\"align\":\"left\"}},[_c('td',{attrs:{\"title\":abtk.opis}},[_vm._v(_vm._s(abtk.opis))]),_vm._v(\" \"),_c('td',[_c('bactery-radio-button',{attrs:{\"disabled\":_vm.sample.status === 'ODOBREN' ||\n                                  _vm.sample.status === 'VERIFICIRAN',\"label\":'',\"value\":'',\"id\":'' + test._id + abtk._id,\"name\":test._id + abtk._id},model:{value:(abtk.rezultat),callback:function ($$v) {_vm.$set(abtk, \"rezultat\", $$v)},expression:\"abtk.rezultat\"}})],1),_vm._v(\" \"),_c('td',[_c('postavke-radio-button',{attrs:{\"disabled\":_vm.sample.status === 'ODOBREN' ||\n                                  _vm.sample.status === 'VERIFICIRAN',\"label\":'Senzitivan',\"value\":'S',\"id\":'S' + test._id + abtk._id,\"name\":test._id + abtk._id},model:{value:(abtk.rezultat),callback:function ($$v) {_vm.$set(abtk, \"rezultat\", $$v)},expression:\"abtk.rezultat\"}})],1),_vm._v(\" \"),_c('td',[_c('postavke-radio-button',{attrs:{\"disabled\":_vm.sample.status === 'ODOBREN' ||\n                                  _vm.sample.status === 'VERIFICIRAN',\"label\":'Intermedijaran',\"value\":'I',\"id\":'I' + test._id + abtk._id,\"name\":test._id + abtk._id},model:{value:(abtk.rezultat),callback:function ($$v) {_vm.$set(abtk, \"rezultat\", $$v)},expression:\"abtk.rezultat\"}})],1),_vm._v(\" \"),_c('td',[_c('postavke-radio-button',{attrs:{\"disabled\":_vm.sample.status === 'ODOBREN' ||\n                                  _vm.sample.status === 'VERIFICIRAN',\"label\":'Rezistentan',\"value\":'R',\"id\":'R' + test._id + abtk._id,\"name\":test._id + abtk._id},model:{value:(abtk.rezultat),callback:function ($$v) {_vm.$set(abtk, \"rezultat\", $$v)},expression:\"abtk.rezultat\"}})],1)])}))])])])])})):_vm._e()],1):_vm._e(),_vm._v(\" \"),(\n                _vm.MicrobiologyScenario === 'MANBNeR' ||\n                _vm.MicrobiologyScenario === 'MANBPoR' ||\n                _vm.MicrobiologyScenario === 'MAIBNeR'\n              )?_c('div',{staticClass:\"col-md-12\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_table),expression:\"show_table\"}],staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"left\"}},[_c('td',[_vm._v(_vm._s(\"REZULTAT\"))])])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.rezultati),function(test,index){return _c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(index < 1),expression:\"index < 1\"}],key:test.labassay_id,class:{\n                        'table-danger':\n                          test.rezultat_m.length &&\n                          test.rezultat_m[0].pozitivan,\n                        'table-success':\n                          test.rezultat_m.length &&\n                          test.rezultat_m[0].negativan,\n                        'table-warning': false,\n                      },attrs:{\"align\":\"left\"}},[(\n                          _vm.sample.status != 'ODOBREN' &&\n                          _vm.sample.status != 'VERIFICIRAN'\n                        )?_c('td',[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],attrs:{\"type\":\"text\",\"id\":\"simple-textarea\",\"required\":\"\"},domProps:{\"value\":(test.rezultat)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(test, \"rezultat\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"simple-textarea\"}},[_vm._v(_vm._s(\"\"))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]):_vm._e(),_vm._v(\" \"),(\n                          _vm.sample.status === 'ODOBREN' ||\n                          _vm.sample.status === 'VERIFICIRAN'\n                        )?_c('td',[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"disabled\":\"\"}}),_vm._v(\" \"),(test.rezultat.length)?_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(test.rezultat))]):_vm._e(),_vm._v(\" \"),(!test.rezultat.length)?_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(\"Nema podataka.\"))]):_vm._e(),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]):_vm._e()])}))])])]):_vm._e()]):_vm._e()])]),_vm._v(\" \"),_c('vuestic-modal-micro-bactery',{ref:\"staticModalMicroBactery\",attrs:{\"show\":_vm.show,\"large\":true,\"sample\":_vm.sample,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s(\"Rezultat analize: \"))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.CurrentTest))])]),_vm._v(\" \"),_c('div',[(_vm.show_table)?_c('div',{staticClass:\"row\"},[(true)?_c('div',{staticClass:\"col-md-12\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_table),expression:\"show_table\"}],staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"left\"}},[_c('td',[_vm._v(_vm._s(\"REZULTAT\"))])])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.rezultati),function(test,index){return _c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(index < 1),expression:\"index < 1\"}],key:test.labassay_id,class:{\n                        'table-danger':\n                          test.rezultat_m.length &&\n                          test.rezultat_m[0].pozitivan,\n                        'table-success':\n                          test.rezultat_m.length &&\n                          test.rezultat_m[0].negativan,\n                        'table-warning': false,\n                      },attrs:{\"align\":\"left\"}},[(\n                          _vm.sample.status != 'ODOBREN' &&\n                          _vm.sample.status != 'VERIFICIRAN'\n                        )?_c('td',[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],attrs:{\"type\":\"text\",\"id\":\"simple-textarea\",\"required\":\"\"},domProps:{\"value\":(test.rezultat)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(test, \"rezultat\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"simple-textarea\"}},[_vm._v(_vm._s(\"\"))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]):_vm._e(),_vm._v(\" \"),(\n                          _vm.sample.status === 'ODOBREN' ||\n                          _vm.sample.status === 'VERIFICIRAN'\n                        )?_c('td',[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"disabled\":\"\"}}),_vm._v(\" \"),(test.rezultat.length)?_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(test.rezultat))]):_vm._e(),_vm._v(\" \"),(!test.rezultat.length)?_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(\"Nema podataka.\"))]):_vm._e(),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]):_vm._e()])}))])])]):_vm._e()]):_vm._e()])]),_vm._v(\" \"),_c('vuestic-modal-micro-result',{ref:\"staticModalSelectResult\",attrs:{\"show\":_vm.show,\"sample\":_vm.sample,\"large\":_vm.ShowAllBacteries,\"neg\":_vm.ModalNegative,\"pos\":_vm.ModalPositive,\"selected\":_vm.ModalPositiveCondition,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s(_vm.MicrobiologyModalHeader)+\" |\")]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Izbornik\"))])]),_vm._v(\" \"),(!_vm.ModalNegative && !_vm.ModalPositive)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-3\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('button',{staticClass:\"btn btn-secondary btn-sm wizard-back pull-left\",staticStyle:{\"text-transform\":\"none\",\"border\":\"0px\"},on:{\"click\":function($event){\n                    _vm.ModalNegative = true;\n                    _vm.ModalPositive = false;\n                  }}},[_vm._v(\"\\n                  \"+_vm._s(\"Negativan\")+\"\\n                \")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-3\"})])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-2\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('button',{staticClass:\"btn btn-secondary-danger btn-sm wizard-next pull-right\",staticStyle:{\"text-transform\":\"none\",\"border\":\"0px\"},on:{\"click\":function($event){\n                    _vm.ModalPositive = true;\n                    _vm.ModalNegative = false;\n                  }}},[_vm._v(\"\\n                  \"+_vm._s(\"Pozitivan\")+\"\\n                \")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"})])])]):_vm._e(),_vm._v(\" \"),(_vm.ModalNegative && !_vm.ModalPositive)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-11\"},_vm._l((_vm.MicrobiologyResult.NegativeDescriptions),function(desc,index){return _c('vuestic-radio-button',{key:index,attrs:{\"label\":_vm.MicrobiologyResult.NegativeDescriptions[index],\"id\":_vm.MicrobiologyResult.NegativeDescriptions[index],\"value\":_vm.MicrobiologyResult.NegativeDescriptions[index],\"name\":_vm.MicrobiologyResult.NegativeDescriptions[index],\"disabled\":false},model:{value:(_vm.NegativeResultSelection),callback:function ($$v) {_vm.NegativeResultSelection=$$v},expression:\"NegativeResultSelection\"}})}))]):_vm._e(),_vm._v(\" \"),(\n            !_vm.ModalNegative &&\n            _vm.ModalPositive &&\n            !_vm.MicrobiologyResult.DefaultBacteries.length\n          )?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-11\"},_vm._l((_vm.MicrobiologyResult.PositiveDescriptions),function(desc,index){return _c('vuestic-radio-button',{key:index,attrs:{\"label\":_vm.MicrobiologyResult.PositiveDescriptions[index],\"id\":_vm.MicrobiologyResult.PositiveDescriptions[index],\"value\":_vm.MicrobiologyResult.PositiveDescriptions[index],\"name\":_vm.MicrobiologyResult.PositiveDescriptions[index],\"disabled\":false},model:{value:(_vm.PositiveResultSelection),callback:function ($$v) {_vm.PositiveResultSelection=$$v},expression:\"PositiveResultSelection\"}})}))]):_vm._e(),_vm._v(\" \"),(\n            !_vm.ModalNegative &&\n            _vm.ModalPositive &&\n            _vm.MicrobiologyResult.DefaultBacteries.length\n          )?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-2\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-10\"},_vm._l((_vm.MicrobiologyResult.DefaultBacteries),function(bakt,index){return _c('div',{key:index,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bakt.chosen),expression:\"bakt.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bakt._id,\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(bakt.chosen)?_vm._i(bakt.chosen,null)>-1:(bakt.chosen)},on:{\"click\":function($event){_vm.SelectBactery(bakt, index)},\"change\":function($event){var $$a=bakt.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bakt.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bakt.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bakt, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":bakt._id}},[_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(\"\\n                      \"+_vm._s(bakt.opis)+\"\\n                    \")])])])}))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[(!_vm.ShowAllBacteries)?_c('a',{staticStyle:{\"font-size\":\"16px\",\"color\":\"#4ae387\"},attrs:{\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();_vm.ShowAllBacteries = true}}},[_vm._v(\"Prikaži više\")]):_vm._e()]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-5\"})]),_vm._v(\" \"),(_vm.ShowAllBacteries)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-10\"},_vm._l((_vm.MicrobiologyResult.RemainingBacteries),function(bakt,index){return _c('div',{key:index,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bakt.chosen),expression:\"bakt.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bakt._id,\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(bakt.chosen)?_vm._i(bakt.chosen,null)>-1:(bakt.chosen)},on:{\"click\":function($event){_vm.SelectBactery(bakt, index)},\"change\":function($event){var $$a=bakt.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bakt.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bakt.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bakt, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":bakt._id}},[_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(\"\\n                      \"+_vm._s(bakt.opis)+\"\\n                    \")])])])}))]):_vm._e()])]):_vm._e()]),_vm._v(\" \"),_c('vuestic-modal-delete',{ref:\"staticModalDeleteSample\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s(\"Brisanje uzorka: \"))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.sid))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s(\"Jeste li sigurni da želite obrisati uzorak?\"))])])]),_vm._v(\" \"),_c('vuestic-modal-comment',{ref:\"staticModalComment\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(_vm._s(\"Unos komentara za uzorak: \" + _vm.sid))]),_vm._v(\" \"),_c('div',[_c('h5')])]),_vm._v(\" \"),_c('vuestic-modal-edit',{ref:\"staticModalEditSample\",attrs:{\"show\":_vm.show,\"sample\":_vm.sid,\"action\":\"Edit\",\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(_vm._s(\"Uređivanje uzorka: \" + _vm.sid))]),_vm._v(\" \"),_c('div',[_c('h5')])]),_vm._v(\" \"),_c('vuestic-modal-mail',{ref:\"staticModalSendMail\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s(\"Slanje nalaza na adresu: \")+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(_vm.email))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s(\"Jeste li sigurni da želite poslati nalaz?\"))])])]),_vm._v(\" \"),_c('vuestic-modal-all-results',{ref:\"staticModalAllResults\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s(\"Izbor rezultata: \")+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.labassay))])]),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',[_c('td',[_vm._v(\"analizator\")]),_vm._v(\" \"),_c('td',[_vm._v(\"vrijeme\")]),_vm._v(\" \"),_c('td',[_vm._v(\"rezultat\")]),_vm._v(\" \"),_c('td',[_vm._v(\"jedinica\")]),_vm._v(\" \"),_c('td',[_vm._v(\"reference\")]),_vm._v(\" \"),(\n                      _vm.sample_status != 'ODOBREN' &&\n                      _vm.sample_status != 'VERIFICIRAN'\n                    )?_c('td',[_vm._v(\"\\n                    izbor\\n                  \")]):_vm._e(),_vm._v(\" \"),_c('td',{attrs:{\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.vise.rezultat),function(test){return _c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.rezultat_f != ''),expression:\"test.rezultat_f != ''\"}],key:test._id,class:{\n                    'table-danger':\n                      _vm.Interpretacija(\n                        _vm.vise.labassay.analit,\n                        test.rezultat_f,\n                        test.jedinice_f,\n                        _vm.vise.refd,\n                        _vm.vise.refg,\n                        _vm.$store.state.site,\n                        _vm.vise.interp,\n                        _vm.vise.extend,\n                        _vm.spec\n                      )[5] === 'Red' && !test.multidata,\n                    'table-success':\n                      _vm.Interpretacija(\n                        _vm.vise.labassay.analit,\n                        test.rezultat_f,\n                        test.jedinice_f,\n                        _vm.vise.refd,\n                        _vm.vise.refg,\n                        _vm.$store.state.site,\n                        _vm.vise.interp,\n                        _vm.vise.extend,\n                        _vm.spec\n                      )[5] === 'Green' && !test.multidata,\n                    'table-warning':\n                      _vm.Interpretacija(\n                        _vm.vise.labassay.analit,\n                        test.rezultat_f,\n                        test.jedinice_f,\n                        _vm.vise.refd,\n                        _vm.vise.refg,\n                        _vm.$store.state.site,\n                        _vm.vise.interp,\n                        _vm.vise.extend,\n                        _vm.spec\n                      )[5] === 'Yellow' && !test.multidata,\n                  }},[_c('td',[_vm._v(_vm._s(test.anaassay.aparat.ime))]),_vm._v(\" \"),_c('td',[_vm._v(\"\\n                    \"+_vm._s(JSON.stringify(test.updated_at).slice(9, 11) +\n                      \".\" +\n                      JSON.stringify(test.updated_at).slice(6, 8) +\n                      \".\" +\n                      JSON.stringify(test.updated_at).slice(1, 5) +\n                      \" | \")+\"\\n                    \"),_c('sub',[_vm._v(_vm._s(JSON.stringify(test.updated_at).slice(12, 20)))])]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(test.rezultat_f))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(test.jedinice_f))]),_vm._v(\" \"),_c('td',[_vm._v(\"\\n                    \"+_vm._s(_vm.Interpretacija(\n                        _vm.vise.labassay.analit,\n                        test.rezultat_f,\n                        test.jedinice_f,\n                        _vm.vise.refd,\n                        _vm.vise.refg,\n                        _vm.$store.state.site,\n                        _vm.vise.interp,\n                        _vm.vise.extend,\n                        _vm.spec\n                      )[4])+\"\\n                  \")]),_vm._v(\" \"),(\n                      _vm.sample_status != 'ODOBREN' &&\n                      _vm.sample_status != 'VERIFICIRAN'\n                    )?_c('td',[(!test.izabran)?_c('i',{staticClass:\"glyphicon glyphicon-unchecked\",staticStyle:{\"font-size\":\"18px\",\"color\":\"#e34a4a\"},on:{\"click\":function($event){$event.preventDefault();_vm.IzborTesta(_vm.vise, test)}}}):_vm._e(),_vm._v(\" \"),(test.izabran)?_c('i',{staticClass:\"glyphicon glyphicon-check\",staticStyle:{\"font-size\":\"18px\",\"color\":\"#4ae387\"}}):_vm._e()]):_vm._e(),_vm._v(\" \"),_c('td',[_c('i',{class:{\n                        'fa fa-exclamation-triangle icon-right input-icon error-icon':\n                          _vm.Interpretacija(\n                            _vm.vise.labassay.analit,\n                            test.rezultat_f,\n                            test.jedinice_f,\n                            _vm.vise.refd,\n                            _vm.vise.refg,\n                            _vm.$store.state.site,\n                            _vm.vise.interp,\n                            _vm.vise.extend,\n                            _vm.spec\n                          )[5] === 'Red',\n                      }}),_vm._v(\" \"),_c('i',{class:{\n                        'fa fa-check success-icon icon-right input-icon':\n                          _vm.Interpretacija(\n                            _vm.vise.labassay.analit,\n                            test.rezultat_f,\n                            test.jedinice_f,\n                            _vm.vise.refd,\n                            _vm.vise.refg,\n                            _vm.$store.state.site,\n                            _vm.vise.interp,\n                            _vm.vise.extend,\n                            _vm.spec\n                          )[5] === 'Green',\n                      }})])])}))])])])]),_vm._v(\" \"),_c('vuestic-modal-error',{ref:\"staticModalError\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s(\"\")+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"404: Not Found\"))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s(\"Greška prilikom čitanja nalaza.\"))])])]),_vm._v(\" \"),_c('vuestic-modal-error',{ref:\"staticModalVerifyPrivilege\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s(\"\")+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"401: Not Authorized\"))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s(\"Nemate odgovarajuće privilegije.\"))])])]),_vm._v(\" \"),_c('vuestic-modal-exclamation',{ref:\"staticModalExclamation\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s(\"\")+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.warning.analiza))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s(_vm.warning.control))]),_vm._v(\" \"),_c('p',[_vm._v(_vm._s(_vm.warning.text))])])]),_vm._v(\" \"),_c('vuestic-modal-reference',{ref:\"staticModalReference\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s(\"Referentne vrijednosti: \")+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.reference.naziv)+\" (\"+_vm._s(_vm.reference.opis)+\")\")])]),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-2\"},[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.dref),expression:\"reference.dref\"}],staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"required\":\"\"},domProps:{\"value\":(_vm.reference.dref)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"dref\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(\"\\n                    \"+_vm._s(\"Donja\")+\"\\n                  \")]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-2\"},[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.gref),expression:\"reference.gref\"}],staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"required\":\"\"},domProps:{\"value\":(_vm.reference.gref)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"gref\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(\"\\n                    \"+_vm._s(\"Gornja\")+\"\\n                  \")]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},[(_vm.$store.state.access.level < 1)?_c('vuestic-simple-select',{staticStyle:{\"font-size\":\"14px\"},attrs:{\"label\":\"Interpretacija\",\"title\":\" \",\"options\":_vm.interpretacije},model:{value:(_vm.reference.interp),callback:function ($$v) {_vm.$set(_vm.reference, \"interp\", $$v)},expression:\"reference.interp\"}}):_vm._e(),_vm._v(\" \"),(_vm.$store.state.access.level > 0)?_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.interp),expression:\"reference.interp\"}],attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"required\":\"\",\"disabled\":true},domProps:{\"value\":(_vm.reference.interp)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"interp\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(\"\\n                    \"+_vm._s(_vm.reference.interp)+\"\\n                  \")]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])]):_vm._e()],1),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"})]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-2\"},[_c('vuestic-simple-select',{staticStyle:{\"font-size\":\"14px\"},attrs:{\"label\":\"Jedinica\",\"title\":\" \",\"options\":_vm.jedinice},model:{value:(_vm.reference.jedinica),callback:function ($$v) {_vm.$set(_vm.reference, \"jedinica\", $$v)},expression:\"reference.jedinica\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-7\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.reference.interp != 'spec'),expression:\"reference.interp != 'spec'\"}],staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.extend),expression:\"reference.extend\"}],staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"required\":\"\"},domProps:{\"value\":(_vm.reference.extend)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"extend\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(\"\\n                    \"+_vm._s(\"Proširena referentna vrijednost\")+\"\\n                  \")]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.reference.interp === 'spec'),expression:\"reference.interp === 'spec'\"}],staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.extend),expression:\"reference.extend\"}],staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"type\":\"text\",\"id\":\"simple-textarea\",\"required\":\"\"},domProps:{\"value\":(_vm.reference.extend)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"extend\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"simple-textarea\"}},[_vm._v(\"\\n                    \"+_vm._s(\"Specifična interpretacija rezultata\")+\"\\n                  \")]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"})])])]),_vm._v(\" \"),_c('vuestic-modal-find',{ref:\"staticModalFind\",attrs:{\"show\":_vm.show,\"data_pid\":Number(_vm.data_pid),\"data_length\":Number(_vm.data_length),\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s(\"\")+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Redni broj pacijenta\"))])]),_vm._v(\" \"),_c('div',[_c('h5')])]),_vm._v(\" \"),_c('vuestic-modal-aparati',{ref:\"staticModalAparati\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s(\"Izbor analizatora: \")+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(\"\\n            \"+_vm._s(this.analiza.ime + \" (\" + this.analiza.analit + \")\")+\"\\n          \")])]),_vm._v(\" \"),_c('div',[_c('vuestic-accordion-obrada',_vm._l((_vm.analysers),function(element){return _c('vuestic-collapse-aparati',{key:element._id,attrs:{\"analyser\":element}},[_c('span',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_vm._v(\"\\n                \"+_vm._s(element.ime + \", \" + element.site.naziv)+\"\\n              \")]),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"body\"},slot:\"body\"},[_c('div',{staticClass:\"va-row\"})])])}))],1)]),_vm._v(\" \"),_c('vuestic-modal-results-multi',{ref:\"staticModalResultsMulti\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s(\"Izbor rezultata: \")+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.multi_test))])]),_vm._v(\" \"),_c('div')]),_vm._v(\" \"),_c('patient-evaluation-single',{ref:\"staticModalEvaluationSingle\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',[_vm._v(_vm._s(_vm.ime + \" \" + _vm.prezime))])]),_vm._v(\" \"),(_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped table-sm color-icon-label-table\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"REZULTAT\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"JEDINICA\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"REFERENCE\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"DATUM\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(\"VRIJEME\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"5%\",\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.Procjena),function(element,index){return _c('tr',{key:index,class:{\n                      'table-danger':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Red',\n                      'table-success':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Green',\n                      'table-warning':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Yellow',\n                    },attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.rezultat))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.jedinica))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(\"\\n                      \"+_vm._s(_vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[4])+\"\\n                    \")]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.datum))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(element.vrijeme))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"9%\",\"align\":\"middle\"}},[_c('i',{class:{\n                          'fa fa-exclamation-triangle icon-right input-icon error-icon':\n                            _vm.Interpretacija(\n                              element.analit,\n                              element.rezultat,\n                              element.jedinica,\n                              element.refd,\n                              element.refg,\n                              _vm.$store.state.site,\n                              element.interp,\n                              element.extend,\n                              _vm.spec\n                            )[5] === 'Red',\n                        }}),_vm._v(\" \"),_c('i',{class:{\n                          'fa fa-check success-icon icon-right input-icon':\n                            _vm.Interpretacija(\n                              element.analit,\n                              element.rezultat,\n                              element.jedinica,\n                              element.refd,\n                              element.refg,\n                              _vm.$store.state.site,\n                              element.interp,\n                              element.extend,\n                              _vm.spec\n                            )[5] === 'Green',\n                        }})])])}))]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('span',{staticClass:\"circle badge-info\"}),_vm._v(\"\\n                \"+_vm._s(_vm.table_header)+\"\\n              \")])])])]):_vm._e(),_vm._v(\" \"),(_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('line-chart',{attrs:{\"options\":_vm.optionsLineChart,\"data\":_vm.dataLineChart,\"type\":\"line\"}})],1)]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])])]):_vm._e()]),_vm._v(\" \"),_c('patient-evaluation-single',{ref:\"staticModalLabAssayEvalSingle\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(\"\\n            \"+_vm._s(_vm.analiza_eval.ime + \" (\" + _vm.analiza_eval.analit + \")\")+\"\\n          \")]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(\" - Rezultati analize u zadnjih 14 dana\"))])]),_vm._v(\" \"),(_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped table-sm color-icon-label-table\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"REZULTAT\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"JEDINICA\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"REFERENCE\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"DATUM\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(\"VRIJEME\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"5%\",\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.Procjena),function(element,index){return _c('tr',{key:index,class:{\n                      'table-danger':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Red',\n                      'table-success':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Green',\n                      'table-warning':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Yellow',\n                    },attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.rezultat))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.jedinica))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(\"\\n                      \"+_vm._s(_vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[4])+\"\\n                    \")]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.datum))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(element.vrijeme))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"9%\",\"align\":\"middle\"}},[_c('i',{class:{\n                          'fa fa-exclamation-triangle icon-right input-icon error-icon':\n                            _vm.Interpretacija(\n                              element.analit,\n                              element.rezultat,\n                              element.jedinica,\n                              element.refd,\n                              element.refg,\n                              _vm.$store.state.site,\n                              element.interp,\n                              element.extend,\n                              _vm.spec\n                            )[5] === 'Red',\n                        }}),_vm._v(\" \"),_c('i',{class:{\n                          'fa fa-check success-icon icon-right input-icon':\n                            _vm.Interpretacija(\n                              element.analit,\n                              element.rezultat,\n                              element.jedinica,\n                              element.refd,\n                              element.refg,\n                              _vm.$store.state.site,\n                              element.interp,\n                              element.extend,\n                              _vm.spec\n                            )[5] === 'Green',\n                        }})])])}))]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('span',{staticClass:\"circle badge-info\"}),_vm._v(\"\\n                \"+_vm._s(_vm.table_header)+\"\\n              \")])])])]):_vm._e(),_vm._v(\" \"),(_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('line-chart',{attrs:{\"options\":_vm.optionsLineChart,\"data\":_vm.dataLineChart,\"type\":\"line\"}})],1)]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])])]):_vm._e()]),_vm._v(\" \"),_c('patient-evaluation-multi',{ref:\"staticModalEvaluationMulti\",attrs:{\"show\":_vm.show,\"multiparam_izbor\":_vm.multiparam_izbor,\"multiparam_izbornik\":_vm.multiparam_izbornik,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',[_vm._v(_vm._s(_vm.ime + \" \" + _vm.prezime))])]),_vm._v(\" \"),(_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped table-sm color-icon-label-table\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"REZULTAT\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"JEDINICA\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"REFERENCE\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"DATUM\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(\"VRIJEME\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"5%\",\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.Procjena),function(element,index){return _c('tr',{key:index,class:{\n                      'table-danger':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Red',\n                      'table-success':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Green',\n                      'table-warning':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Yellow',\n                    },attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.rezultat))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.jedinica))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(\"\\n                      \"+_vm._s(_vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[4])+\"\\n                    \")]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.datum))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(element.vrijeme))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"9%\",\"align\":\"middle\"}},[_c('i',{class:{\n                          'fa fa-exclamation-triangle icon-right input-icon error-icon':\n                            _vm.Interpretacija(\n                              element.analit,\n                              element.rezultat,\n                              element.jedinica,\n                              element.refd,\n                              element.refg,\n                              _vm.$store.state.site,\n                              element.interp,\n                              element.extend,\n                              _vm.spec\n                            )[5] === 'Red',\n                        }}),_vm._v(\" \"),_c('i',{class:{\n                          'fa fa-check success-icon icon-right input-icon':\n                            _vm.Interpretacija(\n                              element.analit,\n                              element.rezultat,\n                              element.jedinica,\n                              element.refd,\n                              element.refg,\n                              _vm.$store.state.site,\n                              element.interp,\n                              element.extend,\n                              _vm.spec\n                            )[5] === 'Green',\n                        }})])])}))]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('span',{staticClass:\"circle badge-info\"}),_vm._v(\"\\n                \"+_vm._s(_vm.table_header)+\"\\n              \")])])])]):_vm._e(),_vm._v(\" \"),(!_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])])]):_vm._e(),_vm._v(\" \"),(_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('line-chart',{attrs:{\"options\":_vm.optionsLineChart,\"data\":_vm.dataLineChart,\"type\":\"line\"}})],1)]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[(!_vm.showLineChart && !_vm.spinner)?_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.spinner)?_c('div',{staticClass:\"col-md-12\",staticStyle:{\"min-height\":\"400px\"}},[_c('div',{staticStyle:{\"display\":\"flex\",\"flex-direction\":\"row\",\"justify-content\":\"center\",\"align-items\":\"center\"}},[_c('div',{staticStyle:{\"float\":\"left\"}}),_vm._v(\" \"),_c('span',{staticStyle:{\"vertical-align\":\"middle\"}},[_c('atom-spinner',{staticStyle:{\"opacity\":\"0.25\"},attrs:{\"animation-duration\":1000,\"size\":300,\"color\":'#4ae387'}})],1)])]):_vm._e()]):_vm._e()]),_vm._v(\" \"),_c('patient-evaluation-multi',{ref:\"staticModalLabAssayEvalMulti\",attrs:{\"show\":_vm.show,\"multiparam_izbor\":_vm.multiparam_izbor,\"multiparam_izbornik\":_vm.multiparam_izbornik,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(\"\\n            \"+_vm._s(_vm.analiza_eval.ime + \" (\" + _vm.analiza_eval.analit + \")\")+\"\\n          \")]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(\" - Rezultati analize u zadnjih 14 dana\"))])]),_vm._v(\" \"),(_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped table-sm color-icon-label-table\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"REZULTAT\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"JEDINICA\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"REFERENCE\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(\"DATUM\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(\"VRIJEME\"))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"5%\",\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.Procjena),function(element,index){return _c('tr',{key:index,class:{\n                      'table-danger':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Red',\n                      'table-success':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Green',\n                      'table-warning':\n                        _vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[5] === 'Yellow',\n                    },attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.rezultat))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.jedinica))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(\"\\n                      \"+_vm._s(_vm.Interpretacija(\n                          element.analit,\n                          element.rezultat,\n                          element.jedinica,\n                          element.refd,\n                          element.refg,\n                          _vm.$store.state.site,\n                          element.interp,\n                          element.extend,\n                          _vm.spec\n                        )[4])+\"\\n                    \")]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.datum))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(element.vrijeme))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"9%\",\"align\":\"middle\"}},[_c('i',{class:{\n                          'fa fa-exclamation-triangle icon-right input-icon error-icon':\n                            _vm.Interpretacija(\n                              element.analit,\n                              element.rezultat,\n                              element.jedinica,\n                              element.refd,\n                              element.refg,\n                              _vm.$store.state.site,\n                              element.interp,\n                              element.extend,\n                              _vm.spec\n                            )[5] === 'Red',\n                        }}),_vm._v(\" \"),_c('i',{class:{\n                          'fa fa-check success-icon icon-right input-icon':\n                            _vm.Interpretacija(\n                              element.analit,\n                              element.rezultat,\n                              element.jedinica,\n                              element.refd,\n                              element.refg,\n                              _vm.$store.state.site,\n                              element.interp,\n                              element.extend,\n                              _vm.spec\n                            )[5] === 'Green',\n                        }})])])}))]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('span',{staticClass:\"circle badge-info\"}),_vm._v(\"\\n                \"+_vm._s(_vm.table_header)+\"\\n              \")])])])]):_vm._e(),_vm._v(\" \"),(!_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])])]):_vm._e(),_vm._v(\" \"),(_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('line-chart',{attrs:{\"options\":_vm.optionsLineChart,\"data\":_vm.dataLineChart,\"type\":\"line\"}})],1)]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[(!_vm.showLineChart && !_vm.spinner)?_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.spinner)?_c('div',{staticClass:\"col-md-12\",staticStyle:{\"min-height\":\"400px\"}},[_c('div',{staticStyle:{\"display\":\"flex\",\"flex-direction\":\"row\",\"justify-content\":\"center\",\"align-items\":\"center\"}},[_c('div',{staticStyle:{\"float\":\"left\"}}),_vm._v(\" \"),_c('span',{staticStyle:{\"vertical-align\":\"middle\"}},[_c('atom-spinner',{staticStyle:{\"opacity\":\"0.25\"},attrs:{\"animation-duration\":1000,\"size\":300,\"color\":'#4ae387'}})],1)])]):_vm._e()]):_vm._e()])],1):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"col-md-6\"},[_c('loading',{attrs:{\"active\":_vm.isLoading,\"can-cancel\":false,\"on-cancel\":_vm.onCancel,\"color\":\"#4ae387\",\"is-full-page\":_vm.fullPage},on:{\"update:active\":function($event){_vm.isLoading=$event}}})],1),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[(false)?_c('button',{on:{\"click\":function($event){$event.preventDefault();_vm.Test($event)}}},[_vm._v(_vm._s(\"Loading...\"))]):_vm._e()])])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-10b2afde\",\"hasScoped\":true,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/obrada/Obrada.vue\n// module id = mIAj\n// module chunks = 18","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = require('./_object-keys-internal');\nvar hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-gopn.js\n// module id = n0T6\n// module chunks = 18"],"sourceRoot":""}